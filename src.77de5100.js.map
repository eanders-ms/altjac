{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/path-browserify/index.js","../node_modules/file-uri-to-path/index.js","../node_modules/bindings/bindings.js","../node_modules/events/events.js","../node_modules/util/support/isBufferBrowser.js","../node_modules/util/node_modules/inherits/inherits_browser.js","../node_modules/util/util.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/usb/usb.js","../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../src/dispatcher.ts","../src/configuration.ts","../src/interface.ts","../src/alternate.ts","../src/endpoint.ts","../src/device.ts","../src/adapter.ts","../src/events.ts","../src/usb.ts","../src/index.ts","../jacdac-spec/dist/specconstants.ts","../src/jdom/constants.ts","../jacdac-spec/spectool/jdutils.ts","../jacdac-spec/spectool/jdspec.ts","../src/jdom/flags.ts","../src/jdom/utils.ts","../src/jdom/buffer.ts","../src/jdom/spec.ts","../src/jdom/pack.ts","../src/jdom/pretty.ts","../src/jdom/packet.ts","../src/jdom/trace/trace.ts","../src/jdom/eventsource.ts","../src/jdom/node.ts","../src/jdom/servicemembernode.ts","../src/jdom/field.ts","../src/jdom/packobject.ts","../src/jdom/register.ts","../src/jdom/event.ts","../src/jdom/client.ts","../src/jdom/random.ts","../src/jdom/pipes.ts","../src/jdom/service.ts","../src/jdom/ledcontroller.ts","../src/jdom/device.ts","../src/jdom/scheduler.ts","../src/jdom/flashing.ts","../src/jdom/servers/registerserver.ts","../src/jdom/servers/serviceserver.ts","../src/servers/sensorserver.ts","../src/servers/realtimeclockserver.ts","../src/jdom/transport/transport.ts","../src/jdom/busstats.ts","../src/jdom/servers/controlserver.ts","../src/jdom/servers/serviceprovider.ts","../src/jdom/servers/serverserviceprovider.ts","../src/jdom/servers/protocoltestserver.ts","../src/servers/buttonserver.ts","../src/servers/buzzerserver.ts","../src/servers/characterscreenserver.ts","../src/servers/joystickserver.ts","../src/servers/dotmatrixserver.ts","../src/jdom/lightconstants.ts","../src/servers/ledpixelserver.ts","../src/servers/matrixkeypadserver.ts","../src/servers/motorserver.ts","../src/servers/leveldetector.ts","../src/servers/analogsensorserver.ts","../src/servers/raingaugeserver.ts","../src/servers/reflectedlightserver.ts","../src/servers/rotaryencoderserver.ts","../src/servers/servoserver.ts","../src/servers/settingsserver.ts","../src/servers/speechsynthesisserver.ts","../src/servers/switchserver.ts","../src/servers/trafficlightserver.ts","../src/servers/ledserver.ts","../src/servers/soundplayerserver.ts","../src/servers/randomnumbergeneratorserver.ts","../src/servers/compassserver.ts","../src/servers/dmxserver.ts","../src/jdom/iframeclient.ts","../src/servers/bitradioserver.ts","../src/servers/powerserver.ts","../src/servers/capacitivebuttonserver.ts","../src/servers/hidkeyboardserver.ts","../src/servers/hidmouseserver.ts","../src/servers/dimmerserver.ts","../src/servers/azureiothubhealthserver.ts","../src/servers/vibrationmotorserver.ts","../src/servers/wifiserver.ts","../src/servers/servers.ts","../src/jdom/serviceclient.ts","../src/jdom/clients/rolemanagerclient.ts","../src/jdom/bus.ts","../src/jdom/trace/traceplayer.ts","../src/jdom/logparser.ts","../src/jdom/speedtest.ts","../src/jdom/command.ts","../src/jdom/packetfilter.ts","../src/jdom/trace/tracerecorder.ts","../src/jdom/trace/traceview.ts","../src/jdom/light.ts","../src/jdom/color.ts","../src/jdom/bridge.ts","../src/jdom/clients/settingsclient.ts","../src/jdom/transport/bluetooth.ts","../src/jdom/transport/hf2.ts","../src/jdom/transport/microbit.ts","../src/jdom/error.ts","../src/jdom/transport/usbio.ts","../src/jdom/transport/webserialio.ts","../src/jdom/transport/eventtargetobservable.ts","../src/jdom/transport/usb.ts","../src/jdom/transport/workertransport.ts","../src/jdom/transport/webserial.ts","../src/jdom/transport/nodewebusb.ts","../src/jdom/transport/nodewebserialio.ts","../src/jdom/bridges/iframebridge.ts","../src/jdom/transport/createbus.ts","../src/jdom/rolemanager.ts","../src/jdom/sensors.ts","../src/azure-iot/devicetwin.ts","index.ts","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","fs","require","path","fileURLToPath","join","dirname","exists","accessSync","existsSync","defaults","arrow","compiled","platform","arch","nodePreGyp","modules","node","bindings","try","opts","Object","keys","map","module_root","getRoot","getFileName","extname","requireFunc","__webpack_require__","__non_webpack_require__","tries","l","n","b","err","p","resolve","code","test","message","a","calling_file","origPST","prepareStackTrace","origSTL","stackTraceLimit","dummy","fileName","st","__filename","captureStackTrace","stack","fileSchema","indexOf","file","prev","R","Reflect","ReflectApply","target","receiver","Function","ReflectOwnKeys","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","ProcessEmitWarning","warning","console","warn","NumberIsNaN","Number","isNaN","value","EventEmitter","init","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","create","setMaxListeners","_getMaxListeners","that","getMaxListeners","type","doError","events","error","er","context","handler","arrayClone","_addListener","prepend","m","existing","newListener","unshift","warned","w","String","emitter","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","list","position","originalListener","shift","spliceOne","key","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","arr","copy","index","pop","ret","Promise","reject","errorListener","resolver","slice","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","flags","addEventListener","wrapListener","removeEventListener","getOwnPropertyDescriptors","obj","descriptors","getOwnPropertyDescriptor","formatRegExp","format","f","isString","objects","inspect","str","replace","x","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","noDeprecation","deprecated","throwDeprecation","traceDeprecation","trace","debugs","debugEnviron","debuglog","isUndefined","toUpperCase","RegExp","pid","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styles","styleType","style","arrayToHash","hash","forEach","val","idx","recurseTimes","isFunction","constructor","primitive","formatPrimitive","visibleKeys","isError","formatError","isRegExp","toString","isDate","Date","base","braces","isArray","toUTCString","output","formatArray","formatProperty","reduceToSingleString","simple","isNumber","hasOwnProperty","match","desc","split","line","substr","numLinesEst","reduce","cur","ar","isNullOrUndefined","isSymbol","re","objectToString","d","isPrimitive","isBuffer","o","pad","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","log","inherits","origin","add","prop","kCustomPromisifiedSymbol","Symbol","promisify","original","writable","configurable","promiseResolve","promiseReject","promise","setPrototypeOf","defineProperties","custom","callbackifyOnRejected","reason","cb","newReason","callbackify","callbackified","maybeCb","self","then","rej","usb","util","Uint8Array","INIT_ERROR","Device","Transfer","setDebugLevel","getDeviceList","_enableHotplugEvents","_disableHotplugEvents","findByIds","vid","devices","deviceDesc","deviceDescriptor","idVendor","idProduct","open","defaultConfig","__open","interfaces","configDescriptor","Interface","close","__close","_configDescriptor","__getConfigDescriptor","errno","LIBUSB_ERROR_NOT_FOUND","_allConfigDescriptors","__getAllConfigDescriptors","_parent","__getParent","interface","addr","interfaceNumber","SETUP_SIZE","LIBUSB_CONTROL_SETUP_SIZE","controlTransfer","bmRequestType","bRequest","wValue","wIndex","data_or_length","callback","isIn","LIBUSB_ENDPOINT_IN","wLength","buf","Buffer","alloc","writeUInt8","writeUInt16LE","transfer","LIBUSB_TRANSFER_TYPE_CONTROL","actual","submit","getStringDescriptor","desc_index","langid","LIBUSB_REQUEST_GET_DESCRIPTOR","LIBUSB_DT_STRING","getBosDescriptor","_bosDescriptor","bcdUSB","LIBUSB_DT_BOS","LIBUSB_DT_BOS_SIZE","buffer","LIBUSB_TRANSFER_STALL","totalLength","readUInt16LE","descriptor","bLength","readUInt8","bDescriptorType","wTotalLength","bNumDeviceCaps","capabilities","capability","bDevCapabilityType","dev_capability_data","getCapabilities","Capability","setConfiguration","desired","__setConfiguration","device","id","altSetting","__refresh","bInterfaceNumber","endpoints","c","bEndpointAddress","InEndpoint","OutEndpoint","claim","__claimInterface","release","closeEndpoints","next","ep","pollActive","stopPoll","__releaseInterface","isKernelDriverActive","__isKernelDriverActive","detachKernelDriver","__detachKernelDriver","attachKernelDriver","__attachKernelDriver","setAltSetting","__setInterface","endpoint","address","data","Endpoint","transferType","bmAttributes","clearHalt","__clearHalt","makeTransfer","startPoll","nTransfers","transferSize","pollTransfers","pollTransferSize","wMaxPacketSize","pollPending","transfers","cancel","direction","super_","transferDone","LIBUSB_TRANSFER_CANCELLED","startTransfer","t","from","transferWithZLP","hotplugListeners","EventHandlers","this","$getMaxListeners","emitNone","isFn","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","g","usingDomains","domain","active","Domain","domainEmitter","domainThrown","k","EventDispatcher","[object Object]","handleEvent","isEventListenerObject","super","event","USBConfiguration","configurationValue","configurationName","USBInterface","alternates","_handle","claimed","_claimed","alternate","find","alternateSetting","_currentAlternate","adapter","selectAlternateInterface","claimInterface","releaseInterface","USBAlternateInterface","interfaceClass","interfaceSubclass","interfaceProtocol","interfaceName","USBEndpoint","endpointNumber","packetSize","USBDevice","usbVersionMajor","usbVersionMinor","usbVersionSubminor","deviceClass","deviceSubclass","deviceProtocol","vendorId","productId","deviceVersionMajor","deviceVersionMinor","deviceVersionSubminor","manufacturerName","productName","serialNumber","_configurations","configurations","url","_maxPacketSize","_currentConfiguration","configuration","connected","getConnected","opened","getOpened","iface","some","usbInterface","usbEndpoint","setup","recipient","result","getEndpoint","catch","releaseInterfacePromises","all","_error","selectConfiguration","reset","setupError","setupInvalid","controlTransferIn","controlTransferOut","transferIn","transferOut","packetLengths","isochronousTransferIn","isochronousTransferOut","DEFAULT_DELAY_TIMEOUT","DEFAULT_RETRY_COUNT","CONSTANTS","WEB_UUID","LIBUSB_TRANSFER_TYPE_MASK","USB_VERSION","CAPABILITY_VERSION","URL_REQUEST_TYPE","URL_REQUEST_INDEX","CLEAR_FEATURE","ENDPOINT_HALT","USBAdapter","attachCallback","loadDevice","loadedDevice","handle","getDeviceHandle","devicetoUSBDevice","usbDevice","EVENT_DEVICE_CONNECT","detachCallback","EVENT_DEVICE_DISCONNECT","busNumber","deviceAddress","task","params","chain","param","results","_reject","retries","delay","retryPromise","retryError","preFilters","preFilterDevices","serialPromises","filter","allConfigDescriptors","getWebCapability","getWebUrl","openDevice","uuid","decodeUUID","data1","readUInt32LE","data2","data3","data4","data5","suppressErrors","byteLength","vendor","page","scheme","configs","serialDevicePromises","configToUSBConfiguration","deviceVersion","decodeVersion","bcdDevice","usbVersion","iManufacturer","iProduct","iSerialNumber","props","bMaxPacketSize0","bDeviceClass","bDeviceSubClass","bDeviceProtocol","major","minor","sub","bConfigurationValue","hex","parseInt","arrayBuffer","DataView","bufferSource","ArrayBuffer","isView","byteOffset","LIBUSB_ENDPOINT_OUT","epoint","LIBUSB_TRANSFER_TYPE_BULK","LIBUSB_TRANSFER_TYPE_INTERRUPT","iInterface","bAlternateSetting","bInterfaceClass","bInterfaceSubClass","bInterfaceProtocol","endpointToUSBEndpoint","interfaceToUSBAlternateInterface","iConfiguration","allInterfaces","interfacesToUSBInterface","LIBUSB_RECIPIENT_DEVICE","LIBUSB_RECIPIENT_INTERFACE","LIBUSB_RECIPIENT_ENDPOINT","LIBUSB_RECIPIENT_OTHER","requestType","LIBUSB_REQUEST_TYPE_STANDARD","LIBUSB_REQUEST_TYPE_CLASS","LIBUSB_REQUEST_TYPE_VENDOR","getDevice","loadDevices","controlTransferParamsToType","request","status","LIBUSB_TRANSFER_OVERFLOW","bufferToDataView","bufferSourceToBuffer","bytesWritten","getInEndpoint","getOutEndpoint","_endpointNumber","_packetLengths","_resolve","_data","DOMEvent","bubbles","cancelable","defaultPrevented","W3CUSBConnectionEvent","eventInitDict","initEvent","USB","options","devicesFound","deviceConnectCallback","replaceAllowedDevice","dispatchEvent","onconnect","deviceDisconnectCallback","allowedDevices","ondisconnect","_onconnect","_ondisconnect","isSameDevice","device1","device2","filters","classCode","subclassCode","protocolCode","listUSBDevices","every","filterDevice","selectFn","SystemReadingThreshold","SystemStatusCodes","SystemCmd","SystemReg","SystemEvent","BaseReg","BaseEvent","SensorReg","AccelerometerReg","AccelerometerEvent","ArcadeGamepadButton","ArcadeGamepadReg","ArcadeGamepadEvent","ArcadeSoundCmd","ArcadeSoundReg","AzureIotHubHealthConnectionStatus","AzureIotHubHealthReg","AzureIotHubHealthCmd","AzureIotHubHealthEvent","BarcodeReaderFormat","BarcodeReaderReg","BarcodeReaderEvent","BarometerReg","BitRadioReg","BitRadioCmd","BootloaderError","BootloaderCmd","ButtonReg","ButtonEvent","BuzzerReg","BuzzerCmd","CapacitiveButtonReg","CapacitiveButtonCmd","CharacterScreenVariant","CharacterScreenTextDirection","CharacterScreenReg","CharacterScreenCmd","ColorReg","CompassReg","CompassCmd","ControlAnnounceFlags","ControlCmd","ControlReg","DimmerVariant","DimmerReg","DistanceVariant","DistanceReg","DmxReg","DmxCmd","DotMatrixVariant","DotMatrixReg","ECO2Variant","ECO2Reg","FlexVariant","FlexReg","GyroscopeReg","HeartRateVariant","HeartRateReg","HidAdapterReg","HidAdapterCmd","HidAdapterEvent","HidKeyboardModifiers","HidKeyboardAction","HidKeyboardCmd","HidMouseButton","HidMouseButtonEvent","HidMouseCmd","HumidityReg","IlluminanceReg","IndexedScreenCmd","IndexedScreenReg","JoystickButtons","JoystickVariant","JoystickReg","JoystickEvent","LedVariant","LedCmd","LedReg","LedPixelLightType","LedPixelVariant","LedPixelReg","LedPixelCmd","LightLevelVariant","LightLevelReg","LoggerPriority","LoggerReg","LoggerCmd","MagnetometerReg","MagnetometerCmd","MatrixKeypadVariant","MatrixKeypadReg","MatrixKeypadEvent","MicrophoneCmd","MicrophoneReg","MidiOutputReg","MidiOutputCmd","ModelRunnerModelFormat","ModelRunnerCmd","ModelRunnerReg","MotionVariant","MotionReg","MotionEvent","MotorReg","MultitouchReg","MultitouchEvent","PotentiometerVariant","PotentiometerReg","PowerPowerStatus","PowerReg","PowerCmd","PowerEvent","PressureButtonReg","ProtoTestReg","ProtoTestEvent","ProtoTestCmd","PulseOximeterReg","RainGaugeReg","RealTimeClockVariant","RealTimeClockReg","RealTimeClockCmd","ReflectedLightVariant","ReflectedLightReg","ReflectedLightEvent","RelayVariant","RelayReg","RelayEvent","RngVariant","RngReg","RoleManagerReg","RoleManagerCmd","RoleManagerEvent","RotaryEncoderReg","RoverReg","SensorAggregatorSampleType","SensorAggregatorReg","ServoReg","SettingsCmd","SettingsEvent","SevenSegmentDisplayReg","SevenSegmentDisplayCmd","SoilMoistureVariant","SoilMoistureReg","SolenoidVariant","SolenoidReg","SoundLevelReg","SoundLevelEvent","SoundPlayerReg","SoundPlayerCmd","SoundSpectrumReg","SpeechSynthesisReg","SpeechSynthesisCmd","SwitchVariant","SwitchReg","SwitchEvent","TcpTcpError","TcpCmd","TcpPipeCmd","ThermocoupleVariant","ThermocoupleReg","ThermometerVariant","ThermometerReg","TrafficLightReg","TvocReg","UvIndexVariant","UvIndexReg","VerifiedTelemetryStatus","VerifiedTelemetryFingerprintType","VerifiedTelemetryReg","VerifiedTelemetryCmd","VerifiedTelemetryEvent","VibrationMotorReg","VibrationMotorCmd","WaterLevelVariant","WaterLevelReg","WeightScaleVariant","WeightScaleReg","WeightScaleCmd","WifiAPFlags","WifiCmd","WifiReg","WifiEvent","WindDirectionReg","WindSpeedReg","toHex","isRegister","prettyUnit","NumberFormat","RegisterType","ConnectionState","VibrationMotor","U.delay","ServiceTwinRegisterFlag","bundleURL","getBundleURLCached","getBundleURL","matches","getBaseURL","bundle","updateLink","link","newLink","cloneNode","onload","remove","href","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","document","querySelectorAll","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","onclose","removeErrorOverlay","overlay","createErrorOverlay","body","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","parents","dep","deps","cached","cache"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AgIAA,IAAIs5B,SAAS,GAAG,IAAhB;;AACA,SAASC,kBAAT,GAA8B;AAC5B,MAAI,CAACD,SAAL,EAAgB;AACdA,IAAAA,SAAS,GAAGE,YAAY,EAAxB;AACD;;AAED,SAAOF,SAAP;AACD;;AAED,SAASE,YAAT,GAAwB;AACtB;AACA,MAAI;AACF,UAAM,IAAIl5B,KAAJ,EAAN;AACD,GAFD,CAEE,OAAOuF,GAAP,EAAY;AACZ,QAAI4zB,OAAO,GAAG,CAAC,KAAK5zB,GAAG,CAACiB,KAAV,EAAiBgL,KAAjB,CAAuB,+DAAvB,CAAd;;AACA,QAAI2nB,OAAJ,EAAa;AACX,aAAOC,UAAU,CAACD,OAAO,CAAC,CAAD,CAAR,CAAjB;AACD;AACF;;AAED,SAAO,GAAP;AACD;;AAED,SAASC,UAAT,CAAoBxX,GAApB,EAAyB;AACvB,SAAO,CAAC,KAAKA,GAAN,EAAWrU,OAAX,CAAmB,gFAAnB,EAAqG,IAArG,IAA6G,GAApH;AACD;;AAED3N,OAAO,CAACs5B,YAAR,GAAuBD,kBAAvB;AACAr5B,OAAO,CAACw5B,UAAR,GAAqBA,UAArB;;AC5BA,IAAIC,MAAM,GAAG/1B,OAAO,CAAC,cAAD,CAApB;;AAEA,SAASg2B,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAIC,OAAO,GAAGD,IAAI,CAACE,SAAL,EAAd;;AACAD,EAAAA,OAAO,CAACE,MAAR,GAAiB,YAAY;AAC3BH,IAAAA,IAAI,CAACI,MAAL;AACD,GAFD;;AAGAH,EAAAA,OAAO,CAACI,IAAR,GAAeL,IAAI,CAACK,IAAL,CAAUloB,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCd,IAAI,CAACipB,GAAL,EAA/C;AACAN,EAAAA,IAAI,CAACO,UAAL,CAAgBC,YAAhB,CAA6BP,OAA7B,EAAsCD,IAAI,CAACS,WAA3C;AACD;;AAED,IAAIC,UAAU,GAAG,IAAjB;;AACA,SAASC,SAAT,GAAqB;AACnB,MAAID,UAAJ,EAAgB;AACd;AACD;;AAEDA,EAAAA,UAAU,GAAG/5B,UAAU,CAAC,YAAY;AAClC,QAAIi6B,KAAK,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,wBAA1B,CAAZ;;AACA,SAAK,IAAI54B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG04B,KAAK,CAACp5B,MAA1B,EAAkCU,CAAC,EAAnC,EAAuC;AACrC,UAAI43B,MAAM,CAACD,UAAP,CAAkBe,KAAK,CAAC14B,CAAD,CAAL,CAASm4B,IAA3B,MAAqCP,MAAM,CAACH,YAAP,EAAzC,EAAgE;AAC9DI,QAAAA,UAAU,CAACa,KAAK,CAAC14B,CAAD,CAAN,CAAV;AACD;AACF;;AAEDw4B,IAAAA,UAAU,GAAG,IAAb;AACD,GATsB,EASpB,EAToB,CAAvB;AAUD;;AAEDt6B,MAAM,CAACC,OAAP,GAAiBs6B,SAAjB;;;;;;;;;;;AjI7BA;AACA,IAAIx6B,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA/B,EAEA;AACA;AACA;AACA;;AAEA,IAAIC,gBAAJ;AACA,IAAIC,kBAAJ;;AAEA,SAASC,gBAAT,GAA4B;AACxB,QAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,SAASC,mBAAT,GAAgC;AAC5B,QAAM,IAAID,KAAJ,CAAU,mCAAV,CAAN;AACH;;AACA,aAAY;AACT,MAAI;AACA,QAAI,OAAOE,UAAP,KAAsB,UAA1B,EAAsC;AAClCL,MAAAA,gBAAgB,GAAGK,UAAnB;AACH,KAFD,MAEO;AACHL,MAAAA,gBAAgB,GAAGE,gBAAnB;AACH;AACJ,GAND,CAME,OAAOI,CAAP,EAAU;AACRN,IAAAA,gBAAgB,GAAGE,gBAAnB;AACH;;AACD,MAAI;AACA,QAAI,OAAOK,YAAP,KAAwB,UAA5B,EAAwC;AACpCN,MAAAA,kBAAkB,GAAGM,YAArB;AACH,KAFD,MAEO;AACHN,MAAAA,kBAAkB,GAAGG,mBAArB;AACH;AACJ,GAND,CAME,OAAOE,CAAP,EAAU;AACRL,IAAAA,kBAAkB,GAAGG,mBAArB;AACH;AACJ,CAnBA,GAAD;;AAoBA,SAASI,UAAT,CAAoBC,GAApB,EAAyB;AACrB,MAAIT,gBAAgB,KAAKK,UAAzB,EAAqC;AACjC;AACA,WAAOA,UAAU,CAACI,GAAD,EAAM,CAAN,CAAjB;AACH,GAJoB,CAKrB;;;AACA,MAAI,CAACT,gBAAgB,KAAKE,gBAArB,IAAyC,CAACF,gBAA3C,KAAgEK,UAApE,EAAgF;AAC5EL,IAAAA,gBAAgB,GAAGK,UAAnB;AACA,WAAOA,UAAU,CAACI,GAAD,EAAM,CAAN,CAAjB;AACH;;AACD,MAAI;AACA;AACA,WAAOT,gBAAgB,CAACS,GAAD,EAAM,CAAN,CAAvB;AACH,GAHD,CAGE,OAAMH,CAAN,EAAQ;AACN,QAAI;AACA;AACA,aAAON,gBAAgB,CAACU,IAAjB,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,CAAjC,CAAP;AACH,KAHD,CAGE,OAAMH,CAAN,EAAQ;AACN;AACA,aAAON,gBAAgB,CAACU,IAAjB,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,CAAjC,CAAP;AACH;AACJ;AAGJ;;AACD,SAASE,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,MAAIX,kBAAkB,KAAKM,YAA3B,EAAyC;AACrC;AACA,WAAOA,YAAY,CAACK,MAAD,CAAnB;AACH,GAJ4B,CAK7B;;;AACA,MAAI,CAACX,kBAAkB,KAAKG,mBAAvB,IAA8C,CAACH,kBAAhD,KAAuEM,YAA3E,EAAyF;AACrFN,IAAAA,kBAAkB,GAAGM,YAArB;AACA,WAAOA,YAAY,CAACK,MAAD,CAAnB;AACH;;AACD,MAAI;AACA;AACA,WAAOX,kBAAkB,CAACW,MAAD,CAAzB;AACH,GAHD,CAGE,OAAON,CAAP,EAAS;AACP,QAAI;AACA;AACA,aAAOL,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;AACH,KAHD,CAGE,OAAON,CAAP,EAAS;AACP;AACA;AACA,aAAOL,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;AACH;AACJ;AAIJ;;AACD,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,QAAQ,GAAG,KAAf;AACA,IAAIC,YAAJ;AACA,IAAIC,UAAU,GAAG,CAAC,CAAlB;;AAEA,SAASC,eAAT,GAA2B;AACvB,MAAI,CAACH,QAAD,IAAa,CAACC,YAAlB,EAAgC;AAC5B;AACH;;AACDD,EAAAA,QAAQ,GAAG,KAAX;;AACA,MAAIC,YAAY,CAACG,MAAjB,EAAyB;AACrBL,IAAAA,KAAK,GAAGE,YAAY,CAACI,MAAb,CAAoBN,KAApB,CAAR;AACH,GAFD,MAEO;AACHG,IAAAA,UAAU,GAAG,CAAC,CAAd;AACH;;AACD,MAAIH,KAAK,CAACK,MAAV,EAAkB;AACdE,IAAAA,UAAU;AACb;AACJ;;AAED,SAASA,UAAT,GAAsB;AAClB,MAAIN,QAAJ,EAAc;AACV;AACH;;AACD,MAAIO,OAAO,GAAGb,UAAU,CAACS,eAAD,CAAxB;AACAH,EAAAA,QAAQ,GAAG,IAAX;AAEA,MAAIQ,GAAG,GAAGT,KAAK,CAACK,MAAhB;;AACA,SAAMI,GAAN,EAAW;AACPP,IAAAA,YAAY,GAAGF,KAAf;AACAA,IAAAA,KAAK,GAAG,EAAR;;AACA,WAAO,EAAEG,UAAF,GAAeM,GAAtB,EAA2B;AACvB,UAAIP,YAAJ,EAAkB;AACdA,QAAAA,YAAY,CAACC,UAAD,CAAZ,CAAyBO,GAAzB;AACH;AACJ;;AACDP,IAAAA,UAAU,GAAG,CAAC,CAAd;AACAM,IAAAA,GAAG,GAAGT,KAAK,CAACK,MAAZ;AACH;;AACDH,EAAAA,YAAY,GAAG,IAAf;AACAD,EAAAA,QAAQ,GAAG,KAAX;AACAH,EAAAA,eAAe,CAACU,OAAD,CAAf;AACH;;AAEDxB,OAAO,CAAC2B,QAAR,GAAmB,UAAUf,GAAV,EAAe;AAC9B,MAAIgB,IAAI,GAAG,IAAIC,KAAJ,CAAUC,SAAS,CAACT,MAAV,GAAmB,CAA7B,CAAX;;AACA,MAAIS,SAAS,CAACT,MAAV,GAAmB,CAAvB,EAA0B;AACtB,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACT,MAA9B,EAAsCU,CAAC,EAAvC,EAA2C;AACvCH,MAAAA,IAAI,CAACG,CAAC,GAAG,CAAL,CAAJ,GAAcD,SAAS,CAACC,CAAD,CAAvB;AACH;AACJ;;AACDf,EAAAA,KAAK,CAACgB,IAAN,CAAW,IAAIC,IAAJ,CAASrB,GAAT,EAAcgB,IAAd,CAAX;;AACA,MAAIZ,KAAK,CAACK,MAAN,KAAiB,CAAjB,IAAsB,CAACJ,QAA3B,EAAqC;AACjCN,IAAAA,UAAU,CAACY,UAAD,CAAV;AACH;AACJ,CAXD,EAaA;;;AACA,SAASU,IAAT,CAAcrB,GAAd,EAAmBsB,KAAnB,EAA0B;AACtB,OAAKtB,GAAL,GAAWA,GAAX;AACA,OAAKsB,KAAL,GAAaA,KAAb;AACH;;AACDD,IAAI,CAACE,SAAL,CAAeT,GAAf,GAAqB,YAAY;AAC7B,OAAKd,GAAL,CAASwB,KAAT,CAAe,IAAf,EAAqB,KAAKF,KAA1B;AACH,CAFD;;AAGAlC,OAAO,CAACqC,KAAR,GAAgB,SAAhB;AAEArC,OAAO,CAACsC,GAAR,GAAc,EAAd;AACAtC,OAAO,CAACuC,IAAR,GAAe,EAAf;AACAvC,OAAO,CAACwC,OAAR,GAAkB,EAAlB,EAAsB;;AACtBxC,OAAO,CAACyC,QAAR,GAAmB,EAAnB;;AAEA,SAASC,IAAT,GAAgB,CAAE;;AAElB1C,OAAO,CAAC2C,EAAR,GAAaD,IAAb;AACA1C,OAAO,CAAC4C,WAAR,GAAsBF,IAAtB;AACA1C,OAAO,CAAC6C,IAAR,GAAeH,IAAf;AACA1C,OAAO,CAAC8C,GAAR,GAAcJ,IAAd;AACA1C,OAAO,CAAC+C,cAAR,GAAyBL,IAAzB;AACA1C,OAAO,CAACgD,kBAAR,GAA6BN,IAA7B;AACA1C,OAAO,CAACiD,IAAR,GAAeP,IAAf;AACA1C,OAAO,CAACkD,eAAR,GAA0BR,IAA1B;AACA1C,OAAO,CAACmD,mBAAR,GAA8BT,IAA9B;;AAEA1C,OAAO,CAACoD,SAAR,GAAoB,UAAUC,IAAV,EAAgB;AAAE,SAAO,EAAP;AAAW,CAAjD;;AAEArD,OAAO,CAACsD,OAAR,GAAkB,UAAUD,IAAV,EAAgB;AAC9B,QAAM,IAAI/C,KAAJ,CAAU,kCAAV,CAAN;AACH,CAFD;;AAIAN,OAAO,CAACuD,GAAR,GAAc,YAAY;AAAE,SAAO,GAAP;AAAY,CAAxC;;AACAvD,OAAO,CAACwD,KAAR,GAAgB,UAAUC,GAAV,EAAe;AAC3B,QAAM,IAAInD,KAAJ,CAAU,gCAAV,CAAN;AACH,CAFD;;AAGAN,OAAO,CAAC0D,KAAR,GAAgB,YAAW;AAAE,SAAO,CAAP;AAAW,CAAxC;;;ACvlEA;AACA;AACA;AAEA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;AAAA,IACEC,IAAI,GAAGD,OAAO,CAAC,MAAD,CADhB;AAAA,IAEEE,aAAa,GAAGF,OAAO,CAAC,kBAAD,CAFzB;AAAA,IAGEG,IAAI,GAAGF,IAAI,CAACE,IAHd;AAAA,IAIEC,OAAO,GAAGH,IAAI,CAACG,OAJjB;AAAA,IAKEC,MAAM,GACHN,EAAE,CAACO,UAAH,IACC,UAASL,IAAT,EAAe;AACb,MAAI;AACFF,IAAAA,EAAE,CAACO,UAAH,CAAcL,IAAd;AACD,GAFD,CAEE,OAAOpD,CAAP,EAAU;AACV,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CARH,IASAkD,EAAE,CAACQ,UATH,IAUAN,IAAI,CAACM,UAhBT;AAAA,IAiBEC,QAAQ,GAAG;AACTC,EAAAA,KAAK,EAAE,aAAmC,KADjC;AAETC,EAAAA,QAAQ,EAAE,aAA0C,UAF3C;AAGTC,EAAAA,QAAQ,EAAEvE,OAAO,CAACuE,QAHT;AAITC,EAAAA,IAAI,EAAExE,OAAO,CAACwE,IAJL;AAKTC,EAAAA,UAAU,EACR,WACAzE,OAAO,CAACyC,QAAR,CAAiBiC,OADjB,GAEA,GAFA,GAGA1E,OAAO,CAACuE,QAHR,GAIA,GAJA,GAKAvE,OAAO,CAACwE,IAXD;AAYThC,EAAAA,OAAO,EAAExC,OAAO,CAACyC,QAAR,CAAiBkC,IAZjB;AAaTC,EAAAA,QAAQ,EAAE,eAbD;AAcTC,EAAAA,GAAG,EAAE,CACH;AACA,GAAC,aAAD,EAAgB,OAAhB,EAAyB,UAAzB,CAFG,EAGH;AACA,GAAC,aAAD,EAAgB,OAAhB,EAAyB,OAAzB,EAAkC,UAAlC,CAJG,EAKH,CAAC,aAAD,EAAgB,OAAhB,EAAyB,SAAzB,EAAoC,UAApC,CALG,EAMH;AACA,GAAC,aAAD,EAAgB,KAAhB,EAAuB,OAAvB,EAAgC,UAAhC,CAPG,EAQH,CAAC,aAAD,EAAgB,OAAhB,EAAyB,UAAzB,CARG,EASH;AACA,GAAC,aAAD,EAAgB,KAAhB,EAAuB,SAAvB,EAAkC,UAAlC,CAVG,EAWH,CAAC,aAAD,EAAgB,SAAhB,EAA2B,UAA3B,CAXG,EAYH;AACA,GAAC,aAAD,EAAgB,OAAhB,EAAyB,SAAzB,EAAoC,UAApC,CAbG,EAcH;AACA,GAAC,aAAD,EAAgB,UAAhB,EAA4B,SAA5B,EAAuC,UAAvC,EAAmD,MAAnD,EAA2D,UAA3D,CAfG,EAgBH;AACA,GAAC,aAAD,EAAgB,aAAhB,EAA+B,SAA/B,EAA0C,cAA1C,EAA0D,UAA1D,CAjBG,EAkBH,CAAC,aAAD,EAAgB,aAAhB,EAA+B,OAA/B,EAAwC,cAAxC,EAAwD,UAAxD,CAlBG,EAmBH,CAAC,aAAD,EAAgB,aAAhB,EAA+B,SAA/B,EAA0C,cAA1C,EAA0D,UAA1D,CAnBG,EAoBH;AACA,GAAC,aAAD,EAAgB,KAAhB,EAAuB,SAAvB,EAAkC,YAAlC,EAAgD,UAAhD,CArBG;AAdI,CAjBb;AAwDA;AACA;AACA;AACA;AACA;;;AAEA,SAASD,QAAT,CAAkBE,IAAlB,EAAwB;AACtB;AACA,MAAI,OAAOA,IAAP,IAAe,QAAnB,EAA6B;AAC3BA,IAAAA,IAAI,GAAG;AAAEF,MAAAA,QAAQ,EAAEE;AAAZ,KAAP;AACD,GAFD,MAEO,IAAI,CAACA,IAAL,EAAW;AAChBA,IAAAA,IAAI,GAAG,EAAP;AACD,GANqB,CAQtB;;;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYZ,QAAZ,EAAsBa,GAAtB,CAA0B,UAASlD,CAAT,EAAY;AACpC,QAAI,EAAEA,CAAC,IAAI+C,IAAP,CAAJ,EAAkBA,IAAI,CAAC/C,CAAD,CAAJ,GAAUqC,QAAQ,CAACrC,CAAD,CAAlB;AACnB,GAFD,EATsB,CAatB;;AACA,MAAI,CAAC+C,IAAI,CAACI,WAAV,EAAuB;AACrBJ,IAAAA,IAAI,CAACI,WAAL,GAAmBhF,OAAO,CAACiF,OAAR,CAAgBjF,OAAO,CAACkF,WAAR,EAAhB,CAAnB;AACD,GAhBqB,CAkBtB;;;AACA,MAAIvB,IAAI,CAACwB,OAAL,CAAaP,IAAI,CAACF,QAAlB,KAA+B,OAAnC,EAA4C;AAC1CE,IAAAA,IAAI,CAACF,QAAL,IAAiB,OAAjB;AACD,GArBqB,CAuBtB;;;AACA,MAAIU,WAAW,GACb,OAAOC,mBAAP,KAA+B,UAA/B,GACIC,uBADJ,GAEI5B,OAHN;AAKA,MAAI6B,KAAK,GAAG,EAAZ;AAAA,MACE1D,CAAC,GAAG,CADN;AAAA,MAEE2D,CAAC,GAAGZ,IAAI,CAACD,GAAL,CAASxD,MAFf;AAAA,MAGEsE,CAHF;AAAA,MAIEC,CAJF;AAAA,MAKEC,GALF;;AAOA,SAAO9D,CAAC,GAAG2D,CAAX,EAAc3D,CAAC,EAAf,EAAmB;AACjB4D,IAAAA,CAAC,GAAG5B,IAAI,CAAC3B,KAAL,CACF,IADE,EAEF0C,IAAI,CAACD,GAAL,CAAS9C,CAAT,EAAYkD,GAAZ,CAAgB,UAASa,CAAT,EAAY;AAC1B,aAAOhB,IAAI,CAACgB,CAAD,CAAJ,IAAWA,CAAlB;AACD,KAFD,CAFE,CAAJ;AAMAL,IAAAA,KAAK,CAACzD,IAAN,CAAW2D,CAAX;;AACA,QAAI;AACFC,MAAAA,CAAC,GAAGd,IAAI,CAACjB,IAAL,GAAYyB,WAAW,CAACS,OAAZ,CAAoBJ,CAApB,CAAZ,GAAqCL,WAAW,CAACK,CAAD,CAApD;;AACA,UAAI,CAACb,IAAI,CAACjB,IAAV,EAAgB;AACd+B,QAAAA,CAAC,CAAC/B,IAAF,GAAS8B,CAAT;AACD;;AACD,aAAOC,CAAP;AACD,KAND,CAME,OAAOnF,CAAP,EAAU;AACV,UAAIA,CAAC,CAACuF,IAAF,KAAW,kBAAX,IACAvF,CAAC,CAACuF,IAAF,KAAW,kCADX,IAEA,CAAC,YAAYC,IAAZ,CAAiBxF,CAAC,CAACyF,OAAnB,CAFL,EAEkC;AAChC,cAAMzF,CAAN;AACD;AACF;AACF;;AAEDoF,EAAAA,GAAG,GAAG,IAAIvF,KAAJ,CACJ,iDACEmF,KAAK,CACFR,GADH,CACO,UAASkB,CAAT,EAAY;AACf,WAAOrB,IAAI,CAACT,KAAL,GAAa8B,CAApB;AACD,GAHH,EAIGpC,IAJH,CAIQ,IAJR,CAFE,CAAN;AAQA8B,EAAAA,GAAG,CAACJ,KAAJ,GAAYA,KAAZ;AACA,QAAMI,GAAN;AACD;;AACD5F,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAG0E,QAA3B;AAEA;AACA;AACA;AACA;AACA;;AAEA1E,OAAO,CAACkF,WAAR,GAAsB,SAASA,WAAT,CAAqBgB,YAArB,EAAmC;AACvD,MAAIC,OAAO,GAAG/F,KAAK,CAACgG,iBAApB;AAAA,MACEC,OAAO,GAAGjG,KAAK,CAACkG,eADlB;AAAA,MAEEC,KAAK,GAAG,EAFV;AAAA,MAGEC,QAHF;AAKApG,EAAAA,KAAK,CAACkG,eAAN,GAAwB,EAAxB;;AAEAlG,EAAAA,KAAK,CAACgG,iBAAN,GAA0B,UAAS7F,CAAT,EAAYkG,EAAZ,EAAgB;AACxC,SAAK,IAAI5E,CAAC,GAAG,CAAR,EAAW2D,CAAC,GAAGiB,EAAE,CAACtF,MAAvB,EAA+BU,CAAC,GAAG2D,CAAnC,EAAsC3D,CAAC,EAAvC,EAA2C;AACzC2E,MAAAA,QAAQ,GAAGC,EAAE,CAAC5E,CAAD,CAAF,CAAMqD,WAAN,EAAX;;AACA,UAAIsB,QAAQ,KAAKE,UAAjB,EAA6B;AAC3B,YAAIR,YAAJ,EAAkB;AAChB,cAAIM,QAAQ,KAAKN,YAAjB,EAA+B;AAC7B;AACD;AACF,SAJD,MAIO;AACL;AACD;AACF;AACF;AACF,GAbD,CARuD,CAuBvD;;;AACA9F,EAAAA,KAAK,CAACuG,iBAAN,CAAwBJ,KAAxB;AACAA,EAAAA,KAAK,CAACK,KAAN,CAzBuD,CA2BvD;;AACAxG,EAAAA,KAAK,CAACgG,iBAAN,GAA0BD,OAA1B;AACA/F,EAAAA,KAAK,CAACkG,eAAN,GAAwBD,OAAxB,CA7BuD,CA+BvD;;AACA,MAAIQ,UAAU,GAAG,SAAjB;;AACA,MAAIL,QAAQ,CAACM,OAAT,CAAiBD,UAAjB,MAAiC,CAArC,EAAwC;AACtCL,IAAAA,QAAQ,GAAG5C,aAAa,CAAC4C,QAAD,CAAxB;AACD;;AAED,SAAOA,QAAP;AACD,CAtCD;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAxG,OAAO,CAACiF,OAAR,GAAkB,SAASA,OAAT,CAAiB8B,IAAjB,EAAuB;AACvC,MAAIxD,GAAG,GAAGO,OAAO,CAACiD,IAAD,CAAjB;AAAA,MACEC,IADF;;AAEA,SAAO,IAAP,EAAa;AACX,QAAIzD,GAAG,KAAK,GAAZ,EAAiB;AACf;AACAA,MAAAA,GAAG,GAAGzD,OAAO,CAACuD,GAAR,EAAN;AACD;;AACD,QACEU,MAAM,CAACF,IAAI,CAACN,GAAD,EAAM,cAAN,CAAL,CAAN,IACAQ,MAAM,CAACF,IAAI,CAACN,GAAD,EAAM,cAAN,CAAL,CAFR,EAGE;AACA;AACA,aAAOA,GAAP;AACD;;AACD,QAAIyD,IAAI,KAAKzD,GAAb,EAAkB;AAChB;AACA,YAAM,IAAInD,KAAJ,CACJ,6CACE2G,IADF,GAEE,wCAHE,CAAN;AAKD,KAnBU,CAoBX;;;AACAC,IAAAA,IAAI,GAAGzD,GAAP;AACAA,IAAAA,GAAG,GAAGM,IAAI,CAACN,GAAD,EAAM,IAAN,CAAV;AACD;AACF,CA3BD;;ACjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAI0D,CAAC,GAAG,OAAOC,OAAP,KAAmB,QAAnB,GAA8BA,OAA9B,GAAwC,IAAhD;AACA,IAAIC,YAAY,GAAGF,CAAC,IAAI,OAAOA,CAAC,CAAC/E,KAAT,KAAmB,UAAxB,GACf+E,CAAC,CAAC/E,KADa,GAEf,SAASiF,YAAT,CAAsBC,MAAtB,EAA8BC,QAA9B,EAAwC3F,IAAxC,EAA8C;AAC9C,SAAO4F,QAAQ,CAACrF,SAAT,CAAmBC,KAAnB,CAAyBvB,IAAzB,CAA8ByG,MAA9B,EAAsCC,QAAtC,EAAgD3F,IAAhD,CAAP;AACD,CAJH;AAMA,IAAI6F,cAAJ;;AACA,IAAIN,CAAC,IAAI,OAAOA,CAAC,CAACO,OAAT,KAAqB,UAA9B,EAA0C;AACxCD,EAAAA,cAAc,GAAGN,CAAC,CAACO,OAAnB;AACD,CAFD,MAEO,IAAI3C,MAAM,CAAC4C,qBAAX,EAAkC;AACvCF,EAAAA,cAAc,GAAG,SAASA,cAAT,CAAwBH,MAAxB,EAAgC;AAC/C,WAAOvC,MAAM,CAAC6C,mBAAP,CAA2BN,MAA3B,EACJhG,MADI,CACGyD,MAAM,CAAC4C,qBAAP,CAA6BL,MAA7B,CADH,CAAP;AAED,GAHD;AAID,CALM,MAKA;AACLG,EAAAA,cAAc,GAAG,SAASA,cAAT,CAAwBH,MAAxB,EAAgC;AAC/C,WAAOvC,MAAM,CAAC6C,mBAAP,CAA2BN,MAA3B,CAAP;AACD,GAFD;AAGD;;AAED,SAASO,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC,MAAIC,OAAO,IAAIA,OAAO,CAACC,IAAvB,EAA6BD,OAAO,CAACC,IAAR,CAAaF,OAAb;AAC9B;;AAED,IAAIG,WAAW,GAAGC,MAAM,CAACC,KAAP,IAAgB,SAASF,WAAT,CAAqBG,KAArB,EAA4B;AAC5D,SAAOA,KAAK,KAAKA,KAAjB;AACD,CAFD;;AAIA,SAASC,YAAT,GAAwB;AACtBA,EAAAA,YAAY,CAACC,IAAb,CAAkBzH,IAAlB,CAAuB,IAAvB;AACD;;AACDZ,MAAM,CAACC,OAAP,GAAiBmI,YAAjB;AACApI,MAAM,CAACC,OAAP,CAAe2C,IAAf,GAAsBA,IAAtB,EAEA;;AACAwF,YAAY,CAACA,YAAb,GAA4BA,YAA5B;AAEAA,YAAY,CAAClG,SAAb,CAAuBoG,OAAvB,GAAiCC,SAAjC;AACAH,YAAY,CAAClG,SAAb,CAAuBsG,YAAvB,GAAsC,CAAtC;AACAJ,YAAY,CAAClG,SAAb,CAAuBuG,aAAvB,GAAuCF,SAAvC,EAEA;AACA;;AACA,IAAIG,mBAAmB,GAAG,EAA1B;;AAEA,SAASC,aAAT,CAAuBC,QAAvB,EAAiC;AAC/B,MAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,UAAM,IAAIC,SAAJ,CAAc,qEAAqE,OAAOD,QAA1F,CAAN;AACD;AACF;;AAED9D,MAAM,CAACgE,cAAP,CAAsBV,YAAtB,EAAoC,qBAApC,EAA2D;AACzDW,EAAAA,UAAU,EAAE,IAD6C;AAEzDC,EAAAA,GAAG,EAAE,YAAW;AACd,WAAON,mBAAP;AACD,GAJwD;AAKzDO,EAAAA,GAAG,EAAE,UAASC,GAAT,EAAc;AACjB,QAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,GAAG,CAAjC,IAAsClB,WAAW,CAACkB,GAAD,CAArD,EAA4D;AAC1D,YAAM,IAAIC,UAAJ,CAAe,oGAAoGD,GAApG,GAA0G,GAAzH,CAAN;AACD;;AACDR,IAAAA,mBAAmB,GAAGQ,GAAtB;AACD;AAVwD,CAA3D;;AAaAd,YAAY,CAACC,IAAb,GAAoB,YAAW;AAE7B,MAAI,KAAKC,OAAL,KAAiBC,SAAjB,IACA,KAAKD,OAAL,KAAiBxD,MAAM,CAACsE,cAAP,CAAsB,IAAtB,EAA4Bd,OADjD,EAC0D;AACxD,SAAKA,OAAL,GAAexD,MAAM,CAACuE,MAAP,CAAc,IAAd,CAAf;AACA,SAAKb,YAAL,GAAoB,CAApB;AACD;;AAED,OAAKC,aAAL,GAAqB,KAAKA,aAAL,IAAsBF,SAA3C;AACD,CATD,EAWA;AACA;;;AACAH,YAAY,CAAClG,SAAb,CAAuBoH,eAAvB,GAAyC,SAASA,eAAT,CAAyB5D,CAAzB,EAA4B;AACnE,MAAI,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAC,GAAG,CAA7B,IAAkCsC,WAAW,CAACtC,CAAD,CAAjD,EAAsD;AACpD,UAAM,IAAIyD,UAAJ,CAAe,kFAAkFzD,CAAlF,GAAsF,GAArG,CAAN;AACD;;AACD,OAAK+C,aAAL,GAAqB/C,CAArB;AACA,SAAO,IAAP;AACD,CAND;;AAQA,SAAS6D,gBAAT,CAA0BC,IAA1B,EAAgC;AAC9B,MAAIA,IAAI,CAACf,aAAL,KAAuBF,SAA3B,EACE,OAAOH,YAAY,CAACM,mBAApB;AACF,SAAOc,IAAI,CAACf,aAAZ;AACD;;AAEDL,YAAY,CAAClG,SAAb,CAAuBuH,eAAvB,GAAyC,SAASA,eAAT,GAA2B;AAClE,SAAOF,gBAAgB,CAAC,IAAD,CAAvB;AACD,CAFD;;AAIAnB,YAAY,CAAClG,SAAb,CAAuBc,IAAvB,GAA8B,SAASA,IAAT,CAAc0G,IAAd,EAAoB;AAChD,MAAI/H,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACT,MAA9B,EAAsCU,CAAC,EAAvC,EAA2CH,IAAI,CAACI,IAAL,CAAUF,SAAS,CAACC,CAAD,CAAnB;;AAC3C,MAAI6H,OAAO,GAAID,IAAI,KAAK,OAAxB;AAEA,MAAIE,MAAM,GAAG,KAAKtB,OAAlB;AACA,MAAIsB,MAAM,KAAKrB,SAAf,EACEoB,OAAO,GAAIA,OAAO,IAAIC,MAAM,CAACC,KAAP,KAAiBtB,SAAvC,CADF,KAEK,IAAI,CAACoB,OAAL,EACH,OAAO,KAAP,CAT8C,CAWhD;;AACA,MAAIA,OAAJ,EAAa;AACX,QAAIG,EAAJ;AACA,QAAInI,IAAI,CAACP,MAAL,GAAc,CAAlB,EACE0I,EAAE,GAAGnI,IAAI,CAAC,CAAD,CAAT;;AACF,QAAImI,EAAE,YAAYzJ,KAAlB,EAAyB;AACvB;AACA;AACA,YAAMyJ,EAAN,CAHuB,CAGb;AACX,KARU,CASX;;;AACA,QAAIlE,GAAG,GAAG,IAAIvF,KAAJ,CAAU,sBAAsByJ,EAAE,GAAG,OAAOA,EAAE,CAAC7D,OAAV,GAAoB,GAAvB,GAA6B,EAArD,CAAV,CAAV;AACAL,IAAAA,GAAG,CAACmE,OAAJ,GAAcD,EAAd;AACA,UAAMlE,GAAN,CAZW,CAYA;AACZ;;AAED,MAAIoE,OAAO,GAAGJ,MAAM,CAACF,IAAD,CAApB;AAEA,MAAIM,OAAO,KAAKzB,SAAhB,EACE,OAAO,KAAP;;AAEF,MAAI,OAAOyB,OAAP,KAAmB,UAAvB,EAAmC;AACjC5C,IAAAA,YAAY,CAAC4C,OAAD,EAAU,IAAV,EAAgBrI,IAAhB,CAAZ;AACD,GAFD,MAEO;AACL,QAAIH,GAAG,GAAGwI,OAAO,CAAC5I,MAAlB;AACA,QAAI+B,SAAS,GAAG8G,UAAU,CAACD,OAAD,EAAUxI,GAAV,CAA1B;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAApB,EAAyB,EAAEM,CAA3B,EACEsF,YAAY,CAACjE,SAAS,CAACrB,CAAD,CAAV,EAAe,IAAf,EAAqBH,IAArB,CAAZ;AACH;;AAED,SAAO,IAAP;AACD,CA1CD;;AA4CA,SAASuI,YAAT,CAAsB7C,MAAtB,EAA8BqC,IAA9B,EAAoCd,QAApC,EAA8CuB,OAA9C,EAAuD;AACrD,MAAIC,CAAJ;AACA,MAAIR,MAAJ;AACA,MAAIS,QAAJ;AAEA1B,EAAAA,aAAa,CAACC,QAAD,CAAb;AAEAgB,EAAAA,MAAM,GAAGvC,MAAM,CAACiB,OAAhB;;AACA,MAAIsB,MAAM,KAAKrB,SAAf,EAA0B;AACxBqB,IAAAA,MAAM,GAAGvC,MAAM,CAACiB,OAAP,GAAiBxD,MAAM,CAACuE,MAAP,CAAc,IAAd,CAA1B;AACAhC,IAAAA,MAAM,CAACmB,YAAP,GAAsB,CAAtB;AACD,GAHD,MAGO;AACL;AACA;AACA,QAAIoB,MAAM,CAACU,WAAP,KAAuB/B,SAA3B,EAAsC;AACpClB,MAAAA,MAAM,CAACrE,IAAP,CAAY,aAAZ,EAA2B0G,IAA3B,EACYd,QAAQ,CAACA,QAAT,GAAoBA,QAAQ,CAACA,QAA7B,GAAwCA,QADpD,EADoC,CAIpC;AACA;;AACAgB,MAAAA,MAAM,GAAGvC,MAAM,CAACiB,OAAhB;AACD;;AACD+B,IAAAA,QAAQ,GAAGT,MAAM,CAACF,IAAD,CAAjB;AACD;;AAED,MAAIW,QAAQ,KAAK9B,SAAjB,EAA4B;AAC1B;AACA8B,IAAAA,QAAQ,GAAGT,MAAM,CAACF,IAAD,CAAN,GAAed,QAA1B;AACA,MAAEvB,MAAM,CAACmB,YAAT;AACD,GAJD,MAIO;AACL,QAAI,OAAO6B,QAAP,KAAoB,UAAxB,EAAoC;AAClC;AACAA,MAAAA,QAAQ,GAAGT,MAAM,CAACF,IAAD,CAAN,GACTS,OAAO,GAAG,CAACvB,QAAD,EAAWyB,QAAX,CAAH,GAA0B,CAACA,QAAD,EAAWzB,QAAX,CADnC,CAFkC,CAIlC;AACD,KALD,MAKO,IAAIuB,OAAJ,EAAa;AAClBE,MAAAA,QAAQ,CAACE,OAAT,CAAiB3B,QAAjB;AACD,KAFM,MAEA;AACLyB,MAAAA,QAAQ,CAACtI,IAAT,CAAc6G,QAAd;AACD,KAVI,CAYL;;;AACAwB,IAAAA,CAAC,GAAGb,gBAAgB,CAAClC,MAAD,CAApB;;AACA,QAAI+C,CAAC,GAAG,CAAJ,IAASC,QAAQ,CAACjJ,MAAT,GAAkBgJ,CAA3B,IAAgC,CAACC,QAAQ,CAACG,MAA9C,EAAsD;AACpDH,MAAAA,QAAQ,CAACG,MAAT,GAAkB,IAAlB,CADoD,CAEpD;AACA;;AACA,UAAIC,CAAC,GAAG,IAAIpK,KAAJ,CAAU,iDACEgK,QAAQ,CAACjJ,MADX,GACoB,GADpB,GAC0BsJ,MAAM,CAAChB,IAAD,CADhC,GACyC,aADzC,GAEE,0CAFF,GAGE,gBAHZ,CAAR;AAIAe,MAAAA,CAAC,CAACrH,IAAF,GAAS,6BAAT;AACAqH,MAAAA,CAAC,CAACE,OAAF,GAAYtD,MAAZ;AACAoD,MAAAA,CAAC,CAACf,IAAF,GAASA,IAAT;AACAe,MAAAA,CAAC,CAACG,KAAF,GAAUP,QAAQ,CAACjJ,MAAnB;AACAwG,MAAAA,kBAAkB,CAAC6C,CAAD,CAAlB;AACD;AACF;;AAED,SAAOpD,MAAP;AACD;;AAEDe,YAAY,CAAClG,SAAb,CAAuBS,WAAvB,GAAqC,SAASA,WAAT,CAAqB+G,IAArB,EAA2Bd,QAA3B,EAAqC;AACxE,SAAOsB,YAAY,CAAC,IAAD,EAAOR,IAAP,EAAad,QAAb,EAAuB,KAAvB,CAAnB;AACD,CAFD;;AAIAR,YAAY,CAAClG,SAAb,CAAuBQ,EAAvB,GAA4B0F,YAAY,CAAClG,SAAb,CAAuBS,WAAnD;;AAEAyF,YAAY,CAAClG,SAAb,CAAuBe,eAAvB,GACI,SAASA,eAAT,CAAyByG,IAAzB,EAA+Bd,QAA/B,EAAyC;AACvC,SAAOsB,YAAY,CAAC,IAAD,EAAOR,IAAP,EAAad,QAAb,EAAuB,IAAvB,CAAnB;AACD,CAHL;;AAKA,SAASiC,WAAT,GAAuB;AACrB,MAAI,CAAC,KAAKC,KAAV,EAAiB;AACf,SAAKzD,MAAL,CAAYvE,cAAZ,CAA2B,KAAK4G,IAAhC,EAAsC,KAAKqB,MAA3C;AACA,SAAKD,KAAL,GAAa,IAAb;AACA,QAAIjJ,SAAS,CAACT,MAAV,KAAqB,CAAzB,EACE,OAAO,KAAKwH,QAAL,CAAchI,IAAd,CAAmB,KAAKyG,MAAxB,CAAP;AACF,WAAO,KAAKuB,QAAL,CAAczG,KAAd,CAAoB,KAAKkF,MAAzB,EAAiCxF,SAAjC,CAAP;AACD;AACF;;AAED,SAASmJ,SAAT,CAAmB3D,MAAnB,EAA2BqC,IAA3B,EAAiCd,QAAjC,EAA2C;AACzC,MAAIqC,KAAK,GAAG;AAAEH,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,MAAM,EAAExC,SAAxB;AAAmClB,IAAAA,MAAM,EAAEA,MAA3C;AAAmDqC,IAAAA,IAAI,EAAEA,IAAzD;AAA+Dd,IAAAA,QAAQ,EAAEA;AAAzE,GAAZ;AACA,MAAIsC,OAAO,GAAGL,WAAW,CAACM,IAAZ,CAAiBF,KAAjB,CAAd;AACAC,EAAAA,OAAO,CAACtC,QAAR,GAAmBA,QAAnB;AACAqC,EAAAA,KAAK,CAACF,MAAN,GAAeG,OAAf;AACA,SAAOA,OAAP;AACD;;AAED9C,YAAY,CAAClG,SAAb,CAAuBU,IAAvB,GAA8B,SAASA,IAAT,CAAc8G,IAAd,EAAoBd,QAApB,EAA8B;AAC1DD,EAAAA,aAAa,CAACC,QAAD,CAAb;AACA,OAAKlG,EAAL,CAAQgH,IAAR,EAAcsB,SAAS,CAAC,IAAD,EAAOtB,IAAP,EAAad,QAAb,CAAvB;AACA,SAAO,IAAP;AACD,CAJD;;AAMAR,YAAY,CAAClG,SAAb,CAAuBgB,mBAAvB,GACI,SAASA,mBAAT,CAA6BwG,IAA7B,EAAmCd,QAAnC,EAA6C;AAC3CD,EAAAA,aAAa,CAACC,QAAD,CAAb;AACA,OAAK3F,eAAL,CAAqByG,IAArB,EAA2BsB,SAAS,CAAC,IAAD,EAAOtB,IAAP,EAAad,QAAb,CAApC;AACA,SAAO,IAAP;AACD,CALL,EAOA;;;AACAR,YAAY,CAAClG,SAAb,CAAuBY,cAAvB,GACI,SAASA,cAAT,CAAwB4G,IAAxB,EAA8Bd,QAA9B,EAAwC;AACtC,MAAIwC,IAAJ,EAAUxB,MAAV,EAAkByB,QAAlB,EAA4BvJ,CAA5B,EAA+BwJ,gBAA/B;AAEA3C,EAAAA,aAAa,CAACC,QAAD,CAAb;AAEAgB,EAAAA,MAAM,GAAG,KAAKtB,OAAd;AACA,MAAIsB,MAAM,KAAKrB,SAAf,EACE,OAAO,IAAP;AAEF6C,EAAAA,IAAI,GAAGxB,MAAM,CAACF,IAAD,CAAb;AACA,MAAI0B,IAAI,KAAK7C,SAAb,EACE,OAAO,IAAP;;AAEF,MAAI6C,IAAI,KAAKxC,QAAT,IAAqBwC,IAAI,CAACxC,QAAL,KAAkBA,QAA3C,EAAqD;AACnD,QAAI,EAAE,KAAKJ,YAAP,KAAwB,CAA5B,EACE,KAAKF,OAAL,GAAexD,MAAM,CAACuE,MAAP,CAAc,IAAd,CAAf,CADF,KAEK;AACH,aAAOO,MAAM,CAACF,IAAD,CAAb;AACA,UAAIE,MAAM,CAAC9G,cAAX,EACE,KAAKE,IAAL,CAAU,gBAAV,EAA4B0G,IAA5B,EAAkC0B,IAAI,CAACxC,QAAL,IAAiBA,QAAnD;AACH;AACF,GARD,MAQO,IAAI,OAAOwC,IAAP,KAAgB,UAApB,EAAgC;AACrCC,IAAAA,QAAQ,GAAG,CAAC,CAAZ;;AAEA,SAAKvJ,CAAC,GAAGsJ,IAAI,CAAChK,MAAL,GAAc,CAAvB,EAA0BU,CAAC,IAAI,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACrC,UAAIsJ,IAAI,CAACtJ,CAAD,CAAJ,KAAY8G,QAAZ,IAAwBwC,IAAI,CAACtJ,CAAD,CAAJ,CAAQ8G,QAAR,KAAqBA,QAAjD,EAA2D;AACzD0C,QAAAA,gBAAgB,GAAGF,IAAI,CAACtJ,CAAD,CAAJ,CAAQ8G,QAA3B;AACAyC,QAAAA,QAAQ,GAAGvJ,CAAX;AACA;AACD;AACF;;AAED,QAAIuJ,QAAQ,GAAG,CAAf,EACE,OAAO,IAAP;AAEF,QAAIA,QAAQ,KAAK,CAAjB,EACED,IAAI,CAACG,KAAL,GADF,KAEK;AACHC,MAAAA,SAAS,CAACJ,IAAD,EAAOC,QAAP,CAAT;AACD;AAED,QAAID,IAAI,CAAChK,MAAL,KAAgB,CAApB,EACEwI,MAAM,CAACF,IAAD,CAAN,GAAe0B,IAAI,CAAC,CAAD,CAAnB;AAEF,QAAIxB,MAAM,CAAC9G,cAAP,KAA0ByF,SAA9B,EACE,KAAKvF,IAAL,CAAU,gBAAV,EAA4B0G,IAA5B,EAAkC4B,gBAAgB,IAAI1C,QAAtD;AACH;;AAED,SAAO,IAAP;AACD,CAlDL;;AAoDAR,YAAY,CAAClG,SAAb,CAAuBW,GAAvB,GAA6BuF,YAAY,CAAClG,SAAb,CAAuBY,cAApD;;AAEAsF,YAAY,CAAClG,SAAb,CAAuBa,kBAAvB,GACI,SAASA,kBAAT,CAA4B2G,IAA5B,EAAkC;AAChC,MAAIvG,SAAJ,EAAeyG,MAAf,EAAuB9H,CAAvB;AAEA8H,EAAAA,MAAM,GAAG,KAAKtB,OAAd;AACA,MAAIsB,MAAM,KAAKrB,SAAf,EACE,OAAO,IAAP,CAL8B,CAOhC;;AACA,MAAIqB,MAAM,CAAC9G,cAAP,KAA0ByF,SAA9B,EAAyC;AACvC,QAAI1G,SAAS,CAACT,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAKkH,OAAL,GAAexD,MAAM,CAACuE,MAAP,CAAc,IAAd,CAAf;AACA,WAAKb,YAAL,GAAoB,CAApB;AACD,KAHD,MAGO,IAAIoB,MAAM,CAACF,IAAD,CAAN,KAAiBnB,SAArB,EAAgC;AACrC,UAAI,EAAE,KAAKC,YAAP,KAAwB,CAA5B,EACE,KAAKF,OAAL,GAAexD,MAAM,CAACuE,MAAP,CAAc,IAAd,CAAf,CADF,KAGE,OAAOO,MAAM,CAACF,IAAD,CAAb;AACH;;AACD,WAAO,IAAP;AACD,GAnB+B,CAqBhC;;;AACA,MAAI7H,SAAS,CAACT,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,QAAI2D,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY6E,MAAZ,CAAX;AACA,QAAI6B,GAAJ;;AACA,SAAK3J,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiD,IAAI,CAAC3D,MAArB,EAA6B,EAAEU,CAA/B,EAAkC;AAChC2J,MAAAA,GAAG,GAAG1G,IAAI,CAACjD,CAAD,CAAV;AACA,UAAI2J,GAAG,KAAK,gBAAZ,EAA8B;AAC9B,WAAK1I,kBAAL,CAAwB0I,GAAxB;AACD;;AACD,SAAK1I,kBAAL,CAAwB,gBAAxB;AACA,SAAKuF,OAAL,GAAexD,MAAM,CAACuE,MAAP,CAAc,IAAd,CAAf;AACA,SAAKb,YAAL,GAAoB,CAApB;AACA,WAAO,IAAP;AACD;;AAEDrF,EAAAA,SAAS,GAAGyG,MAAM,CAACF,IAAD,CAAlB;;AAEA,MAAI,OAAOvG,SAAP,KAAqB,UAAzB,EAAqC;AACnC,SAAKL,cAAL,CAAoB4G,IAApB,EAA0BvG,SAA1B;AACD,GAFD,MAEO,IAAIA,SAAS,KAAKoF,SAAlB,EAA6B;AAClC;AACA,SAAKzG,CAAC,GAAGqB,SAAS,CAAC/B,MAAV,GAAmB,CAA5B,EAA+BU,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,WAAKgB,cAAL,CAAoB4G,IAApB,EAA0BvG,SAAS,CAACrB,CAAD,CAAnC;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAjDL;;AAmDA,SAAS4J,UAAT,CAAoBrE,MAApB,EAA4BqC,IAA5B,EAAkCiC,MAAlC,EAA0C;AACxC,MAAI/B,MAAM,GAAGvC,MAAM,CAACiB,OAApB;AAEA,MAAIsB,MAAM,KAAKrB,SAAf,EACE,OAAO,EAAP;AAEF,MAAIqD,UAAU,GAAGhC,MAAM,CAACF,IAAD,CAAvB;AACA,MAAIkC,UAAU,KAAKrD,SAAnB,EACE,OAAO,EAAP;AAEF,MAAI,OAAOqD,UAAP,KAAsB,UAA1B,EACE,OAAOD,MAAM,GAAG,CAACC,UAAU,CAAChD,QAAX,IAAuBgD,UAAxB,CAAH,GAAyC,CAACA,UAAD,CAAtD;AAEF,SAAOD,MAAM,GACXE,eAAe,CAACD,UAAD,CADJ,GACmB3B,UAAU,CAAC2B,UAAD,EAAaA,UAAU,CAACxK,MAAxB,CAD1C;AAED;;AAEDgH,YAAY,CAAClG,SAAb,CAAuBiB,SAAvB,GAAmC,SAASA,SAAT,CAAmBuG,IAAnB,EAAyB;AAC1D,SAAOgC,UAAU,CAAC,IAAD,EAAOhC,IAAP,EAAa,IAAb,CAAjB;AACD,CAFD;;AAIAtB,YAAY,CAAClG,SAAb,CAAuB4J,YAAvB,GAAsC,SAASA,YAAT,CAAsBpC,IAAtB,EAA4B;AAChE,SAAOgC,UAAU,CAAC,IAAD,EAAOhC,IAAP,EAAa,KAAb,CAAjB;AACD,CAFD;;AAIAtB,YAAY,CAAC2D,aAAb,GAA6B,UAASpB,OAAT,EAAkBjB,IAAlB,EAAwB;AACnD,MAAI,OAAOiB,OAAO,CAACoB,aAAf,KAAiC,UAArC,EAAiD;AAC/C,WAAOpB,OAAO,CAACoB,aAAR,CAAsBrC,IAAtB,CAAP;AACD,GAFD,MAEO;AACL,WAAOqC,aAAa,CAACnL,IAAd,CAAmB+J,OAAnB,EAA4BjB,IAA5B,CAAP;AACD;AACF,CAND;;AAQAtB,YAAY,CAAClG,SAAb,CAAuB6J,aAAvB,GAAuCA,aAAvC;;AACA,SAASA,aAAT,CAAuBrC,IAAvB,EAA6B;AAC3B,MAAIE,MAAM,GAAG,KAAKtB,OAAlB;;AAEA,MAAIsB,MAAM,KAAKrB,SAAf,EAA0B;AACxB,QAAIqD,UAAU,GAAGhC,MAAM,CAACF,IAAD,CAAvB;;AAEA,QAAI,OAAOkC,UAAP,KAAsB,UAA1B,EAAsC;AACpC,aAAO,CAAP;AACD,KAFD,MAEO,IAAIA,UAAU,KAAKrD,SAAnB,EAA8B;AACnC,aAAOqD,UAAU,CAACxK,MAAlB;AACD;AACF;;AAED,SAAO,CAAP;AACD;;AAEDgH,YAAY,CAAClG,SAAb,CAAuB8J,UAAvB,GAAoC,SAASA,UAAT,GAAsB;AACxD,SAAO,KAAKxD,YAAL,GAAoB,CAApB,GAAwBhB,cAAc,CAAC,KAAKc,OAAN,CAAtC,GAAuD,EAA9D;AACD,CAFD;;AAIA,SAAS2B,UAAT,CAAoBgC,GAApB,EAAyBvG,CAAzB,EAA4B;AAC1B,MAAIwG,IAAI,GAAG,IAAItK,KAAJ,CAAU8D,CAAV,CAAX;;AACA,OAAK,IAAI5D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4D,CAApB,EAAuB,EAAE5D,CAAzB,EACEoK,IAAI,CAACpK,CAAD,CAAJ,GAAUmK,GAAG,CAACnK,CAAD,CAAb;;AACF,SAAOoK,IAAP;AACD;;AAED,SAASV,SAAT,CAAmBJ,IAAnB,EAAyBe,KAAzB,EAAgC;AAC9B,SAAOA,KAAK,GAAG,CAAR,GAAYf,IAAI,CAAChK,MAAxB,EAAgC+K,KAAK,EAArC,EACEf,IAAI,CAACe,KAAD,CAAJ,GAAcf,IAAI,CAACe,KAAK,GAAG,CAAT,CAAlB;;AACFf,EAAAA,IAAI,CAACgB,GAAL;AACD;;AAED,SAASP,eAAT,CAAyBI,GAAzB,EAA8B;AAC5B,MAAII,GAAG,GAAG,IAAIzK,KAAJ,CAAUqK,GAAG,CAAC7K,MAAd,CAAV;;AACA,OAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuK,GAAG,CAACjL,MAAxB,EAAgC,EAAEU,CAAlC,EAAqC;AACnCuK,IAAAA,GAAG,CAACvK,CAAD,CAAH,GAASmK,GAAG,CAACnK,CAAD,CAAH,CAAO8G,QAAP,IAAmBqD,GAAG,CAACnK,CAAD,CAA/B;AACD;;AACD,SAAOuK,GAAP;AACD;;AAED,SAASzJ,IAAT,CAAc+H,OAAd,EAAuBvH,IAAvB,EAA6B;AAC3B,SAAO,IAAIkJ,OAAJ,CAAY,UAAUxG,OAAV,EAAmByG,MAAnB,EAA2B;AAC5C,aAASC,aAAT,CAAuB5G,GAAvB,EAA4B;AAC1B+E,MAAAA,OAAO,CAAC7H,cAAR,CAAuBM,IAAvB,EAA6BqJ,QAA7B;AACAF,MAAAA,MAAM,CAAC3G,GAAD,CAAN;AACD;;AAED,aAAS6G,QAAT,GAAoB;AAClB,UAAI,OAAO9B,OAAO,CAAC7H,cAAf,KAAkC,UAAtC,EAAkD;AAChD6H,QAAAA,OAAO,CAAC7H,cAAR,CAAuB,OAAvB,EAAgC0J,aAAhC;AACD;;AACD1G,MAAAA,OAAO,CAAC,GAAG4G,KAAH,CAAS9L,IAAT,CAAciB,SAAd,CAAD,CAAP;AACD;;AAAA;AAED8K,IAAAA,8BAA8B,CAAChC,OAAD,EAAUvH,IAAV,EAAgBqJ,QAAhB,EAA0B;AAAE7J,MAAAA,IAAI,EAAE;AAAR,KAA1B,CAA9B;;AACA,QAAIQ,IAAI,KAAK,OAAb,EAAsB;AACpBwJ,MAAAA,6BAA6B,CAACjC,OAAD,EAAU6B,aAAV,EAAyB;AAAE5J,QAAAA,IAAI,EAAE;AAAR,OAAzB,CAA7B;AACD;AACF,GAjBM,CAAP;AAkBD;;AAED,SAASgK,6BAAT,CAAuCjC,OAAvC,EAAgDX,OAAhD,EAAyD6C,KAAzD,EAAgE;AAC9D,MAAI,OAAOlC,OAAO,CAACjI,EAAf,KAAsB,UAA1B,EAAsC;AACpCiK,IAAAA,8BAA8B,CAAChC,OAAD,EAAU,OAAV,EAAmBX,OAAnB,EAA4B6C,KAA5B,CAA9B;AACD;AACF;;AAED,SAASF,8BAAT,CAAwChC,OAAxC,EAAiDvH,IAAjD,EAAuDwF,QAAvD,EAAiEiE,KAAjE,EAAwE;AACtE,MAAI,OAAOlC,OAAO,CAACjI,EAAf,KAAsB,UAA1B,EAAsC;AACpC,QAAImK,KAAK,CAACjK,IAAV,EAAgB;AACd+H,MAAAA,OAAO,CAAC/H,IAAR,CAAaQ,IAAb,EAAmBwF,QAAnB;AACD,KAFD,MAEO;AACL+B,MAAAA,OAAO,CAACjI,EAAR,CAAWU,IAAX,EAAiBwF,QAAjB;AACD;AACF,GAND,MAMO,IAAI,OAAO+B,OAAO,CAACmC,gBAAf,KAAoC,UAAxC,EAAoD;AACzD;AACA;AACAnC,IAAAA,OAAO,CAACmC,gBAAR,CAAyB1J,IAAzB,EAA+B,SAAS2J,YAAT,CAAsB7D,GAAtB,EAA2B;AACxD;AACA;AACA,UAAI2D,KAAK,CAACjK,IAAV,EAAgB;AACd+H,QAAAA,OAAO,CAACqC,mBAAR,CAA4B5J,IAA5B,EAAkC2J,YAAlC;AACD;;AACDnE,MAAAA,QAAQ,CAACM,GAAD,CAAR;AACD,KAPD;AAQD,GAXM,MAWA;AACL,UAAM,IAAIL,SAAJ,CAAc,wEAAwE,OAAO8B,OAA7F,CAAN;AACD;AACF;;AChfD;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIsC,yBAAyB,GAAGnI,MAAM,CAACmI,yBAAP,IAC9B,SAASA,yBAAT,CAAmCC,GAAnC,EAAwC;AACtC,MAAInI,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYmI,GAAZ,CAAX;AACA,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIrL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiD,IAAI,CAAC3D,MAAzB,EAAiCU,CAAC,EAAlC,EAAsC;AACpCqL,IAAAA,WAAW,CAACpI,IAAI,CAACjD,CAAD,CAAL,CAAX,GAAuBgD,MAAM,CAACsI,wBAAP,CAAgCF,GAAhC,EAAqCnI,IAAI,CAACjD,CAAD,CAAzC,CAAvB;AACD;;AACD,SAAOqL,WAAP;AACD,CARH;;AAUA,IAAIE,YAAY,GAAG,UAAnB;;AACApN,OAAO,CAACqN,MAAR,GAAiB,UAASC,CAAT,EAAY;AAC3B,MAAI,CAACC,QAAQ,CAACD,CAAD,CAAb,EAAkB;AAChB,QAAIE,OAAO,GAAG,EAAd;;AACA,SAAK,IAAI3L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACT,MAA9B,EAAsCU,CAAC,EAAvC,EAA2C;AACzC2L,MAAAA,OAAO,CAAC1L,IAAR,CAAa2L,OAAO,CAAC7L,SAAS,CAACC,CAAD,CAAV,CAApB;AACD;;AACD,WAAO2L,OAAO,CAAC3J,IAAR,CAAa,GAAb,CAAP;AACD;;AAED,MAAIhC,CAAC,GAAG,CAAR;AACA,MAAIH,IAAI,GAAGE,SAAX;AACA,MAAIL,GAAG,GAAGG,IAAI,CAACP,MAAf;AACA,MAAIuM,GAAG,GAAGjD,MAAM,CAAC6C,CAAD,CAAN,CAAUK,OAAV,CAAkBP,YAAlB,EAAgC,UAASQ,CAAT,EAAY;AACpD,QAAIA,CAAC,KAAK,IAAV,EAAgB,OAAO,GAAP;AAChB,QAAI/L,CAAC,IAAIN,GAAT,EAAc,OAAOqM,CAAP;;AACd,YAAQA,CAAR;AACE,WAAK,IAAL;AAAW,eAAOnD,MAAM,CAAC/I,IAAI,CAACG,CAAC,EAAF,CAAL,CAAb;;AACX,WAAK,IAAL;AAAW,eAAOmG,MAAM,CAACtG,IAAI,CAACG,CAAC,EAAF,CAAL,CAAb;;AACX,WAAK,IAAL;AACE,YAAI;AACF,iBAAOgM,IAAI,CAACC,SAAL,CAAepM,IAAI,CAACG,CAAC,EAAF,CAAnB,CAAP;AACD,SAFD,CAEE,OAAOkM,CAAP,EAAU;AACV,iBAAO,YAAP;AACD;;AACH;AACE,eAAOH,CAAP;AAVJ;AAYD,GAfS,CAAV;;AAgBA,OAAK,IAAIA,CAAC,GAAGlM,IAAI,CAACG,CAAD,CAAjB,EAAsBA,CAAC,GAAGN,GAA1B,EAA+BqM,CAAC,GAAGlM,IAAI,CAAC,EAAEG,CAAH,CAAvC,EAA8C;AAC5C,QAAImM,MAAM,CAACJ,CAAD,CAAN,IAAa,CAACK,QAAQ,CAACL,CAAD,CAA1B,EAA+B;AAC7BF,MAAAA,GAAG,IAAI,MAAME,CAAb;AACD,KAFD,MAEO;AACLF,MAAAA,GAAG,IAAI,MAAMD,OAAO,CAACG,CAAD,CAApB;AACD;AACF;;AACD,SAAOF,GAAP;AACD,CApCD,EAuCA;AACA;AACA;;;AACA1N,OAAO,CAACkO,SAAR,GAAoB,UAASC,EAAT,EAAaC,GAAb,EAAkB;AACpC,MAAI,OAAOtO,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACuO,aAAR,KAA0B,IAAhE,EAAsE;AACpE,WAAOF,EAAP;AACD,GAHmC,CAKpC;;;AACA,MAAI,OAAOrO,OAAP,KAAmB,WAAvB,EAAoC;AAClC,WAAO,YAAW;AAChB,aAAOE,OAAO,CAACkO,SAAR,CAAkBC,EAAlB,EAAsBC,GAAtB,EAA2BlM,KAA3B,CAAiC,IAAjC,EAAuCN,SAAvC,CAAP;AACD,KAFD;AAGD;;AAED,MAAI2I,MAAM,GAAG,KAAb;;AACA,WAAS+D,UAAT,GAAsB;AACpB,QAAI,CAAC/D,MAAL,EAAa;AACX,UAAIzK,OAAO,CAACyO,gBAAZ,EAA8B;AAC5B,cAAM,IAAInO,KAAJ,CAAUgO,GAAV,CAAN;AACD,OAFD,MAEO,IAAItO,OAAO,CAAC0O,gBAAZ,EAA8B;AACnC3G,QAAAA,OAAO,CAAC4G,KAAR,CAAcL,GAAd;AACD,OAFM,MAEA;AACLvG,QAAAA,OAAO,CAAC+B,KAAR,CAAcwE,GAAd;AACD;;AACD7D,MAAAA,MAAM,GAAG,IAAT;AACD;;AACD,WAAO4D,EAAE,CAACjM,KAAH,CAAS,IAAT,EAAeN,SAAf,CAAP;AACD;;AAED,SAAO0M,UAAP;AACD,CA5BD;;AA+BA,IAAII,MAAM,GAAG,EAAb;AACA,IAAIC,YAAJ;;AACA3O,OAAO,CAAC4O,QAAR,GAAmB,UAAS5F,GAAT,EAAc;AAC/B,MAAI6F,WAAW,CAACF,YAAD,CAAf,EACEA,YAAY,GAAG,aAA0B,EAAzC;AACF3F,EAAAA,GAAG,GAAGA,GAAG,CAAC8F,WAAJ,EAAN;;AACA,MAAI,CAACJ,MAAM,CAAC1F,GAAD,CAAX,EAAkB;AAChB,QAAI,IAAI+F,MAAJ,CAAW,QAAQ/F,GAAR,GAAc,KAAzB,EAAgC,GAAhC,EAAqCjD,IAArC,CAA0C4I,YAA1C,CAAJ,EAA6D;AAC3D,UAAIK,GAAG,GAAGlP,OAAO,CAACkP,GAAlB;;AACAN,MAAAA,MAAM,CAAC1F,GAAD,CAAN,GAAc,YAAW;AACvB,YAAIoF,GAAG,GAAGpO,OAAO,CAACqN,MAAR,CAAenL,KAAf,CAAqBlC,OAArB,EAA8B4B,SAA9B,CAAV;AACAiG,QAAAA,OAAO,CAAC+B,KAAR,CAAc,WAAd,EAA2BZ,GAA3B,EAAgCgG,GAAhC,EAAqCZ,GAArC;AACD,OAHD;AAID,KAND,MAMO;AACLM,MAAAA,MAAM,CAAC1F,GAAD,CAAN,GAAc,YAAW,CAAE,CAA3B;AACD;AACF;;AACD,SAAO0F,MAAM,CAAC1F,GAAD,CAAb;AACD,CAhBD;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,SAASyE,OAAT,CAAiBR,GAAjB,EAAsBrI,IAAtB,EAA4B;AAC1B;AACA,MAAIqK,GAAG,GAAG;AACRC,IAAAA,IAAI,EAAE,EADE;AAERC,IAAAA,OAAO,EAAEC;AAFD,GAAV,CAF0B,CAM1B;;AACA,MAAIxN,SAAS,CAACT,MAAV,IAAoB,CAAxB,EAA2B8N,GAAG,CAACI,KAAJ,GAAYzN,SAAS,CAAC,CAAD,CAArB;AAC3B,MAAIA,SAAS,CAACT,MAAV,IAAoB,CAAxB,EAA2B8N,GAAG,CAACK,MAAJ,GAAa1N,SAAS,CAAC,CAAD,CAAtB;;AAC3B,MAAI2N,SAAS,CAAC3K,IAAD,CAAb,EAAqB;AACnB;AACAqK,IAAAA,GAAG,CAACO,UAAJ,GAAiB5K,IAAjB;AACD,GAHD,MAGO,IAAIA,IAAJ,EAAU;AACf;AACA5E,IAAAA,OAAO,CAACyP,OAAR,CAAgBR,GAAhB,EAAqBrK,IAArB;AACD,GAfyB,CAgB1B;;;AACA,MAAIiK,WAAW,CAACI,GAAG,CAACO,UAAL,CAAf,EAAiCP,GAAG,CAACO,UAAJ,GAAiB,KAAjB;AACjC,MAAIX,WAAW,CAACI,GAAG,CAACI,KAAL,CAAf,EAA4BJ,GAAG,CAACI,KAAJ,GAAY,CAAZ;AAC5B,MAAIR,WAAW,CAACI,GAAG,CAACK,MAAL,CAAf,EAA6BL,GAAG,CAACK,MAAJ,GAAa,KAAb;AAC7B,MAAIT,WAAW,CAACI,GAAG,CAACS,aAAL,CAAf,EAAoCT,GAAG,CAACS,aAAJ,GAAoB,IAApB;AACpC,MAAIT,GAAG,CAACK,MAAR,EAAgBL,GAAG,CAACE,OAAJ,GAAcQ,gBAAd;AAChB,SAAOC,WAAW,CAACX,GAAD,EAAMhC,GAAN,EAAWgC,GAAG,CAACI,KAAf,CAAlB;AACD;;AACDrP,OAAO,CAACyN,OAAR,GAAkBA,OAAlB,EAGA;;AACAA,OAAO,CAAC6B,MAAR,GAAiB;AACf,UAAS,CAAC,CAAD,EAAI,EAAJ,CADM;AAEf,YAAW,CAAC,CAAD,EAAI,EAAJ,CAFI;AAGf,eAAc,CAAC,CAAD,EAAI,EAAJ,CAHC;AAIf,aAAY,CAAC,CAAD,EAAI,EAAJ,CAJG;AAKf,WAAU,CAAC,EAAD,EAAK,EAAL,CALK;AAMf,UAAS,CAAC,EAAD,EAAK,EAAL,CANM;AAOf,WAAU,CAAC,EAAD,EAAK,EAAL,CAPK;AAQf,UAAS,CAAC,EAAD,EAAK,EAAL,CARM;AASf,UAAS,CAAC,EAAD,EAAK,EAAL,CATM;AAUf,WAAU,CAAC,EAAD,EAAK,EAAL,CAVK;AAWf,aAAY,CAAC,EAAD,EAAK,EAAL,CAXG;AAYf,SAAQ,CAAC,EAAD,EAAK,EAAL,CAZO;AAaf,YAAW,CAAC,EAAD,EAAK,EAAL;AAbI,CAAjB,EAgBA;;AACA7B,OAAO,CAACoC,MAAR,GAAiB;AACf,aAAW,MADI;AAEf,YAAU,QAFK;AAGf,aAAW,QAHI;AAIf,eAAa,MAJE;AAKf,UAAQ,MALO;AAMf,YAAU,OANK;AAOf,UAAQ,SAPO;AAQf;AACA,YAAU;AATK,CAAjB;;AAaA,SAASF,gBAAT,CAA0BjC,GAA1B,EAA+BoC,SAA/B,EAA0C;AACxC,MAAIC,KAAK,GAAGtC,OAAO,CAACoC,MAAR,CAAeC,SAAf,CAAZ;;AAEA,MAAIC,KAAJ,EAAW;AACT,WAAO,YAAYtC,OAAO,CAAC6B,MAAR,CAAeS,KAAf,EAAsB,CAAtB,CAAZ,GAAuC,GAAvC,GAA6CrC,GAA7C,GACA,SADA,GACYD,OAAO,CAAC6B,MAAR,CAAeS,KAAf,EAAsB,CAAtB,CADZ,GACuC,GAD9C;AAED,GAHD,MAGO;AACL,WAAOrC,GAAP;AACD;AACF;;AAGD,SAAS0B,cAAT,CAAwB1B,GAAxB,EAA6BoC,SAA7B,EAAwC;AACtC,SAAOpC,GAAP;AACD;;AAGD,SAASsC,WAAT,CAAqBhO,KAArB,EAA4B;AAC1B,MAAIiO,IAAI,GAAG,EAAX;AAEAjO,EAAAA,KAAK,CAACkO,OAAN,CAAc,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC/BH,IAAAA,IAAI,CAACE,GAAD,CAAJ,GAAY,IAAZ;AACD,GAFD;AAIA,SAAOF,IAAP;AACD;;AAGD,SAASL,WAAT,CAAqBX,GAArB,EAA0B/G,KAA1B,EAAiCmI,YAAjC,EAA+C;AAC7C;AACA;AACA,MAAIpB,GAAG,CAACS,aAAJ,IACAxH,KADA,IAEAoI,UAAU,CAACpI,KAAK,CAACuF,OAAP,CAFV,IAGA;AACAvF,EAAAA,KAAK,CAACuF,OAAN,KAAkBzN,OAAO,CAACyN,OAJ1B,IAKA;AACA,IAAEvF,KAAK,CAACqI,WAAN,IAAqBrI,KAAK,CAACqI,WAAN,CAAkBtO,SAAlB,KAAgCiG,KAAvD,CANJ,EAMmE;AACjE,QAAIkE,GAAG,GAAGlE,KAAK,CAACuF,OAAN,CAAc4C,YAAd,EAA4BpB,GAA5B,CAAV;;AACA,QAAI,CAAC1B,QAAQ,CAACnB,GAAD,CAAb,EAAoB;AAClBA,MAAAA,GAAG,GAAGwD,WAAW,CAACX,GAAD,EAAM7C,GAAN,EAAWiE,YAAX,CAAjB;AACD;;AACD,WAAOjE,GAAP;AACD,GAf4C,CAiB7C;;;AACA,MAAIoE,SAAS,GAAGC,eAAe,CAACxB,GAAD,EAAM/G,KAAN,CAA/B;;AACA,MAAIsI,SAAJ,EAAe;AACb,WAAOA,SAAP;AACD,GArB4C,CAuB7C;;;AACA,MAAI1L,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYoD,KAAZ,CAAX;AACA,MAAIwI,WAAW,GAAGV,WAAW,CAAClL,IAAD,CAA7B;;AAEA,MAAImK,GAAG,CAACO,UAAR,EAAoB;AAClB1K,IAAAA,IAAI,GAAGD,MAAM,CAAC6C,mBAAP,CAA2BQ,KAA3B,CAAP;AACD,GA7B4C,CA+B7C;AACA;;;AACA,MAAIyI,OAAO,CAACzI,KAAD,CAAP,KACIpD,IAAI,CAACgC,OAAL,CAAa,SAAb,KAA2B,CAA3B,IAAgChC,IAAI,CAACgC,OAAL,CAAa,aAAb,KAA+B,CADnE,CAAJ,EAC2E;AACzE,WAAO8J,WAAW,CAAC1I,KAAD,CAAlB;AACD,GApC4C,CAsC7C;;;AACA,MAAIpD,IAAI,CAAC3D,MAAL,KAAgB,CAApB,EAAuB;AACrB,QAAImP,UAAU,CAACpI,KAAD,CAAd,EAAuB;AACrB,UAAI/E,IAAI,GAAG+E,KAAK,CAAC/E,IAAN,GAAa,OAAO+E,KAAK,CAAC/E,IAA1B,GAAiC,EAA5C;AACA,aAAO8L,GAAG,CAACE,OAAJ,CAAY,cAAchM,IAAd,GAAqB,GAAjC,EAAsC,SAAtC,CAAP;AACD;;AACD,QAAI0N,QAAQ,CAAC3I,KAAD,CAAZ,EAAqB;AACnB,aAAO+G,GAAG,CAACE,OAAJ,CAAYJ,MAAM,CAAC9M,SAAP,CAAiB6O,QAAjB,CAA0BnQ,IAA1B,CAA+BuH,KAA/B,CAAZ,EAAmD,QAAnD,CAAP;AACD;;AACD,QAAI6I,MAAM,CAAC7I,KAAD,CAAV,EAAmB;AACjB,aAAO+G,GAAG,CAACE,OAAJ,CAAY6B,IAAI,CAAC/O,SAAL,CAAe6O,QAAf,CAAwBnQ,IAAxB,CAA6BuH,KAA7B,CAAZ,EAAiD,MAAjD,CAAP;AACD;;AACD,QAAIyI,OAAO,CAACzI,KAAD,CAAX,EAAoB;AAClB,aAAO0I,WAAW,CAAC1I,KAAD,CAAlB;AACD;AACF;;AAED,MAAI+I,IAAI,GAAG,EAAX;AAAA,MAAejP,KAAK,GAAG,KAAvB;AAAA,MAA8BkP,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,CAAvC,CAvD6C,CAyD7C;;AACA,MAAIC,OAAO,CAACjJ,KAAD,CAAX,EAAoB;AAClBlG,IAAAA,KAAK,GAAG,IAAR;AACAkP,IAAAA,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,CAAT;AACD,GA7D4C,CA+D7C;;;AACA,MAAIZ,UAAU,CAACpI,KAAD,CAAd,EAAuB;AACrB,QAAIzC,CAAC,GAAGyC,KAAK,CAAC/E,IAAN,GAAa,OAAO+E,KAAK,CAAC/E,IAA1B,GAAiC,EAAzC;AACA8N,IAAAA,IAAI,GAAG,eAAexL,CAAf,GAAmB,GAA1B;AACD,GAnE4C,CAqE7C;;;AACA,MAAIoL,QAAQ,CAAC3I,KAAD,CAAZ,EAAqB;AACnB+I,IAAAA,IAAI,GAAG,MAAMlC,MAAM,CAAC9M,SAAP,CAAiB6O,QAAjB,CAA0BnQ,IAA1B,CAA+BuH,KAA/B,CAAb;AACD,GAxE4C,CA0E7C;;;AACA,MAAI6I,MAAM,CAAC7I,KAAD,CAAV,EAAmB;AACjB+I,IAAAA,IAAI,GAAG,MAAMD,IAAI,CAAC/O,SAAL,CAAemP,WAAf,CAA2BzQ,IAA3B,CAAgCuH,KAAhC,CAAb;AACD,GA7E4C,CA+E7C;;;AACA,MAAIyI,OAAO,CAACzI,KAAD,CAAX,EAAoB;AAClB+I,IAAAA,IAAI,GAAG,MAAML,WAAW,CAAC1I,KAAD,CAAxB;AACD;;AAED,MAAIpD,IAAI,CAAC3D,MAAL,KAAgB,CAAhB,KAAsB,CAACa,KAAD,IAAUkG,KAAK,CAAC/G,MAAN,IAAgB,CAAhD,CAAJ,EAAwD;AACtD,WAAO+P,MAAM,CAAC,CAAD,CAAN,GAAYD,IAAZ,GAAmBC,MAAM,CAAC,CAAD,CAAhC;AACD;;AAED,MAAIb,YAAY,GAAG,CAAnB,EAAsB;AACpB,QAAIQ,QAAQ,CAAC3I,KAAD,CAAZ,EAAqB;AACnB,aAAO+G,GAAG,CAACE,OAAJ,CAAYJ,MAAM,CAAC9M,SAAP,CAAiB6O,QAAjB,CAA0BnQ,IAA1B,CAA+BuH,KAA/B,CAAZ,EAAmD,QAAnD,CAAP;AACD,KAFD,MAEO;AACL,aAAO+G,GAAG,CAACE,OAAJ,CAAY,UAAZ,EAAwB,SAAxB,CAAP;AACD;AACF;;AAEDF,EAAAA,GAAG,CAACC,IAAJ,CAASpN,IAAT,CAAcoG,KAAd;AAEA,MAAImJ,MAAJ;;AACA,MAAIrP,KAAJ,EAAW;AACTqP,IAAAA,MAAM,GAAGC,WAAW,CAACrC,GAAD,EAAM/G,KAAN,EAAamI,YAAb,EAA2BK,WAA3B,EAAwC5L,IAAxC,CAApB;AACD,GAFD,MAEO;AACLuM,IAAAA,MAAM,GAAGvM,IAAI,CAACC,GAAL,CAAS,UAASyG,GAAT,EAAc;AAC9B,aAAO+F,cAAc,CAACtC,GAAD,EAAM/G,KAAN,EAAamI,YAAb,EAA2BK,WAA3B,EAAwClF,GAAxC,EAA6CxJ,KAA7C,CAArB;AACD,KAFQ,CAAT;AAGD;;AAEDiN,EAAAA,GAAG,CAACC,IAAJ,CAAS/C,GAAT;AAEA,SAAOqF,oBAAoB,CAACH,MAAD,EAASJ,IAAT,EAAeC,MAAf,CAA3B;AACD;;AAGD,SAAST,eAAT,CAAyBxB,GAAzB,EAA8B/G,KAA9B,EAAqC;AACnC,MAAI2G,WAAW,CAAC3G,KAAD,CAAf,EACE,OAAO+G,GAAG,CAACE,OAAJ,CAAY,WAAZ,EAAyB,WAAzB,CAAP;;AACF,MAAI5B,QAAQ,CAACrF,KAAD,CAAZ,EAAqB;AACnB,QAAIuJ,MAAM,GAAG,OAAO5D,IAAI,CAACC,SAAL,CAAe5F,KAAf,EAAsByF,OAAtB,CAA8B,QAA9B,EAAwC,EAAxC,EACsBA,OADtB,CAC8B,IAD9B,EACoC,KADpC,EAEsBA,OAFtB,CAE8B,MAF9B,EAEsC,GAFtC,CAAP,GAEoD,IAFjE;AAGA,WAAOsB,GAAG,CAACE,OAAJ,CAAYsC,MAAZ,EAAoB,QAApB,CAAP;AACD;;AACD,MAAIC,QAAQ,CAACxJ,KAAD,CAAZ,EACE,OAAO+G,GAAG,CAACE,OAAJ,CAAY,KAAKjH,KAAjB,EAAwB,QAAxB,CAAP;AACF,MAAIqH,SAAS,CAACrH,KAAD,CAAb,EACE,OAAO+G,GAAG,CAACE,OAAJ,CAAY,KAAKjH,KAAjB,EAAwB,SAAxB,CAAP,CAZiC,CAanC;;AACA,MAAI8F,MAAM,CAAC9F,KAAD,CAAV,EACE,OAAO+G,GAAG,CAACE,OAAJ,CAAY,MAAZ,EAAoB,MAApB,CAAP;AACH;;AAGD,SAASyB,WAAT,CAAqB1I,KAArB,EAA4B;AAC1B,SAAO,MAAM9H,KAAK,CAAC6B,SAAN,CAAgB6O,QAAhB,CAAyBnQ,IAAzB,CAA8BuH,KAA9B,CAAN,GAA6C,GAApD;AACD;;AAGD,SAASoJ,WAAT,CAAqBrC,GAArB,EAA0B/G,KAA1B,EAAiCmI,YAAjC,EAA+CK,WAA/C,EAA4D5L,IAA5D,EAAkE;AAChE,MAAIuM,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIxP,CAAC,GAAG,CAAR,EAAW2D,CAAC,GAAG0C,KAAK,CAAC/G,MAA1B,EAAkCU,CAAC,GAAG2D,CAAtC,EAAyC,EAAE3D,CAA3C,EAA8C;AAC5C,QAAI8P,cAAc,CAACzJ,KAAD,EAAQuC,MAAM,CAAC5I,CAAD,CAAd,CAAlB,EAAsC;AACpCwP,MAAAA,MAAM,CAACvP,IAAP,CAAYyP,cAAc,CAACtC,GAAD,EAAM/G,KAAN,EAAamI,YAAb,EAA2BK,WAA3B,EACtBjG,MAAM,CAAC5I,CAAD,CADgB,EACX,IADW,CAA1B;AAED,KAHD,MAGO;AACLwP,MAAAA,MAAM,CAACvP,IAAP,CAAY,EAAZ;AACD;AACF;;AACDgD,EAAAA,IAAI,CAACoL,OAAL,CAAa,UAAS1E,GAAT,EAAc;AACzB,QAAI,CAACA,GAAG,CAACoG,KAAJ,CAAU,OAAV,CAAL,EAAyB;AACvBP,MAAAA,MAAM,CAACvP,IAAP,CAAYyP,cAAc,CAACtC,GAAD,EAAM/G,KAAN,EAAamI,YAAb,EAA2BK,WAA3B,EACtBlF,GADsB,EACjB,IADiB,CAA1B;AAED;AACF,GALD;AAMA,SAAO6F,MAAP;AACD;;AAGD,SAASE,cAAT,CAAwBtC,GAAxB,EAA6B/G,KAA7B,EAAoCmI,YAApC,EAAkDK,WAAlD,EAA+DlF,GAA/D,EAAoExJ,KAApE,EAA2E;AACzE,MAAImB,IAAJ,EAAUuK,GAAV,EAAemE,IAAf;AACAA,EAAAA,IAAI,GAAGhN,MAAM,CAACsI,wBAAP,CAAgCjF,KAAhC,EAAuCsD,GAAvC,KAA+C;AAAEtD,IAAAA,KAAK,EAAEA,KAAK,CAACsD,GAAD;AAAd,GAAtD;;AACA,MAAIqG,IAAI,CAAC9I,GAAT,EAAc;AACZ,QAAI8I,IAAI,CAAC7I,GAAT,EAAc;AACZ0E,MAAAA,GAAG,GAAGuB,GAAG,CAACE,OAAJ,CAAY,iBAAZ,EAA+B,SAA/B,CAAN;AACD,KAFD,MAEO;AACLzB,MAAAA,GAAG,GAAGuB,GAAG,CAACE,OAAJ,CAAY,UAAZ,EAAwB,SAAxB,CAAN;AACD;AACF,GAND,MAMO;AACL,QAAI0C,IAAI,CAAC7I,GAAT,EAAc;AACZ0E,MAAAA,GAAG,GAAGuB,GAAG,CAACE,OAAJ,CAAY,UAAZ,EAAwB,SAAxB,CAAN;AACD;AACF;;AACD,MAAI,CAACwC,cAAc,CAACjB,WAAD,EAAclF,GAAd,CAAnB,EAAuC;AACrCrI,IAAAA,IAAI,GAAG,MAAMqI,GAAN,GAAY,GAAnB;AACD;;AACD,MAAI,CAACkC,GAAL,EAAU;AACR,QAAIuB,GAAG,CAACC,IAAJ,CAASpI,OAAT,CAAiB+K,IAAI,CAAC3J,KAAtB,IAA+B,CAAnC,EAAsC;AACpC,UAAI8F,MAAM,CAACqC,YAAD,CAAV,EAA0B;AACxB3C,QAAAA,GAAG,GAAGkC,WAAW,CAACX,GAAD,EAAM4C,IAAI,CAAC3J,KAAX,EAAkB,IAAlB,CAAjB;AACD,OAFD,MAEO;AACLwF,QAAAA,GAAG,GAAGkC,WAAW,CAACX,GAAD,EAAM4C,IAAI,CAAC3J,KAAX,EAAkBmI,YAAY,GAAG,CAAjC,CAAjB;AACD;;AACD,UAAI3C,GAAG,CAAC5G,OAAJ,CAAY,IAAZ,IAAoB,CAAC,CAAzB,EAA4B;AAC1B,YAAI9E,KAAJ,EAAW;AACT0L,UAAAA,GAAG,GAAGA,GAAG,CAACoE,KAAJ,CAAU,IAAV,EAAgB/M,GAAhB,CAAoB,UAASgN,IAAT,EAAe;AACvC,mBAAO,OAAOA,IAAd;AACD,WAFK,EAEHlO,IAFG,CAEE,IAFF,EAEQmO,MAFR,CAEe,CAFf,CAAN;AAGD,SAJD,MAIO;AACLtE,UAAAA,GAAG,GAAG,OAAOA,GAAG,CAACoE,KAAJ,CAAU,IAAV,EAAgB/M,GAAhB,CAAoB,UAASgN,IAAT,EAAe;AAC9C,mBAAO,QAAQA,IAAf;AACD,WAFY,EAEVlO,IAFU,CAEL,IAFK,CAAb;AAGD;AACF;AACF,KAjBD,MAiBO;AACL6J,MAAAA,GAAG,GAAGuB,GAAG,CAACE,OAAJ,CAAY,YAAZ,EAA0B,SAA1B,CAAN;AACD;AACF;;AACD,MAAIN,WAAW,CAAC1L,IAAD,CAAf,EAAuB;AACrB,QAAInB,KAAK,IAAIwJ,GAAG,CAACoG,KAAJ,CAAU,OAAV,CAAb,EAAiC;AAC/B,aAAOlE,GAAP;AACD;;AACDvK,IAAAA,IAAI,GAAG0K,IAAI,CAACC,SAAL,CAAe,KAAKtC,GAApB,CAAP;;AACA,QAAIrI,IAAI,CAACyO,KAAL,CAAW,8BAAX,CAAJ,EAAgD;AAC9CzO,MAAAA,IAAI,GAAGA,IAAI,CAAC6O,MAAL,CAAY,CAAZ,EAAe7O,IAAI,CAAChC,MAAL,GAAc,CAA7B,CAAP;AACAgC,MAAAA,IAAI,GAAG8L,GAAG,CAACE,OAAJ,CAAYhM,IAAZ,EAAkB,MAAlB,CAAP;AACD,KAHD,MAGO;AACLA,MAAAA,IAAI,GAAGA,IAAI,CAACwK,OAAL,CAAa,IAAb,EAAmB,KAAnB,EACKA,OADL,CACa,MADb,EACqB,GADrB,EAEKA,OAFL,CAEa,UAFb,EAEyB,GAFzB,CAAP;AAGAxK,MAAAA,IAAI,GAAG8L,GAAG,CAACE,OAAJ,CAAYhM,IAAZ,EAAkB,QAAlB,CAAP;AACD;AACF;;AAED,SAAOA,IAAI,GAAG,IAAP,GAAcuK,GAArB;AACD;;AAGD,SAAS8D,oBAAT,CAA8BH,MAA9B,EAAsCJ,IAAtC,EAA4CC,MAA5C,EAAoD;AAClD,MAAIe,WAAW,GAAG,CAAlB;AACA,MAAI9Q,MAAM,GAAGkQ,MAAM,CAACa,MAAP,CAAc,UAASlL,IAAT,EAAemL,GAAf,EAAoB;AAC7CF,IAAAA,WAAW;AACX,QAAIE,GAAG,CAACrL,OAAJ,CAAY,IAAZ,KAAqB,CAAzB,EAA4BmL,WAAW;AACvC,WAAOjL,IAAI,GAAGmL,GAAG,CAACxE,OAAJ,CAAY,iBAAZ,EAA+B,EAA/B,EAAmCxM,MAA1C,GAAmD,CAA1D;AACD,GAJY,EAIV,CAJU,CAAb;;AAMA,MAAIA,MAAM,GAAG,EAAb,EAAiB;AACf,WAAO+P,MAAM,CAAC,CAAD,CAAN,IACCD,IAAI,KAAK,EAAT,GAAc,EAAd,GAAmBA,IAAI,GAAG,KAD3B,IAEA,GAFA,GAGAI,MAAM,CAACxN,IAAP,CAAY,OAAZ,CAHA,GAIA,GAJA,GAKAqN,MAAM,CAAC,CAAD,CALb;AAMD;;AAED,SAAOA,MAAM,CAAC,CAAD,CAAN,GAAYD,IAAZ,GAAmB,GAAnB,GAAyBI,MAAM,CAACxN,IAAP,CAAY,IAAZ,CAAzB,GAA6C,GAA7C,GAAmDqN,MAAM,CAAC,CAAD,CAAhE;AACD,EAGD;AACA;;;AACA,SAASC,OAAT,CAAiBiB,EAAjB,EAAqB;AACnB,SAAOzQ,KAAK,CAACwP,OAAN,CAAciB,EAAd,CAAP;AACD;;AACDpS,OAAO,CAACmR,OAAR,GAAkBA,OAAlB;;AAEA,SAAS5B,SAAT,CAAmBtG,GAAnB,EAAwB;AACtB,SAAO,OAAOA,GAAP,KAAe,SAAtB;AACD;;AACDjJ,OAAO,CAACuP,SAAR,GAAoBA,SAApB;;AAEA,SAASvB,MAAT,CAAgB/E,GAAhB,EAAqB;AACnB,SAAOA,GAAG,KAAK,IAAf;AACD;;AACDjJ,OAAO,CAACgO,MAAR,GAAiBA,MAAjB;;AAEA,SAASqE,iBAAT,CAA2BpJ,GAA3B,EAAgC;AAC9B,SAAOA,GAAG,IAAI,IAAd;AACD;;AACDjJ,OAAO,CAACqS,iBAAR,GAA4BA,iBAA5B;;AAEA,SAASX,QAAT,CAAkBzI,GAAlB,EAAuB;AACrB,SAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;;AACDjJ,OAAO,CAAC0R,QAAR,GAAmBA,QAAnB;;AAEA,SAASnE,QAAT,CAAkBtE,GAAlB,EAAuB;AACrB,SAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;;AACDjJ,OAAO,CAACuN,QAAR,GAAmBA,QAAnB;;AAEA,SAAS+E,QAAT,CAAkBrJ,GAAlB,EAAuB;AACrB,SAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;;AACDjJ,OAAO,CAACsS,QAAR,GAAmBA,QAAnB;;AAEA,SAASzD,WAAT,CAAqB5F,GAArB,EAA0B;AACxB,SAAOA,GAAG,KAAK,KAAK,CAApB;AACD;;AACDjJ,OAAO,CAAC6O,WAAR,GAAsBA,WAAtB;;AAEA,SAASgC,QAAT,CAAkB0B,EAAlB,EAAsB;AACpB,SAAOtE,QAAQ,CAACsE,EAAD,CAAR,IAAgBC,cAAc,CAACD,EAAD,CAAd,KAAuB,iBAA9C;AACD;;AACDvS,OAAO,CAAC6Q,QAAR,GAAmBA,QAAnB;;AAEA,SAAS5C,QAAT,CAAkBhF,GAAlB,EAAuB;AACrB,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;AACD;;AACDjJ,OAAO,CAACiO,QAAR,GAAmBA,QAAnB;;AAEA,SAAS8C,MAAT,CAAgB0B,CAAhB,EAAmB;AACjB,SAAOxE,QAAQ,CAACwE,CAAD,CAAR,IAAeD,cAAc,CAACC,CAAD,CAAd,KAAsB,eAA5C;AACD;;AACDzS,OAAO,CAAC+Q,MAAR,GAAiBA,MAAjB;;AAEA,SAASJ,OAAT,CAAiBpQ,CAAjB,EAAoB;AAClB,SAAO0N,QAAQ,CAAC1N,CAAD,CAAR,KACFiS,cAAc,CAACjS,CAAD,CAAd,KAAsB,gBAAtB,IAA0CA,CAAC,YAAYH,KADrD,CAAP;AAED;;AACDJ,OAAO,CAAC2Q,OAAR,GAAkBA,OAAlB;;AAEA,SAASL,UAAT,CAAoBrH,GAApB,EAAyB;AACvB,SAAO,OAAOA,GAAP,KAAe,UAAtB;AACD;;AACDjJ,OAAO,CAACsQ,UAAR,GAAqBA,UAArB;;AAEA,SAASoC,WAAT,CAAqBzJ,GAArB,EAA0B;AACxB,SAAOA,GAAG,KAAK,IAAR,IACA,OAAOA,GAAP,KAAe,SADf,IAEA,OAAOA,GAAP,KAAe,QAFf,IAGA,OAAOA,GAAP,KAAe,QAHf,IAIA,OAAOA,GAAP,KAAe,QAJf,IAI4B;AAC5B,SAAOA,GAAP,KAAe,WALtB;AAMD;;AACDjJ,OAAO,CAAC0S,WAAR,GAAsBA,WAAtB;AAEA1S,OAAO,CAAC2S,QAAR,GAAmBjP,OAAO,CAAC,oBAAD,CAA1B;;AAEA,SAAS8O,cAAT,CAAwBI,CAAxB,EAA2B;AACzB,SAAO/N,MAAM,CAAC5C,SAAP,CAAiB6O,QAAjB,CAA0BnQ,IAA1B,CAA+BiS,CAA/B,CAAP;AACD;;AAGD,SAASC,GAAT,CAAapN,CAAb,EAAgB;AACd,SAAOA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAC,CAACqL,QAAF,CAAW,EAAX,CAAf,GAAgCrL,CAAC,CAACqL,QAAF,CAAW,EAAX,CAAvC;AACD;;AAGD,IAAIgC,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EACC,KADD,EACQ,KADR,EACe,KADf,CAAb,EAGA;;AACA,SAASC,SAAT,GAAqB;AACnB,MAAIN,CAAC,GAAG,IAAIzB,IAAJ,EAAR;AACA,MAAIgC,IAAI,GAAG,CAACH,GAAG,CAACJ,CAAC,CAACQ,QAAF,EAAD,CAAJ,EACCJ,GAAG,CAACJ,CAAC,CAACS,UAAF,EAAD,CADJ,EAECL,GAAG,CAACJ,CAAC,CAACU,UAAF,EAAD,CAFJ,EAEsBtP,IAFtB,CAE2B,GAF3B,CAAX;AAGA,SAAO,CAAC4O,CAAC,CAACW,OAAF,EAAD,EAAcN,MAAM,CAACL,CAAC,CAACY,QAAF,EAAD,CAApB,EAAoCL,IAApC,EAA0CnP,IAA1C,CAA+C,GAA/C,CAAP;AACD,EAGD;;;AACA7D,OAAO,CAACsT,GAAR,GAAc,YAAW;AACvBzL,EAAAA,OAAO,CAACyL,GAAR,CAAY,SAAZ,EAAuBP,SAAS,EAAhC,EAAoC/S,OAAO,CAACqN,MAAR,CAAenL,KAAf,CAAqBlC,OAArB,EAA8B4B,SAA9B,CAApC;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5B,OAAO,CAACuT,QAAR,GAAmB7P,OAAO,CAAC,UAAD,CAA1B;;AAEA1D,OAAO,CAACyP,OAAR,GAAkB,UAAS+D,MAAT,EAAiBC,GAAjB,EAAsB;AACtC;AACA,MAAI,CAACA,GAAD,IAAQ,CAACxF,QAAQ,CAACwF,GAAD,CAArB,EAA4B,OAAOD,MAAP;AAE5B,MAAI1O,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY2O,GAAZ,CAAX;AACA,MAAI5R,CAAC,GAAGiD,IAAI,CAAC3D,MAAb;;AACA,SAAOU,CAAC,EAAR,EAAY;AACV2R,IAAAA,MAAM,CAAC1O,IAAI,CAACjD,CAAD,CAAL,CAAN,GAAkB4R,GAAG,CAAC3O,IAAI,CAACjD,CAAD,CAAL,CAArB;AACD;;AACD,SAAO2R,MAAP;AACD,CAVD;;AAYA,SAAS7B,cAAT,CAAwB1E,GAAxB,EAA6ByG,IAA7B,EAAmC;AACjC,SAAO7O,MAAM,CAAC5C,SAAP,CAAiB0P,cAAjB,CAAgChR,IAAhC,CAAqCsM,GAArC,EAA0CyG,IAA1C,CAAP;AACD;;AAED,IAAIC,wBAAwB,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAM,CAAC,uBAAD,CAAtC,GAAkEtL,SAAjG;;AAEAtI,OAAO,CAAC6T,SAAR,GAAoB,SAASA,SAAT,CAAmBC,QAAnB,EAA6B;AAC/C,MAAI,OAAOA,QAAP,KAAoB,UAAxB,EACE,MAAM,IAAIlL,SAAJ,CAAc,kDAAd,CAAN;;AAEF,MAAI+K,wBAAwB,IAAIG,QAAQ,CAACH,wBAAD,CAAxC,EAAoE;AAClE,QAAIxF,EAAE,GAAG2F,QAAQ,CAACH,wBAAD,CAAjB;;AACA,QAAI,OAAOxF,EAAP,KAAc,UAAlB,EAA8B;AAC5B,YAAM,IAAIvF,SAAJ,CAAc,+DAAd,CAAN;AACD;;AACD/D,IAAAA,MAAM,CAACgE,cAAP,CAAsBsF,EAAtB,EAA0BwF,wBAA1B,EAAoD;AAClDzL,MAAAA,KAAK,EAAEiG,EAD2C;AACvCrF,MAAAA,UAAU,EAAE,KAD2B;AACpBiL,MAAAA,QAAQ,EAAE,KADU;AACHC,MAAAA,YAAY,EAAE;AADX,KAApD;AAGA,WAAO7F,EAAP;AACD;;AAED,WAASA,EAAT,GAAc;AACZ,QAAI8F,cAAJ,EAAoBC,aAApB;AACA,QAAIC,OAAO,GAAG,IAAI9H,OAAJ,CAAY,UAAUxG,OAAV,EAAmByG,MAAnB,EAA2B;AACnD2H,MAAAA,cAAc,GAAGpO,OAAjB;AACAqO,MAAAA,aAAa,GAAG5H,MAAhB;AACD,KAHa,CAAd;AAKA,QAAI5K,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACT,MAA9B,EAAsCU,CAAC,EAAvC,EAA2C;AACzCH,MAAAA,IAAI,CAACI,IAAL,CAAUF,SAAS,CAACC,CAAD,CAAnB;AACD;;AACDH,IAAAA,IAAI,CAACI,IAAL,CAAU,UAAU6D,GAAV,EAAeuC,KAAf,EAAsB;AAC9B,UAAIvC,GAAJ,EAAS;AACPuO,QAAAA,aAAa,CAACvO,GAAD,CAAb;AACD,OAFD,MAEO;AACLsO,QAAAA,cAAc,CAAC/L,KAAD,CAAd;AACD;AACF,KAND;;AAQA,QAAI;AACF4L,MAAAA,QAAQ,CAAC5R,KAAT,CAAe,IAAf,EAAqBR,IAArB;AACD,KAFD,CAEE,OAAOiE,GAAP,EAAY;AACZuO,MAAAA,aAAa,CAACvO,GAAD,CAAb;AACD;;AAED,WAAOwO,OAAP;AACD;;AAEDtP,EAAAA,MAAM,CAACuP,cAAP,CAAsBjG,EAAtB,EAA0BtJ,MAAM,CAACsE,cAAP,CAAsB2K,QAAtB,CAA1B;AAEA,MAAIH,wBAAJ,EAA8B9O,MAAM,CAACgE,cAAP,CAAsBsF,EAAtB,EAA0BwF,wBAA1B,EAAoD;AAChFzL,IAAAA,KAAK,EAAEiG,EADyE;AACrErF,IAAAA,UAAU,EAAE,KADyD;AAClDiL,IAAAA,QAAQ,EAAE,KADwC;AACjCC,IAAAA,YAAY,EAAE;AADmB,GAApD;AAG9B,SAAOnP,MAAM,CAACwP,gBAAP,CACLlG,EADK,EAELnB,yBAAyB,CAAC8G,QAAD,CAFpB,CAAP;AAID,CApDD;;AAsDA9T,OAAO,CAAC6T,SAAR,CAAkBS,MAAlB,GAA2BX,wBAA3B;;AAEA,SAASY,qBAAT,CAA+BC,MAA/B,EAAuCC,EAAvC,EAA2C;AACzC;AACA;AACA;AACA;AACA,MAAI,CAACD,MAAL,EAAa;AACX,QAAIE,SAAS,GAAG,IAAItU,KAAJ,CAAU,yCAAV,CAAhB;AACAsU,IAAAA,SAAS,CAACF,MAAV,GAAmBA,MAAnB;AACAA,IAAAA,MAAM,GAAGE,SAAT;AACD;;AACD,SAAOD,EAAE,CAACD,MAAD,CAAT;AACD;;AAED,SAASG,WAAT,CAAqBb,QAArB,EAA+B;AAC7B,MAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,UAAM,IAAIlL,SAAJ,CAAc,kDAAd,CAAN;AACD,GAH4B,CAK7B;AACA;AACA;;;AACA,WAASgM,aAAT,GAAyB;AACvB,QAAIlT,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACT,MAA9B,EAAsCU,CAAC,EAAvC,EAA2C;AACzCH,MAAAA,IAAI,CAACI,IAAL,CAAUF,SAAS,CAACC,CAAD,CAAnB;AACD;;AAED,QAAIgT,OAAO,GAAGnT,IAAI,CAACyK,GAAL,EAAd;;AACA,QAAI,OAAO0I,OAAP,KAAmB,UAAvB,EAAmC;AACjC,YAAM,IAAIjM,SAAJ,CAAc,4CAAd,CAAN;AACD;;AACD,QAAIkM,IAAI,GAAG,IAAX;;AACA,QAAIL,EAAE,GAAG,YAAW;AAClB,aAAOI,OAAO,CAAC3S,KAAR,CAAc4S,IAAd,EAAoBlT,SAApB,CAAP;AACD,KAFD,CAXuB,CAcvB;AACA;;;AACAkS,IAAAA,QAAQ,CAAC5R,KAAT,CAAe,IAAf,EAAqBR,IAArB,EACGqT,IADH,CACQ,UAAS3I,GAAT,EAAc;AAAEtM,MAAAA,OAAO,CAAC2B,QAAR,CAAiBgT,EAAjB,EAAqB,IAArB,EAA2BrI,GAA3B;AAAiC,KADzD,EAEQ,UAAS4I,GAAT,EAAc;AAAElV,MAAAA,OAAO,CAAC2B,QAAR,CAAiB8S,qBAAjB,EAAwCS,GAAxC,EAA6CP,EAA7C;AAAkD,KAF1E;AAGD;;AAED5P,EAAAA,MAAM,CAACuP,cAAP,CAAsBQ,aAAtB,EAAqC/P,MAAM,CAACsE,cAAP,CAAsB2K,QAAtB,CAArC;AACAjP,EAAAA,MAAM,CAACwP,gBAAP,CAAwBO,aAAxB,EACwB5H,yBAAyB,CAAC8G,QAAD,CADjD;AAEA,SAAOc,aAAP;AACD;;AACD5U,OAAO,CAAC2U,WAAR,GAAsBA,WAAtB;;AC9rtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrvDA,IAAIM,GAAG,GAAGjV,OAAO,GAAGD,MAAM,CAACC,OAAP,GAAiB0D,OAAO,CAAC,UAAD,CAAP,CAAoB,cAApB,CAArC;;AACA,IAAIiG,MAAM,GAAGjG,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIwR,IAAI,GAAGxR,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIiP,QAAQ,GAAG,UAAS1F,GAAT,EAAc;AAC5B,SAAOA,GAAG,IAAIA,GAAG,YAAYkI,UAA7B;AACA,CAFD;;AAIA,IAAIF,GAAG,CAACG,UAAR,EAAoB;AACnBvN,EAAAA,OAAO,CAACC,IAAR,CAAa,8BAAb;;AACAmN,EAAAA,GAAG,CAACI,MAAJ,GAAa,YAAY;AAAE,UAAM,IAAIjV,KAAJ,CAAU,yCAAV,CAAN;AAA4D,GAAvF;;AACA6U,EAAAA,GAAG,CAACK,QAAJ,GAAe,YAAY;AAAE,UAAM,IAAIlV,KAAJ,CAAU,2CAAV,CAAN;AAA8D,GAA3F;;AACA6U,EAAAA,GAAG,CAACM,aAAJ,GAAoB,YAAY,CAAG,CAAnC;;AACAN,EAAAA,GAAG,CAACO,aAAJ,GAAoB,YAAY;AAAE,WAAO,EAAP;AAAY,GAA9C;;AACAP,EAAAA,GAAG,CAACQ,oBAAJ,GAA2B,YAAY,CAAG,CAA1C;;AACAR,EAAAA,GAAG,CAACS,qBAAJ,GAA4B,YAAY,CAAG,CAA3C;AACA;;AAED7Q,MAAM,CAACC,IAAP,CAAY6E,MAAM,CAACxB,YAAP,CAAoBlG,SAAhC,EAA2CiO,OAA3C,CAAmD,UAAU1E,GAAV,EAAe;AACjExL,EAAAA,OAAO,CAACwL,GAAD,CAAP,GAAe7B,MAAM,CAACxB,YAAP,CAAoBlG,SAApB,CAA8BuJ,GAA9B,CAAf;AACA,CAFD,GAIA;;AACAxL,OAAO,CAAC2V,SAAR,GAAoB,UAASC,GAAT,EAAc5G,GAAd,EAAmB;AACtC,MAAI6G,OAAO,GAAGZ,GAAG,CAACO,aAAJ,EAAd;;AAEA,OAAK,IAAI3T,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgU,OAAO,CAAC1U,MAA5B,EAAoCU,CAAC,EAArC,EAAyC;AACxC,QAAIiU,UAAU,GAAGD,OAAO,CAAChU,CAAD,CAAP,CAAWkU,gBAA5B;;AACA,QAAKD,UAAU,CAACE,QAAX,IAAuBJ,GAAxB,IAAiCE,UAAU,CAACG,SAAX,IAAwBjH,GAA7D,EAAmE;AAClE,aAAO6G,OAAO,CAAChU,CAAD,CAAd;AACA;AACD;AACD,CATD;;AAWAoT,GAAG,CAACI,MAAJ,CAAWpT,SAAX,CAAqBX,OAArB,GAA+B,IAA/B;;AAEA2T,GAAG,CAACI,MAAJ,CAAWpT,SAAX,CAAqBiU,IAArB,GAA4B,UAASC,aAAT,EAAuB;AAClD,OAAKC,MAAL;;AACA,MAAID,aAAa,KAAK,KAAtB,EAA6B;AAC7B,OAAKE,UAAL,GAAkB,EAAlB;AACA,MAAI9U,GAAG,GAAG,KAAK+U,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,UAAtB,CAAiClV,MAAzD,GAAkE,CAA5E;;AACA,OAAK,IAAIU,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACN,GAAhB,EAAqBM,CAAC,EAAtB,EAAyB;AACxB,SAAKwU,UAAL,CAAgBxU,CAAhB,IAAqB,IAAI0U,SAAJ,CAAc,IAAd,EAAoB1U,CAApB,CAArB;AACA;AACD,CARD;;AAUAoT,GAAG,CAACI,MAAJ,CAAWpT,SAAX,CAAqBuU,KAArB,GAA6B,YAAU;AACtC,OAAKC,OAAL;;AACA,OAAKJ,UAAL,GAAkB,IAAlB;AACA,CAHD;;AAKAxR,MAAM,CAACgE,cAAP,CAAsBoM,GAAG,CAACI,MAAJ,CAAWpT,SAAjC,EAA4C,kBAA5C,EAAgE;AAC/D8G,EAAAA,GAAG,EAAE,YAAW;AACf,QAAI;AACH,aAAO,KAAK2N,iBAAL,KAA2B,KAAKA,iBAAL,GAAyB,KAAKC,qBAAL,EAApD,CAAP;AACA,KAFD,CAEE,OAAMpW,CAAN,EAAS;AACV;AACA,UAAIA,CAAC,CAACqW,KAAF,IAAW3B,GAAG,CAAC4B,sBAAnB,EAA2C,OAAO,IAAP;AAC3C,YAAMtW,CAAN;AACA;AACD;AAT8D,CAAhE;AAYAsE,MAAM,CAACgE,cAAP,CAAsBoM,GAAG,CAACI,MAAJ,CAAWpT,SAAjC,EAA4C,sBAA5C,EAAoE;AACnE8G,EAAAA,GAAG,EAAE,YAAW;AACf,QAAI;AACH,aAAO,KAAK+N,qBAAL,KAA+B,KAAKA,qBAAL,GAA6B,KAAKC,yBAAL,EAA5D,CAAP;AACA,KAFD,CAEE,OAAMxW,CAAN,EAAS;AACV;AACA,UAAIA,CAAC,CAACqW,KAAF,IAAW3B,GAAG,CAAC4B,sBAAnB,EAA2C,OAAO,EAAP;AAC3C,YAAMtW,CAAN;AACA;AACD;AATkE,CAApE;AAYAsE,MAAM,CAACgE,cAAP,CAAsBoM,GAAG,CAACI,MAAJ,CAAWpT,SAAjC,EAA4C,QAA5C,EAAsD;AACrD8G,EAAAA,GAAG,EAAE,YAAW;AACf,WAAO,KAAKiO,OAAL,KAAiB,KAAKA,OAAL,GAAe,KAAKC,WAAL,EAAhC,CAAP;AACA;AAHoD,CAAtD;;AAMAhC,GAAG,CAACI,MAAJ,CAAWpT,SAAX,CAAqBiV,SAArB,GAAiC,UAASC,IAAT,EAAc;AAC9C,MAAI,CAAC,KAAKd,UAAV,EAAqB;AACpB,UAAM,IAAIjW,KAAJ,CAAU,qDAAV,CAAN;AACA;;AACD+W,EAAAA,IAAI,GAAGA,IAAI,IAAI,CAAf;;AACA,OAAK,IAAItV,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAKwU,UAAL,CAAgBlV,MAAhC,EAAwCU,CAAC,EAAzC,EAA4C;AAC3C,QAAI,KAAKwU,UAAL,CAAgBxU,CAAhB,EAAmBuV,eAAnB,IAAsCD,IAA1C,EAA+C;AAC9C,aAAO,KAAKd,UAAL,CAAgBxU,CAAhB,CAAP;AACA;AACD;AACD,CAVD;;AAYA,IAAIwV,UAAU,GAAGpC,GAAG,CAACqC,yBAArB;;AAEArC,GAAG,CAACI,MAAJ,CAAWpT,SAAX,CAAqBsV,eAArB,GACA,UAASC,aAAT,EAAwBC,QAAxB,EAAkCC,MAAlC,EAA0CC,MAA1C,EAAkDC,cAAlD,EAAkEC,QAAlE,EAA2E;AAC1E,MAAI/C,IAAI,GAAG,IAAX;AACA,MAAIgD,IAAI,GAAG,CAAC,EAAEN,aAAa,GAAGvC,GAAG,CAAC8C,kBAAtB,CAAZ;AACA,MAAIC,OAAJ;;AAEA,MAAIF,IAAJ,EAAS;AACR,QAAI,EAAEF,cAAc,IAAI,CAApB,CAAJ,EAA2B;AAC1B,YAAM,IAAIhP,SAAJ,CAAc,+DAAd,CAAN;AACA;;AACDoP,IAAAA,OAAO,GAAGJ,cAAV;AACA,GALD,MAKK;AACJ,QAAI,CAACjF,QAAQ,CAACiF,cAAD,CAAb,EAA8B;AAC7B,YAAM,IAAIhP,SAAJ,CAAc,2DAAd,CAAN;AACA;;AACDoP,IAAAA,OAAO,GAAGJ,cAAc,CAACzW,MAAzB;AACA,GAfyE,CAiB1E;AACA;;;AACA,MAAI8W,GAAG,GAAGC,MAAM,CAACC,KAAP,CAAaH,OAAO,GAAGX,UAAvB,CAAV;AACAY,EAAAA,GAAG,CAACG,UAAJ,CAAkBZ,aAAlB,EAAiC,CAAjC;AACAS,EAAAA,GAAG,CAACG,UAAJ,CAAkBX,QAAlB,EAAiC,CAAjC;AACAQ,EAAAA,GAAG,CAACI,aAAJ,CAAkBX,MAAlB,EAAiC,CAAjC;AACAO,EAAAA,GAAG,CAACI,aAAJ,CAAkBV,MAAlB,EAAiC,CAAjC;AACAM,EAAAA,GAAG,CAACI,aAAJ,CAAkBL,OAAlB,EAAiC,CAAjC;;AAEA,MAAI,CAACF,IAAL,EAAU;AACTG,IAAAA,GAAG,CAACjP,GAAJ,CAAQ4O,cAAR,EAAwBP,UAAxB;AACA;;AAED,MAAIiB,QAAQ,GAAG,IAAIrD,GAAG,CAACK,QAAR,CAAiB,IAAjB,EAAuB,CAAvB,EAA0BL,GAAG,CAACsD,4BAA9B,EAA4D,KAAKjX,OAAjE,EACd,UAASsI,KAAT,EAAgBqO,GAAhB,EAAqBO,MAArB,EAA4B;AAC3B,QAAIX,QAAJ,EAAa;AACZ,UAAIC,IAAJ,EAAS;AACRD,QAAAA,QAAQ,CAAClX,IAAT,CAAcmU,IAAd,EAAoBlL,KAApB,EAA2BqO,GAAG,CAACxL,KAAJ,CAAU4K,UAAV,EAAsBA,UAAU,GAAGmB,MAAnC,CAA3B;AACA,OAFD,MAEK;AACJX,QAAAA,QAAQ,CAAClX,IAAT,CAAcmU,IAAd,EAAoBlL,KAApB;AACA;AACD;AACD,GATa,CAAf;;AAYA,MAAI;AACH0O,IAAAA,QAAQ,CAACG,MAAT,CAAgBR,GAAhB;AACA,GAFD,CAEE,OAAO1X,CAAP,EAAU;AACX,QAAIsX,QAAJ,EAAa;AACZ/X,MAAAA,OAAO,CAAC2B,QAAR,CAAiB,YAAW;AAAEoW,QAAAA,QAAQ,CAAClX,IAAT,CAAcmU,IAAd,EAAoBvU,CAApB;AAAyB,OAAvD;AACA;AACD;;AACD,SAAO,IAAP;AACA,CAnDD;;AAqDA0U,GAAG,CAACI,MAAJ,CAAWpT,SAAX,CAAqByW,mBAArB,GAA2C,UAAUC,UAAV,EAAsBd,QAAtB,EAAgC;AAC1E,MAAIe,MAAM,GAAG,MAAb;AACA,MAAIzX,MAAM,GAAG,GAAb;AACA,OAAKoW,eAAL,CACCtC,GAAG,CAAC8C,kBADL,EAEC9C,GAAG,CAAC4D,6BAFL,EAGG5D,GAAG,CAAC6D,gBAAJ,IAAwB,CAAzB,GAA8BH,UAHhC,EAICC,MAJD,EAKCzX,MALD,EAMC,UAAUyI,KAAV,EAAiBqO,GAAjB,EAAsB;AACrB,QAAIrO,KAAJ,EAAW,OAAOiO,QAAQ,CAACjO,KAAD,CAAf;AACXiO,IAAAA,QAAQ,CAACvP,SAAD,EAAY2P,GAAG,CAACnH,QAAJ,CAAa,SAAb,EAAwB,CAAxB,CAAZ,CAAR;AACA,GATF;AAWA,CAdD;;AAgBAmE,GAAG,CAACI,MAAJ,CAAWpT,SAAX,CAAqB8W,gBAArB,GAAwC,UAAUlB,QAAV,EAAoB;AAE3D,MAAI,KAAKmB,cAAT,EAAyB;AACxB;AACA,WAAOnB,QAAQ,CAACvP,SAAD,EAAY,KAAK0Q,cAAjB,CAAf;AACA;;AAED,MAAI,KAAKjD,gBAAL,CAAsBkD,MAAtB,GAA+B,KAAnC,EAA0C;AACzC;AACA,WAAOpB,QAAQ,CAACvP,SAAD,EAAY,IAAZ,CAAf;AACA;;AAED,OAAKiP,eAAL,CACCtC,GAAG,CAAC8C,kBADL,EAEC9C,GAAG,CAAC4D,6BAFL,EAGE5D,GAAG,CAACiE,aAAJ,IAAqB,CAHvB,EAIC,CAJD,EAKCjE,GAAG,CAACkE,kBALL,EAMC,UAAUvP,KAAV,EAAiBwP,MAAjB,EAAyB;AACxB,QAAIxP,KAAJ,EAAW;AACV;AACA,UAAIA,KAAK,CAACgN,KAAN,IAAe3B,GAAG,CAACoE,qBAAvB,EAA8C,OAAOxB,QAAQ,CAACvP,SAAD,EAAY,IAAZ,CAAf;AAC9C,aAAOuP,QAAQ,CAACjO,KAAD,EAAQ,IAAR,CAAf;AACA;;AAED,QAAI0P,WAAW,GAAGF,MAAM,CAACG,YAAP,CAAoB,CAApB,CAAlB;AACA,SAAKhC,eAAL,CACCtC,GAAG,CAAC8C,kBADL,EAEC9C,GAAG,CAAC4D,6BAFL,EAGE5D,GAAG,CAACiE,aAAJ,IAAqB,CAHvB,EAIC,CAJD,EAKCI,WALD,EAMC,UAAU1P,KAAV,EAAiBwP,MAAjB,EAAyB;AACxB,UAAIxP,KAAJ,EAAW;AACV;AACA,YAAIA,KAAK,CAACgN,KAAN,IAAe3B,GAAG,CAACoE,qBAAvB,EAA8C,OAAOxB,QAAQ,CAACvP,SAAD,EAAY,IAAZ,CAAf;AAC9C,eAAOuP,QAAQ,CAACjO,KAAD,EAAQ,IAAR,CAAf;AACA;;AAED,UAAI4P,UAAU,GAAG;AAChBC,QAAAA,OAAO,EAAEL,MAAM,CAACM,SAAP,CAAiB,CAAjB,CADO;AAEhBC,QAAAA,eAAe,EAAEP,MAAM,CAACM,SAAP,CAAiB,CAAjB,CAFD;AAGhBE,QAAAA,YAAY,EAAER,MAAM,CAACG,YAAP,CAAoB,CAApB,CAHE;AAIhBM,QAAAA,cAAc,EAAET,MAAM,CAACM,SAAP,CAAiB,CAAjB,CAJA;AAKhBI,QAAAA,YAAY,EAAE;AALE,OAAjB;AAQA,UAAIjY,CAAC,GAAGoT,GAAG,CAACkE,kBAAZ;;AACA,aAAOtX,CAAC,GAAG2X,UAAU,CAACI,YAAtB,EAAoC;AACnC,YAAIG,UAAU,GAAG;AAChBN,UAAAA,OAAO,EAAEL,MAAM,CAACM,SAAP,CAAiB7X,CAAC,GAAG,CAArB,CADO;AAEhB8X,UAAAA,eAAe,EAAEP,MAAM,CAACM,SAAP,CAAiB7X,CAAC,GAAG,CAArB,CAFD;AAGhBmY,UAAAA,kBAAkB,EAAEZ,MAAM,CAACM,SAAP,CAAiB7X,CAAC,GAAG,CAArB;AAHJ,SAAjB;AAMAkY,QAAAA,UAAU,CAACE,mBAAX,GAAiCb,MAAM,CAAC3M,KAAP,CAAa5K,CAAC,GAAG,CAAjB,EAAoBA,CAAC,GAAGkY,UAAU,CAACN,OAAnC,CAAjC;AACAD,QAAAA,UAAU,CAACM,YAAX,CAAwBhY,IAAxB,CAA6BiY,UAA7B;AACAlY,QAAAA,CAAC,IAAIkY,UAAU,CAACN,OAAhB;AACA,OA1BuB,CA4BxB;;;AACA,WAAKT,cAAL,GAAsBQ,UAAtB;AACA3B,MAAAA,QAAQ,CAACvP,SAAD,EAAY,KAAK0Q,cAAjB,CAAR;AACA,KArCF;AAuCA,GArDF;AAuDA,CAnED;;AAqEA/D,GAAG,CAACI,MAAJ,CAAWpT,SAAX,CAAqBiY,eAArB,GAAuC,UAAUrC,QAAV,EAAoB;AAC1D,MAAIiC,YAAY,GAAG,EAAnB;AACA,MAAIhF,IAAI,GAAG,IAAX;AAEA,OAAKiE,gBAAL,CAAsB,UAASnP,KAAT,EAAgB4P,UAAhB,EAA4B;AACjD,QAAI5P,KAAJ,EAAW,OAAOiO,QAAQ,CAACjO,KAAD,EAAQ,IAAR,CAAf;AAEX,QAAIrI,GAAG,GAAGiY,UAAU,GAAGA,UAAU,CAACM,YAAX,CAAwB3Y,MAA3B,GAAoC,CAAxD;;AACA,SAAK,IAAIU,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACN,GAAhB,EAAqBM,CAAC,EAAtB,EAAyB;AACxBiY,MAAAA,YAAY,CAAChY,IAAb,CAAkB,IAAIqY,UAAJ,CAAerF,IAAf,EAAqBjT,CAArB,CAAlB;AACA;;AAEDgW,IAAAA,QAAQ,CAACvP,SAAD,EAAYwR,YAAZ,CAAR;AACA,GATD;AAUA,CAdD;;AAgBA7E,GAAG,CAACI,MAAJ,CAAWpT,SAAX,CAAqBmY,gBAArB,GAAwC,UAASC,OAAT,EAAkB5F,EAAlB,EAAsB;AAC7D,MAAIK,IAAI,GAAG,IAAX;;AACA,OAAKwF,kBAAL,CAAwBD,OAAxB,EAAiC,UAAS1U,GAAT,EAAc;AAC9C,QAAI,CAACA,GAAL,EAAU;AACT,WAAK0Q,UAAL,GAAkB,EAAlB;AACA,UAAI9U,GAAG,GAAG,KAAK+U,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,UAAtB,CAAiClV,MAAzD,GAAkE,CAA5E;;AACA,WAAK,IAAIU,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACN,GAAhB,EAAqBM,CAAC,EAAtB,EAA0B;AACzB,aAAKwU,UAAL,CAAgBxU,CAAhB,IAAqB,IAAI0U,SAAJ,CAAc,IAAd,EAAoB1U,CAApB,CAArB;AACA;AACD;;AACD4S,IAAAA,EAAE,CAAC9T,IAAH,CAAQmU,IAAR,EAAcnP,GAAd;AACA,GATD;AAUA,CAZD;;AAcA,SAAS4Q,SAAT,CAAmBgE,MAAnB,EAA2BC,EAA3B,EAA8B;AAC7B,OAAKD,MAAL,GAAcA,MAAd;AACA,OAAKC,EAAL,GAAUA,EAAV;AACA,OAAKC,UAAL,GAAkB,CAAlB;;AACA,OAAKC,SAAL;AACA;;AAEDnE,SAAS,CAACtU,SAAV,CAAoByY,SAApB,GAAgC,YAAU;AACzC,OAAKlB,UAAL,GAAkB,KAAKe,MAAL,CAAYjE,gBAAZ,CAA6BD,UAA7B,CAAwC,KAAKmE,EAA7C,EAAiD,KAAKC,UAAtD,CAAlB;AACA,OAAKrD,eAAL,GAAuB,KAAKoC,UAAL,CAAgBmB,gBAAvC;AACA,OAAKC,SAAL,GAAiB,EAAjB;AACA,MAAIrZ,GAAG,GAAG,KAAKiY,UAAL,CAAgBoB,SAAhB,CAA0BzZ,MAApC;;AACA,OAAK,IAAIU,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACN,GAAhB,EAAqBM,CAAC,EAAtB,EAAyB;AACxB,QAAIgQ,IAAI,GAAG,KAAK2H,UAAL,CAAgBoB,SAAhB,CAA0B/Y,CAA1B,CAAX;AACA,QAAIgZ,CAAC,GAAIhJ,IAAI,CAACiJ,gBAAL,GAAsB7F,GAAG,CAAC8C,kBAA3B,GAA+CgD,UAA/C,GAA0DC,WAAlE;AACA,SAAKJ,SAAL,CAAe/Y,CAAf,IAAoB,IAAIgZ,CAAJ,CAAM,KAAKN,MAAX,EAAmB1I,IAAnB,CAApB;AACA;AACD,CAVD;;AAYA0E,SAAS,CAACtU,SAAV,CAAoBgZ,KAApB,GAA4B,YAAU;AACrC,OAAKV,MAAL,CAAYW,gBAAZ,CAA6B,KAAKV,EAAlC;AACA,CAFD;;AAIAjE,SAAS,CAACtU,SAAV,CAAoBkZ,OAApB,GAA8B,UAASC,cAAT,EAAyB3G,EAAzB,EAA4B;AACzD,MAAIK,IAAI,GAAG,IAAX;;AACA,MAAI,OAAOsG,cAAP,IAAyB,UAA7B,EAAyC;AACxC3G,IAAAA,EAAE,GAAG2G,cAAL;AACAA,IAAAA,cAAc,GAAG,IAAjB;AACA;;AAED,MAAI,CAACA,cAAD,IAAmB,KAAKR,SAAL,CAAezZ,MAAf,IAAyB,CAAhD,EAAmD;AAClDka,IAAAA,IAAI;AACJ,GAFD,MAEO;AACN,QAAI5V,CAAC,GAAGqP,IAAI,CAAC8F,SAAL,CAAezZ,MAAvB;AACA2T,IAAAA,IAAI,CAAC8F,SAAL,CAAe1K,OAAf,CAAuB,UAAUoL,EAAV,EAAczZ,CAAd,EAAiB;AACvC,UAAIyZ,EAAE,CAACC,UAAP,EAAmB;AAClBD,QAAAA,EAAE,CAAC3Y,IAAH,CAAQ,KAAR,EAAe,YAAY;AAC1B,cAAI,EAAE8C,CAAF,IAAO,CAAX,EAAc4V,IAAI;AAClB,SAFD;AAGAC,QAAAA,EAAE,CAACE,QAAH;AACA,OALD,MAKO;AACN,YAAI,EAAE/V,CAAF,IAAO,CAAX,EAAc4V,IAAI;AAClB;AACD,KATD;AAUA;;AAED,WAASA,IAAT,GAAiB;AAChBvG,IAAAA,IAAI,CAACyF,MAAL,CAAYkB,kBAAZ,CAA+B3G,IAAI,CAAC0F,EAApC,EAAwC,UAAS7U,GAAT,EAAa;AACpD,UAAI,CAACA,GAAL,EAAS;AACRmP,QAAAA,IAAI,CAAC2F,UAAL,GAAkB,CAAlB;;AACA3F,QAAAA,IAAI,CAAC4F,SAAL;AACA;;AACDjG,MAAAA,EAAE,CAAC9T,IAAH,CAAQmU,IAAR,EAAcnP,GAAd;AACA,KAND;AAOA;AACD,CAhCD;;AAkCA4Q,SAAS,CAACtU,SAAV,CAAoByZ,oBAApB,GAA2C,YAAU;AACpD,SAAO,KAAKnB,MAAL,CAAYoB,sBAAZ,CAAmC,KAAKnB,EAAxC,CAAP;AACA,CAFD;;AAIAjE,SAAS,CAACtU,SAAV,CAAoB2Z,kBAApB,GAAyC,YAAW;AACnD,SAAO,KAAKrB,MAAL,CAAYsB,oBAAZ,CAAiC,KAAKrB,EAAtC,CAAP;AACA,CAFD;;AAIAjE,SAAS,CAACtU,SAAV,CAAoB6Z,kBAApB,GAAyC,YAAW;AACnD,SAAO,KAAKvB,MAAL,CAAYwB,oBAAZ,CAAiC,KAAKvB,EAAtC,CAAP;AACA,CAFD;;AAKAjE,SAAS,CAACtU,SAAV,CAAoB+Z,aAApB,GAAoC,UAASvB,UAAT,EAAqBhG,EAArB,EAAwB;AAC3D,MAAIK,IAAI,GAAG,IAAX;;AACA,OAAKyF,MAAL,CAAY0B,cAAZ,CAA2B,KAAKzB,EAAhC,EAAoCC,UAApC,EAAgD,UAAS9U,GAAT,EAAa;AAC5D,QAAI,CAACA,GAAL,EAAS;AACRmP,MAAAA,IAAI,CAAC2F,UAAL,GAAkBA,UAAlB;;AACA3F,MAAAA,IAAI,CAAC4F,SAAL;AACA;;AACDjG,IAAAA,EAAE,CAAC9T,IAAH,CAAQmU,IAAR,EAAcnP,GAAd;AACA,GAND;AAOA,CATD;;AAWA4Q,SAAS,CAACtU,SAAV,CAAoBia,QAApB,GAA+B,UAAS/E,IAAT,EAAc;AAC5C,OAAK,IAAItV,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAK+Y,SAAL,CAAezZ,MAA/B,EAAuCU,CAAC,EAAxC,EAA2C;AAC1C,QAAI,KAAK+Y,SAAL,CAAe/Y,CAAf,EAAkBsa,OAAlB,IAA6BhF,IAAjC,EAAsC;AACrC,aAAO,KAAKyD,SAAL,CAAe/Y,CAAf,CAAP;AACA;AACD;AACD,CAND;;AAQA,SAASsY,UAAT,CAAoBI,MAApB,EAA4BC,EAA5B,EAA+B;AAC9B,OAAKD,MAAL,GAAcA,MAAd;AACA,OAAKC,EAAL,GAAUA,EAAV;AACA,OAAKhB,UAAL,GAAkB,KAAKe,MAAL,CAAYvB,cAAZ,CAA2Bc,YAA3B,CAAwC,KAAKU,EAA7C,CAAlB;AACA,OAAK/Q,IAAL,GAAY,KAAK+P,UAAL,CAAgBQ,kBAA5B;AACA,OAAKoC,IAAL,GAAY,KAAK5C,UAAL,CAAgBS,mBAA5B;AACA;;AAED,SAASoC,QAAT,CAAkB9B,MAAlB,EAA0Bf,UAA1B,EAAqC;AACpC,OAAKe,MAAL,GAAcA,MAAd;AACA,OAAKf,UAAL,GAAkBA,UAAlB;AACA,OAAK2C,OAAL,GAAe3C,UAAU,CAACsB,gBAA1B;AACA,OAAKwB,YAAL,GAAoB9C,UAAU,CAAC+C,YAAX,GAAwB,IAA5C;AACA;;AACDrH,IAAI,CAAC3B,QAAL,CAAc8I,QAAd,EAAwB1S,MAAM,CAACxB,YAA/B;AAEAkU,QAAQ,CAACpa,SAAT,CAAmBX,OAAnB,GAA6B,CAA7B;;AAEA+a,QAAQ,CAACpa,SAAT,CAAmBua,SAAnB,GAA+B,UAAS3E,QAAT,EAAkB;AAChD,SAAO,KAAK0C,MAAL,CAAYkC,WAAZ,CAAwB,KAAKN,OAA7B,EAAsCtE,QAAtC,CAAP;AACA,CAFD;;AAIAwE,QAAQ,CAACpa,SAAT,CAAmBya,YAAnB,GAAkC,UAASpb,OAAT,EAAkBuW,QAAlB,EAA2B;AAC5D,SAAO,IAAI5C,GAAG,CAACK,QAAR,CAAiB,KAAKiF,MAAtB,EAA8B,KAAK4B,OAAnC,EAA4C,KAAKG,YAAjD,EAA+Dhb,OAA/D,EAAwEuW,QAAxE,CAAP;AACA,CAFD;;AAIAwE,QAAQ,CAACpa,SAAT,CAAmB0a,SAAnB,GAA+B,UAASC,UAAT,EAAqBC,YAArB,EAAmChF,QAAnC,EAA4C;AAC1E,MAAI,KAAKiF,aAAT,EAAuB;AACtB,UAAM,IAAI1c,KAAJ,CAAU,wBAAV,CAAN;AACA;;AAEDwc,EAAAA,UAAU,GAAGA,UAAU,IAAI,CAA3B;AACA,OAAKG,gBAAL,GAAwBF,YAAY,IAAI,KAAKrD,UAAL,CAAgBwD,cAAxD;AACA,OAAKzB,UAAL,GAAkB,IAAlB;AACA,OAAK0B,WAAL,GAAmB,CAAnB;AAEA,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIrb,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC+a,UAAhB,EAA4B/a,CAAC,EAA7B,EAAgC;AAC/Bqb,IAAAA,SAAS,CAACrb,CAAD,CAAT,GAAe,KAAK6a,YAAL,CAAkB,CAAlB,EAAqB7E,QAArB,CAAf;AACA;;AACD,SAAOqF,SAAP;AACA,CAfD;;AAiBAb,QAAQ,CAACpa,SAAT,CAAmBuZ,QAAnB,GAA8B,UAAS/G,EAAT,EAAY;AACzC,MAAI,CAAC,KAAKqI,aAAV,EAAyB;AACxB,UAAM,IAAI1c,KAAJ,CAAU,wBAAV,CAAN;AACA;;AACD,OAAK,IAAIyB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAKib,aAAL,CAAmB3b,MAAnC,EAA2CU,CAAC,EAA5C,EAA+C;AAC9C,QAAI;AACH,WAAKib,aAAL,CAAmBjb,CAAnB,EAAsBsb,MAAtB;AACA,KAFD,CAEE,OAAOxX,GAAP,EAAY;AACb,WAAK5C,IAAL,CAAU,OAAV,EAAmB4C,GAAnB;AACA;AACD;;AACD,OAAK4V,UAAL,GAAkB,KAAlB;AACA,MAAI9G,EAAJ,EAAQ,KAAK9R,IAAL,CAAU,KAAV,EAAiB8R,EAAjB;AACR,CAbD;;AAeA,SAASsG,UAAT,CAAoBR,MAApB,EAA4Bf,UAA5B,EAAuC;AACtC6C,EAAAA,QAAQ,CAAC1b,IAAT,CAAc,IAAd,EAAoB4Z,MAApB,EAA4Bf,UAA5B;AACA;;AAEDxZ,OAAO,CAAC+a,UAAR,GAAqBA,UAArB;AACA7F,IAAI,CAAC3B,QAAL,CAAcwH,UAAd,EAA0BsB,QAA1B;AACAtB,UAAU,CAAC9Y,SAAX,CAAqBmb,SAArB,GAAiC,IAAjC;;AAEArC,UAAU,CAAC9Y,SAAX,CAAqBqW,QAArB,GAAgC,UAASnX,MAAT,EAAiBsT,EAAjB,EAAoB;AACnD,MAAIK,IAAI,GAAG,IAAX;AACA,MAAIsE,MAAM,GAAGlB,MAAM,CAACC,KAAP,CAAahX,MAAb,CAAb;;AAEA,WAAS0W,QAAT,CAAkBjO,KAAlB,EAAyBqO,GAAzB,EAA8BO,MAA9B,EAAqC;AACpC/D,IAAAA,EAAE,CAAC9T,IAAH,CAAQmU,IAAR,EAAclL,KAAd,EAAqBwP,MAAM,CAAC3M,KAAP,CAAa,CAAb,EAAgB+L,MAAhB,CAArB;AACA;;AAED,MAAI;AACH,SAAKkE,YAAL,CAAkB,KAAKpb,OAAvB,EAAgCuW,QAAhC,EAA0CY,MAA1C,CAAiDW,MAAjD;AACA,GAFD,CAEE,OAAO7Y,CAAP,EAAU;AACXT,IAAAA,OAAO,CAAC2B,QAAR,CAAiB,YAAW;AAAEgT,MAAAA,EAAE,CAAC9T,IAAH,CAAQmU,IAAR,EAAcvU,CAAd;AAAmB,KAAjD;AACA;;AACD,SAAO,IAAP;AACA,CAdD;;AAgBAwa,UAAU,CAAC9Y,SAAX,CAAqB0a,SAArB,GAAiC,UAASC,UAAT,EAAqBC,YAArB,EAAkC;AAClE,MAAI/H,IAAI,GAAG,IAAX;AACA,OAAKgI,aAAL,GAAqB/B,UAAU,CAACsC,MAAX,CAAkBpb,SAAlB,CAA4B0a,SAA5B,CAAsChc,IAAtC,CAA2C,IAA3C,EAAiDic,UAAjD,EAA6DC,YAA7D,EAA2ES,YAA3E,CAArB;;AAEA,WAASA,YAAT,CAAsB1T,KAAtB,EAA6BqO,GAA7B,EAAkCO,MAAlC,EAAyC;AACxC,QAAI,CAAC5O,KAAL,EAAW;AACVkL,MAAAA,IAAI,CAAC/R,IAAL,CAAU,MAAV,EAAkBkV,GAAG,CAACxL,KAAJ,CAAU,CAAV,EAAa+L,MAAb,CAAlB;AACA,KAFD,MAEM,IAAI5O,KAAK,CAACgN,KAAN,IAAe3B,GAAG,CAACsI,yBAAvB,EAAiD;AACtDzI,MAAAA,IAAI,CAAC/R,IAAL,CAAU,OAAV,EAAmB6G,KAAnB;AACAkL,MAAAA,IAAI,CAAC0G,QAAL;AACA;;AAED,QAAI1G,IAAI,CAACyG,UAAT,EAAoB;AACnBiC,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,KAFD,MAEK;AACJ1I,MAAAA,IAAI,CAACmI,WAAL;;AAEA,UAAInI,IAAI,CAACmI,WAAL,IAAoB,CAAxB,EAA0B;AACzB,eAAOnI,IAAI,CAACgI,aAAZ;AACAhI,QAAAA,IAAI,CAAC/R,IAAL,CAAU,KAAV;AACA;AACD;AACD;;AAED,WAASya,aAAT,CAAuBC,CAAvB,EAAyB;AACxB,QAAI;AACHA,MAAAA,CAAC,CAAChF,MAAF,CAASP,MAAM,CAACC,KAAP,CAAarD,IAAI,CAACiI,gBAAlB,CAAT,EAA8CO,YAA9C;AACA,KAFD,CAEE,OAAO/c,CAAP,EAAU;AACXuU,MAAAA,IAAI,CAAC/R,IAAL,CAAU,OAAV,EAAmBxC,CAAnB;AACAuU,MAAAA,IAAI,CAAC0G,QAAL;AACA;AACD;;AAED,OAAKsB,aAAL,CAAmB5M,OAAnB,CAA2BsN,aAA3B;AACA1I,EAAAA,IAAI,CAACmI,WAAL,GAAmB,KAAKH,aAAL,CAAmB3b,MAAtC;AACA,CAnCD;;AAuCA,SAAS6Z,WAAT,CAAqBT,MAArB,EAA6Bf,UAA7B,EAAwC;AACvC6C,EAAAA,QAAQ,CAAC1b,IAAT,CAAc,IAAd,EAAoB4Z,MAApB,EAA4Bf,UAA5B;AACA;;AACDxZ,OAAO,CAACgb,WAAR,GAAsBA,WAAtB;AACA9F,IAAI,CAAC3B,QAAL,CAAcyH,WAAd,EAA2BqB,QAA3B;AACArB,WAAW,CAAC/Y,SAAZ,CAAsBmb,SAAtB,GAAkC,KAAlC;;AAEApC,WAAW,CAAC/Y,SAAZ,CAAsBqW,QAAtB,GAAiC,UAASc,MAAT,EAAiB3E,EAAjB,EAAoB;AACpD,MAAIK,IAAI,GAAG,IAAX;;AACA,MAAI,CAACsE,MAAL,EAAY;AACXA,IAAAA,MAAM,GAAGlB,MAAM,CAACC,KAAP,CAAa,CAAb,CAAT;AACA,GAFD,MAEM,IAAI,CAACxF,QAAQ,CAACyG,MAAD,CAAb,EAAsB;AAC3BA,IAAAA,MAAM,GAAGlB,MAAM,CAACwF,IAAP,CAAYtE,MAAZ,CAAT;AACA;;AAED,WAASvB,QAAT,CAAkBjO,KAAlB,EAAyBqO,GAAzB,EAA8BO,MAA9B,EAAqC;AACpC,QAAI/D,EAAJ,EAAQA,EAAE,CAAC9T,IAAH,CAAQmU,IAAR,EAAclL,KAAd;AACR;;AAED,MAAI;AACH,SAAK8S,YAAL,CAAkB,KAAKpb,OAAvB,EAAgCuW,QAAhC,EAA0CY,MAA1C,CAAiDW,MAAjD;AACA,GAFD,CAEE,OAAO7Y,CAAP,EAAU;AACXT,IAAAA,OAAO,CAAC2B,QAAR,CAAiB,YAAW;AAAEoW,MAAAA,QAAQ,CAACtX,CAAD,CAAR;AAAc,KAA5C;AACA;;AAED,SAAO,IAAP;AACA,CAnBD;;AAqBAya,WAAW,CAAC/Y,SAAZ,CAAsB0b,eAAtB,GAAwC,UAAU1F,GAAV,EAAexD,EAAf,EAAmB;AAC1D,MAAIwD,GAAG,CAAC9W,MAAJ,GAAa,KAAKqY,UAAL,CAAgBwD,cAA7B,IAA+C,CAAnD,EAAsD;AACrD,SAAK1E,QAAL,CAAcL,GAAd;AACA,SAAKK,QAAL,CAAcJ,MAAM,CAACC,KAAP,CAAa,CAAb,CAAd,EAA+B1D,EAA/B;AACA,GAHD,MAGO;AACN,SAAK6D,QAAL,CAAcL,GAAd,EAAmBxD,EAAnB;AACA;AACD,CAPD;;AASA,IAAImJ,gBAAgB,GAAG,CAAvB;AACA5d,OAAO,CAACyC,EAAR,CAAW,aAAX,EAA0B,UAASU,IAAT,EAAe;AACxC,MAAIA,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,QAAlC,EAA4C;;AAC5C,MAAI,EAAEya,gBAAF,KAAuB,CAA3B,EAA8B;AAC7B3I,IAAAA,GAAG,CAACQ,oBAAJ;AACA;AACD,CALD;AAOAzV,OAAO,CAACyC,EAAR,CAAW,gBAAX,EAA6B,UAASU,IAAT,EAAe;AAC3C,MAAIA,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,QAAlC,EAA4C;;AAC5C,MAAI,EAAEya,gBAAF,KAAuB,CAA3B,EAA8B;AAC7B3I,IAAAA,GAAG,CAACS,qBAAJ;AACA;AACD,CALD;;;;;;;;;;;;AC/fA,SAASmI,CAAT,GAASA,CAGT;;AAAA,SAAS1V,CAAT,GAASA;AACPA,EAAAA,CAAAA,CAAaC,IAAbD,CAAkBxH,IAAlBwH,CAAuB2V,IAAvB3V;AA6CF;;AAAA,SAAS4V,CAAT,CAA0BxU,CAA1B,EAA0BA;AACxB,SAAA,KAA2BjB,CAA3B,KAAIiB,CAAAA,CAAKf,aAAT,GACSL,CAAAA,CAAaM,mBADtB,GAEOc,CAAAA,CAAKf,aAFZ;AAcF;;AAAA,SAASwV,CAAT,CAAkBjU,CAAlB,EAA2BkU,CAA3B,EAAiCnJ,CAAjC,EAAiCA;AAC/B,MAAImJ,CAAJ,EACElU,CAAAA,CAAQpJ,IAARoJ,CAAa+K,CAAb/K,EADF,KAKE,KAFA,IAAIxI,CAAAA,GAAMwI,CAAAA,CAAQ5I,MAAlB,EACI+B,CAAAA,GAAY8G,CAAAA,CAAWD,CAAXC,EAAoBzI,CAApByI,CADhB,EAESnI,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIN,CAApB,EAAoBA,EAAOM,CAA3B,EACEqB,CAAAA,CAAUrB,CAAVqB,CAAAA,CAAavC,IAAbuC,CAAkB4R,CAAlB5R;AAGN;;AAAA,SAASgb,CAAT,CAAiBnU,CAAjB,EAA0BkU,CAA1B,EAAgCnJ,CAAhC,EAAsCqJ,CAAtC,EAAsCA;AACpC,MAAIF,CAAJ,EACElU,CAAAA,CAAQpJ,IAARoJ,CAAa+K,CAAb/K,EAAmBoU,CAAnBpU,EADF,KAKE,KAFA,IAAIxI,CAAAA,GAAMwI,CAAAA,CAAQ5I,MAAlB,EACI+B,CAAAA,GAAY8G,CAAAA,CAAWD,CAAXC,EAAoBzI,CAApByI,CADhB,EAESnI,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIN,CAApB,EAAoBA,EAAOM,CAA3B,EACEqB,CAAAA,CAAUrB,CAAVqB,CAAAA,CAAavC,IAAbuC,CAAkB4R,CAAlB5R,EAAwBib,CAAxBjb;AAGN;;AAAA,SAASkb,CAAT,CAAiBrU,CAAjB,EAA0BkU,CAA1B,EAAgCnJ,CAAhC,EAAsCqJ,CAAtC,EAA4CE,CAA5C,EAA4CA;AAC1C,MAAIJ,CAAJ,EACElU,CAAAA,CAAQpJ,IAARoJ,CAAa+K,CAAb/K,EAAmBoU,CAAnBpU,EAAyBsU,CAAzBtU,EADF,KAKE,KAFA,IAAIxI,CAAAA,GAAMwI,CAAAA,CAAQ5I,MAAlB,EACI+B,CAAAA,GAAY8G,CAAAA,CAAWD,CAAXC,EAAoBzI,CAApByI,CADhB,EAESnI,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIN,CAApB,EAAoBA,EAAOM,CAA3B,EACEqB,CAAAA,CAAUrB,CAAVqB,CAAAA,CAAavC,IAAbuC,CAAkB4R,CAAlB5R,EAAwBib,CAAxBjb,EAA8Bmb,CAA9Bnb;AAGN;;AAAA,SAASob,CAAT,CAAmBvU,CAAnB,EAA4BkU,CAA5B,EAAkCnJ,CAAlC,EAAwCqJ,CAAxC,EAA8CE,CAA9C,EAAoDE,CAApD,EAAoDA;AAClD,MAAIN,CAAJ,EACElU,CAAAA,CAAQpJ,IAARoJ,CAAa+K,CAAb/K,EAAmBoU,CAAnBpU,EAAyBsU,CAAzBtU,EAA+BwU,CAA/BxU,EADF,KAKE,KAFA,IAAIxI,CAAAA,GAAMwI,CAAAA,CAAQ5I,MAAlB,EACI+B,CAAAA,GAAY8G,CAAAA,CAAWD,CAAXC,EAAoBzI,CAApByI,CADhB,EAESnI,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIN,CAApB,EAAoBA,EAAOM,CAA3B,EACEqB,CAAAA,CAAUrB,CAAVqB,CAAAA,CAAavC,IAAbuC,CAAkB4R,CAAlB5R,EAAwBib,CAAxBjb,EAA8Bmb,CAA9Bnb,EAAoCqb,CAApCrb;AAIN;;AAAA,SAASsb,CAAT,CAAkBzU,CAAlB,EAA2BkU,CAA3B,EAAiCnJ,CAAjC,EAAuCpT,CAAvC,EAAuCA;AACrC,MAAIuc,CAAJ,EACElU,CAAAA,CAAQ7H,KAAR6H,CAAc+K,CAAd/K,EAAoBrI,CAApBqI,EADF,KAKE,KAFA,IAAIxI,CAAAA,GAAMwI,CAAAA,CAAQ5I,MAAlB,EACI+B,CAAAA,GAAY8G,CAAAA,CAAWD,CAAXC,EAAoBzI,CAApByI,CADhB,EAESnI,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIN,CAApB,EAAoBA,EAAOM,CAA3B,EACEqB,CAAAA,CAAUrB,CAAVqB,CAAAA,CAAahB,KAAbgB,CAAmB4R,CAAnB5R,EAAyBxB,CAAzBwB;AAyEN;;AAAA,SAAS+G,CAAT,CAAsB7C,CAAtB,EAA8BqC,CAA9B,EAAoCd,CAApC,EAA8CuB,CAA9C,EAA8CA;AAC5C,MAAIC,CAAJ,EACIR,CADJ,EAEIS,CAFJ,EA8DmB7J,CA9DnB;AAIA,MAAwB,cAAA,OAAboI,CAAX,EACE,MAAM,IAAIC,SAAJ,CAAc,wCAAd,CAAN;;AAoBF,MAAA,CAlBAe,CAAAA,GAASvC,CAAAA,CAAOiB,OAkBhB,KAXMsB,CAAAA,CAAOU,WAAPV,KACFvC,CAAAA,CAAOrE,IAAPqE,CAAY,aAAZA,EAA2BqC,CAA3BrC,EACYuB,CAAAA,CAASA,QAATA,GAAoBA,CAAAA,CAASA,QAA7BA,GAAwCA,CADpDvB,GAKAuC,CAAAA,GAASvC,CAAAA,CAAOiB,OANdsB,GAQJS,CAAAA,GAAWT,CAAAA,CAAOF,CAAPE,CAGb,KAhBEA,CAAAA,GAASvC,CAAAA,CAAOiB,OAAPjB,GAAiB,IAAIyW,CAAJ,EAA1BlU,EACAvC,CAAAA,CAAOmB,YAAPnB,GAAsB,CAexB,GAAKgD,CAAL,EAAKA;AAmBH,QAdwB,cAAA,OAAbA,CAAa,GAEtBA,CAAAA,GAAWT,CAAAA,CAAOF,CAAPE,CAAAA,GAAeO,CAAAA,GAAU,CAACvB,CAAD,EAAWyB,CAAX,CAAVF,GACU,CAACE,CAAD,EAAWzB,CAAX,CAHd,GAMlBuB,CAAAA,GACFE,CAAAA,CAASE,OAATF,CAAiBzB,CAAjByB,CADEF,GAGFE,CAAAA,CAAStI,IAATsI,CAAczB,CAAdyB,CAToB,EASNzB,CAKbyB,CAAAA,CAASG,MALI5B,KAMhBwB,CAAAA,GAAI4T,CAAAA,CAAiB3W,CAAjB2W,CANYpV,KAOPwB,CAAAA,GAAI,CAPGxB,IAOEyB,CAAAA,CAASjJ,MAATiJ,GAAkBD,CAFtC,EAEyC;AACrCC,MAAAA,CAAAA,CAASG,MAATH,GAASG,CAAS,CAAlBH;AACA,UAAII,CAAAA,GAAI,IAAIpK,KAAJ,CAAU,iDACEgK,CAAAA,CAASjJ,MADX,GACoB,GADpB,GAC0BsI,CAD1B,GACiC,mEAD3C,CAAR;AAGAe,MAAAA,CAAAA,CAAErH,IAAFqH,GAAS,6BAATA,EACAA,CAAAA,CAAEE,OAAFF,GAAYpD,CADZoD,EAEAA,CAAAA,CAAEf,IAAFe,GAASf,CAFTe,EAGAA,CAAAA,CAAEG,KAAFH,GAAUJ,CAAAA,CAASjJ,MAHnBqJ,EAWajK,CAAAA,GAPDiK,CAJZA,EAYkB,cAAA,OAAjB3C,OAAAA,CAAQC,IAAS,GAAaD,OAAAA,CAAQC,IAARD,CAAatH,CAAbsH,CAAb,GAA+BA,OAAAA,CAAQyL,GAARzL,CAAYtH,CAAZsH,CAZjD2C;AAY6DjK;AAAAA,GAtCnE,MAEE6J,CAAAA,GAAWT,CAAAA,CAAOF,CAAPE,CAAAA,GAAehB,CAA1ByB,EAA0BzB,EACxBvB,CAAAA,CAAOmB,YADT6B;;AAiCF,SAAOhD,CAAP;AAgBF;;AAAA,SAAS2D,CAAT,CAAmB3D,CAAnB,EAA2BqC,CAA3B,EAAiCd,CAAjC,EAAiCA;AAC/B,MAAIkC,CAAAA,GAAAA,CAAQ,CAAZ;;AACA,WAAS4T,CAAT,GAASA;AACPrX,IAAAA,CAAAA,CAAOvE,cAAPuE,CAAsBqC,CAAtBrC,EAA4BqX,CAA5BrX,GACKyD,CAAAA,KACHA,CAAAA,GAAAA,CAAQ,CAARA,EACAlC,CAAAA,CAASzG,KAATyG,CAAevB,CAAfuB,EAAuB/G,SAAvB+G,CAFGkC,CADLzD;AAOF;;AAAA,SADAqX,CAAAA,CAAE9V,QAAF8V,GAAa9V,CAAb8V,EACOA,CAAP;AA2JF;;AAAA,SAAS3S,CAAT,CAAuBrC,CAAvB,EAAuBA;AACrB,MAAIE,CAAAA,GAASmU,KAAKzV,OAAlB;;AAEA,MAAIsB,CAAJ,EAAY;AACV,QAAIgC,CAAAA,GAAahC,CAAAA,CAAOF,CAAPE,CAAjB;AAEA,QAA0B,cAAA,OAAfgC,CAAX,EACE,OAAO,CAAP;AACK,QAAIA,CAAJ,EACL,OAAOA,CAAAA,CAAWxK,MAAlB;AAIJ;;AAAA,SAAO,CAAP;AAcF;;AAAA,SAAS6I,CAAT,CAAoBgC,CAApB,EAAyBnK,CAAzB,EAAyBA;AAEvB,OADA,IAAIoK,CAAAA,GAAO,IAAItK,KAAJ,CAAUE,CAAV,CACX,EAAOA,CAAAA,EAAP,GACEoK,CAAAA,CAAKpK,CAALoK,CAAAA,GAAUD,CAAAA,CAAInK,CAAJmK,CAAVC;;AACF,SAAOA,CAAP;AAzcF4R;;AAAAA,CAAAA,CAAc5b,SAAd4b,GAA0BhZ,MAAAA,CAAOuE,MAAPvE,CAAc,IAAdA,CAA1BgZ,EAUA1V,CAAAA,CAAaA,YAAbA,GAA4BA,CAV5B0V,EAYA1V,CAAAA,CAAauW,YAAbvW,GAAauW,CAAe,CAZ5Bb,EAcA1V,CAAAA,CAAalG,SAAbkG,CAAuBwW,MAAvBxW,GAAuBwW,KAASrW,CAdhCuV,EAeA1V,CAAAA,CAAalG,SAAbkG,CAAuBE,OAAvBF,GAAuBE,KAAUC,CAfjCuV,EAgBA1V,CAAAA,CAAalG,SAAbkG,CAAuBK,aAAvBL,GAAuBK,KAAgBF,CAhBvCuV,EAoBA1V,CAAAA,CAAaM,mBAAbN,GAAmC,EApBnC0V,EAsBA1V,CAAAA,CAAaC,IAAbD,GAAoB,YAAA;AAClB2V,OAAKa,MAALb,GAAc,IAAdA,EACI3V,CAAAA,CAAauW,YAAbvW,IAAauW,CAAAA,KA9BfC,CA8BeD,EAEJE,MAFTzW,IAESyW,CAAAA,KAhCXD,CAgCWC,EAAmCC,MAHhDf,EAQKA,KAAKzV,OAALyV,IAAgBA,KAAKzV,OAALyV,KAAiBjZ,MAAAA,CAAOsE,cAAPtE,CAAsBiZ,IAAtBjZ,EAA4BwD,OAA7DyV,KACHA,KAAKzV,OAALyV,GAAe,IAAID,CAAJ,EAAfC,EACAA,KAAKvV,YAALuV,GAAoB,CAFjBA,CARLA,EAaAA,KAAKtV,aAALsV,GAAqBA,KAAKtV,aAALsV,IAAKtV,KAAiBF,CAb3CwV;AAa2CxV,CApC7CuV,EAyCA1V,CAAAA,CAAalG,SAAbkG,CAAuBkB,eAAvBlB,GAAyC,UAAyB1C,CAAzB,EAAyBA;AAChE,MAAiB,YAAA,OAANA,CAAM,IAAYA,CAAAA,GAAI,CAAhB,IAAqBwC,KAAAA,CAAMxC,CAANwC,CAAtC,EACE,MAAM,IAAIW,SAAJ,CAAc,wCAAd,CAAN;AAEF,SADAkV,KAAKtV,aAALsV,GAAqBrY,CAArBqY,EACOA,IAAP;AAAOA,CA7CTD,EAsDA1V,CAAAA,CAAalG,SAAbkG,CAAuBqB,eAAvBrB,GAAyC,YAAA;AACvC,SAAO4V,CAAAA,CAAiBD,IAAjBC,CAAP;AAAwBD,CAvD1BD,EAmHA1V,CAAAA,CAAalG,SAAbkG,CAAuBpF,IAAvBoF,GAA8B,UAAcsB,CAAd,EAAcA;AAC1C,MAAII,CAAJ;AAAA,MAAQE,CAAR;AAAA,MAAiBxI,CAAjB;AAAA,MAAsBG,CAAtB;AAAA,MAA4BG,CAA5B;AAAA,MAA+B8H,CAA/B;AAAA,MAAuCgV,CAAvC;AAAA,MAEIjV,CAAAA,GAAoB,YAATD,CAFf;AAKA,MADAE,CAAAA,GAASmU,KAAKzV,OACd,EACEqB,CAAAA,GAAWA,CAAAA,IAA2B,QAAhBC,CAAAA,CAAOC,KAA7BF,CADF,KAEK,IAAA,CAAKA,CAAL,EACH,OAAA,CAAO,CAAP;;AAKF,MAHAiV,CAAAA,GAASb,KAAKa,MAAdA,EAGIjV,CAAJ,EAAa;AAEX,QADAG,CAAAA,GAAKjI,SAAAA,CAAU,CAAVA,CAALiI,EAAe,CACX8U,CAAJ,EAOO;AAAA,UAAI9U,CAAAA,YAAczJ,KAAlB,EACL,MAAMyJ,CAAN;AAGA,UAAIlE,CAAAA,GAAM,IAAIvF,KAAJ,CAAU,2CAA2CyJ,CAA3C,GAAgD,GAA1D,CAAV;AAEA,YADAlE,CAAAA,CAAImE,OAAJnE,GAAckE,CAAdlE,EACMA,CAAN;AAEF;;AAAA,WAdOkE,CAAAA,KACHA,CAAAA,GAAK,IAAIzJ,KAAJ,CAAU,qCAAV,CADFyJ,CAAAA,EAELA,CAAAA,CAAGiV,aAAHjV,GAAmBiU,IAFdjU,EAGLA,CAAAA,CAAG8U,MAAH9U,GAAY8U,CAHP9U,EAILA,CAAAA,CAAGkV,YAAHlV,GAAGkV,CAAe,CAJblV,EAKL8U,CAAAA,CAAO5b,IAAP4b,CAAY,OAAZA,EAAqB9U,CAArB8U,CALK9U,EAKgBA,CAShB,CAAP;AAKF;;AAAA,MAAA,EAFAE,CAAAA,GAAUJ,CAAAA,CAAOF,CAAPE,CAEV,CAAA,EACE,OAAA,CAAO,CAAP;AAEF,MAAIsU,CAAAA,GAA0B,cAAA,OAAZlU,CAAlB;;AAEA,UADAxI,CAAAA,GAAMK,SAAAA,CAAUT,MAChB;AAEE,SAAK,CAAL;AACE6c,MAAAA,CAAAA,CAASjU,CAATiU,EAAkBC,CAAlBD,EAAwBF,IAAxBE,CAAAA;AACA;;AACF,SAAK,CAAL;AACEE,MAAAA,CAAAA,CAAQnU,CAARmU,EAAiBD,CAAjBC,EAAuBJ,IAAvBI,EAA6Btc,SAAAA,CAAU,CAAVA,CAA7Bsc,CAAAA;AACA;;AACF,SAAK,CAAL;AACEE,MAAAA,CAAAA,CAAQrU,CAARqU,EAAiBH,CAAjBG,EAAuBN,IAAvBM,EAA6Bxc,SAAAA,CAAU,CAAVA,CAA7Bwc,EAA2Cxc,SAAAA,CAAU,CAAVA,CAA3Cwc,CAAAA;;AACA;;AACF,SAAK,CAAL;AACEE,MAAAA,CAAAA,CAAUvU,CAAVuU,EAAmBL,CAAnBK,EAAyBR,IAAzBQ,EAA+B1c,SAAAA,CAAU,CAAVA,CAA/B0c,EAA6C1c,SAAAA,CAAU,CAAVA,CAA7C0c,EAA2D1c,SAAAA,CAAU,CAAVA,CAA3D0c,CAAAA;AACA;;AAEF;AAEE,WADA5c,CAAAA,GAAO,IAAIC,KAAJ,CAAUJ,CAAAA,GAAM,CAAhB,CAAPG,EACKG,CAAAA,GAAI,CAAT,EAAYA,CAAAA,GAAIN,CAAhB,EAAqBM,CAAAA,EAArB,EACEH,CAAAA,CAAKG,CAAAA,GAAI,CAATH,CAAAA,GAAcE,SAAAA,CAAUC,CAAVD,CAAdF;;AACF8c,MAAAA,CAAAA,CAASzU,CAATyU,EAAkBP,CAAlBO,EAAwBV,IAAxBU,EAA8B9c,CAA9B8c,CAAAA;AAnBJ;;AAyBA,SAAA,CAAO,CAAP;AAAO,CArLTX,EA0PA1V,CAAAA,CAAalG,SAAbkG,CAAuBzF,WAAvByF,GAAqC,UAAqBsB,CAArB,EAA2Bd,CAA3B,EAA2BA;AAC9D,SAAOsB,CAAAA,CAAa6T,IAAb7T,EAAmBR,CAAnBQ,EAAyBtB,CAAzBsB,EAAyBtB,CAAU,CAAnCsB,CAAP;AAA0C,CA3P5C4T,EA8PA1V,CAAAA,CAAalG,SAAbkG,CAAuB1F,EAAvB0F,GAA4BA,CAAAA,CAAalG,SAAbkG,CAAuBzF,WA9PnDmb,EAgQA1V,CAAAA,CAAalG,SAAbkG,CAAuBnF,eAAvBmF,GACI,UAAyBsB,CAAzB,EAA+Bd,CAA/B,EAA+BA;AAC7B,SAAOsB,CAAAA,CAAa6T,IAAb7T,EAAmBR,CAAnBQ,EAAyBtB,CAAzBsB,EAAyBtB,CAAU,CAAnCsB,CAAP;AAA0C,CAlQhD4T,EAkRA1V,CAAAA,CAAalG,SAAbkG,CAAuBxF,IAAvBwF,GAA8B,UAAcsB,CAAd,EAAoBd,CAApB,EAAoBA;AAChD,MAAwB,cAAA,OAAbA,CAAX,EACE,MAAM,IAAIC,SAAJ,CAAc,wCAAd,CAAN;AAEF,SADAkV,KAAKrb,EAALqb,CAAQrU,CAARqU,EAAc/S,CAAAA,CAAU+S,IAAV/S,EAAgBtB,CAAhBsB,EAAsBpC,CAAtBoC,CAAd+S,GACOA,IAAP;AAAOA,CAtRTD,EAyRA1V,CAAAA,CAAalG,SAAbkG,CAAuBlF,mBAAvBkF,GACI,UAA6BsB,CAA7B,EAAmCd,CAAnC,EAAmCA;AACjC,MAAwB,cAAA,OAAbA,CAAX,EACE,MAAM,IAAIC,SAAJ,CAAc,wCAAd,CAAN;AAEF,SADAkV,KAAK9a,eAAL8a,CAAqBrU,CAArBqU,EAA2B/S,CAAAA,CAAU+S,IAAV/S,EAAgBtB,CAAhBsB,EAAsBpC,CAAtBoC,CAA3B+S,GACOA,IAAP;AAAOA,CA9RbD,EAkSA1V,CAAAA,CAAalG,SAAbkG,CAAuBtF,cAAvBsF,GACI,UAAwBsB,CAAxB,EAA8Bd,CAA9B,EAA8BA;AAC5B,MAAIwC,CAAJ,EAAUxB,CAAV,EAAkByB,CAAlB,EAA4BvJ,CAA5B,EAA+BwJ,CAA/B;AAEA,MAAwB,cAAA,OAAb1C,CAAX,EACE,MAAM,IAAIC,SAAJ,CAAc,wCAAd,CAAN;AAGF,MAAA,EADAe,CAAAA,GAASmU,KAAKzV,OACd,CAAA,EACE,OAAOyV,IAAP;AAGF,MAAA,EADA3S,CAAAA,GAAOxB,CAAAA,CAAOF,CAAPE,CACP,CAAA,EACE,OAAOmU,IAAP;AAEF,MAAI3S,CAAAA,KAASxC,CAATwC,IAAsBA,CAAAA,CAAKxC,QAALwC,IAAiBA,CAAAA,CAAKxC,QAALwC,KAAkBxC,CAA7D,EAC8B,KAAA,EAAtBmV,KAAKvV,YAAiB,GAC1BuV,KAAKzV,OAALyV,GAAe,IAAID,CAAJ,EADW,IACPA,OAEZlU,CAAAA,CAAOF,CAAPE,CAFYkU,EAGflU,CAAAA,CAAO9G,cAAP8G,IACFmU,KAAK/a,IAAL+a,CAAU,gBAAVA,EAA4BrU,CAA5BqU,EAAkC3S,CAAAA,CAAKxC,QAALwC,IAAiBxC,CAAnDmV,CALwB,EAD9B,KAQO,IAAoB,cAAA,OAAT3S,CAAX,EAAgC;AAGrC,SAFAC,CAAAA,GAAAA,CAAY,CAAZA,EAEKvJ,CAAAA,GAAIsJ,CAAAA,CAAKhK,MAAd,EAAsBU,CAAAA,KAAM,CAA5B,GACE,IAAIsJ,CAAAA,CAAKtJ,CAALsJ,CAAAA,KAAYxC,CAAZwC,IACCA,CAAAA,CAAKtJ,CAALsJ,CAAAA,CAAQxC,QAARwC,IAAoBA,CAAAA,CAAKtJ,CAALsJ,CAAAA,CAAQxC,QAARwC,KAAqBxC,CAD9C,EACyD;AACvD0C,MAAAA,CAAAA,GAAmBF,CAAAA,CAAKtJ,CAALsJ,CAAAA,CAAQxC,QAA3B0C,EACAD,CAAAA,GAAWvJ,CADXwJ;AAEA;AAIJ;;AAAA,QAAID,CAAAA,GAAW,CAAf,EACE,OAAO0S,IAAP;;AAEF,QAAoB,MAAhB3S,CAAAA,CAAKhK,MAAT,EAAuB;AAErB,UADAgK,CAAAA,CAAK,CAALA,CAAAA,GAAK,KAAK7C,CAAV6C,EAC4B,KAAA,EAAtB2S,KAAKvV,YAAX,EAEE,OADAuV,KAAKzV,OAALyV,GAAe,IAAID,CAAJ,EAAfC,EACOA,IAAP;AAAOA,aAEAnU,CAAAA,CAAOF,CAAPE,CAFAmU;AAEOrU,KANlB,MAMkBA,CAiH1B,UAAmB0B,CAAnB,EAAyBe,CAAzB,EAAyBA;AACvB,WAAK,IAAIrK,CAAAA,GAAIqK,CAAR,EAAe8S,CAAAA,GAAInd,CAAAA,GAAI,CAAvB,EAA0B4D,CAAAA,GAAI0F,CAAAA,CAAKhK,MAAxC,EAAgD6d,CAAAA,GAAIvZ,CAApD,EAAuD5D,CAAAA,IAAK,CAALA,EAAQmd,CAAAA,IAAK,CAApE,EACE7T,CAAAA,CAAKtJ,CAALsJ,CAAAA,GAAUA,CAAAA,CAAK6T,CAAL7T,CAAVA;;AACFA,MAAAA,CAAAA,CAAKgB,GAALhB;AAjHQI,KA8GV,CA9GoBJ,CA8GpB,EA9G0BC,CA8G1B,CAjH0B3B;;AAMdE,IAAAA,CAAAA,CAAO9G,cAAP8G,IACFmU,KAAK/a,IAAL+a,CAAU,gBAAVA,EAA4BrU,CAA5BqU,EAAkCzS,CAAAA,IAAoB1C,CAAtDmV,CADEnU;AAIN;AAAA,SAAOmU,IAAP;AAAOA,CAxVbD,EA2VA1V,CAAAA,CAAalG,SAAbkG,CAAuBrF,kBAAvBqF,GACI,UAA4BsB,CAA5B,EAA4BA;AAC1B,MAAIvG,CAAJ,EAAeyG,CAAf;AAGA,MAAA,EADAA,CAAAA,GAASmU,KAAKzV,OACd,CAAA,EACE,OAAOyV,IAAP;AAGF,MAAA,CAAKnU,CAAAA,CAAO9G,cAAZ,EAUE,OATyB,MAArBjB,SAAAA,CAAUT,MAAW,IACvB2c,KAAKzV,OAALyV,GAAe,IAAID,CAAJ,EAAfC,EACAA,KAAKvV,YAALuV,GAAoB,CAFG,IAGdnU,CAAAA,CAAOF,CAAPE,CAAAA,KACmB,KAAA,EAAtBmU,KAAKvV,YAAiB,GAC1BuV,KAAKzV,OAALyV,GAAe,IAAID,CAAJ,EADW,GACPA,OAEZlU,CAAAA,CAAOF,CAAPE,CAJAA,CAHc,EASlBmU,IAAP;;AAIF,MAAyB,MAArBlc,SAAAA,CAAUT,MAAd,EAA4B;AAE1B,SADA,IACgBqK,CADhB,EAAI1G,CAAAA,GAAOD,MAAAA,CAAOC,IAAPD,CAAY8E,CAAZ9E,CAAX,EACShD,CAAAA,GAAI,CAAb,EAAqBA,CAAAA,GAAIiD,CAAAA,CAAK3D,MAA9B,EAA8BA,EAAUU,CAAxC,EAEc,sBADZ2J,CAAAA,GAAM1G,CAAAA,CAAKjD,CAALiD,CACM,KACZgZ,KAAKhb,kBAALgb,CAAwBtS,CAAxBsS,CADY;;AAMd,WAHAA,KAAKhb,kBAALgb,CAAwB,gBAAxBA,GACAA,KAAKzV,OAALyV,GAAe,IAAID,CAAJ,EADfC,EAEAA,KAAKvV,YAALuV,GAAoB,CAFpBA,EAGOA,IAAP;AAKF;;AAAA,MAAyB,cAAA,QAFzB5a,CAAAA,GAAYyG,CAAAA,CAAOF,CAAPE,CAEa,CAAzB,EACEmU,KAAKjb,cAALib,CAAoBrU,CAApBqU,EAA0B5a,CAA1B4a,EADF,KAEO,IAAI5a,CAAJ,EAEL,GAAA;AACE4a,SAAKjb,cAALib,CAAoBrU,CAApBqU,EAA0B5a,CAAAA,CAAUA,CAAAA,CAAU/B,MAAV+B,GAAmB,CAA7BA,CAA1B4a;AAAuD,GADzD,QAES5a,CAAAA,CAAU,CAAVA,CAFT;AAKF,SAAO4a,IAAP;AAAOA,CA1YbD,EA6YA1V,CAAAA,CAAalG,SAAbkG,CAAuBjF,SAAvBiF,GAAmC,UAAmBsB,CAAnB,EAAmBA;AACpD,MAAIkC,CAAJ;AAAA,MAEIhC,CAAAA,GAASmU,KAAKzV,OAFlB;AAgBA,SAZKsB,CAAAA,KAGHgC,CAAAA,GAAahC,CAAAA,CAAOF,CAAPE,CAHVA,CAAAA,GAM4B,cAAA,OAAfgC,CAAe,GACvB,CAACA,CAAAA,CAAWhD,QAAXgD,IAAuBA,CAAxB,CADuB,GAoDnC,UAAyBK,CAAzB,EAAyBA;AAEvB,SADA,IAAII,CAAAA,GAAM,IAAIzK,KAAJ,CAAUqK,CAAAA,CAAI7K,MAAd,CAAV,EACSU,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIuK,CAAAA,CAAIjL,MAAxB,EAAwBA,EAAUU,CAAlC,EACEuK,CAAAA,CAAIvK,CAAJuK,CAAAA,GAASJ,CAAAA,CAAInK,CAAJmK,CAAAA,CAAOrD,QAAPqD,IAAmBA,CAAAA,CAAInK,CAAJmK,CAA5BI;;AAEF,WAAOA,CAAP;AAtDUR,GAiDZ,CAjD4BD,CAiD5B,CA1DOhC,GACG,EAWR;AAXQ,CAnZVkU,EAiaA1V,CAAAA,CAAa2D,aAAb3D,GAA6B,UAASuC,CAAT,EAAkBjB,CAAlB,EAAkBA;AAC7C,SAAqC,cAAA,OAA1BiB,CAAAA,CAAQoB,aAAkB,GAC5BpB,CAAAA,CAAQoB,aAARpB,CAAsBjB,CAAtBiB,CAD4B,GAG5BoB,CAAAA,CAAcnL,IAAdmL,CAAmBpB,CAAnBoB,EAA4BrC,CAA5BqC,CAHT;AAGqCrC,CAravCoU,EAyaA1V,CAAAA,CAAalG,SAAbkG,CAAuB2D,aAAvB3D,GAAuC2D,CAzavC+R,EA0bA1V,CAAAA,CAAalG,SAAbkG,CAAuB4D,UAAvB5D,GAAoC,YAAA;AAClC,SAAO2V,KAAKvV,YAALuV,GAAoB,CAApBA,GAAwB5W,OAAAA,CAAQM,OAARN,CAAgB4W,KAAKzV,OAArBnB,CAAxB4W,GAAwD,EAA/D;AAA+D,CA3bjED;;AA2biE,MC5XpDoB,CD4XoD,SC5X5B9W,CD4X4B,CC5X5BA;AAArC+W,EAAAA,WAAAA,GAAAA;AAAAA,UAAAA,GAAAA,SAAAA,GAEYpB,KAAAA,qBAAAA,GAAyBnV,CAAAA,IAAAA,KAAoIL,CAApIK,KAAmFA,CAAAA,CAAiCwW,WAFzJD;AAIWA;;AAAAA,EAAAA,gBAAAA,CAAiBzV,CAAjByV,EAA+BvW,CAA/BuW,EAA+BvW;AAClC,QAAIA,CAAJ,EAAc;AACV,YAAMoB,CAAAA,GAAU+T,KAAKsB,qBAALtB,CAA2BnV,CAA3BmV,IAAuCnV,CAAAA,CAASwW,WAAhDrB,GAA8DnV,CAA9E;AACA0W,YAAM3c,WAAN2c,CAAkB5V,CAAlB4V,EAAwBtV,CAAxBsV;AAAwBtV;AAIzBmV;;AAAAA,EAAAA,mBAAAA,CAAoBzV,CAApByV,EAAkCrH,CAAlCqH,EAAkCrH;AACrC,QAAIA,CAAJ,EAAc;AACV,YAAM9N,CAAAA,GAAU+T,KAAKsB,qBAALtB,CAA2BjG,CAA3BiG,IAAuCjG,CAAAA,CAASsH,WAAhDrB,GAA8DjG,CAA9E;AACAwH,YAAMxc,cAANwc,CAAqB5V,CAArB4V,EAA2BtV,CAA3BsV;AAA2BtV;AAI5BmV;;AAAAA,EAAAA,aAAAA,CAAcI,CAAdJ,EAAcI;AACjB,WAAOD,MAAMtc,IAANsc,CAAWC,CAAAA,CAAM7V,IAAjB4V,EAAuBC,CAAvBD,CAAP;AAA8BC;;AAnBDnX;;ACxCrC,MAAaoX,CAAb,CAAaA;AAoBTL,EAAAA,WAAAA,CAAY9W,CAAZ8W,EAAY9W;AAfI0V,SAAAA,kBAAAA,GAA6B,IAA7BA,EAKAA,KAAAA,iBAAAA,GAA6B,IAL7BA,EAUAA,KAAAA,UAAAA,GAAkC,EAVlCA,EAgBZA,KAAK0B,kBAAL1B,GAA0B1V,CAAAA,CAAKoX,kBAhBnB1B,EAiBZA,KAAK2B,iBAAL3B,GAAyB1V,CAAAA,CAAKqX,iBAjBlB3B,EAkBZA,KAAKzH,UAALyH,GAAkB1V,CAAAA,CAAKiO,UAlBXyH;AAkBWzH;;AAvBlBkJ;;ACCb,MAAaG,CAAb,CAAaA;AAoCTR,EAAAA,WAAAA,CAAY9W,CAAZ8W,EAAY9W;AA/BI0V,SAAAA,eAAAA,GAA0B,IAA1BA,EAKAA,KAAAA,UAAAA,GAA2C,EAL3CA,EAORA,KAAAA,QAAAA,GAAAA,CAAoB,CAPZA,EAeRA,KAAAA,iBAAAA,GAA4B,CAfpBA,EA0BAA,KAAAA,OAAAA,GAAkB,IA1BlBA,EAgCZA,KAAK1G,eAAL0G,GAAuB1V,CAAAA,CAAKgP,eAhChB0G,EAiCZA,KAAK6B,UAAL7B,GAAkB1V,CAAAA,CAAKuX,UAjCX7B,EAmCZA,KAAK8B,OAAL9B,GAAe1V,CAAAA,CAAKwX,OAnCR9B;AAWhB+B;;AAAAA,MAAAA,OAAAA,GAAAA;AACI,WAAO/B,KAAKgC,QAAZ;AAOJC;;AAAAA,MAAAA,SAAAA,GAAAA;AACI,WAAOjC,KAAK6B,UAAL7B,CAAgBkC,IAAhBlC,CAAqBiC,CAAAA,IAAaA,CAAAA,CAAUE,gBAAVF,KAA+BjC,KAAKoC,iBAAtEpC,CAAP;AAqBGoB;;AAAAA,EAAAA,wBAAAA,CAAyBe,CAAzBf,EAAyBe;AAC5B,WAAOE,CAAAA,CAAQC,wBAARD,CAAiCrC,KAAK8B,OAAtCO,EAA+CrC,KAAK1G,eAApD+I,EAAqEF,CAArEE,EACNpL,IADMoL,CACD,MAAA;AACFrC,WAAKoC,iBAALpC,GAAyBmC,CAAzBnC;AAAyBmC,KAFtBE,CAAP;AASGjB;;AAAAA,EAAAA,cAAAA,GAAAA;AACH,WAAOiB,CAAAA,CAAQE,cAARF,CAAuBrC,KAAK8B,OAA5BO,EAAqCrC,KAAK1G,eAA1C+I,EACNpL,IADMoL,CACD,MAAA;AACFrC,WAAKgC,QAALhC,GAAKgC,CAAW,CAAhBhC;AAAgB,KAFbqC,CAAP;AASGjB;;AAAAA,EAAAA,gBAAAA,GAAAA;AACH,WAAOiB,CAAAA,CAAQG,gBAARH,CAAyBrC,KAAK8B,OAA9BO,EAAuCrC,KAAK1G,eAA5C+I,EACNpL,IADMoL,CACD,MAAA;AACFrC,WAAKgC,QAALhC,GAAKgC,CAAW,CAAhBhC;AAAgB,KAFbqC,CAAP;AASGjB;;AAAAA,EAAAA,KAAAA,GAAAA;AACHpB,SAAKoC,iBAALpC,GAAyB,CAAzBA;AAAyB;;AA7EpB4B;;ACDb,MAAaa,CAAb,CAAaA;AAmCTrB,EAAAA,WAAAA,CAAY9W,CAAZ8W,EAAY9W;AA9BI0V,SAAAA,gBAAAA,GAA2B,IAA3BA,EAKAA,KAAAA,cAAAA,GAAyB,IALzBA,EAUAA,KAAAA,iBAAAA,GAA4B,IAV5BA,EAeAA,KAAAA,iBAAAA,GAA4B,IAf5BA,EAoBAA,KAAAA,aAAAA,GAAyB,IApBzBA,EAyBAA,KAAAA,SAAAA,GAAgC,EAzBhCA,EA+BZA,KAAKmC,gBAALnC,GAAwB1V,CAAAA,CAAK6X,gBA/BjBnC,EAgCZA,KAAK0C,cAAL1C,GAAsB1V,CAAAA,CAAKoY,cAhCf1C,EAiCZA,KAAK2C,iBAAL3C,GAAyB1V,CAAAA,CAAKqY,iBAjClB3C,EAkCZA,KAAK4C,iBAAL5C,GAAyB1V,CAAAA,CAAKsY,iBAlClB5C,EAmCZA,KAAK6C,aAAL7C,GAAqB1V,CAAAA,CAAKuY,aAnCd7C,EAoCZA,KAAKlD,SAALkD,GAAiB1V,CAAAA,CAAKwS,SApCVkD;AAoCUlD;;AAzCjB2F;;ACDb,MAAaK,CAAb,CAAaA;AAyBT1B,EAAAA,WAAAA,CAAY9W,CAAZ8W,EAAY9W;AApBI0V,SAAAA,cAAAA,GAAyB,IAAzBA,EAKAA,KAAAA,SAAAA,GAA0B,IAL1BA,EAUAA,KAAAA,IAAAA,GAAwB,IAVxBA,EAeAA,KAAAA,UAAAA,GAAqB,IAfrBA,EAqBZA,KAAK+C,cAAL/C,GAAsB1V,CAAAA,CAAKyY,cArBf/C,EAsBZA,KAAKV,SAALU,GAAiB1V,CAAAA,CAAKgV,SAtBVU,EAuBZA,KAAKrU,IAALqU,GAAY1V,CAAAA,CAAKqB,IAvBLqU,EAwBZA,KAAKgD,UAALhD,GAAkB1V,CAAAA,CAAK0Y,UAxBXhD;AAwBWgD;;AA7BlBF;;ACWb,MAAaG,CAAb,CAAaA;AA2HT7B,EAAAA,WAAAA,CAAY9W,CAAZ8W,EAAY9W;AA/DI0V,SAAAA,gBAAAA,GAA2B,IAA3BA,EAKAA,KAAAA,WAAAA,GAAsB,IALtBA,EAUAA,KAAAA,YAAAA,GAAuB,IAVvBA,EAYRA,KAAAA,eAAAA,GAA2C,EAZnCA,EAuBTA,KAAAA,qBAAAA,GAAgC,IAvBvBA,EAgDAA,KAAAA,GAAAA,GAAc,IAhDdA,EAqDAA,KAAAA,cAAAA,GAAyB,CArDzBA,EA0DAA,KAAAA,OAAAA,GAAkB,IA1DlBA,EAgEZA,KAAKkD,eAALlD,GAAuB1V,CAAAA,CAAK4Y,eAhEhBlD,EAiEZA,KAAKmD,eAALnD,GAAuB1V,CAAAA,CAAK6Y,eAjEhBnD,EAkEZA,KAAKoD,kBAALpD,GAA0B1V,CAAAA,CAAK8Y,kBAlEnBpD,EAmEZA,KAAKqD,WAALrD,GAAmB1V,CAAAA,CAAK+Y,WAnEZrD,EAoEZA,KAAKsD,cAALtD,GAAsB1V,CAAAA,CAAKgZ,cApEftD,EAqEZA,KAAKuD,cAALvD,GAAsB1V,CAAAA,CAAKiZ,cArEfvD,EAsEZA,KAAKwD,QAALxD,GAAgB1V,CAAAA,CAAKkZ,QAtETxD,EAuEZA,KAAKyD,SAALzD,GAAiB1V,CAAAA,CAAKmZ,SAvEVzD,EAwEZA,KAAK0D,kBAAL1D,GAA0B1V,CAAAA,CAAKoZ,kBAxEnB1D,EAyEZA,KAAK2D,kBAAL3D,GAA0B1V,CAAAA,CAAKqZ,kBAzEnB3D,EA0EZA,KAAK4D,qBAAL5D,GAA6B1V,CAAAA,CAAKsZ,qBA1EtB5D,EA4EZA,KAAK6D,gBAAL7D,GAAwB1V,CAAAA,CAAKuZ,gBA5EjB7D,EA6EZA,KAAK8D,WAAL9D,GAAmB1V,CAAAA,CAAKwZ,WA7EZ9D,EA8EZA,KAAK+D,YAAL/D,GAAoB1V,CAAAA,CAAKyZ,YA9Eb/D,EAgFZA,KAAKgE,eAALhE,GAAuB1V,CAAAA,CAAK2Z,cAhFhBjE,EAkFZA,KAAKkE,GAALlE,GAAW1V,CAAAA,CAAK4Z,GAlFJlE,EAmFZA,KAAKmE,cAALnE,GAAsB1V,CAAAA,CAAK6Z,cAnFfnE,EAoFZA,KAAK8B,OAAL9B,GAAe1V,CAAAA,CAAKwX,OApFR9B,EAqFZA,KAAKoE,qBAALpE,GAA6B1V,CAAAA,CAAK8Z,qBArFtBpE;AAgBhBiE;;AAAAA,MAAAA,cAAAA,GAAAA;AACI,WAAOjE,KAAKgE,eAAZ;AAUJK;;AAAAA,MAAAA,aAAAA,GAAAA;AACI,WAAOrE,KAAKiE,cAALjE,CAAoBkC,IAApBlC,CAAyBqE,CAAAA,IAAiBA,CAAAA,CAAc3C,kBAAd2C,KAAqCrE,KAAKoE,qBAApFpE,CAAP;AAMJsE;;AAAAA,MAAAA,SAAAA,GAAAA;AACI,WAAOjC,CAAAA,CAAQkC,YAARlC,CAAqBrC,KAAK8B,OAA1BO,CAAP;AAMJmC;;AAAAA,MAAAA,MAAAA,GAAAA;AACI,WAAOnC,CAAAA,CAAQoC,SAARpC,CAAkBrC,KAAK8B,OAAvBO,CAAP;AA8CIjB;;AAAAA,EAAAA,WAAAA,CAAY9B,CAAZ8B,EAAqC2B,CAArC3B,EAAqC2B;AACzC,QAAI3E,CAAAA,GAAW,IAAf;AAAA,QACIsG,CAAAA,GAAQ,IADZ;AAYA,WATA1E,KAAKqE,aAALrE,CAAmBzH,UAAnByH,CAA8B2E,IAA9B3E,CAAmC4E,CAAAA,KAC/BxG,CAAAA,GAAWwG,CAAAA,CAAa3C,SAAb2C,CAAuB9H,SAAvB8H,CAAiC1C,IAAjC0C,CAAsCC,CAAAA,IACrCA,CAAAA,CAAY9B,cAAZ8B,KAA+B9B,CAA/B8B,IAAiDA,CAAAA,CAAYvF,SAAZuF,KAA0BvF,CAD5EsF,CAAXxG,EAIIA,CAAAA,KAAUsG,CAAAA,GAAQE,CAAlBxG,CAJJA,EAKOA,CANwBwG,CAAnC5E,GASO;AACH5B,MAAAA,QAAAA,EAAUA,CADP;AAEHsG,MAAAA,KAAAA,EAAOA;AAFJ,KAAP;AAMItD;;AAAAA,EAAAA,YAAAA,CAAa0D,CAAb1D,EAAa0D;AACjB,QAAwB,gBAApBA,CAAAA,CAAMC,SAAV,EAAqC;AACjC,YAAMzL,CAAAA,GAAgC,MAAdwL,CAAAA,CAAM1W,KAA9B;AAAA,YACMsW,CAAAA,GAAQ1E,KAAKqE,aAALrE,CAAmBzH,UAAnByH,CAA8BkC,IAA9BlC,CAAmC4E,CAAAA,IAAgBA,CAAAA,CAAatL,eAAbsL,KAAiCtL,CAApF0G,CADd;AAEA,UAAA,CAAK0E,CAAL,EAAY,OAAO,qBAAP;AACZ,UAAA,CAAKA,CAAAA,CAAM3C,OAAX,EAAoB,OAAO,eAAP;AAAO,KAJ/B,MAMO,IAAwB,eAApB+C,CAAAA,CAAMC,SAAV,EAAoC;AACvC,YAAMhC,CAAAA,GAA+B,KAAd+B,CAAAA,CAAM1W,KAA7B;AAAA,YACMkR,CAAAA,GAAYwF,CAAAA,CAAM1W,KAAN0W,GAAc7K,uBAAd6K,GAAmC,IAAnCA,GAA0C,KAD5D;AAAA,YAGME,CAAAA,GAAShF,KAAKiF,WAALjF,CAAiBV,CAAjBU,EAA4B+C,CAA5B/C,CAHf;AAIA,UAAA,CAAKgF,CAAAA,CAAO5G,QAAZ,EAAsB,OAAO,oBAAP;AACtB,UAAA,CAAK4G,CAAAA,CAAON,KAAPM,CAAajD,OAAlB,EAA2B,OAAO,eAAP;AAAO;AAOnCX;;AAAAA,EAAAA,IAAAA,GAAAA;AACH,WAAO,IAAI7S,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KACVwR,KAAKsE,SAALtE,GACDA,KAAKwE,MAALxE,GAAoBjY,CAAAA,EAApBiY,GAAoBjY,KAExBsa,CAAAA,CAAQjK,IAARiK,CAAarC,KAAK8B,OAAlBO,EACCpL,IADDoL,CACMta,CADNsa,EAEC6C,KAFD7C,CAEOvW,CAAAA,IAAAA;AACH0C,MAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,eAAewJ,CAAAA,EAAzB,CAAP0C,CAAAA;AAAgC1C,KAHpCuW,CAHKrC,GAAuBxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,8BAAV,CAAPkM,CADzB,CAAP;AAeG4S;;AAAAA,EAAAA,KAAAA,GAAAA;AACH,WAAO,IAAI7S,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,UAAA,CAAKwR,KAAKsE,SAAV,EAAqB,OAAO9V,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,+BAAV,CAAPkM,CAAP;AACrB,UAAA,CAAKwR,KAAKwE,MAAV,EAAkB,OAAOzc,CAAAA,EAAP;AAElB,YAAMod,CAAAA,GAA2BnF,KAAKqE,aAALrE,CAAmBzH,UAAnByH,CAA8B/Y,GAA9B+Y,CAC7B0E,CAAAA,IAAS1E,KAAKwC,gBAALxC,CAAsB0E,CAAAA,CAAMpL,eAA5B0G,CADoBA,CAAjC;AAGAzR,MAAAA,OAAAA,CAAQ6W,GAAR7W,CAAY4W,CAAZ5W,EACC2W,KADD3W,CACO8W,CAAAA,IAAAA,CAAAA,CADP9W,EAEC0I,IAFD1I,CAEM,MAAM8T,CAAAA,CAAQ3J,KAAR2J,CAAcrC,KAAK8B,OAAnBO,CAFZ9T,EAGC0I,IAHD1I,CAGMxG,CAHNwG,EAIC2W,KAJD3W,CAIOzC,CAAAA,IAAAA;AACH0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,gBAAgBwJ,CAAAA,EAA1B,CAAP0C,CAAAA;AAAiC1C,OALrCyC;AAKqCzC,KAZlC,CAAP;AAsBGsV;;AAAAA,EAAAA,mBAAAA,CAAoBM,CAApBN,EAAoBM;AACvB,WAAO,IAAInT,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AAGzB,UAAIkT,CAAAA,KAAuB1B,KAAKoE,qBAAhC,EAAuD,OAAOrc,CAAAA,EAAP;AAEvD,UAAA,CAAKiY,KAAKsE,SAAV,EAAqB,OAAO9V,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,6CAAV,CAAPkM,CAAP;AAGrB,aADgBwR,KAAKiE,cAALjE,CAAoBkC,IAApBlC,CAAyBqE,CAAAA,IAAiBA,CAAAA,CAAc3C,kBAAd2C,KAAqC3C,CAA/E1B,IAGXA,KAAKwE,MAALxE,GAAKwE,KAEVnC,CAAAA,CAAQiD,mBAARjD,CAA4BrC,KAAK8B,OAAjCO,EAA0CX,CAA1CW,EACCpL,IADDoL,CACM,MAAA;AACFrC,aAAKoE,qBAALpE,GAA6B0B,CAA7B1B,EACAA,KAAKqE,aAALrE,CAAmBzH,UAAnByH,CAA8B5N,OAA9B4N,CAAsC0E,CAAAA,IAASA,CAAAA,CAAMa,KAANb,EAA/C1E,CADAA,EAEAjY,CAAAA,EAFAiY;AAEAjY,OAJJsa,EAMC6C,KAND7C,CAMOvW,CAAAA,IAAAA;AACH0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,8BAA8BwJ,CAAAA,EAAxC,CAAP0C,CAAAA;AAA+C1C,OAPnDuW,CAFKrC,GAAoBxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,0CAAV,CAAPkM,CAHTwR,GACIxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,oDAAV,CAAPkM,CAApB;AAAqC,KARlC,CAAP;AA6BG4S;;AAAAA,EAAAA,cAAAA,CAAe9H,CAAf8H,EAAe9H;AAClB,WAAO,IAAI/K,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,UAAA,CAAKwR,KAAKsE,SAAV,EAAqB,OAAO9V,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,wCAAV,CAAPkM,CAAP;AAErB,YAAMkW,CAAAA,GAAQ1E,KAAKqE,aAALrE,CAAmBzH,UAAnByH,CAA8BkC,IAA9BlC,CAAmC4E,CAAAA,IAAgBA,CAAAA,CAAatL,eAAbsL,KAAiCtL,CAApF0G,CAAd;AACA,aAAK0E,CAAAA,GACA1E,KAAKwE,MAALxE,GACD0E,CAAAA,CAAM3C,OAAN2C,GAAsB3c,CAAAA,EAAtB2c,GAAsB3c,KAE1B2c,CAAAA,CAAMnC,cAANmC,GACCzN,IADDyN,CACM3c,CADN2c,EAECQ,KAFDR,CAEO5Y,CAAAA,IAAAA;AACH0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,yBAAyBwJ,CAAAA,EAAnC,CAAP0C,CAAAA;AAA0C1C,OAH9C4Y,CAHK1E,GAAoBxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,qCAAV,CAAPkM,CADpBkW,GAAclW,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,2CAAV,CAAPkM,CAAnB;AAAoC,KAJjC,CAAP;AAqBG4S;;AAAAA,EAAAA,gBAAAA,CAAiB9H,CAAjB8H,EAAiB9H;AACpB,WAAO,IAAI/K,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,UAAA,CAAKwR,KAAKsE,SAAV,EAAqB,OAAO9V,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,0CAAV,CAAPkM,CAAP;AAErB,YAAMkW,CAAAA,GAAQ1E,KAAKqE,aAALrE,CAAmBzH,UAAnByH,CAA8BkC,IAA9BlC,CAAmC4E,CAAAA,IAAgBA,CAAAA,CAAatL,eAAbsL,KAAiCtL,CAApF0G,CAAd;AACA,aAAK0E,CAAAA,GACA1E,KAAKwE,MAALxE,GACA0E,CAAAA,CAAM3C,OAAN2C,GAAM3C,KAEX2C,CAAAA,CAAMlC,gBAANkC,GACCzN,IADDyN,CACM3c,CADN2c,EAECQ,KAFDR,CAEO5Y,CAAAA,IAAAA;AACH0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,2BAA2BwJ,CAAAA,EAArC,CAAP0C,CAAAA;AAA4C1C,OAHhD4Y,CAFKA,GAAsB3c,CAAAA,EADtBiY,GAAoBxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,uCAAV,CAAPkM,CADpBkW,GAAclW,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,6CAAV,CAAPkM,CAAnB;AAAoC,KAJjC,CAAP;AAsBG4S;;AAAAA,EAAAA,wBAAAA,CAAyB9H,CAAzB8H,EAAkDe,CAAlDf,EAAkDe;AACrD,WAAO,IAAI5T,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,UAAA,CAAKwR,KAAKsE,SAAV,EAAqB,OAAO9V,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,kDAAV,CAAPkM,CAAP;AAErB,YAAMkW,CAAAA,GAAQ1E,KAAKqE,aAALrE,CAAmBzH,UAAnByH,CAA8BkC,IAA9BlC,CAAmC4E,CAAAA,IAAgBA,CAAAA,CAAatL,eAAbsL,KAAiCtL,CAApF0G,CAAd;AACA,aAAK0E,CAAAA,GAEA1E,KAAKwE,MAALxE,IAAgB0E,CAAAA,CAAM3C,OAAtB/B,GAAsB+B,KAE3B2C,CAAAA,CAAMpC,wBAANoC,CAA+BvC,CAA/BuC,EACCzN,IADDyN,CACM3c,CADN2c,EAECQ,KAFDR,CAEO5Y,CAAAA,IAAAA;AACH0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,mCAAmCwJ,CAAAA,EAA7C,CAAP0C,CAAAA;AAAoD1C,OAHxD4Y,CAFK1E,GAAsCxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,+CAAV,CAAPkM,CAFtCkW,GAAclW,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,qDAAV,CAAPkM,CAAnB;AAAoC,KAJjC,CAAP;AAuBG4S;;AAAAA,EAAAA,iBAAAA,CAAkB0D,CAAlB1D,EAAuD/d,CAAvD+d,EAAuD/d;AAC1D,WAAO,IAAIkL,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,UAAA,CAAKwR,KAAKsE,SAAV,EAAqB,OAAO9V,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,2CAAV,CAAPkM,CAAP;AACrB,UAAA,CAAKwR,KAAKwE,MAAV,EAAkB,OAAOhW,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,wCAAV,CAAPkM,CAAP;AAElB,YAAMgX,CAAAA,GAAaxF,KAAKyF,YAALzF,CAAkB8E,CAAlB9E,CAAnB;AACA,UAAIwF,CAAJ,EAAgB,OAAOhX,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,4BAA4BkjB,CAAAA,EAAtC,CAAPhX,CAAP;AAEhB6T,MAAAA,CAAAA,CAAQqD,iBAARrD,CAA0BrC,KAAK8B,OAA/BO,EAAwCyC,CAAxCzC,EAA+Chf,CAA/Cgf,EACCpL,IADDoL,CACMta,CADNsa,EAEC6C,KAFD7C,CAEOvW,CAAAA,IAAAA;AACH0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,4BAA4BwJ,CAAAA,EAAtC,CAAP0C,CAAAA;AAA6C1C,OAHjDuW;AAGiDvW,KAV9C,CAAP;AAwBGsV;;AAAAA,EAAAA,kBAAAA,CAAmB0D,CAAnB1D,EAAwD9C,CAAxD8C,EAAwD9C;AAC3D,WAAO,IAAI/P,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,UAAA,CAAKwR,KAAKsE,SAAV,EAAqB,OAAO9V,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,4CAAV,CAAPkM,CAAP;AACrB,UAAA,CAAKwR,KAAKwE,MAAV,EAAkB,OAAOhW,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,yCAAV,CAAPkM,CAAP;AAElB,YAAMgX,CAAAA,GAAaxF,KAAKyF,YAALzF,CAAkB8E,CAAlB9E,CAAnB;AACA,UAAIwF,CAAJ,EAAgB,OAAOhX,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,6BAA6BkjB,CAAAA,EAAvC,CAAPhX,CAAP;AAEhB6T,MAAAA,CAAAA,CAAQsD,kBAARtD,CAA2BrC,KAAK8B,OAAhCO,EAAyCyC,CAAzCzC,EAAgD/D,CAAhD+D,EACCpL,IADDoL,CACMta,CADNsa,EAEC6C,KAFD7C,CAEOvW,CAAAA,IAAAA;AACH0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,6BAA6BwJ,CAAAA,EAAvC,CAAP0C,CAAAA;AAA8C1C,OAHlDuW;AAGkDvW,KAV/C,CAAP;AAsBGsV;;AAAAA,EAAAA,SAAAA,CAAU9B,CAAV8B,EAAmC2B,CAAnC3B,EAAmC2B;AACtC,WAAO,IAAIxU,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,UAAA,CAAKwR,KAAKsE,SAAV,EAAqB,OAAO9V,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,mCAAV,CAAPkM,CAAP;AAErB,YAAMwW,CAAAA,GAAShF,KAAKiF,WAALjF,CAAiBV,CAAjBU,EAA4B+C,CAA5B/C,CAAf;AACA,aAAKgF,CAAAA,CAAO5G,QAAP4G,GACAhF,KAAKwE,MAALxE,IAAgBgF,CAAAA,CAAON,KAAPM,CAAajD,OAA7B/B,GAA6B+B,KAElCM,CAAAA,CAAQ3D,SAAR2D,CAAkBrC,KAAK8B,OAAvBO,EAAgC/C,CAAhC+C,EAA2CU,CAA3CV,EACCpL,IADDoL,CACMta,CADNsa,EAEC6C,KAFD7C,CAEOvW,CAAAA,IAAAA;AACH0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,oBAAoBwJ,CAAAA,EAA9B,CAAP0C,CAAAA;AAAqC1C,OAHzCuW,CAFKrC,GAA6CxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,gCAAV,CAAPkM,CAD7CwW,GAAwBxW,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,qCAAV,CAAPkM,CAA7B;AAA8C,KAJ3C,CAAP;AAsBG4S;;AAAAA,EAAAA,UAAAA,CAAW2B,CAAX3B,EAAmC/d,CAAnC+d,EAAmC/d;AACtC,WAAO,IAAIkL,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,UAAA,CAAKwR,KAAKsE,SAAV,EAAqB,OAAO9V,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,oCAAV,CAAPkM,CAAP;AAErB,YAAMwW,CAAAA,GAAShF,KAAKiF,WAALjF,CAAiB,IAAjBA,EAAuB+C,CAAvB/C,CAAf;AACA,aAAKgF,CAAAA,CAAO5G,QAAP4G,GACwB,gBAAzBA,CAAAA,CAAO5G,QAAP4G,CAAgBrZ,IAAS,IAAwC,WAAzBqZ,CAAAA,CAAO5G,QAAP4G,CAAgBrZ,IAA/B,GAAuD6C,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,kCAAV,CAAPkM,CAAvD,GACxBwR,KAAKwE,MAALxE,IAAgBgF,CAAAA,CAAON,KAAPM,CAAajD,OAA7B/B,GAA6B+B,KAElCM,CAAAA,CAAQuD,UAARvD,CAAmBrC,KAAK8B,OAAxBO,EAAiCU,CAAjCV,EAAiDhf,CAAjDgf,EACCpL,IADDoL,CACMta,CADNsa,EAEC6C,KAFD7C,CAEOvW,CAAAA,IAAAA;AACH0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,qBAAqBwJ,CAAAA,EAA/B,CAAP0C,CAAAA;AAAsC1C,OAH1CuW,CAFKrC,GAA6CxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,iCAAV,CAAPkM,CAF7CwW,GAAwBxW,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,sCAAV,CAAPkM,CAA7B;AAA8C,KAJ3C,CAAP;AAyBG4S;;AAAAA,EAAAA,WAAAA,CAAY2B,CAAZ3B,EAAoC9C,CAApC8C,EAAoC9C;AACvC,WAAO,IAAI/P,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,UAAA,CAAKwR,KAAKsE,SAAV,EAAqB,OAAO9V,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,qCAAV,CAAPkM,CAAP;AAErB,YAAMwW,CAAAA,GAAShF,KAAKiF,WAALjF,CAAiB,KAAjBA,EAAwB+C,CAAxB/C,CAAf;AACA,aAAKgF,CAAAA,CAAO5G,QAAP4G,GACwB,gBAAzBA,CAAAA,CAAO5G,QAAP4G,CAAgBrZ,IAAS,IAAwC,WAAzBqZ,CAAAA,CAAO5G,QAAP4G,CAAgBrZ,IAA/B,GAAuD6C,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,mCAAV,CAAPkM,CAAvD,GACxBwR,KAAKwE,MAALxE,IAAgBgF,CAAAA,CAAON,KAAPM,CAAajD,OAA7B/B,GAA6B+B,KAElCM,CAAAA,CAAQwD,WAARxD,CAAoBrC,KAAK8B,OAAzBO,EAAkCU,CAAlCV,EAAkD/D,CAAlD+D,EACCpL,IADDoL,CACMta,CADNsa,EAEC6C,KAFD7C,CAEOvW,CAAAA,IAAAA;AACH0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,sBAAsBwJ,CAAAA,EAAhC,CAAP0C,CAAAA;AAAuC1C,OAH3CuW,CAFKrC,GAA6CxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,kCAAV,CAAPkM,CAF7CwW,GAAwBxW,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,uCAAV,CAAPkM,CAA7B;AAA8C,KAJ3C,CAAP;AAuBG4S;;AAAAA,EAAAA,qBAAAA,CAAsB2B,CAAtB3B,EAA8C0E,CAA9C1E,EAA8C0E;AACjD,WAAO,IAAIvX,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,UAAA,CAAKwR,KAAKsE,SAAV,EAAqB,OAAO9V,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,+CAAV,CAAPkM,CAAP;AAErB,YAAMwW,CAAAA,GAAShF,KAAKiF,WAALjF,CAAiB,IAAjBA,EAAuB+C,CAAvB/C,CAAf;AACA,aAAKgF,CAAAA,CAAO5G,QAAP4G,GACwB,kBAAzBA,CAAAA,CAAO5G,QAAP4G,CAAgBrZ,IAAS,GAAsB6C,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,6CAAV,CAAPkM,CAAtB,GACxBwR,KAAKwE,MAALxE,IAAgBgF,CAAAA,CAAON,KAAPM,CAAajD,OAA7B/B,GAA6B+B,KAElCM,CAAAA,CAAQ0D,qBAAR1D,CAA8BrC,KAAK8B,OAAnCO,EAA4CU,CAA5CV,EAA4DyD,CAA5DzD,EACCpL,IADDoL,CACMta,CADNsa,EAEC6C,KAFD7C,CAEOvW,CAAAA,IAAAA;AACH0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,gCAAgCwJ,CAAAA,EAA1C,CAAP0C,CAAAA;AAAiD1C,OAHrDuW,CAFKrC,GAA6CxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,4CAAV,CAAPkM,CAF7CwW,GAAwBxW,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,iDAAV,CAAPkM,CAA7B;AAA8C,KAJ3C,CAAP;AAwBG4S;;AAAAA,EAAAA,sBAAAA,CAAuB2B,CAAvB3B,EAA+C9C,CAA/C8C,EAAmE0E,CAAnE1E,EAAmE0E;AACtE,WAAO,IAAIvX,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,UAAA,CAAKwR,KAAKsE,SAAV,EAAqB,OAAO9V,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,gDAAV,CAAPkM,CAAP;AAErB,YAAMwW,CAAAA,GAAShF,KAAKiF,WAALjF,CAAiB,KAAjBA,EAAwB+C,CAAxB/C,CAAf;AACA,aAAKgF,CAAAA,CAAO5G,QAAP4G,GACwB,kBAAzBA,CAAAA,CAAO5G,QAAP4G,CAAgBrZ,IAAS,GAAsB6C,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,8CAAV,CAAPkM,CAAtB,GACxBwR,KAAKwE,MAALxE,IAAgBgF,CAAAA,CAAON,KAAPM,CAAajD,OAA7B/B,GAA6B+B,KAElCM,CAAAA,CAAQ2D,sBAAR3D,CAA+BrC,KAAK8B,OAApCO,EAA6CU,CAA7CV,EAA6D/D,CAA7D+D,EAAmEyD,CAAnEzD,EACCpL,IADDoL,CACMta,CADNsa,EAEC6C,KAFD7C,CAEOvW,CAAAA,IAAAA;AACH0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,iCAAiCwJ,CAAAA,EAA3C,CAAP0C,CAAAA;AAAkD1C,OAHtDuW,CAFKrC,GAA6CxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,6CAAV,CAAPkM,CAF7CwW,GAAwBxW,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,kDAAV,CAAPkM,CAA7B;AAA8C,KAJ3C,CAAP;AAoBG4S;;AAAAA,EAAAA,KAAAA,GAAAA;AACH,WAAO,IAAI7S,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KACVwR,KAAKsE,SAALtE,GACAA,KAAKwE,MAALxE,GAAKwE,KAEVnC,CAAAA,CAAQkD,KAARlD,CAAcrC,KAAK8B,OAAnBO,EACCpL,IADDoL,CACMta,CADNsa,EAEC6C,KAFD7C,CAEOvW,CAAAA,IAAAA;AACH0C,MAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,gBAAgBwJ,CAAAA,EAA1B,CAAP0C,CAAAA;AAAiC1C,KAHrCuW,CAFKrC,GAAoBxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,4BAAV,CAAPkM,CADpBwR,GAAuBxR,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,+BAAV,CAAPkM,CADzB,CAAP;AACiD;;AA9e5CyU;;ACqBb,MAAMgD,CAAAA,GAAwB,GAA9B;AAAA,MAIMC,CAAAA,GAAsB,EAJ5B;AAAA,MASMC,CAAAA,GAAY;AACdC,EAAAA,QAAAA,EAAU,sCADI;AAEdhL,EAAAA,aAAAA,EAAe,EAFD;AAGdC,EAAAA,kBAAAA,EAAoB,CAHN;AAIdgL,EAAAA,yBAAAA,EAA2B,CAJb;AAKdC,EAAAA,WAAAA,EAAa,GALC;AAMdC,EAAAA,kBAAAA,EAAoB,GANN;AAOdC,EAAAA,gBAAAA,EAAkB,GAPJ;AAQdC,EAAAA,iBAAAA,EAAmB,CARL;AASdC,EAAAA,aAAAA,EAAe,CATD;AAUdC,EAAAA,aAAAA,EAAe;AAVD,CATlB;;AAmBmB,MA8BNC,CA9BM,SA8Bavc,CA9Bb,CA8BaA;AAQ5B+W,EAAAA,WAAAA,GAAAA;AACIG,aAHIvB,KAAAA,OAAAA,GAA6D,EAGjEuB;;AAEA,UAAMsF,CAAAA,GAAiBpK,CAAAA,IAAAA;AACnBuD,WAAK8G,UAAL9G,CAAgBvD,CAAhBuD,EAAwBkG,CAAxBlG,EACC/I,IADD+I,CACM+G,CAAAA,IAAAA;AACF,YAAIA,CAAJ,EAAkB;AACd,gBAAMC,CAAAA,GAAShH,KAAKiH,eAALjH,CAAqB+G,CAArB/G,CAAf;AACAA,eAAKkH,iBAALlH,CAAuBgH,CAAvBhH,EACC/I,IADD+I,CACMmH,CAAAA,IAAAA;AACEA,YAAAA,CAAAA,IACAnH,KAAK/a,IAAL+a,CAAU4G,CAAAA,CAAWQ,oBAArBpH,EAA2CmH,CAA3CnH,CADAmH;AAC2CA,WAHnDnH;AAGmDmH;AAAAA,OAP3DnH;AAO2DmH,KAR/D;AAAA,UAeME,CAAAA,GAAiB5K,CAAAA,IAAAA;AACnB,YAAMuK,CAAAA,GAAShH,KAAKiH,eAALjH,CAAqBvD,CAArBuD,CAAf;AAEIgH,MAAAA,CAAAA,IAAUhH,KAAKjI,OAALiI,CAAagH,CAAbhH,CAAVgH,KAAuBA,OAChBhH,KAAKjI,OAALiI,CAAagH,CAAbhH,CADgBgH,EAEvBhH,KAAK/a,IAAL+a,CAAU4G,CAAAA,CAAWU,uBAArBtH,EAA8CgH,CAA9ChH,CAFAgH;AAE8CA,KApBtD;;AAwBAhH,SAAKrb,EAALqb,CAAQ,aAARA,EAAuBwB,CAAAA,IAAAA;AAGG,YAFAxB,KAAKhS,aAALgS,CAAmBwB,CAAnBxB,CAEA,KAIlBwB,CAAAA,KAAUoF,CAAAA,CAAWQ,oBAArB5F,GACA7c,aAAG,QAAHA,EAAakiB,CAAbliB,CADA6c,GAEOA,CAAAA,KAAUoF,CAAAA,CAAWU,uBAArB9F,IACP7c,aAAG,QAAHA,EAAa0iB,CAAb1iB,CAPkB;AAOL0iB,KAVrBrH,GAcAA,KAAKrb,EAALqb,CAAQ,gBAARA,EAA0BwB,CAAAA,IAAAA;AAGA,YAFAxB,KAAKhS,aAALgS,CAAmBwB,CAAnBxB,CAEA,KAIlBwB,CAAAA,KAAUoF,CAAAA,CAAWQ,oBAArB5F,GACAzc,yBAAe,QAAfA,EAAyB8hB,CAAzB9hB,CADAyc,GAEOA,CAAAA,KAAUoF,CAAAA,CAAWU,uBAArB9F,IACPzc,yBAAe,QAAfA,EAAyBsiB,CAAzBtiB,CAPkB;AAOOsiB,KAVjCrH,CAdAA;AA6BIoB;;AAAAA,EAAAA,eAAAA,CAAgB3E,CAAhB2E,EAAgB3E;AACpB,WAAyB,SAArBA,CAAAA,CAAO8K,SAAc,IAAiC,SAAzB9K,CAAAA,CAAO+K,aAAf,GACd,IADc,GAIlB,GAAG/K,CAAAA,CAAO8K,SAAAA,IAAa9K,CAAAA,CAAO+K,aAAAA,EAJrC;AAOIpG;;AAAAA,EAAAA,cAAAA,CAAkBqG,CAAlBrG,EAAoDsG,CAApDtG,EAAoDsG;AAaxD,WAAOA,CAAAA,CAAOtT,MAAPsT,CAZP,UAAiBC,CAAjB,EAAwBC,CAAxB,EAAwBA;AACpB,aAAOD,CAAAA,CACN1Q,IADM0Q,CACDE,CAAAA,IACKJ,CAAAA,CAAK5kB,IAAL4kB,CAAUzH,IAAVyH,EAAgBG,CAAhBH,EACNxQ,IADMwQ,CACDzC,CAAAA,KACEA,CAAAA,IACA6C,CAAAA,CAAQ7jB,IAAR6jB,CAAa7C,CAAb6C,CADA7C,EAGG6C,CAJL7C,CADCyC,CAFJE,CAAP;AAOeE,KARnB,CAY6Bza,IAZ7B,CAYkC4S,IAZlC,CAYO0H,EAAkCnZ,OAAAA,CAAQxG,OAARwG,CAAgB,EAAhBA,CAAlCmZ,CAAP;AAGItG;;AAAAA,EAAAA,oBAAAA,CAAwBqG,CAAxBrG,EAA+E3E,CAA/E2E,EAA+FhS,CAA/FgS,EAA+FhS;AAWnG,WAAOA,CAAAA,CAAYgF,MAAZhF,CAVP,UAAiBuY,CAAjB,EAAwBjM,CAAxB,EAAwBA;AACpB,aAAOiM,CAAAA,CACN1Q,IADM0Q,CACDE,CAAAA,IACKJ,CAAAA,CAAK5kB,IAAL4kB,CAAUzH,IAAVyH,EAAgBhL,CAAhBgL,EAAwB/L,CAAxB+L,EACNxQ,IADMwQ,CACDzC,CAAAA,KACF6C,CAAAA,CAAQ7jB,IAAR6jB,CAAa7C,CAAb6C,GACOA,CAFL7C,CADCyC,CAFJE,CAAP;AAKeE,KANnB,CAUkCza,IAVlC,CAUuC4S,IAVvC,CAUO5Q,EAAuCb,OAAAA,CAAQxG,OAARwG,CAAgB,EAAhBA,CAAvCa,CAAP;AAGIgS;;AAAAA,EAAAA,KAAAA,CAAM5d,CAAAA,GAAkByiB,CAAxB7E,EAAwB6E;AAC5B,WAAO,IAAI1X,OAAJ,CAAY,CAACxG,CAAD,EAAU+f,CAAV,KAAUA;AACzBtlB,MAAAA,UAAAA,CAAWuF,CAAXvF,EAAoBgB,CAApBhB,CAAAA;AAAoBgB,KADjB,CAAP;AAKI4d;;AAAAA,EAAAA,YAAAA,CAAa/Q,CAAb+Q,EAAqC2G,CAAAA,GAAkB,CAAvD3G,EAA0D5d,CAAAA,GAAkByiB,CAA5E7E,EAA4E6E;AAChF,WAAO,IAAI1X,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB6B,MAAAA,CAAAA,GACC4G,IADD5G,CACMtI,CADNsI,EAEC6U,KAFD7U,CAEOvE,CAAAA,IACa,MAAZic,CAAY,GACLvZ,CAAAA,CAAO1C,CAAP0C,CADK,GAITwR,KAAKgI,KAALhI,CAAWxc,CAAXwc,EACN/I,IADM+I,CACD,MAAMA,KAAKiI,YAALjI,CAAkB3P,CAAlB2P,EAAkB3P,EAAM0X,CAAxB/H,EAAiCxc,CAAjCwc,CADLA,EAEN/I,IAFM+I,CAEDjY,CAFCiY,EAGNkF,KAHMlF,CAGAkI,CAAAA,IAAc1Z,CAAAA,CAAO0Z,CAAP1Z,CAHdwR,CAPX3P;AAUgC6X,KAX7B,CAAP;AAgBI9G;;AAAAA,EAAAA,WAAAA,CAAY+G,CAAZ/G,EAAY+G;AAEhBnI,SAAKjI,OAALiI,GAAe,EAAfA;AACA,QAAIjI,CAAAA,GAAUL,yBAAd;AAOA,WALIyQ,CAAAA,KAEApQ,CAAAA,GAAUiI,KAAKoI,gBAALpI,CAAsBjI,CAAtBiI,EAA+BmI,CAA/BnI,CAFVmI,CAAAA,EAKGnI,KAAKqI,cAALrI,CAAoBA,KAAK8G,UAAzB9G,EAAqCjI,CAArCiI,CAAP;AAGIoB;;AAAAA,EAAAA,gBAAAA,CAAiBrJ,CAAjBqJ,EAAyC+G,CAAzC/G,EAAyC+G;AAE7C,WAAOpQ,CAAAA,CAAQuQ,MAARvQ,CAAe0E,CAAAA,IAAU0L,CAAAA,CAAWxD,IAAXwD,CAAgBG,CAAAA,IAAAA,CAAAA,CAExCA,CAAAA,CAAO9E,QAFiC8E,IAErBA,CAAAA,CAAO9E,QAAP8E,KAAoB7L,CAAAA,CAAOxE,gBAAPwE,CAAwBvE,QAFvBoQ,MAEuBpQ,CAG/DoQ,CAAAA,CAAO7E,SAHwDvL,IAG3CoQ,CAAAA,CAAO7E,SAAP6E,KAAqB7L,CAAAA,CAAOxE,gBAAPwE,CAAwBtE,SALzBmQ,CAAhBH,CAAzBpQ,CAAP;AAYIqJ;;AAAAA,EAAAA,UAAAA,CAAW3E,CAAX2E,EAA2B2G,CAAAA,GAAkB,CAA7C3G,EAA6C;AAGjD,QAAA;AAEI3E,MAAAA,CAAAA,CAAOjE,gBAAPiE,EAEAA,CAAAA,CAAO8L,oBAFP9L,EAIAA,CAAAA,CAAOxE,gBAJPwE;AAKF,KAPF,CAOE,OAAO4I,CAAP,EAAOA;AACL,aAAO9W,OAAAA,CAAQxG,OAARwG,CAAgB,IAAhBA,CAAP;AAGJ;;AAAA,WAAOyR,KAAK5D,eAAL4D,CAAqBvD,CAArBuD,EAA6B+H,CAA7B/H,EACN/I,IADM+I,CACDhE,CAAAA,IAAgBgE,KAAKwI,gBAALxI,CAAsBhE,CAAtBgE,CADfA,EAEN/I,IAFM+I,CAED/D,CAAAA,IACK+D,KAAKyI,SAALzI,CAAevD,CAAfuD,EAAuB/D,CAAvB+D,EACN/I,IADM+I,CACDkE,CAAAA,IAAAA;AACF,YAAM8C,CAAAA,GAAShH,KAAKiH,eAALjH,CAAqBvD,CAArBuD,CAAf;AAKA,aAJAA,KAAKjI,OAALiI,CAAagH,CAAbhH,IAAuB;AACnBvD,QAAAA,MAAAA,EAAQA,CADW;AAEnByH,QAAAA,GAAAA,EAAKA;AAFc,OAAvBlE,EAIOvD,CAAP;AAAOA,KAPJuD,CAHJA,CAAP;AAeIoB;;AAAAA,EAAAA,eAAAA,CAAgB3E,CAAhB2E,EAAgC2G,CAAhC3G,EAAgC2G;AACpC,WAAO,IAAIxZ,OAAJ,CAAY,CAACxG,CAAD,EAAU+f,CAAV,KAAUA;AAEzB9H,WAAK0I,UAAL1I,CAAgBvD,CAAhBuD,EAAwB+H,CAAxB/H,EACC/I,IADD+I,CACM,MAAA;AACFvD,QAAAA,CAAAA,CAAOL,eAAPK,CAAuB,CAAC3Q,CAAD,EAAQkQ,CAAR,KAAQA;AAC3B,cAAA;AAEIS,YAAAA,CAAAA,CAAO/D,KAAP+D;AAEF,WAJF,CAIE,OAAO4I,CAAP,EAAOA,CACT;;AAAA,cAAIvZ,CAAJ,EAAW,OAAO/D,CAAAA,CAAQ,EAARA,CAAP;AACXA,UAAAA,CAAAA,CAAQiU,CAARjU,CAAAA;AAAQiU,SAPZS;AAOYT,OAThBgE,EAYCkF,KAZDlF,CAYOqF,CAAAA,IAAAA;AACHtd,QAAAA,CAAAA,CAAQ,EAARA,CAAAA;AAAQ,OAbZiY;AAaY,KAfT,CAAP;AAoBIoB;;AAAAA,EAAAA,gBAAAA,CAAiBpF,CAAjBoF,EAAiBpF;AAWrB,WAV6BA,CAAAA,CAAasM,MAAbtM,CAAoBC,CAAAA,IAClB,MAApBA,CAAAA,CAAWtQ,IADOqQ,EAIckG,IAJdlG,CAImBC,CAAAA,IAAAA;AAC5C,YAAM0M,CAAAA,GAAO3I,KAAK4I,UAAL5I,CAAgB/D,CAAAA,CAAWqC,IAAXrC,CAAgBtN,KAAhBsN,CAAsB,CAAtBA,EAAyB,EAAzBA,CAAhB+D,CAAb;AAAA,YACMxb,CAAAA,GAAUyX,CAAAA,CAAWqC,IAAXrC,CAAgBR,YAAhBQ,CAA6B,EAA7BA,CADhB;AAEA,aAAO0M,CAAAA,KAASxC,CAAAA,CAAUC,QAAnBuC,IAA+BnkB,CAAAA,KAAY2hB,CAAAA,CAAUI,kBAA5D;AAA4DA,KAPnCvK,CAU7B;AAGIoF;;AAAAA,EAAAA,UAAAA,CAAW9F,CAAX8F,EAAW9F;AACf,UAAMuN,CAAAA,GAAQ,WAAWvN,CAAAA,CAAOwN,YAAPxN,CAAoB,CAApBA,EAAuBtI,QAAvBsI,CAAgC,EAAhCA,CAAgC,EAA3C,CAAiD3M,KAAjD,CAAiDA,CAAO,CAAxD,CAAd;AAAA,UACMoa,CAAAA,GAAQ,OAAOzN,CAAAA,CAAOG,YAAPH,CAAoB,CAApBA,EAAuBtI,QAAvBsI,CAAgC,EAAhCA,CAAgC,EAAvC,CAA6C3M,KAA7C,CAA6CA,CAAO,CAApD,CADd;AAAA,UAEMqa,CAAAA,GAAQ,OAAO1N,CAAAA,CAAOG,YAAPH,CAAoB,CAApBA,EAAuBtI,QAAvBsI,CAAgC,EAAhCA,CAAgC,EAAvC,CAA6C3M,KAA7C,CAA6CA,CAAO,CAApD,CAFd;AAAA,UAIMsa,CAAAA,GAAQ,EAJd;;AAKA,SAAK,IAAIllB,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAI,EAApB,EAAwBA,CAAAA,EAAxB,EACIklB,CAAAA,CAAMjlB,IAANilB,CAAW,KAAK3N,CAAAA,CAAOM,SAAPN,CAAiBvX,CAAjBuX,EAAoBtI,QAApBsI,CAA6B,EAA7BA,CAA6B,EAAlC,CAAwC3M,KAAxC,CAAwCA,CAAO,CAA/C,CAAXsa;;AAGJ,UAAMC,CAAAA,GAAQ,EAAd;;AACA,SAAK,IAAInlB,CAAAA,GAAI,EAAb,EAAiBA,CAAAA,GAAI,EAArB,EAAyBA,CAAAA,EAAzB,EACImlB,CAAAA,CAAMllB,IAANklB,CAAW,KAAK5N,CAAAA,CAAOM,SAAPN,CAAiBvX,CAAjBuX,EAAoBtI,QAApBsI,CAA6B,EAA7BA,CAA6B,EAAlC,CAAwC3M,KAAxC,CAAwCA,CAAO,CAA/C,CAAXua;;AAGJ,WAAO,GAAGL,CAAAA,IAASE,CAAAA,IAASC,CAAAA,IAASC,CAAAA,CAAMljB,IAANkjB,CAAW,EAAXA,CAAW,IAAOC,CAAAA,CAAMnjB,IAANmjB,CAAW,EAAXA,CAAW,EAAlE;AAGI9H;;AAAAA,EAAAA,SAAAA,CAAU3E,CAAV2E,EAA0BnF,CAA1BmF,EAAkD+H,CAAAA,GAAAA,CAA0B,CAA5E/H,EAA4E;AAChF,WAAO,IAAI7S,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,UAAA,CAAKyN,CAAL,IAAKA,CAAeA,CAAAA,CAAWqC,IAA/B,IAAuCrC,CAAAA,CAAWqC,IAAXrC,CAAgBmN,UAAhBnN,GAA6B,EAApE,EAAwE,OAAOlU,CAAAA,CAAQ,IAARA,CAAP;AAExE,YAAMshB,CAAAA,GAASpN,CAAAA,CAAWqC,IAAXrC,CAAgBL,SAAhBK,CAA0B,EAA1BA,CAAf;AAAA,YACMqN,CAAAA,GAAOrN,CAAAA,CAAWqC,IAAXrC,CAAgBL,SAAhBK,CAA0B,EAA1BA,CADb;AAGA+D,WAAK0I,UAAL1I,CAAgBvD,CAAhBuD,EACC/I,IADD+I,CACM,MAAA;AACFvD,QAAAA,CAAAA,CAAOhD,eAAPgD,CAAuB0J,CAAAA,CAAUK,gBAAjC/J,EAAmD4M,CAAnD5M,EAA2D6M,CAA3D7M,EAAiE0J,CAAAA,CAAUM,iBAA3EhK,EAA8F,EAA9FA,EAAkG,CAAC3Q,CAAD,EAAQwP,CAAR,KAAQA;AAGtG,cAFAmB,CAAAA,CAAO/D,KAAP+D,IAEI3Q,CAAJ,EAEI,OAAIqd,CAAAA,GAAuBphB,CAAAA,CAAQ,IAARA,CAAvBohB,GACQ3a,CAAAA,CAAO1C,CAAP0C,CADZ;AAMJ,cAAI0V,CAAAA,GAAM5I,CAAAA,CAAOtI,QAAPsI,CAAgB,MAAhBA,EAAwB,CAAxBA,CAAV;AAEA,gBAAMiO,CAAAA,GAASjO,CAAAA,CAAOM,SAAPN,CAAiB,CAAjBA,CAAf;AACe,gBAAXiO,CAAW,KAAGrF,CAAAA,GAAM,YAAYA,CAArB,GACA,MAAXqF,CAAW,KAAGrF,CAAAA,GAAM,aAAaA,CAAtB,CADA,EAGfnc,CAAAA,CAAQmc,CAARnc,CAHe;AAGPmc,SAjBZzH;AAiBYyH,OAnBhBlE,EAsBCkF,KAtBDlF,CAsBOqF,CAAAA,IAAAA;AACHtd,QAAAA,CAAAA,CAAQ,EAARA,CAAAA;AAAQ,OAvBZiY;AAuBY,KA7BT,CAAP;AAkCIoB;;AAAAA,EAAAA,iBAAAA,CAAkB4F,CAAlB5F,EAAkB4F;AACtB,WAAO,IAAIzY,OAAJ,CAAY,CAACxG,CAAD,EAAU+f,CAAV,KAAUA;AACzB,YAAMrL,CAAAA,GAASuD,KAAKjI,OAALiI,CAAagH,CAAbhH,EAAqBvD,MAApC;AAAA,YACMyH,CAAAA,GAAMlE,KAAKjI,OAALiI,CAAagH,CAAbhH,EAAqBkE,GADjC;AAGA,UAAIsF,CAAAA,GAAmC,IAAvC;AAAA,UACIhR,CAAAA,GAAqC,IADzC;AAAA,UAEIP,CAAAA,GAAqC,IAFzC;;AAIA,UAAA;AACIO,QAAAA,CAAAA,GAAmBiE,CAAAA,CAAOjE,gBAA1BA,EACAgR,CAAAA,GAAU/M,CAAAA,CAAO8L,oBADjB/P,EAEAP,CAAAA,GAAmBwE,CAAAA,CAAOxE,gBAF1BO;AAGF,OAJF,CAIE,OAAO6M,CAAP,EAAOA;AACL,eAAOtd,CAAAA,CAAQ,IAARA,CAAP;AAGJ;;AAAA,aAAKyhB,CAAAA,GAEExJ,KAAKyJ,oBAALzJ,CAA0BA,KAAK0J,wBAA/B1J,EAAyDvD,CAAzDuD,EAAiEwJ,CAAjExJ,EACN/I,IADM+I,CACDiE,CAAAA,IAAAA;AAEF,YAAA,CAAKhM,CAAL,EACI,OAAOlQ,CAAAA,CAAQ,IAAIkb,CAAJ,CAAc;AACzBnB,UAAAA,OAAAA,EAAS9B,KAAKiH,eAALjH,CAAqBvD,CAArBuD,CADgB;AAEzBkE,UAAAA,GAAAA,EAAKA,CAFoB;AAGzBD,UAAAA,cAAAA,EAAgBA;AAHS,SAAd,CAARlc,CAAP;AAOJ,cAAM4hB,CAAAA,GAAgB3J,KAAK4J,aAAL5J,CAAmB/H,CAAAA,CAAiB4R,SAApC7J,CAAtB;AAAA,cACM8J,CAAAA,GAAa9J,KAAK4J,aAAL5J,CAAmB/H,CAAAA,CAAiBkD,MAApC6E,CADnB;AAEA,YAAI6D,CAAAA,GAAmB,IAAvB;AAAA,YACIC,CAAAA,GAAc,IADlB;AAGA,eAAO9D,KAAKpF,mBAALoF,CAAyBvD,CAAzBuD,EAAiC/H,CAAAA,CAAiB8R,aAAlD/J,EACN/I,IADM+I,CACD3a,CAAAA,KACFwe,CAAAA,GAAmBxe,CAAnBwe,EACO7D,KAAKpF,mBAALoF,CAAyBvD,CAAzBuD,EAAiC/H,CAAAA,CAAiB+R,QAAlDhK,CAFL3a,CADC2a,EAKN/I,IALM+I,CAKD3a,CAAAA,KACFye,CAAAA,GAAcze,CAAdye,EACO9D,KAAKpF,mBAALoF,CAAyBvD,CAAzBuD,EAAiC/H,CAAAA,CAAiBgS,aAAlDjK,CAFL3a,CALC2a,EASN/I,IATM+I,CASD+D,CAAAA,IAAAA;AACF,gBAAMmG,CAAAA,GAA4B;AAC9BpI,YAAAA,OAAAA,EAAS9B,KAAKiH,eAALjH,CAAqBvD,CAArBuD,CADqB;AAE9BmE,YAAAA,cAAAA,EAAgBlM,CAAAA,CAAiBkS,eAFH;AAG9BjG,YAAAA,GAAAA,EAAKA,CAHyB;AAI9Bb,YAAAA,WAAAA,EAAapL,CAAAA,CAAiBmS,YAJA;AAK9B9G,YAAAA,cAAAA,EAAgBrL,CAAAA,CAAiBoS,eALH;AAM9B9G,YAAAA,cAAAA,EAAgBtL,CAAAA,CAAiBqS,eANH;AAO9B7G,YAAAA,SAAAA,EAAWxL,CAAAA,CAAiBE,SAPE;AAQ9BqL,YAAAA,QAAAA,EAAUvL,CAAAA,CAAiBC,QARG;AAS9BwL,YAAAA,kBAAAA,EAAoBiG,CAAAA,CAAcY,KATJ;AAU9B5G,YAAAA,kBAAAA,EAAoBgG,CAAAA,CAAca,KAVJ;AAW9B5G,YAAAA,qBAAAA,EAAuB+F,CAAAA,CAAcc,GAXP;AAY9BvH,YAAAA,eAAAA,EAAiB4G,CAAAA,CAAWS,KAZE;AAa9BpH,YAAAA,eAAAA,EAAiB2G,CAAAA,CAAWU,KAbE;AAc9BpH,YAAAA,kBAAAA,EAAoB0G,CAAAA,CAAWW,GAdD;AAe9B5G,YAAAA,gBAAAA,EAAkBA,CAfY;AAgB9BC,YAAAA,WAAAA,EAAaA,CAhBiB;AAiB9BC,YAAAA,YAAAA,EAAcA,CAjBgB;AAkB9BE,YAAAA,cAAAA,EAAgBA,CAlBc;AAmB9BG,YAAAA,qBAAAA,EAAuB5L,CAAAA,CAAiBkS;AAnBV,WAAlC;AAqBA,iBAAO3iB,CAAAA,CAAQ,IAAIkb,CAAJ,CAAciH,CAAd,CAARniB,CAAP;AAA6BmiB,SA/B1BlK,CAAP;AA+BiCkK,OA/C9BlK,EAiDJkF,KAjDIlF,CAiDEqF,CAAAA,IAAAA;AACLtd,QAAAA,CAAAA,CAAQ,IAARA,CAAAA;AAAQ,OAlDLiY,CAFFwJ,GAAgBzhB,CAAAA,CAAQ,IAARA,CAArB;AAA6B,KAhB1B,CAAP;AAyEIqZ;;AAAAA,EAAAA,aAAAA,CAAc5c,CAAd4c,EAAc5c;AAClB,UAAMmmB,CAAAA,GAAM,OAAOnmB,CAAAA,CAAQwO,QAARxO,CAAiB,EAAjBA,CAAiB,EAAxB,CAA8BmK,KAA9B,CAA8BA,CAAO,CAArC,CAAZ;AACA,WAAO;AACH4b,MAAAA,KAAAA,EAAOK,QAAAA,CAASD,CAAAA,CAAIzW,MAAJyW,CAAW,CAAXA,EAAc,CAAdA,CAATC,EAA2B,IAA3BA,CADJ;AAEHJ,MAAAA,KAAAA,EAAOI,QAAAA,CAASD,CAAAA,CAAIzW,MAAJyW,CAAW,CAAXA,EAAc,CAAdA,CAATC,EAA2B,IAA3BA,CAFJ;AAGHH,MAAAA,GAAAA,EAAKG,QAAAA,CAASD,CAAAA,CAAIzW,MAAJyW,CAAW,CAAXA,EAAc,CAAdA,CAATC,EAA2B,IAA3BA;AAHF,KAAP;AAOIxJ;;AAAAA,EAAAA,mBAAAA,CAAoB3E,CAApB2E,EAAoChT,CAApCgT,EAAoChT;AACxC,WAAO,IAAIG,OAAJ,CAAYxG,CAAAA,IAAAA;AACfiY,WAAK0I,UAAL1I,CAAgBvD,CAAhBuD,EACC/I,IADD+I,CACM,MAAA;AACFvD,QAAAA,CAAAA,CAAO7B,mBAAP6B,CAA2BrO,CAA3BqO,EAAkC,CAAC3Q,CAAD,EAAQwP,CAAR,KAAQA;AACtCmB,UAAAA,CAAAA,CAAO/D,KAAP+D,IACA1U,CAAAA,CAAQ+D,CAAAA,GAAQ,EAARA,GAAawP,CAAAA,CAAOtI,QAAPsI,EAArBvT,CADA0U;AAC4BzJ,SAFhCyJ;AAEgCzJ,OAJpCgN,EAOCkF,KAPDlF,CAOOqF,CAAAA,IAAAA;AACHtd,QAAAA,CAAAA,CAAQ,EAARA,CAAAA;AAAQ,OARZiY;AAQY,KATT,CAAP;AAcIoB;;AAAAA,EAAAA,gBAAAA,CAAiB9F,CAAjB8F,EAAiB9F;AACrB,UAAMuP,CAAAA,GAAc,IAAIxT,UAAJ,CAAeiE,CAAf,EAAuBA,MAA3C;AACA,WAAO,IAAIwP,QAAJ,CAAaD,CAAb,CAAP;AAGIzJ;;AAAAA,EAAAA,oBAAAA,CAAqB2J,CAArB3J,EAAqB2J;AACzB,UAAMF,CAAAA,GAAcG,WAAAA,CAAYC,MAAZD,CAAmBD,CAAnBC,IACdD,CAAAA,CAAazP,MAAbyP,CAAoBpc,KAApBoc,CAA0BA,CAAAA,CAAaG,UAAvCH,EAAmDA,CAAAA,CAAaG,UAAbH,GAA0BA,CAAAA,CAAa3B,UAA1F2B,CADcC,GAEdD,CAFN;AAIA,WAAO3Q,MAAAA,CAAOwF,IAAPxF,CAAYyQ,CAAZzQ,CAAP;AAGIgH;;AAAAA,EAAAA,WAAAA,CAAY3E,CAAZ2E,EAA4B9B,CAA5B8B,EAAqD2B,CAArD3B,EAAqD2B;AACzD,QAAI3E,CAAAA,GAAqB,IAAzB;AACA,UAAMC,CAAAA,GAAU0E,CAAAA,IAAgC,SAAdzD,CAAc,GAAOrF,uBAAP,GAA4BkR,wBAA5DpI,CAAhB;AAYA,WAVAtG,CAAAA,CAAOlE,UAAPkE,CAAkBkI,IAAlBlI,CAAuBiI,CAAAA,IAAAA;AACnB,YAAM0G,CAAAA,GAAS1G,CAAAA,CAAMtG,QAANsG,CAAerG,CAAfqG,CAAf;AAEA,aAAA,CAAA,CAAI0G,CAAJ,KACIhN,CAAAA,GAAWgN,CAAXhN,EAAWgN,CACJ,CAFX,CAAA;AAEW,KALf3O,GAUO2B,CAAP;AAGIgD;;AAAAA,EAAAA,aAAAA,CAAc3E,CAAd2E,EAA8B2B,CAA9B3B,EAA8B2B;AAClC,UAAM3E,CAAAA,GAAW4B,KAAKiF,WAALjF,CAAiBvD,CAAjBuD,EAAyB,IAAzBA,EAA+B+C,CAA/B/C,CAAjB;AACA,QAAI5B,CAAAA,IAAmC,SAAvBA,CAAAA,CAASkB,SAAzB,EAA6C,OAAQlB,CAAR;AAGzCgD;;AAAAA,EAAAA,cAAAA,CAAe3E,CAAf2E,EAA+B2B,CAA/B3B,EAA+B2B;AACnC,UAAM3E,CAAAA,GAAW4B,KAAKiF,WAALjF,CAAiBvD,CAAjBuD,EAAyB,KAAzBA,EAAgC+C,CAAhC/C,CAAjB;AACA,QAAI5B,CAAAA,IAAmC,UAAvBA,CAAAA,CAASkB,SAAzB,EAA8C,OAAQlB,CAAR;AAG1CgD;;AAAAA,EAAAA,qBAAAA,CAAsB1F,CAAtB0F,EAAsB1F;AAC1B,UAAM4D,CAAAA,GAAY5D,CAAAA,CAAWsB,gBAAXtB,GAA8BzB,uBAA9ByB,GAAmD,IAAnDA,GAA0D,KAA5E;AACA,WAAO,IAAIoH,CAAJ,CAAgB;AACnBC,MAAAA,cAAAA,EAAgBrH,CAAAA,CAAWsB,gBAAXtB,IAA6C,SAAd4D,CAAc,GAAOrF,uBAAP,GAA4BkR,wBAAzEzP,CADG;AAEnB4D,MAAAA,SAAAA,EAAWA,CAFQ;AAGnB3T,MAAAA,IAAAA,EAAAA,CAAO+P,CAAAA,CAAW+C,YAAX/C,GAA0ByK,CAAAA,CAAUE,yBAA3C1a,MAA0E0f,8BAA1E1f,GAAsG,MAAtGA,GAAsG,CAC/F+P,CAAAA,CAAW+C,YAAX/C,GAA0ByK,CAAAA,CAAUE,yBAD2D,MAC5BiF,mCAD4B,GACK,WADL,GAEhG,aALa;AAMnBtI,MAAAA,UAAAA,EAAYtH,CAAAA,CAAWwD;AANJ,KAAhB,CAAP;AAUIkC;;AAAAA,EAAAA,gCAAAA,CAAiC3E,CAAjC2E,EAAiD1F,CAAjD0F,EAAiD1F;AACrD,WAAOsE,KAAKpF,mBAALoF,CAAyBvD,CAAzBuD,EAAiCtE,CAAAA,CAAW6P,UAA5CvL,EACN/I,IADM+I,CACD3a,CAAAA,IACK,IAAIod,CAAJ,CAA0B;AAC7BN,MAAAA,gBAAAA,EAAkBzG,CAAAA,CAAW8P,iBADA;AAE7B9I,MAAAA,cAAAA,EAAgBhH,CAAAA,CAAW+P,eAFE;AAG7B9I,MAAAA,iBAAAA,EAAmBjH,CAAAA,CAAWgQ,kBAHD;AAI7B9I,MAAAA,iBAAAA,EAAmBlH,CAAAA,CAAWiQ,kBAJD;AAK7B9I,MAAAA,aAAAA,EAAexd,CALc;AAM7ByX,MAAAA,SAAAA,EAAWpB,CAAAA,CAAWoB,SAAXpB,CAAqBzU,GAArByU,CAAyBsE,KAAK4L,qBAA9BlQ;AANkB,KAA1B,CAFJsE,CAAP;AAaIoB;;AAAAA,EAAAA,wBAAAA,CAAyB3E,CAAzB2E,EAAyChS,CAAzCgS,EAAyChS;AAC7C,WAAO4Q,KAAKyJ,oBAALzJ,CAA0BA,KAAK6L,gCAA/B7L,EAAiEvD,CAAjEuD,EAAyE5Q,CAAzE4Q,EACN/I,IADM+I,CACD6B,CAAAA,IACK,IAAID,CAAJ,CAAiB;AACpBE,MAAAA,OAAAA,EAAS9B,KAAKiH,eAALjH,CAAqBvD,CAArBuD,CADW;AAEpB1G,MAAAA,eAAAA,EAAiBlK,CAAAA,CAAY,CAAZA,CAAAA,CAAeyN,gBAFZ;AAGpBgF,MAAAA,UAAAA,EAAYA;AAHQ,KAAjB,CAFJ7B,CAAP;AAUIoB;;AAAAA,EAAAA,wBAAAA,CAAyB3E,CAAzB2E,EAAyC1F,CAAzC0F,EAAyC1F;AAC7C,WAAOsE,KAAKpF,mBAALoF,CAAyBvD,CAAzBuD,EAAiCtE,CAAAA,CAAWoQ,cAA5C9L,EACN/I,IADM+I,CACD3a,CAAAA,IAAAA;AACF,YAAM0mB,CAAAA,GAAgBrQ,CAAAA,CAAWnD,UAAXmD,IAAyB,EAA/C;AAEA,aAAOsE,KAAKyJ,oBAALzJ,CAA0BA,KAAKgM,wBAA/BhM,EAAyDvD,CAAzDuD,EAAiE+L,CAAjE/L,EACN/I,IADM+I,CACDzH,CAAAA,IACK,IAAIkJ,CAAJ,CAAqB;AACxBC,QAAAA,kBAAAA,EAAoBhG,CAAAA,CAAWgP,mBADP;AAExB/I,QAAAA,iBAAAA,EAAmBtc,CAFK;AAGxBkT,QAAAA,UAAAA,EAAYA;AAHY,OAArB,CAFJyH,CAAP;AAKoBzH,KATjByH,CAAP;AAeIoB;;AAAAA,EAAAA,SAAAA,CAAU4F,CAAV5F,EAAU4F;AACd,WAAKhH,KAAKjI,OAALiI,CAAagH,CAAbhH,IACEA,KAAKjI,OAALiI,CAAagH,CAAbhH,EAAqBvD,MADvBuD,GAA6B,IAAlC;AAIIoB;;AAAAA,EAAAA,2BAAAA,CAA4B0D,CAA5B1D,EAAiE9B,CAAjE8B,EAAiE9B;AAUrE,WAAA,CATsC,aAApBwF,CAAAA,CAAMC,SAAc,GAAWkH,4BAAX,GACA,gBAApBnH,CAAAA,CAAMC,SAAc,GAAcmH,+BAAd,GACA,eAApBpH,CAAAA,CAAMC,SAAc,GAAaoH,8BAAb,GACpBC,2BAMlB,KAJ0C,eAAtBtH,CAAAA,CAAMuH,WAAgB,GAAaC,iCAAb,GACA,YAAtBxH,CAAAA,CAAMuH,WAAgB,GAAUE,8BAAV,GACtBC,+BAEpB,IAAiClN,CAAjC;AAGI8B;;AAAAA,EAAAA,UAAAA,CAAW3E,CAAX2E,EAA2B2G,CAAAA,GAAkB,CAA7C3G,EAA6C;AACjD,WAAOpB,KAAKiI,YAALjI,CAAkB,MACd,IAAIzR,OAAJ,CAAkB,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AAC/B,UAAA;AACIiO,QAAAA,CAAAA,CAAOrE,IAAPqE;AACF,OAFF,CAEE,OAAO3Q,CAAP,EAAOA;AACL,eAAO0C,CAAAA,CAAO1C,CAAP0C,CAAP;AAEJzG;;AAAAA,MAAAA,CAAAA;AAAAA,KANG,CADJiY,EASJ+H,CATI/H,CAAP;AAYGoB;;AAAAA,EAAAA,YAAAA,CAAa4F,CAAb5F,EAAa4F;AAChB,WAAkC,SAA3BhH,KAAKyM,SAALzM,CAAegH,CAAfhH,CAAP;AAGGoB;;AAAAA,EAAAA,SAAAA,CAAU4F,CAAV5F,EAAU4F;AACb,UAAMvK,CAAAA,GAASuD,KAAKyM,SAALzM,CAAegH,CAAfhH,CAAf;AACA,WAAA,CAAA,CAAKvD,CAAL,IAC8B,SAAtBA,CAAAA,CAAOlE,UADf;AAIG6I;;AAAAA,EAAAA,cAAAA,CAAe+G,CAAf/G,EAAe+G;AAClB,WAAOnI,KAAK0M,WAAL1M,CAAiBmI,CAAjBnI,EACN/I,IADM+I,CACD,MACKA,KAAKqI,cAALrI,CAAoBA,KAAKkH,iBAAzBlH,EAA4CjZ,MAAAA,CAAOC,IAAPD,CAAYiZ,KAAKjI,OAAjBhR,CAA5CiZ,CAFJA,CAAP;AAMGoB;;AAAAA,EAAAA,IAAAA,CAAK4F,CAAL5F,EAAK4F;AACR,UAAMvK,CAAAA,GAASuD,KAAKyM,SAALzM,CAAegH,CAAfhH,CAAf;AACA,WAAOA,KAAK0I,UAAL1I,CAAgBvD,CAAhBuD,CAAP;AAGGoB;;AAAAA,EAAAA,KAAAA,CAAM4F,CAAN5F,EAAM4F;AACT,WAAO,IAAIzY,OAAJ,CAAY,CAACxG,CAAD,EAAU+f,CAAV,KAAUA;AACV9H,WAAKyM,SAALzM,CAAegH,CAAfhH,EACRtH,KADQsH,IAEfjY,CAAAA,EAFeiY;AAEfjY,KAHG,CAAP;AAOGqZ;;AAAAA,EAAAA,mBAAAA,CAAoB4F,CAApB5F,EAAoC1E,CAApC0E,EAAoC1E;AACvC,WAAO,IAAInO,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACVwR,WAAKyM,SAALzM,CAAegH,CAAfhH,EAER1D,gBAFQ0D,CAEStD,CAFTsD,EAEalU,CAAAA,IAAAA;AACxB,YAAIA,CAAJ,EAAW,OAAO0C,CAAAA,CAAO1C,CAAP0C,CAAP;AACXzG,QAAAA,CAAAA;AAAAA,OAJWiY;AAIXjY,KALD,CAAP;AAUGqZ;;AAAAA,EAAAA,cAAAA,CAAe4F,CAAf5F,EAA+B/C,CAA/B+C,EAA+B/C;AAClC,WAAO,IAAI9P,OAAJ,CAAY,CAACxG,CAAD,EAAU+f,CAAV,KAAUA;AACV9H,WAAKyM,SAALzM,CAAegH,CAAfhH,EAER5G,SAFQ4G,CAEE3B,CAFF2B,EAEW7C,KAFX6C,IAGfjY,CAAAA,EAHeiY;AAGfjY,KAJG,CAAP;AAQGqZ;;AAAAA,EAAAA,gBAAAA,CAAiB4F,CAAjB5F,EAAiC/C,CAAjC+C,EAAiC/C;AACpC,WAAO,IAAI9P,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACVwR,WAAKyM,SAALzM,CAAegH,CAAfhH,EAER5G,SAFQ4G,CAEE3B,CAFF2B,EAEW3C,OAFX2C,CAEW3C,CAAQ,CAFnB2C,EAEyBlU,CAAAA,IAAAA;AACpC,YAAIA,CAAJ,EAAW,OAAO0C,CAAAA,CAAO1C,CAAP0C,CAAP;AACXzG,QAAAA,CAAAA;AAAAA,OAJWiY;AAIXjY,KALD,CAAP;AAUGqZ;;AAAAA,EAAAA,wBAAAA,CAAyB4F,CAAzB5F,EAAyC9H,CAAzC8H,EAAkEe,CAAlEf,EAAkEe;AACrE,WAAO,IAAI5T,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACVwR,WAAKyM,SAALzM,CAAegH,CAAfhH,EACM5G,SADN4G,CACgB1G,CADhB0G,EAGT9B,aAHS8B,CAGKmC,CAHLnC,EAGuBlU,CAAAA,IAAAA;AAClC,YAAIA,CAAJ,EAAW,OAAO0C,CAAAA,CAAO1C,CAAP0C,CAAP;AACXzG,QAAAA,CAAAA;AAAAA,OALWiY;AAKXjY,KAND,CAAP;AAWGqZ;;AAAAA,EAAAA,iBAAAA,CAAkB4F,CAAlB5F,EAAkC0D,CAAlC1D,EAAuE/d,CAAvE+d,EAAuE/d;AAC1E,WAAO,IAAIkL,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,YAAMiO,CAAAA,GAASuD,KAAKyM,SAALzM,CAAegH,CAAfhH,CAAf;AAAA,YACMrU,CAAAA,GAAOqU,KAAK2M,2BAAL3M,CAAiC8E,CAAjC9E,EAAwC/F,uBAAxC+F,CADb;AAGAvD,MAAAA,CAAAA,CAAOhD,eAAPgD,CAAuB9Q,CAAvB8Q,EAA6BqI,CAAAA,CAAM8H,OAAnCnQ,EAA4CqI,CAAAA,CAAM1a,KAAlDqS,EAAyDqI,CAAAA,CAAM1W,KAA/DqO,EAAsEpZ,CAAtEoZ,EAA8E,CAAC3Q,CAAD,EAAQwP,CAAR,KAAQA;AAClF,YAAIxP,CAAJ,EACI,OAAIA,CAAAA,CAAMgN,KAANhN,KAAgByP,0BAAhBzP,GACO/D,CAAAA,CAAQ;AACX8kB,UAAAA,MAAAA,EAAQ;AADG,SAAR9kB,CADP+D,GAIOA,CAAAA,CAAMgN,KAANhN,KAAgBghB,6BAAhBhhB,GACA/D,CAAAA,CAAQ;AACX8kB,UAAAA,MAAAA,EAAQ;AADG,SAAR9kB,CADA+D,GAMJ0C,CAAAA,CAAO1C,CAAP0C,CAVP;AAaJzG,QAAAA,CAAAA,CAAQ;AACJuW,UAAAA,IAAAA,EAAM0B,KAAK+M,gBAAL/M,CAAsB1E,CAAtB0E,CADF;AAEJ6M,UAAAA,MAAAA,EAAQ;AAFJ,SAAR9kB,CAAAA;AAEY,OAjBhB0U;AAiBgB,KArBb,CAAP;AA2BG2E;;AAAAA,EAAAA,kBAAAA,CAAmB4F,CAAnB5F,EAAmC0D,CAAnC1D,EAAwE9C,CAAxE8C,EAAwE9C;AAC3E,WAAO,IAAI/P,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,YAAMiO,CAAAA,GAASuD,KAAKyM,SAALzM,CAAegH,CAAfhH,CAAf;AAAA,YACMrU,CAAAA,GAAOqU,KAAK2M,2BAAL3M,CAAiC8E,CAAjC9E,EAAwCmL,wBAAxCnL,CADb;AAAA,YAEM1E,CAAAA,GAASgD,CAAAA,GAAO0B,KAAKgN,oBAALhN,CAA0B1B,CAA1B0B,CAAP1B,GAAyC,IAAIlE,MAAJ,CAAW,CAAX,CAFxD;AAIAqC,MAAAA,CAAAA,CAAOhD,eAAPgD,CAAuB9Q,CAAvB8Q,EAA6BqI,CAAAA,CAAM8H,OAAnCnQ,EAA4CqI,CAAAA,CAAM1a,KAAlDqS,EAAyDqI,CAAAA,CAAM1W,KAA/DqO,EAAsEnB,CAAtEmB,EAA8E3Q,CAAAA,IAAAA;AAC1E,YAAIA,CAAJ,EACI,OAAIA,CAAAA,CAAMgN,KAANhN,KAAgByP,0BAAhBzP,GACO/D,CAAAA,CAAQ;AACXklB,UAAAA,YAAAA,EAAc,CADH;AAEXJ,UAAAA,MAAAA,EAAQ;AAFG,SAAR9kB,CADP+D,GAOG0C,CAAAA,CAAO1C,CAAP0C,CAPP;AAUJzG,QAAAA,CAAAA,CAAQ;AACJklB,UAAAA,YAAAA,EAAc3R,CAAAA,CAAO8N,UADjB;AAEJyD,UAAAA,MAAAA,EAAQ;AAFJ,SAAR9kB,CAAAA;AAEY,OAdhB0U;AAcgB,KAnBb,CAAP;AAyBG2E;;AAAAA,EAAAA,SAAAA,CAAU4F,CAAV5F,EAA0B9B,CAA1B8B,EAAmD2B,CAAnD3B,EAAmD2B;AACtD,WAAO,IAAIxU,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,YAAMiO,CAAAA,GAASuD,KAAKyM,SAALzM,CAAegH,CAAfhH,CAAf;AAAA,YACMnG,CAAAA,GAASkJ,CAAAA,IAAgC,SAAdzD,CAAc,GAAOrF,uBAAP,GAA4BkR,wBAA5DpI,CADf;AAEAtG,MAAAA,CAAAA,CAAOhD,eAAPgD,CAAuB0P,8BAAvB1P,EAAkD0J,CAAAA,CAAUO,aAA5DjK,EAA2E0J,CAAAA,CAAUQ,aAArFlK,EAAoG5C,CAApG4C,EAA4G,CAA5GA,EAA+G3Q,CAAAA,IAAAA;AAC3G,YAAIA,CAAJ,EAAW,OAAO0C,CAAAA,CAAO1C,CAAP0C,CAAP;AACXzG,QAAAA,CAAAA;AAAAA,OAFJ0U;AAEI1U,KALD,CAAP;AAUGqZ;;AAAAA,EAAAA,UAAAA,CAAW4F,CAAX5F,EAA2B2B,CAA3B3B,EAAmD/d,CAAnD+d,EAAmD/d;AACtD,WAAO,IAAIkL,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,YAAMiO,CAAAA,GAASuD,KAAKyM,SAALzM,CAAegH,CAAfhH,CAAf;AACiBA,WAAKkN,aAALlN,CAAmBvD,CAAnBuD,EAA2B+C,CAA3B/C,EAERxF,QAFQwF,CAEC3c,CAFD2c,EAES,CAAClU,CAAD,EAAQwS,CAAR,KAAQA;AAC9B,YAAIxS,CAAJ,EACI,OAAIA,CAAAA,CAAMgN,KAANhN,KAAgByP,0BAAhBzP,GACO/D,CAAAA,CAAQ;AACX8kB,UAAAA,MAAAA,EAAQ;AADG,SAAR9kB,CADP+D,GAIOA,CAAAA,CAAMgN,KAANhN,KAAgBghB,6BAAhBhhB,GACA/D,CAAAA,CAAQ;AACX8kB,UAAAA,MAAAA,EAAQ;AADG,SAAR9kB,CADA+D,GAMJ0C,CAAAA,CAAO1C,CAAP0C,CAVP;AAaJzG,QAAAA,CAAAA,CAAQ;AACJuW,UAAAA,IAAAA,EAAM0B,KAAK+M,gBAAL/M,CAAsB1B,CAAtB0B,CADF;AAEJ6M,UAAAA,MAAAA,EAAQ;AAFJ,SAAR9kB,CAAAA;AAEY,OAnBCiY;AAmBD,KArBb,CAAP;AA2BGoB;;AAAAA,EAAAA,WAAAA,CAAY4F,CAAZ5F,EAA4B2B,CAA5B3B,EAAoD9C,CAApD8C,EAAoD9C;AACvD,WAAO,IAAI/P,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACzB,YAAMiO,CAAAA,GAASuD,KAAKyM,SAALzM,CAAegH,CAAfhH,CAAf;AAAA,YACM5B,CAAAA,GAAW4B,KAAKmN,cAALnN,CAAoBvD,CAApBuD,EAA4B+C,CAA5B/C,CADjB;AAAA,YAEM1E,CAAAA,GAAS0E,KAAKgN,oBAALhN,CAA0B1B,CAA1B0B,CAFf;AAIA5B,MAAAA,CAAAA,CAAS5D,QAAT4D,CAAkB9C,CAAlB8C,EAA0BtS,CAAAA,IAAAA;AACtB,YAAIA,CAAJ,EACI,OAAIA,CAAAA,CAAMgN,KAANhN,KAAgByP,0BAAhBzP,GACO/D,CAAAA,CAAQ;AACXklB,UAAAA,YAAAA,EAAc,CADH;AAEXJ,UAAAA,MAAAA,EAAQ;AAFG,SAAR9kB,CADP+D,GAOG0C,CAAAA,CAAO1C,CAAP0C,CAPP;AAUJzG,QAAAA,CAAAA,CAAQ;AACJklB,UAAAA,YAAAA,EAAc3R,CAAAA,CAAO8N,UADjB;AAEJyD,UAAAA,MAAAA,EAAQ;AAFJ,SAAR9kB,CAAAA;AAEY,OAdhBqW;AAcgB,KAnBb,CAAP;AAyBGgD;;AAAAA,EAAAA,qBAAAA,CAAsBU,CAAtBV,EAAuCgM,CAAvChM,EAAgEiM,CAAhEjM,EAAgEiM;AACnE,WAAO,IAAI9e,OAAJ,CAAY,CAAC+e,CAAD,EAAW9e,CAAX,KAAWA;AAC1BA,MAAAA,CAAAA,CAAO,qDAAPA,CAAAA;AAAO,KADJ,CAAP;AAKG4S;;AAAAA,EAAAA,sBAAAA,CAAuBU,CAAvBV,EAAwCgM,CAAxChM,EAAiEmM,CAAjEnM,EAAsFiM,CAAtFjM,EAAsFiM;AACzF,WAAO,IAAI9e,OAAJ,CAAY,CAAC+e,CAAD,EAAW9e,CAAX,KAAWA;AAC1BA,MAAAA,CAAAA,CAAO,sDAAPA,CAAAA;AAAO,KADJ,CAAP;AAKG4S;;AAAAA,EAAAA,KAAAA,CAAM4F,CAAN5F,EAAM4F;AACT,WAAO,IAAIzY,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AACVwR,WAAKyM,SAALzM,CAAegH,CAAfhH,EACRuF,KADQvF,CACFlU,CAAAA,IAAAA;AACT,YAAIA,CAAJ,EAAW,OAAO0C,CAAAA,CAAO1C,CAAP0C,CAAP;AACXzG,QAAAA,CAAAA;AAAAA,OAHWiY;AAGXjY,KAJD,CAAP;AAIQA;;AA5rBgBsC;;;AAEduc,CAAAA,CAAAA,oBAAAA,GAA+B,SAA/BA,EACAA,CAAAA,CAAAA,uBAAAA,GAAkC,YADlCA;AACkC,MAksBvCvE,CAAAA,GAAU,IAAIuE,CAAJ,EAlsB6B;;;ACpFpD,MAAa4G,CAAb,CAAaA;AAAbpM,EAAAA,WAAAA,GAAAA;AA8BWpB,SAAAA,OAAAA,GAAAA,CAAU,CAAVA,EAKAA,KAAAA,UAAAA,GAAAA,CAAa,CALbA,EAUAA,KAAAA,YAAAA,GAAAA,CAAe,CAVfA,EAeAA,KAAAA,QAAAA,GAAAA,CAAW,CAfXA,EAoBAA,KAAAA,gBAAAA,GAAAA,CAAmB,CApBnBA,EAyBAA,KAAAA,UAAAA,GAAa,CAzBbA,EA8BAA,KAAAA,SAAAA,GAAAA,CAAY,CA9BZA,EAmCAA,KAAAA,WAAAA,GAAAA,CAAc,CAnCdA;AA4DAoB;;AAAAA,EAAAA,YAAAA,GAAAA;AACH,WAAO,EAAP;AAMGA;;AAAAA,EAAAA,SAAAA,CAAUzV,CAAVyV,EAAwBqM,CAAxBrM,EAA2CsM,CAA3CtM,EAA2CsM;AAC9C1N,SAAKrU,IAALqU,GAAYrU,CAAZqU,EACAA,KAAKyN,OAALzN,GAAeyN,CADfzN,EAEAA,KAAK0N,UAAL1N,GAAkB0N,CAFlB1N;AAQGoB;;AAAAA,EAAAA,cAAAA,GAAAA;AACHpB,SAAK2N,gBAAL3N,GAAK2N,CAAmB,CAAxB3N;AAMGoB;;AAAAA,EAAAA,wBAAAA,GAAAA,CAOAA;;AAAAA,EAAAA,eAAAA,GAAAA,CAAAA;;AAxHEoM;;AAwHFpM,MAQEwM,CARFxM,SAQgCoM,CARhCpM,CAQgCoM;AAevCpM,EAAAA,WAAAA,CAAY9X,CAAZ8X,EAAiCzV,CAAjCyV,EAAiEyM,CAAjEzM,EAAiEyM;AAC7DtM,aACAvB,KAAK8N,SAAL9N,CAAerU,CAAfqU,EAAqB6N,CAAAA,CAAcJ,OAAnCzN,EAA4C6N,CAAAA,CAAcH,UAA1D1N,CADAuB,EAEAvB,KAAK1W,MAAL0W,GAAc1W,CAFdiY,EAGAvB,KAAKvD,MAALuD,GAAc6N,CAAAA,CAAcpR,MAH5B8E;AAG4B9E;;AAnBO+Q;;AAmBP/Q,MCvHvBsR,CDuHuBtR,SCvHV0E,CDuHU1E,CCvHV0E;AA2BtBC,EAAAA,WAAAA,CAAY4M,CAAZ5M,EAAY4M;AACRzM,aA1BIvB,KAAAA,cAAAA,GAAgC,EA0BpCuB,EAEAyM,CAAAA,GAAUA,CAAAA,IAAW,EAFrBzM,EAGAvB,KAAKiO,YAALjO,GAAoBgO,CAAAA,CAAQC,YAH5B1M;;AAKA,UAAM2M,CAAAA,GAAwBzR,CAAAA,IAAAA;AAE1B,UAAIuD,KAAKmO,oBAALnO,CAA0BvD,CAA1BuD,CAAJ,EAAuC;AACnC,cAAMwB,CAAAA,GAAQ,IAAIoM,CAAJ,CAA0B5N,IAA1B,EAA+C,SAA/C,EAA0D;AAAEvD,UAAAA,MAAAA,EAAAA;AAAF,SAA1D,CAAd;AACAuD,aAAKoO,aAALpO,CAAmBwB,CAAnBxB,GAEIA,KAAKqO,SAALrO,IACAA,KAAKqO,SAALrO,CAAewB,CAAfxB,CAHJA;AAGmBwB;AAAAA,KAP3B;AAAA,UAYM8M,CAAAA,GAA2BtH,CAAAA,IAAAA;AAE7B,YAAMvK,CAAAA,GAASuD,KAAKuO,cAALvO,CAAoBkC,IAApBlC,CAAyBuO,CAAAA,IAAkBA,CAAAA,CAAezM,OAAfyM,KAA2BvH,CAAtEhH,CAAf;;AAEA,UAAIvD,CAAJ,EAAY;AACR,cAAM+E,CAAAA,GAAQ,IAAIoM,CAAJ,CAA0B5N,IAA1B,EAA+C,YAA/C,EAA6D;AAAEvD,UAAAA,MAAAA,EAAAA;AAAF,SAA7D,CAAd;AACAuD,aAAKoO,aAALpO,CAAmBwB,CAAnBxB,GAEIA,KAAKwO,YAALxO,IACAA,KAAKwO,YAALxO,CAAkBwB,CAAlBxB,CAHJA;AAGsBwB;AAAAA,KArB9B;;AA0BAxB,SAAKrb,EAALqb,CAAQ,aAARA,EAAuBwB,CAAAA,IAAAA;AAGG,YAFAxB,KAAKhS,aAALgS,CAAmBwB,CAAnBxB,CAEA,KAIR,cAAVwB,CAAU,GACVa,CAAAA,CAAQzd,WAARyd,CAAoBuE,CAAAA,CAAWQ,oBAA/B/E,EAAqD6L,CAArD7L,CADU,GAEO,iBAAVb,CAAU,IACjBa,CAAAA,CAAQzd,WAARyd,CAAoBuE,CAAAA,CAAWU,uBAA/BjF,EAAwDiM,CAAxDjM,CAPkB;AAOsCiM,KAVhEtO,GAcAA,KAAKrb,EAALqb,CAAQ,gBAARA,EAA0BwB,CAAAA,IAAAA;AAGA,YAFAxB,KAAKhS,aAALgS,CAAmBwB,CAAnBxB,CAEA,KAIR,cAAVwB,CAAU,GACVa,CAAAA,CAAQtd,cAARsd,CAAuBuE,CAAAA,CAAWQ,oBAAlC/E,EAAwD6L,CAAxD7L,CADU,GAEO,iBAAVb,CAAU,IACjBa,CAAAA,CAAQtd,cAARsd,CAAuBuE,CAAAA,CAAWU,uBAAlCjF,EAA2DiM,CAA3DjM,CAPkB;AAOyCiM,KAVnEtO,CAdAA;AArDJqO;;AAAAA,MAAAA,SAAAA,CAAqBhe,CAArBge,EAAqBhe;AACb2P,SAAKyO,UAALzO,IACAA,KAAK/Q,mBAAL+Q,CAAyB,SAAzBA,EAAoCA,KAAKyO,UAAzCzO,CADAA,EAGJA,KAAKyO,UAALzO,GAAkB3P,CAHd2P,EAIJA,KAAKjR,gBAALiR,CAAsB,SAAtBA,EAAiCA,KAAKyO,UAAtCzO,CAJIA;AAQRwO;;AAAAA,MAAAA,YAAAA,CAAwBne,CAAxBme,EAAwBne;AAChB2P,SAAK0O,aAAL1O,IACAA,KAAK/Q,mBAAL+Q,CAAyB,YAAzBA,EAAuCA,KAAK0O,aAA5C1O,CADAA,EAGJA,KAAK0O,aAAL1O,GAAqB3P,CAHjB2P,EAIJA,KAAKjR,gBAALiR,CAAsB,YAAtBA,EAAoCA,KAAK0O,aAAzC1O,CAJIA;AAwEAoB;;AAAAA,EAAAA,oBAAAA,CAAqB3E,CAArB2E,EAAqB3E;AACzB,SAAK,MAAM1Y,CAAX,IAAgBic,KAAKuO,cAArB,EACI,IAAIvO,KAAK2O,YAAL3O,CAAkBvD,CAAlBuD,EAA0BA,KAAKuO,cAALvO,CAAoBjc,CAApBic,CAA1BA,CAAJ,EAEI,OADAA,KAAKuO,cAALvO,CAAoBjc,CAApBic,IAAyBvD,CAAzBuD,EAAyBvD,CAClB,CAAP;;AAIR,WAAA,CAAO,CAAP;AAGI2E;;AAAAA,EAAAA,YAAAA,CAAawN,CAAbxN,EAAiCyN,CAAjCzN,EAAiCyN;AACrC,WAAQD,CAAAA,CAAQnL,SAARmL,KAAsBC,CAAAA,CAAQpL,SAA9BmL,IACAA,CAAAA,CAAQpL,QAARoL,KAAqBC,CAAAA,CAAQrL,QAD7BoL,IAEAA,CAAAA,CAAQ7K,YAAR6K,KAAyBC,CAAAA,CAAQ9K,YAFzC;AAKI3C;;AAAAA,EAAAA,YAAAA,CAAa4M,CAAb5M,EAA+C3E,CAA/C2E,EAA+C3E;AACnD,WAAOuR,CAAAA,CAAQc,OAARd,CAAgBrJ,IAAhBqJ,CAAqB1F,CAAAA,IAAAA;AAExB,UAAIA,CAAAA,CAAO9E,QAAP8E,IAAmBA,CAAAA,CAAO9E,QAAP8E,KAAoB7L,CAAAA,CAAO+G,QAAlD,EAA4D,OAAA,CAAO,CAAP;AAG5D,UAAI8E,CAAAA,CAAO7E,SAAP6E,IAAoBA,CAAAA,CAAO7E,SAAP6E,KAAqB7L,CAAAA,CAAOgH,SAApD,EAA+D,OAAA,CAAO,CAAP;;AAG/D,UAAI6E,CAAAA,CAAOyG,SAAX,EAAsB;AAgBlB,YAbctS,CAAAA,CAAO4H,aAAP5H,CAAqBlE,UAArBkE,CAAgCkI,IAAhClI,CAAqCiI,CAAAA,IAAAA,CAAAA,CAE3C4D,CAAAA,CAAOyG,SAFoCrK,IAEvB4D,CAAAA,CAAOyG,SAAPzG,KAAqB5D,CAAAA,CAAMzC,SAANyC,CAAgBhC,cAFdgC,KAEchC,CAAAA,CAGzD4F,CAAAA,CAAO0G,YAHkDtM,IAGlC4F,CAAAA,CAAO0G,YAAP1G,KAAwB5D,CAAAA,CAAMzC,SAANyC,CAAgB/B,iBAHND,MAGMC,CAG/D2F,CAAAA,CAAO2G,YAHwDtM,IAGxC2F,CAAAA,CAAO2G,YAAP3G,KAAwB5D,CAAAA,CAAMzC,SAANyC,CAAgB9B,iBANNF,CAFnDjG,CAad,EAAW,OAAA,CAAO,CAAP;AAIf;;AAAA,aAAA,CAAA,CAAI6L,CAAAA,CAAOyG,SAAX,IAAwBzG,CAAAA,CAAOyG,SAAPzG,KAAqB7L,CAAAA,CAAO4G,WAApD,KAAoDA,CAAAA,CAGhDiF,CAAAA,CAAO0G,YAHyC3L,IAGzBiF,CAAAA,CAAO0G,YAAP1G,KAAwB7L,CAAAA,CAAO6G,cAHND,KAGMC,CAAAA,CAGtDgF,CAAAA,CAAO2G,YAH+C3L,IAG/BgF,CAAAA,CAAO2G,YAAP3G,KAAwB7L,CAAAA,CAAO8G,cAHAD,MAGAC,CAGtD+E,CAAAA,CAAOvE,YAH+CR,IAG/B+E,CAAAA,CAAOvE,YAAPuE,KAAwB7L,CAAAA,CAAOsH,YANAT,CAH1D;AAS0DS,KArCvDiK,CAAP;AA+CG5M;;AAAAA,EAAAA,UAAAA,GAAAA;AAEH,UAAM+G,CAAAA,GAAanI,KAAKuO,cAALvO,CAAoB/Y,GAApB+Y,CAAwBvD,CAAAA,KAAAA;AACvC+G,MAAAA,QAAAA,EAAU/G,CAAAA,CAAO+G,QAAP/G,IAAO+G,KAAYhZ,CADUiS;AAEvCgH,MAAAA,SAAAA,EAAWhH,CAAAA,CAAOgH,SAAPhH,IAAOgH,KAAajZ,CAFQiS;AAGvCsS,MAAAA,SAAAA,EAAWtS,CAAAA,CAAO4G,WAAP5G,IAAO4G,KAAe7Y,CAHMiS;AAIvCuS,MAAAA,YAAAA,EAAcvS,CAAAA,CAAO6G,cAAP7G,IAAO6G,KAAkB9Y,CAJAiS;AAKvCwS,MAAAA,YAAAA,EAAcxS,CAAAA,CAAO8G,cAAP9G,IAAO8G,KAAkB/Y,CALAiS;AAMvCsH,MAAAA,YAAAA,EAActH,CAAAA,CAAOsH,YAAPtH,IAAOsH,KAAgBvZ;AANEiS,KAAAA,CAAxBuD,CAAnB;AAUA,WAAOqC,CAAAA,CAAQ6M,cAAR7M,CAAuB8F,CAAvB9F,EACNpL,IADMoL,CACDtK,CAAAA,IAAAA;AAeF,aAdgBA,CAAAA,CAAQuQ,MAARvQ,CAAe0E,CAAAA,IAAAA;AAC3B,YAAA,CAAKA,CAAAA,CAAO6H,SAAZ,EACI,OAAA,CAAO,CAAP;;AAGJ,aAAK,MAAMvgB,CAAX,IAAgBic,KAAKuO,cAArB,EACI,IAAIvO,KAAK2O,YAAL3O,CAAkBvD,CAAlBuD,EAA0BA,KAAKuO,cAALvO,CAAoBjc,CAApBic,CAA1BA,CAAJ,EACI,OAAA,CAAO,CAAP;;AAIR,eAAA,CAAO,CAAP;AAAO,OAXKjI,CAchB;AAHW,KAbRsK,CAAP;AAyBGjB;;AAAAA,EAAAA,aAAAA,CAAc4M,CAAd5M,EAAc4M;AACjB,WAAO,IAAIzf,OAAJ,CAAY,CAACxG,CAAD,EAAUyG,CAAV,KAAUA;AAEzB,UAAA,CAAKwf,CAAL,EACI,OAAOxf,CAAAA,CAAO,IAAI1D,SAAJ,CAAc,8DAAd,CAAP0D,CAAP;AAIJ,UAAIwf,CAAAA,CAAQvb,WAARub,KAAwB,GAAGvb,WAA/B,EACI,OAAOjE,CAAAA,CAAO,IAAI1D,SAAJ,CAAc,6DAAd,CAAP0D,CAAP;AAIJ,UAAA,CAAKwf,CAAAA,CAAQc,OAAb,EACI,OAAOtgB,CAAAA,CAAO,IAAI1D,SAAJ,CAAc,2DAAd,CAAP0D,CAAP;AAIJ,UAAIwf,CAAAA,CAAQc,OAARd,CAAgBvb,WAAhBub,KAAgC,GAAGvb,WAAvC,EACI,OAAOjE,CAAAA,CAAO,IAAI1D,SAAJ,CAAc,2EAAd,CAAP0D,CAAP;AAqBJ,aAjBcwf,CAAAA,CAAQc,OAARd,CAAgBmB,KAAhBnB,CAAsB1F,CAAAA,IAG5BA,CAAAA,CAAO2G,YAAP3G,IAAO2G,CAAiB3G,CAAAA,CAAO0G,YAA/B1G,IACA9Z,CAAAA,CAAO,IAAI1D,SAAJ,CAAc,gDAAd,CAAP0D,CAAAA,EAAqB,CACd,CAFP8Z,IAEO,EAIPA,CAAAA,CAAO0G,YAAP1G,IAAO0G,CAAiB1G,CAAAA,CAAOyG,SAJxB,MAKPvgB,CAAAA,CAAO,IAAI1D,SAAJ,CAAc,6CAAd,CAAP0D,CAAAA,EAAqB,CACd,CANA,CALDwf,IAmBP3L,CAAAA,CAAQ6M,cAAR7M,CAAuB2L,CAAAA,CAAQc,OAA/BzM,EACNpL,IADMoL,CACDtK,CAAAA,IAAAA;AAGF,YAAuB,MAAA,CAFvBA,CAAAA,GAAUA,CAAAA,CAAQuQ,MAARvQ,CAAe0E,CAAAA,IAAUuD,KAAKoP,YAALpP,CAAkBgO,CAAlBhO,EAA2BvD,CAA3BuD,CAAzBjI,CAEa,EAAX1U,MAAZ,EACI,OAAOmL,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,uCAAV,CAAPkM,CAAP;;AAGJ,iBAAS6gB,CAAT,CAAkB5S,CAAlB,EAAkBA;AACTuD,eAAKmO,oBAALnO,CAA0BvD,CAA1BuD,KAAmCA,KAAKuO,cAALvO,CAAoBhc,IAApBgc,CAAyBvD,CAAzBuD,CAAnCA,EACLjY,CAAAA,CAAQ0U,CAAR1U,CADKiY;AAKT;;AAAA,eAAKA,KAAKiO,YAALjO,GAEEA,KAAKiO,YAALjO,CAAkBjI,CAAlBiI,EACN/I,IADM+I,CACDvD,CAAAA,KACGA,CAAAA,IACDjO,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,2BAAV,CAAPkM,CADCiO,EAIE4S,CAAAA,CAASxsB,IAATwsB,CAAcrP,IAAdqP,EAAoB5S,CAApB4S,CALL5S,CADCuD,CAFFA,GAA0BqP,CAAAA,CAASxsB,IAATwsB,CAAcrP,IAAdqP,EAAoBtX,CAAAA,CAAQ,CAARA,CAApBsX,CAA/B;AAA2D,OAdxDhN,EAwBJ6C,KAxBI7C,CAwBEvW,CAAAA,IAAAA;AACL0C,QAAAA,CAAAA,CAAO,IAAIlM,KAAJ,CAAU,wBAAwBwJ,CAAAA,EAAlC,CAAP0C,CAAAA;AAAyC1C,OAzBtCuW,CAnBO2L,GA4C+BliB,KA3B7C,CAAA;AAAA,KAvCG,CAAP;AAuCI;;AAtOcqV;;;AAsOd,MClQChK,CAAAA,GAAM,IAAI4W,CAAJ,EDkQP;;;;;;;IEhSZ;;MACa,iBAAiB,GAAG;AAErBuB,OAAAA,CAAAA,sBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,sBAAZ,EAAkC;AAC9B,EAAA,sBAAA,CAAA,sBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,sBAAA,CAAA,sBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,sBAAA,CAAA,sBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,sBAAAA,KAAAA,OAAAA,CAAAA,sBAAAA,GAAsB,EAAtBA,CAAZ;;AAOYC,OAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,iBAAZ,EAA6B;AACzB,EAAA,iBAAA,CAAA,iBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;AACH,CAPD,EAAYA,OAAAA,CAAAA,iBAAAA,KAAAA,OAAAA,CAAAA,iBAAAA,GAAiB,EAAjBA,CAAZ;;AASYC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;;AAKjB,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;;;;;;AAMA,EAAA,SAAA,CAAA,SAAA,CAAA,aAAA,CAAA,GAAA,IAAA,CAAA,GAAA,aAAA;;;;;;AAMA,EAAA,SAAA,CAAA,SAAA,CAAA,aAAA,CAAA,GAAA,IAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;;;;;AAKA,EAAA,SAAA,CAAA,SAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACH,CAhCD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ;;AAkCYC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;;;;;AAQjB,EAAA,SAAA,CAAA,SAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;;;;;;;;;;AAUA,EAAA,SAAA,CAAA,SAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,kBAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;;AAUA,EAAA,SAAA,CAAA,SAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,4BAAA,CAAA,GAAA,GAAA,CAAA,GAAA,4BAAA;;;;;;;;;;AAUA,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;;;;AAYA,EAAA,SAAA,CAAA,SAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;AACH,CAxKD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ;;AA0KYC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;AAInB,EAAA,WAAA,CAAA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;;;;;AAKA,EAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;;;;;AAKA,EAAA,WAAA,CAAA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;;;;;AAKA,EAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACH,CA7BD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ,GA+BA;;;AACYC,OAAAA,CAAAA,OAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,OAAZ,EAAmB;;;;;;;;;;;AAWf,EAAA,OAAA,CAAA,OAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;;;;;;;;;;;;;AAaA,EAAA,OAAA,CAAA,OAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;AACH,CAzBD,EAAYA,OAAAA,CAAAA,OAAAA,KAAAA,OAAAA,CAAAA,OAAAA,GAAO,EAAPA,CAAZ;;AA2BYC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;;;;;AAQjB,EAAA,SAAA,CAAA,SAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ,GAWA;;;AACYC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;;;;;;AASjB,EAAA,SAAA,CAAA,SAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,kBAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,4BAAA,CAAA,GAAA,GAAA,CAAA,GAAA,4BAAA;AACH,CA5BD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ,GA8BA;;;MACa,iBAAiB,GAAG;AACrBC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;;;;;AAQxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;;AAUA,EAAA,gBAAA,CAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AACH,CA5BD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ;;AA8BYC,OAAAA,CAAAA,kBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,kBAAZ,EAA8B;;;;AAI1B,EAAA,kBAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CA5DD,EAAYA,OAAAA,CAAAA,kBAAAA,KAAAA,OAAAA,CAAAA,kBAAAA,GAAkB,EAAlBA,CAAZ,GA8DA;;;MACa,kBAAkB,GAAG;AAEtBC,OAAAA,CAAAA,mBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,mBAAZ,EAA+B;AAC3B,EAAA,mBAAA,CAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACH,CAXD,EAAYA,OAAAA,CAAAA,mBAAAA,KAAAA,OAAAA,CAAAA,mBAAAA,GAAmB,EAAnBA,CAAZ;;AAaYC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;;;;;;;AAUxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,kBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,kBAAA;AACH,CApBD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ;;AAsBYC,OAAAA,CAAAA,kBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,kBAAZ,EAA8B;;;;;;;;AAQ1B,EAAA,kBAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,kBAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,kBAAAA,KAAAA,OAAAA,CAAAA,kBAAAA,GAAkB,EAAlBA,CAAZ,GAoBA;;;MACa,gBAAgB,GAAG;AACpBC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;AAQtB,EAAA,cAAA,CAAA,cAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ;;AAWYC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;;AAStB,EAAA,cAAA,CAAA,cAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;;;;AAYA,EAAA,cAAA,CAAA,cAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;AACH,CA/BD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ,GAiCA;;;MACa,wBAAwB,GAAG;AAE5BC,OAAAA,CAAAA,iCAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,iCAAZ,EAA6C;AACzC,EAAA,iCAAA,CAAA,iCAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACA,EAAA,iCAAA,CAAA,iCAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACA,EAAA,iCAAA,CAAA,iCAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACA,EAAA,iCAAA,CAAA,iCAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,iCAAAA,KAAAA,OAAAA,CAAAA,iCAAAA,GAAiC,EAAjCA,CAAZ;;AAOYC,OAAAA,CAAAA,oBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,oBAAZ,EAAgC;;;;;;;;AAQ5B,EAAA,oBAAA,CAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,oBAAA,CAAA,oBAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,oBAAA,CAAA,oBAAA,CAAA,kBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,kBAAA;AACH,CA3BD,EAAYA,OAAAA,CAAAA,oBAAAA,KAAAA,OAAAA,CAAAA,oBAAAA,GAAoB,EAApBA,CAAZ;;AA6BYC,OAAAA,CAAAA,oBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,oBAAZ,EAAgC;;;;AAI5B,EAAA,oBAAA,CAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;AAKA,EAAA,oBAAA,CAAA,oBAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,oBAAA,CAAA,oBAAA,CAAA,qBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,qBAAA;AACH,CAnBD,EAAYA,OAAAA,CAAAA,oBAAAA,KAAAA,OAAAA,CAAAA,oBAAAA,GAAoB,EAApBA,CAAZ;;AAqBYC,OAAAA,CAAAA,sBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,sBAAZ,EAAkC;;;;;;;;AAQ9B,EAAA,sBAAA,CAAA,sBAAA,CAAA,wBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,wBAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,sBAAAA,KAAAA,OAAAA,CAAAA,sBAAAA,GAAsB,EAAtBA,CAAZ,GAWA;;;MACa,kBAAkB,GAAG;AAEtBC,OAAAA,CAAAA,mBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,mBAAZ,EAA+B;AAC3B,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,KAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACH,CAdD,EAAYA,OAAAA,CAAAA,mBAAAA,KAAAA,OAAAA,CAAAA,mBAAAA,GAAmB,EAAnBA,CAAZ;;AAgBYC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;;;;;AAQxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ;;AAoBYC,OAAAA,CAAAA,kBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,kBAAZ,EAA8B;;;;;;;;;AAS1B,EAAA,kBAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CAVD,EAAYA,OAAAA,CAAAA,kBAAAA,KAAAA,OAAAA,CAAAA,kBAAAA,GAAkB,EAAlBA,CAAZ,GAYA;;;MACa,aAAa,GAAG;AACjBC,OAAAA,CAAAA,YAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,YAAZ,EAAwB;;;;;;;;AAQpB,EAAA,YAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,YAAAA,KAAAA,OAAAA,CAAAA,YAAAA,GAAY,EAAZA,CAAZ,GAoBA;;;MACa,aAAa,GAAG;AACjBC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;;;;;AAQnB,EAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;AACH,CApCD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ;;AAsCYC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;;;;;AAQnB,EAAA,WAAA,CAAA,WAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;AACH,CA/DD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ,GAiEA;;;MACa,cAAc,GAAG;AAElBC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;AACvB,EAAA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,qBAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAA;AACH,CAND,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ;;AAQYC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;;AAKrB,EAAA,aAAA,CAAA,aAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;;;;;;;;;;;;;;;;AAgBA,EAAA,aAAA,CAAA,aAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;;;;;;;;;;;AAmBA,EAAA,aAAA,CAAA,aAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;AAQH,CAhDD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ,GAkDA;;;MACa,UAAU,GAAG;AACdC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;;;;;AAQjB,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;AAKA,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAvBD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ;;AAyBYC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;AAInB,EAAA,WAAA,CAAA,WAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;;;;;;;;;;AAUA,EAAA,WAAA,CAAA,WAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;;;;;;;;;;;AAWA,EAAA,WAAA,CAAA,WAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;AACH,CA1BD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ,GA4BA;;;MACa,UAAU,GAAG;AACdC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;;;;;AAQjB,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ;;AAWYC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;;;;;;;;AAWjB,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;AAKA,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AACH,CAjBD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ,GAmBA;;;MACa,qBAAqB,GAAG;AACzBC,OAAAA,CAAAA,mBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,mBAAZ,EAA+B;;;;;;;;AAQ3B,EAAA,mBAAA,CAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,mBAAAA,KAAAA,OAAAA,CAAAA,mBAAAA,GAAmB,EAAnBA,CAAZ;;AAWYC,OAAAA,CAAAA,mBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,mBAAZ,EAA+B;;;;;AAK3B,EAAA,mBAAA,CAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACH,CAND,EAAYA,OAAAA,CAAAA,mBAAAA,KAAAA,OAAAA,CAAAA,mBAAAA,GAAmB,EAAnBA,CAAZ,GAQA;;;MACa,oBAAoB,GAAG;AAExBC,OAAAA,CAAAA,sBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,sBAAZ,EAAkC;AAC9B,EAAA,sBAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACA,EAAA,sBAAA,CAAA,sBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,sBAAA,CAAA,sBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,sBAAAA,KAAAA,OAAAA,CAAAA,sBAAAA,GAAsB,EAAtBA,CAAZ;;AAOYC,OAAAA,CAAAA,4BAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,4BAAZ,EAAwC;AACpC,EAAA,4BAAA,CAAA,4BAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACA,EAAA,4BAAA,CAAA,4BAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACH,CAHD,EAAYA,OAAAA,CAAAA,4BAAAA,KAAAA,OAAAA,CAAAA,4BAAAA,GAA4B,EAA5BA,CAAZ;;AAKYC,OAAAA,CAAAA,kBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,kBAAZ,EAA8B;;;;;;;;AAQ1B,EAAA,kBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,kBAAA,CAAA,kBAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,kBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,kBAAA,CAAA,kBAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;;;;;;;;;AASA,EAAA,kBAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,kBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAtDD,EAAYA,OAAAA,CAAAA,kBAAAA,KAAAA,OAAAA,CAAAA,kBAAAA,GAAkB,EAAlBA,CAAZ;;AAwDYC,OAAAA,CAAAA,kBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,kBAAZ,EAA8B;;;;;;;;AAQ1B,EAAA,kBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;AACH,CAdD,EAAYA,OAAAA,CAAAA,kBAAAA,KAAAA,OAAAA,CAAAA,kBAAAA,GAAkB,EAAlBA,CAAZ,GAgBA;;;MACa,SAAS,GAAG;AACbC,OAAAA,CAAAA,QAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,QAAZ,EAAoB;;;;;;;;AAQhB,EAAA,QAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,QAAAA,KAAAA,OAAAA,CAAAA,QAAAA,GAAQ,EAARA,CAAZ,GAWA;;;MACa,WAAW,GAAG;AACfC,OAAAA,CAAAA,UAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,UAAZ,EAAsB;;;;;;;;AAQlB,EAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,UAAA,CAAA,UAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;AACH,CA3BD,EAAYA,OAAAA,CAAAA,UAAAA,KAAAA,OAAAA,CAAAA,UAAAA,GAAU,EAAVA,CAAZ;;AA6BYC,OAAAA,CAAAA,UAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,UAAZ,EAAsB;;;;AAIlB,EAAA,UAAA,CAAA,UAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,UAAAA,KAAAA,OAAAA,CAAAA,UAAAA,GAAU,EAAVA,CAAZ,GAOA;;;MACa,WAAW,GAAG;AAEfC,OAAAA,CAAAA,oBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,oBAAZ,EAAgC;AAC5B,EAAA,oBAAA,CAAA,oBAAA,CAAA,sBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,sBAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,iBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,iBAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,sBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,sBAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,oBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,oBAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,gBAAA,CAAA,GAAA,IAAA,CAAA,GAAA,gBAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,UAAA,CAAA,GAAA,IAAA,CAAA,GAAA,UAAA;AACH,CAdD,EAAYA,OAAAA,CAAAA,oBAAAA,KAAAA,OAAAA,CAAAA,oBAAAA,GAAoB,EAApBA,CAAZ;;AAgBYC,OAAAA,CAAAA,UAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,UAAZ,EAAsB;;;;;;;;;;AAUlB,EAAA,UAAA,CAAA,UAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;;;;;;;;;;;;AAYA,EAAA,UAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;AAOA,EAAA,UAAA,CAAA,UAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;AAKA,EAAA,UAAA,CAAA,UAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;;;AAWA,EAAA,UAAA,CAAA,UAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,EAAA,UAAA,CAAA,UAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;;;;;AAKA,EAAA,UAAA,CAAA,UAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;AACH,CA1ED,EAAYA,OAAAA,CAAAA,UAAAA,KAAAA,OAAAA,CAAAA,UAAAA,GAAU,EAAVA,CAAZ;;AA4EYC,OAAAA,CAAAA,UAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,UAAZ,EAAsB;;;;;;;;;;AAUlB,EAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,UAAA,CAAA,UAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;;;;;;;;;AASA,EAAA,UAAA,CAAA,UAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;;;;;;;;;AASA,EAAA,UAAA,CAAA,UAAA,CAAA,6BAAA,CAAA,GAAA,GAAA,CAAA,GAAA,6BAAA;;;;;;;;;AASA,EAAA,UAAA,CAAA,UAAA,CAAA,iBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,iBAAA;;;;;;;;;AASA,EAAA,UAAA,CAAA,UAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;;;;;;;;;AASA,EAAA,UAAA,CAAA,UAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;AACH,CAjED,EAAYA,OAAAA,CAAAA,UAAAA,KAAAA,OAAAA,CAAAA,UAAAA,GAAU,EAAVA,CAAZ,GAmEA;;;MACa,UAAU,GAAG;AAEdC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;AACrB,EAAA,aAAA,CAAA,aAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,aAAA,CAAA,aAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACA,EAAA,aAAA,CAAA,aAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ;;AAMYC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;;;;;AAQjB,EAAA,SAAA,CAAA,SAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ,GAoBA;;;MACa,YAAY,GAAG;AAEhBC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;AACvB,EAAA,eAAA,CAAA,eAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ;;AAOYC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;;;;;AAQnB,EAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CApCD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ,GAsCA;;;MACa,OAAO,GAAG;AACXC,OAAAA,CAAAA,MAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,MAAZ,EAAkB;;;;;;;;AAQd,EAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,MAAAA,KAAAA,OAAAA,CAAAA,MAAAA,GAAM,EAANA,CAAZ;;AAWYC,OAAAA,CAAAA,MAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,MAAZ,EAAkB;;;;;;;;AAQd,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,MAAAA,KAAAA,OAAAA,CAAAA,MAAAA,GAAM,EAANA,CAAZ,GAWA;;;MACa,cAAc,GAAG;AAElBC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;AACxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACH,CAHD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ;;AAKYC,OAAAA,CAAAA,YAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,YAAZ,EAAwB;;;;;;;;;AASpB,EAAA,YAAA,CAAA,YAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CA9CD,EAAYA,OAAAA,CAAAA,YAAAA,KAAAA,OAAAA,CAAAA,YAAAA,GAAY,EAAZA,CAAZ,GAgDA;;;MACa,SAAS,GAAG;AAEbC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;AACnB,EAAA,WAAA,CAAA,WAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACH,CAHD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ;;AAKYC,OAAAA,CAAAA,OAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,OAAZ,EAAmB;;;;;;;;AAQf,EAAA,OAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,oBAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAtDD,EAAYA,OAAAA,CAAAA,OAAAA,KAAAA,OAAAA,CAAAA,OAAAA,GAAO,EAAPA,CAAZ,GAwDA;;;MACa,QAAQ,GAAG;AAEZC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;AACnB,EAAA,WAAA,CAAA,WAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACH,CAHD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ;;AAKYC,OAAAA,CAAAA,OAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,OAAZ,EAAmB;;;;;;;;AAQf,EAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,OAAAA,KAAAA,OAAAA,CAAAA,OAAAA,GAAO,EAAPA,CAAZ,GAoBA;;;MACa,aAAa,GAAG;AACjBC,OAAAA,CAAAA,YAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,YAAZ,EAAwB;;;;;;;;AAQpB,EAAA,YAAA,CAAA,YAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,oBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,oBAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CA3BD,EAAYA,OAAAA,CAAAA,YAAAA,KAAAA,OAAAA,CAAAA,YAAAA,GAAY,EAAZA,CAAZ,GA6BA;;;MACa,cAAc,GAAG;AAElBC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;AACxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CAND,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ;;AAQYC,OAAAA,CAAAA,YAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,YAAZ,EAAwB;;;;;;;;AAQpB,EAAA,YAAA,CAAA,YAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CA3BD,EAAYA,OAAAA,CAAAA,YAAAA,KAAAA,OAAAA,CAAAA,YAAAA,GAAY,EAAZA,CAAZ,GA6BA;;;MACa,eAAe,GAAG;AACnBC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;;;;;AAQrB,EAAA,aAAA,CAAA,aAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;;;;;;;;;AASA,EAAA,aAAA,CAAA,aAAA,CAAA,sBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,sBAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ;;AAoBYC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;;;;;AAQrB,EAAA,aAAA,CAAA,aAAA,CAAA,kBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,kBAAA;;;;;;;;;AASA,EAAA,aAAA,CAAA,aAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,aAAA,CAAA,aAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;;;;;;;;;AASA,EAAA,aAAA,CAAA,aAAA,CAAA,oBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,oBAAA;;;;;AAKA,EAAA,aAAA,CAAA,aAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;AACH,CAzCD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ;AA4CA;;;;;;;;AAQYC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;;;;AAIvB,EAAA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ,GAOA;;;MACa,gBAAgB,GAAG;AAEpBC,OAAAA,CAAAA,oBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,oBAAZ,EAAgC;AAC5B,EAAA,oBAAA,CAAA,oBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,cAAA,CAAA,GAAA,EAAA,CAAA,GAAA,cAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,YAAA,CAAA,GAAA,EAAA,CAAA,GAAA,YAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,UAAA,CAAA,GAAA,EAAA,CAAA,GAAA,UAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AACH,CAVD,EAAYA,OAAAA,CAAAA,oBAAAA,KAAAA,OAAAA,CAAAA,oBAAAA,GAAoB,EAApBA,CAAZ;;AAaYC,OAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,iBAAZ,EAA6B;AACzB,EAAA,iBAAA,CAAA,iBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,iBAAAA,KAAAA,OAAAA,CAAAA,iBAAAA,GAAiB,EAAjBA,CAAZ;;AAMYC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;;AAStB,EAAA,cAAA,CAAA,cAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,KAAA;;;;;AAKA,EAAA,cAAA,CAAA,cAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;AACH,CAfD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ,GAiBA;;;MACa,aAAa,GAAG;AAEjBC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;AACtB,EAAA,cAAA,CAAA,cAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,cAAA,CAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,cAAA,CAAA,cAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ;;AAOYC,OAAAA,CAAAA,mBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,mBAAZ,EAA+B;AAC3B,EAAA,mBAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,mBAAAA,KAAAA,OAAAA,CAAAA,mBAAAA,GAAmB,EAAnBA,CAAZ;;AAOYC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;;;;;;;AAUnB,EAAA,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;;AAUA,EAAA,WAAA,CAAA,WAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;;AAUA,EAAA,WAAA,CAAA,WAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;AACH,CA/BD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ,GAiCA;;;MACa,YAAY,GAAG;AAChBC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;;;;;AAQnB,EAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;AACH,CApCD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ,GAsCA;;;MACa,eAAe,GAAG;AACnBC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;AAQtB,EAAA,cAAA,CAAA,cAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ,GAoBA;;;MACa,kBAAkB,GAAG;AACtBC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;;;;;AAQxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;;AAUA,EAAA,gBAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;AACH,CAnBD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ;;AAqBYC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;;;;;;AASxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;;;;;;;;;;;;AAYA,EAAA,gBAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;;AAUA,EAAA,gBAAA,CAAA,gBAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;;;;;;AAcA,EAAA,gBAAA,CAAA,gBAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;;;AAWA,EAAA,gBAAA,CAAA,gBAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;;;AAWA,EAAA,gBAAA,CAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AACH,CAtFD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ,GAwFA;;;MACa,kBAAkB,GAAG,YAClC;;MACa,YAAY,GAAG;AAEhBC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;AACvB,EAAA,eAAA,CAAA,eAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,GAAA,CAAA,GAAA,EAAA,CAAA,GAAA,GAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,GAAA,CAAA,GAAA,EAAA,CAAA,GAAA,GAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,GAAA,CAAA,GAAA,IAAA,CAAA,GAAA,GAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,GAAA,CAAA,GAAA,IAAA,CAAA,GAAA,GAAA;AACH,CAbD,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ;;AAgBYC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;AACvB,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ;;AAOYC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;;;;;;;;AAWnB,EAAA,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;;;AAWA,EAAA,WAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,kBAAA;AACH,CAhCD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ;;AAkCYC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;;;;;AAQrB,EAAA,aAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ,GAWA;;;MACa,OAAO,GAAG;AAEXC,OAAAA,CAAAA,UAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,UAAZ,EAAsB;AAClB,EAAA,UAAA,CAAA,UAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACA,EAAA,UAAA,CAAA,UAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACA,EAAA,UAAA,CAAA,UAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,UAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,UAAAA,KAAAA,OAAAA,CAAAA,UAAAA,GAAU,EAAVA,CAAZ;;AAOYC,OAAAA,CAAAA,MAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,MAAZ,EAAkB;;;;;;;;AAQd,EAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,MAAAA,KAAAA,OAAAA,CAAAA,MAAAA,GAAM,EAANA,CAAZ;;AAWYC,OAAAA,CAAAA,MAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,MAAZ,EAAkB;;;;;;;;AAQd,EAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,MAAA,CAAA,MAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;;;;;;;;;AASA,EAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAtDD,EAAYA,OAAAA,CAAAA,MAAAA,KAAAA,OAAAA,CAAAA,MAAAA,GAAM,EAANA,CAAZ,GAwDA;;;MACa,aAAa,GAAG;AAEjBC,OAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,iBAAZ,EAA6B;AACzB,EAAA,iBAAA,CAAA,iBAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,iBAAAA,KAAAA,OAAAA,CAAAA,iBAAAA,GAAiB,EAAjBA,CAAZ;;AAOYC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;AACvB,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CAND,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ;;AAQYC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;;;;;;AASnB,EAAA,WAAA,CAAA,WAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;;;;;;;;;;;AAWA,EAAA,WAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,kBAAA;;;;;;;;;;;AAWA,EAAA,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;;;AAWA,EAAA,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;;AAUA,EAAA,WAAA,CAAA,WAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;;;;;;;;;;AAUA,EAAA,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;;;AAWA,EAAA,WAAA,CAAA,WAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CA5FD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ;;AA8FYC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;;;;;AAQnB,EAAA,WAAA,CAAA,WAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,KAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ,GAWA;;;MACa,eAAe,GAAG;AAEnBC,OAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,iBAAZ,EAA6B;AACzB,EAAA,iBAAA,CAAA,iBAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,iBAAAA,KAAAA,OAAAA,CAAAA,iBAAAA,GAAiB,EAAjBA,CAAZ;;AAMYC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;;;;;AAQrB,EAAA,aAAA,CAAA,aAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ,GAoBA;;;MACa,UAAU,GAAG;AAEdC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;AACtB,EAAA,cAAA,CAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,cAAA,CAAA,cAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACA,EAAA,cAAA,CAAA,cAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,cAAA,CAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,cAAA,CAAA,cAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CAND,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ;;AAQYC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;;;;;;;;;AAYjB,EAAA,SAAA,CAAA,SAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;AACH,CAbD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ;;AAeYC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;;;;;AAQjB,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,KAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;AACH,CApCD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ,GAsCA;;;MACa,gBAAgB,GAAG;AACpBC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;;;;;;;;;AASvB,EAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;AACH,CAnBD,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ;;AAqBYC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;;;;;AAKvB,EAAA,eAAA,CAAA,eAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACH,CAND,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ,GAQA;;;MACa,iBAAiB,GAAG;AAErBC,OAAAA,CAAAA,mBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,mBAAZ,EAA+B;AAC3B,EAAA,mBAAA,CAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,mBAAAA,KAAAA,OAAAA,CAAAA,mBAAAA,GAAmB,EAAnBA,CAAZ;;AAOYC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;;;;;;;;;AASvB,EAAA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;;;AAWA,EAAA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAhDD,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ;;AAkDYC,OAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,iBAAZ,EAA6B;;;;;;;;AAQzB,EAAA,iBAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,iBAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;;;;;;;;;AASA,EAAA,iBAAA,CAAA,iBAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,iBAAA,CAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;AACH,CApCD,EAAYA,OAAAA,CAAAA,iBAAAA,KAAAA,OAAAA,CAAAA,iBAAAA,GAAiB,EAAjBA,CAAZ,GAsCA;;;MACa,cAAc,GAAG;AAClBC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;;;;;;;;AAWrB,EAAA,aAAA,CAAA,aAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;AACH,CAZD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ;;AAcYC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;;;;;;AASrB,EAAA,aAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;AACH,CAVD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ,GAYA;;;MACa,eAAe,GAAG;AACnBC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;;;;;AAQrB,EAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ;;AAWYC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;AAIrB,EAAA,aAAA,CAAA,aAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,aAAA,CAAA,aAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;AACH,CAdD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ,GAgBA;;;MACa,gBAAgB,GAAG;AAEpBC,OAAAA,CAAAA,sBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,sBAAZ,EAAkC;AAC9B,EAAA,sBAAA,CAAA,sBAAA,CAAA,QAAA,CAAA,GAAA,SAAA,CAAA,GAAA,QAAA;AACA,EAAA,sBAAA,CAAA,sBAAA,CAAA,MAAA,CAAA,GAAA,SAAA,CAAA,GAAA,MAAA;AACA,EAAA,sBAAA,CAAA,sBAAA,CAAA,qBAAA,CAAA,GAAA,SAAA,CAAA,GAAA,qBAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,sBAAAA,KAAAA,OAAAA,CAAAA,sBAAAA,GAAsB,EAAtBA,CAAZ;;AAMYC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;;;;AAWtB,EAAA,cAAA,CAAA,cAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;;;;;;;;;AAiBA,EAAA,cAAA,CAAA,cAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;AAQH,CApCD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ;;AAsCYC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;;;;AAWtB,EAAA,cAAA,CAAA,cAAA,CAAA,iBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,iBAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,oBAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;;;;AAYA,EAAA,cAAA,CAAA,cAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;;;;;;;;;;AAUA,EAAA,cAAA,CAAA,cAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AACH,CA1GD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ,GA4GA;;;MACa,UAAU,GAAG;AAEdC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;AACrB,EAAA,aAAA,CAAA,aAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACH,CAFD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ;;AAIYC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;;;;;AAQjB,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CApCD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ;;AAsCYC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;AAInB,EAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ,GAOA;;;MACa,SAAS,GAAG;AACbC,OAAAA,CAAAA,QAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,QAAZ,EAAoB;;;;;;;;;;AAUhB,EAAA,QAAA,CAAA,QAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;AACH,CAtCD,EAAYA,OAAAA,CAAAA,QAAAA,KAAAA,OAAAA,CAAAA,QAAAA,GAAQ,EAARA,CAAZ,GAwCA;;;MACa,cAAc,GAAG;AAClBC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;;;;;;;AAUrB,EAAA,aAAA,CAAA,aAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AACH,CAXD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ;;AAaYC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;;;;;;;;AAQvB,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,KAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;AAKA,EAAA,eAAA,CAAA,eAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;AAKA,EAAA,eAAA,CAAA,eAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AACH,CA9CD,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ,GAgDA;;;MACa,iBAAiB,GAAG;AAErBC,OAAAA,CAAAA,oBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,oBAAZ,EAAgC;AAC5B,EAAA,oBAAA,CAAA,oBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CAHD,EAAYA,OAAAA,CAAAA,oBAAAA,KAAAA,OAAAA,CAAAA,oBAAAA,GAAoB,EAApBA,CAAZ;;AAKYC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;;;;;AAQxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ,GAoBA;;;MACa,SAAS,GAAG;AAEbC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;AACxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ;;AAOYC,OAAAA,CAAAA,QAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,QAAZ,EAAoB;;;;;;;;;;AAUhB,EAAA,QAAA,CAAA,QAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;;AAUA,EAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;;;;;;;;;;AAUA,EAAA,QAAA,CAAA,QAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;;;;;;;;;;AAUA,EAAA,QAAA,CAAA,QAAA,CAAA,iBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,iBAAA;;;;;;;;;;;AAWA,EAAA,QAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,qBAAA;;;;;;;;;;;AAWA,EAAA,QAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;AACH,CA1FD,EAAYA,OAAAA,CAAAA,QAAAA,KAAAA,OAAAA,CAAAA,QAAAA,GAAQ,EAARA,CAAZ;;AA4FYC,OAAAA,CAAAA,QAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,QAAZ,EAAoB;;;;AAIhB,EAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,QAAAA,KAAAA,OAAAA,CAAAA,QAAAA,GAAQ,EAARA,CAAZ;;AAOYC,OAAAA,CAAAA,UAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,UAAZ,EAAsB;;;;;;;;AAQlB,EAAA,UAAA,CAAA,UAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,oBAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,UAAAA,KAAAA,OAAAA,CAAAA,UAAAA,GAAU,EAAVA,CAAZ,GAWA;;;MACa,mBAAmB,GAAG;AACvBC,OAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,iBAAZ,EAA6B;;;;;;;;AAQzB,EAAA,iBAAA,CAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,iBAAAA,KAAAA,OAAAA,CAAAA,iBAAAA,GAAiB,EAAjBA,CAAZ,GAWA;;;MACa,cAAc,GAAG;AAClBC,OAAAA,CAAAA,YAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,YAAZ,EAAwB;;;;;;;;AAQpB,EAAA,YAAA,CAAA,YAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;AACH,CA9HD,EAAYA,OAAAA,CAAAA,YAAAA,KAAAA,OAAAA,CAAAA,YAAAA,GAAY,EAAZA,CAAZ;;AAgIYC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;AAQtB,EAAA,cAAA,CAAA,cAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;AACH,CA/DD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ;;AAiEYC,OAAAA,CAAAA,YAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,YAAZ,EAAwB;;;;;;;;AAQpB,EAAA,YAAA,CAAA,YAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;AACH,CAxED,EAAYA,OAAAA,CAAAA,YAAAA,KAAAA,OAAAA,CAAAA,YAAAA,GAAY,EAAZA,CAAZ;AA2EA;;;;;;AAQA;;;MACa,kBAAkB,GAAG;AACtBC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;;;;;AAQxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ,GAoBA;;;MACa,cAAc,GAAG;AAClBC,OAAAA,CAAAA,YAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,YAAZ,EAAwB;;;;;;;;AAQpB,EAAA,YAAA,CAAA,YAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,wBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,wBAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,YAAAA,KAAAA,OAAAA,CAAAA,YAAAA,GAAY,EAAZA,CAAZ,GAoBA;;;MACa,mBAAmB,GAAG;AAEvBC,OAAAA,CAAAA,oBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,oBAAZ,EAAgC;AAC5B,EAAA,oBAAA,CAAA,oBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,oBAAAA,KAAAA,OAAAA,CAAAA,oBAAAA,GAAoB,EAApBA,CAAZ;;AAMYC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;;;;;;;;AAWxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAvCD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ;;AAyCYC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;;;;;AAQxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ,GAWA;;;MACa,mBAAmB,GAAG;AAEvBC,OAAAA,CAAAA,qBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,qBAAZ,EAAiC;AAC7B,EAAA,qBAAA,CAAA,qBAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;AACA,EAAA,qBAAA,CAAA,qBAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAA;AACH,CAHD,EAAYA,OAAAA,CAAAA,qBAAAA,KAAAA,OAAAA,CAAAA,qBAAAA,GAAqB,EAArBA,CAAZ;;AAKYC,OAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,iBAAZ,EAA6B;;;;;;;;AAQzB,EAAA,iBAAA,CAAA,iBAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,iBAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,iBAAAA,KAAAA,OAAAA,CAAAA,iBAAAA,GAAiB,EAAjBA,CAAZ;;AAoBYC,OAAAA,CAAAA,mBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,mBAAZ,EAA+B;;;;AAI3B,EAAA,mBAAA,CAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;;;;;AAKA,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACH,CAVD,EAAYA,OAAAA,CAAAA,mBAAAA,KAAAA,OAAAA,CAAAA,mBAAAA,GAAmB,EAAnBA,CAAZ,GAYA;;;MACa,SAAS,GAAG;AAEbC,OAAAA,CAAAA,YAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,YAAZ,EAAwB;AACpB,EAAA,YAAA,CAAA,YAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;AACA,EAAA,YAAA,CAAA,YAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACA,EAAA,YAAA,CAAA,YAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,YAAAA,KAAAA,OAAAA,CAAAA,YAAAA,GAAY,EAAZA,CAAZ;;AAMYC,OAAAA,CAAAA,QAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,QAAZ,EAAoB;;;;;;;;AAQhB,EAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,qBAAA;AACH,CA3BD,EAAYA,OAAAA,CAAAA,QAAAA,KAAAA,OAAAA,CAAAA,QAAAA,GAAQ,EAARA,CAAZ;;AA6BYC,OAAAA,CAAAA,UAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,UAAZ,EAAsB;;;;;AAKlB,EAAA,UAAA,CAAA,UAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;;;;;;AAMA,EAAA,UAAA,CAAA,UAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACH,CAZD,EAAYA,OAAAA,CAAAA,UAAAA,KAAAA,OAAAA,CAAAA,UAAAA,GAAU,EAAVA,CAAZ,GAcA;;;MACa,OAAO,GAAG;AAEXC,OAAAA,CAAAA,UAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,UAAZ,EAAsB;AAClB,EAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,UAAA,CAAA,UAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,UAAA,CAAA,UAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,UAAAA,KAAAA,OAAAA,CAAAA,UAAAA,GAAU,EAAVA,CAAZ;;AAMYC,OAAAA,CAAAA,MAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,MAAZ,EAAkB;;;;;;;;;AASd,EAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;;;;AAYA,EAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAtBD,EAAYA,OAAAA,CAAAA,MAAAA,KAAAA,OAAAA,CAAAA,MAAAA,GAAM,EAANA,CAAZ,GAwBA;;;MACa,gBAAgB,GAAG;AACpBC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;;;;;;AAatB,EAAA,cAAA,CAAA,cAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;AACH,CAvBD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ;;AAyBYC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;AAQtB,EAAA,cAAA,CAAA,cAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;;;;;;;;AAgBA,EAAA,cAAA,CAAA,cAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;AAKA,EAAA,cAAA,CAAA,cAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,iBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,iBAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;AACH,CAhDD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ;AAmDA;;;;;;;AAOA;;;;;;;;AAQYC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;AAIxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ,GAOA;;;MACa,kBAAkB,GAAG;AACtBC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;;;;;;AASxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;AACH,CAnBD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ,GAqBA;;;MACa,SAAS,GAAG;AACbC,OAAAA,CAAAA,QAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,QAAZ,EAAoB;;;;;;;;AAQhB,EAAA,QAAA,CAAA,QAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,QAAAA,KAAAA,OAAAA,CAAAA,QAAAA,GAAQ,EAARA,CAAZ,GAWA;;;MACa,qBAAqB,GAAG;AAEzBC,OAAAA,CAAAA,0BAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,0BAAZ,EAAsC;AAClC,EAAA,0BAAA,CAAA,0BAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,EAAA,0BAAA,CAAA,0BAAA,CAAA,IAAA,CAAA,GAAA,GAAA,CAAA,GAAA,IAAA;AACA,EAAA,0BAAA,CAAA,0BAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,KAAA;AACA,EAAA,0BAAA,CAAA,0BAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,KAAA;AACA,EAAA,0BAAA,CAAA,0BAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,KAAA;AACA,EAAA,0BAAA,CAAA,0BAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,KAAA;AACH,CAPD,EAAYA,OAAAA,CAAAA,0BAAAA,KAAAA,OAAAA,CAAAA,0BAAAA,GAA0B,EAA1BA,CAAZ;;AASYC,OAAAA,CAAAA,mBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,mBAAZ,EAA+B;;;;;;;;;;AAU3B,EAAA,mBAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,mBAAA,CAAA,mBAAA,CAAA,kBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,kBAAA;;;;;;;;;AASA,EAAA,mBAAA,CAAA,mBAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;AACH,CA/CD,EAAYA,OAAAA,CAAAA,mBAAAA,KAAAA,OAAAA,CAAAA,mBAAAA,GAAmB,EAAnBA,CAAZ,GAiDA;;;MACa,SAAS,GAAG;AACbC,OAAAA,CAAAA,QAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,QAAZ,EAAoB;;;;;;;;AAQhB,EAAA,QAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;;;;;;;;;AASA,EAAA,QAAA,CAAA,QAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;AACH,CA1FD,EAAYA,OAAAA,CAAAA,QAAAA,KAAAA,OAAAA,CAAAA,QAAAA,GAAQ,EAARA,CAAZ,GA4FA;;;MACa,YAAY,GAAG;AAChBC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;;;;;AAQnB,EAAA,WAAA,CAAA,WAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,KAAA;;;;;;;;;;;;;;;;AAgBA,EAAA,WAAA,CAAA,WAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,KAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;AAKA,EAAA,WAAA,CAAA,WAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;AACH,CAzDD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ;AA4DA;;;;;;;AAOA;;;;;;;;AAQYC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;AAIrB,EAAA,aAAA,CAAA,aAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CALD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ,GAOA;;;MACa,yBAAyB,GAAG;AAC7BC,OAAAA,CAAAA,sBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,sBAAZ,EAAkC;;;;;;;;;;;AAW9B,EAAA,sBAAA,CAAA,sBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,sBAAA,CAAA,sBAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;;;;;;;;;;AAUA,EAAA,sBAAA,CAAA,sBAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,sBAAA,CAAA,sBAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,sBAAA,CAAA,sBAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;AACH,CAjDD,EAAYA,OAAAA,CAAAA,sBAAAA,KAAAA,OAAAA,CAAAA,sBAAAA,GAAsB,EAAtBA,CAAZ;;AAmDYC,OAAAA,CAAAA,sBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,sBAAZ,EAAkC;;;;AAI9B,EAAA,sBAAA,CAAA,sBAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;AAKA,EAAA,sBAAA,CAAA,sBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAVD,EAAYA,OAAAA,CAAAA,sBAAAA,KAAAA,OAAAA,CAAAA,sBAAAA,GAAsB,EAAtBA,CAAZ,GAYA;;;MACa,iBAAiB,GAAG;AAErBC,OAAAA,CAAAA,mBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,mBAAZ,EAA+B;AAC3B,EAAA,mBAAA,CAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACH,CAHD,EAAYA,OAAAA,CAAAA,mBAAAA,KAAAA,OAAAA,CAAAA,mBAAAA,GAAmB,EAAnBA,CAAZ;;AAKYC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;;;;;;;;AAQvB,EAAA,eAAA,CAAA,eAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ,GAoBA;;;MACa,YAAY,GAAG;AAEhBC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;AACvB,EAAA,eAAA,CAAA,eAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ;;AAMYC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;;;;;AAQnB,EAAA,WAAA,CAAA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ,GAoBA;;;MACa,eAAe,GAAG;AACnBC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;;;;;AAQrB,EAAA,aAAA,CAAA,aAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;;;;AAYA,EAAA,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;;;;AAYA,EAAA,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,aAAA,CAAA,aAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAA;;;;;;;;;AASA,EAAA,aAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAA;AACH,CA5DD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ;;AA8DYC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;;;;AAIvB,EAAA,eAAA,CAAA,eAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;;;;;AAKA,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACH,CAVD,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ,GAYA;;;MACa,gBAAgB,GAAG;AACpBC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;AAQtB,EAAA,cAAA,CAAA,cAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ;;AAWYC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;AAQtB,EAAA,cAAA,CAAA,cAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ;AAqBA;;;;;;AAQA;;;MACa,kBAAkB,GAAG;AACtBC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;;;;;AAQxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;;AAUA,EAAA,gBAAA,CAAA,gBAAA,CAAA,uBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,uBAAA;AACH,CAvDD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ,GAyDA;;;MACa,oBAAoB,GAAG;AACxBC,OAAAA,CAAAA,kBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,kBAAZ,EAA8B;;;;;;;;AAQ1B,EAAA,kBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,kBAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,kBAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,kBAAA,CAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,kBAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;AACH,CA7CD,EAAYA,OAAAA,CAAAA,kBAAAA,KAAAA,OAAAA,CAAAA,kBAAAA,GAAkB,EAAlBA,CAAZ;;AA+CYC,OAAAA,CAAAA,kBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,kBAAZ,EAA8B;;;;;;;;AAQ1B,EAAA,kBAAA,CAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;AAKA,EAAA,kBAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;AACH,CAdD,EAAYA,OAAAA,CAAAA,kBAAAA,KAAAA,OAAAA,CAAAA,kBAAAA,GAAkB,EAAlBA,CAAZ,GAgBA;;;MACa,UAAU,GAAG;AAEdC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;AACrB,EAAA,aAAA,CAAA,aAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,aAAA,CAAA,aAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,aAAA,CAAA,aAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACA,EAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,aAAA,CAAA,aAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,aAAA,CAAA,aAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACA,EAAA,aAAA,CAAA,aAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,aAAA,CAAA,aAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ;;AAWYC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;;;;;AAQjB,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;;AAUA,EAAA,SAAA,CAAA,SAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;AACH,CA5BD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ;;AA8BYC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;;;;AAInB,EAAA,WAAA,CAAA,WAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;;;;;AAKA,EAAA,WAAA,CAAA,WAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACH,CAVD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ,GAYA;;;MACa,OAAO,GAAG;AAEXC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;AACnB,EAAA,WAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,uBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,uBAAA;AACH,CAHD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ;;AAKYC,OAAAA,CAAAA,MAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,MAAZ,EAAkB;;;;;;;;AAQd,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;AAQH,CAhBD,EAAYA,OAAAA,CAAAA,MAAAA,KAAAA,OAAAA,CAAAA,MAAAA,GAAM,EAANA,CAAZ;;AAkBYC,OAAAA,CAAAA,UAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,UAAZ,EAAsB;;;;;;;;;;AAUlB,EAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,UAAA,CAAA,UAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACH,CApBD,EAAYA,OAAAA,CAAAA,UAAAA,KAAAA,OAAAA,CAAAA,UAAAA,GAAU,EAAVA,CAAZ;AAuBA;;;;;;;AAOA;;;;;;AAQA;;;MACa,gBAAgB,GAAG;AAEpBC,OAAAA,CAAAA,mBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,mBAAZ,EAA+B;AAC3B,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,mBAAAA,KAAAA,OAAAA,CAAAA,mBAAAA,GAAmB,EAAnBA,CAAZ;;AAWYC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;;;;;;;;AAQvB,EAAA,eAAA,CAAA,eAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,kBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,kBAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CA7CD,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ,GA+CA;;;MACa,eAAe,GAAG;AAEnBC,OAAAA,CAAAA,kBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,kBAAZ,EAA8B;AAC1B,EAAA,kBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,kBAAAA,KAAAA,OAAAA,CAAAA,kBAAAA,GAAkB,EAAlBA,CAAZ;;AAMYC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;AAQtB,EAAA,cAAA,CAAA,cAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,kBAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CA7CD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ,GA+CA;;;MACa,iBAAiB,GAAG;AACrBC,OAAAA,CAAAA,eAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,eAAZ,EAA2B;;;;;;;;AAQvB,EAAA,eAAA,CAAA,eAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,KAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,eAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;AACH,CA3BD,EAAYA,OAAAA,CAAAA,eAAAA,KAAAA,OAAAA,CAAAA,eAAAA,GAAe,EAAfA,CAAZ,GA6BA;;;MACa,QAAQ,GAAG;AACZC,OAAAA,CAAAA,OAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,OAAZ,EAAmB;;;;;;;;AAQf,EAAA,OAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,oBAAA;AACH,CA7CD,EAAYA,OAAAA,CAAAA,OAAAA,KAAAA,OAAAA,CAAAA,OAAAA,GAAO,EAAPA,CAAZ,GA+CA;;;MACa,YAAY,GAAG;AAEhBC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;AACtB,EAAA,cAAA,CAAA,cAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,cAAA,CAAA,cAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACH,CAHD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ;;AAKYC,OAAAA,CAAAA,UAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,UAAZ,EAAsB;;;;;;;;AAQlB,EAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,UAAA,CAAA,UAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;;;;;;;;;AASA,EAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CA3BD,EAAYA,OAAAA,CAAAA,UAAAA,KAAAA,OAAAA,CAAAA,UAAAA,GAAU,EAAVA,CAAZ,GA6BA;;;MACa,sBAAsB,GAAG;AAE1BC,OAAAA,CAAAA,uBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,uBAAZ,EAAmC;AAC/B,EAAA,uBAAA,CAAA,uBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,uBAAA,CAAA,uBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,uBAAA,CAAA,uBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,uBAAAA,KAAAA,OAAAA,CAAAA,uBAAAA,GAAuB,EAAvBA,CAAZ;;AAOYC,OAAAA,CAAAA,gCAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gCAAZ,EAA4C;AACxC,EAAA,gCAAA,CAAA,gCAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACA,EAAA,gCAAA,CAAA,gCAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACA,EAAA,gCAAA,CAAA,gCAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,gCAAAA,KAAAA,OAAAA,CAAAA,gCAAAA,GAAgC,EAAhCA,CAAZ;;AAMYC,OAAAA,CAAAA,oBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,oBAAZ,EAAgC;;;;;;;;AAQ5B,EAAA,oBAAA,CAAA,oBAAA,CAAA,iBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,iBAAA;;;;;;;;;AASA,EAAA,oBAAA,CAAA,oBAAA,CAAA,yBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,yBAAA;;;;;;;;;AASA,EAAA,oBAAA,CAAA,oBAAA,CAAA,iBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,iBAAA;;;;;;;;;AASA,EAAA,oBAAA,CAAA,oBAAA,CAAA,qBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,qBAAA;AACH,CApCD,EAAYA,OAAAA,CAAAA,oBAAAA,KAAAA,OAAAA,CAAAA,oBAAAA,GAAoB,EAApBA,CAAZ;;AAsCYC,OAAAA,CAAAA,oBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,oBAAZ,EAAgC;;;;AAI5B,EAAA,oBAAA,CAAA,oBAAA,CAAA,0BAAA,CAAA,GAAA,GAAA,CAAA,GAAA,0BAAA;;;;;AAKA,EAAA,oBAAA,CAAA,oBAAA,CAAA,4BAAA,CAAA,GAAA,GAAA,CAAA,GAAA,4BAAA;AACH,CAVD,EAAYA,OAAAA,CAAAA,oBAAAA,KAAAA,OAAAA,CAAAA,oBAAAA,GAAoB,EAApBA,CAAZ;;AAYYC,OAAAA,CAAAA,sBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,sBAAZ,EAAkC;;;;;;;;AAQ9B,EAAA,sBAAA,CAAA,sBAAA,CAAA,uBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,uBAAA;;;;;AAKA,EAAA,sBAAA,CAAA,sBAAA,CAAA,2BAAA,CAAA,GAAA,GAAA,CAAA,GAAA,2BAAA;AACH,CAdD,EAAYA,OAAAA,CAAAA,sBAAAA,KAAAA,OAAAA,CAAAA,sBAAAA,GAAsB,EAAtBA,CAAZ,GAgBA;;;MACa,mBAAmB,GAAG;AACvBC,OAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,iBAAZ,EAA6B;;;;;;;;AAQzB,EAAA,iBAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACH,CATD,EAAYA,OAAAA,CAAAA,iBAAAA,KAAAA,OAAAA,CAAAA,iBAAAA,GAAiB,EAAjBA,CAAZ;;AAWYC,OAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,iBAAZ,EAA6B;;;;;;;;;AASzB,EAAA,iBAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAVD,EAAYA,OAAAA,CAAAA,iBAAAA,KAAAA,OAAAA,CAAAA,iBAAAA,GAAiB,EAAjBA,CAAZ,GAYA;;;MACa,eAAe,GAAG;AAEnBC,OAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,iBAAZ,EAA6B;AACzB,EAAA,iBAAA,CAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,sBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,sBAAA;AACA,EAAA,iBAAA,CAAA,iBAAA,CAAA,yBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,yBAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,iBAAAA,KAAAA,OAAAA,CAAAA,iBAAAA,GAAiB,EAAjBA,CAAZ;;AAMYC,OAAAA,CAAAA,aAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,aAAZ,EAAyB;;;;;;;;AAQrB,EAAA,aAAA,CAAA,aAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;AASA,EAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,aAAAA,KAAAA,OAAAA,CAAAA,aAAAA,GAAa,EAAbA,CAAZ,GAoBA;;;MACa,gBAAgB,GAAG;AAEpBC,OAAAA,CAAAA,kBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,kBAAZ,EAA8B;AAC1B,EAAA,kBAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACH,CAJD,EAAYA,OAAAA,CAAAA,kBAAAA,KAAAA,OAAAA,CAAAA,kBAAAA,GAAkB,EAAlBA,CAAZ;;AAMYC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;;;;;AAQtB,EAAA,cAAA,CAAA,cAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;;;;;;;;;;AAUA,EAAA,cAAA,CAAA,cAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,kBAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,SAAA,CAAA,GAAA,GAAA,CAAA,GAAA,SAAA;AACH,CAzED,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ;;AA2EYC,OAAAA,CAAAA,cAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,cAAZ,EAA0B;;;;AAItB,EAAA,cAAA,CAAA,cAAA,CAAA,qBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,qBAAA;;;;;;;;;AASA,EAAA,cAAA,CAAA,cAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;AACH,CAdD,EAAYA,OAAAA,CAAAA,cAAAA,KAAAA,OAAAA,CAAAA,cAAAA,GAAc,EAAdA,CAAZ,GAgBA;;;MACa,QAAQ,GAAG;AAEZC,OAAAA,CAAAA,WAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,WAAZ,EAAuB;AACnB,EAAA,WAAA,CAAA,WAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,0BAAA,CAAA,GAAA,CAAA,CAAA,GAAA,0BAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,0BAAA,CAAA,GAAA,CAAA,CAAA,GAAA,0BAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,cAAA,CAAA,GAAA,IAAA,CAAA,GAAA,cAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,cAAA,CAAA,GAAA,IAAA,CAAA,GAAA,cAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,eAAA,CAAA,GAAA,IAAA,CAAA,GAAA,eAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,eAAA,CAAA,GAAA,IAAA,CAAA,GAAA,eAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,oBAAA,CAAA,GAAA,KAAA,CAAA,GAAA,oBAAA;AACH,CAZD,EAAYA,OAAAA,CAAAA,WAAAA,KAAAA,OAAAA,CAAAA,WAAAA,GAAW,EAAXA,CAAZ;;AAcYC,OAAAA,CAAAA,OAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,OAAZ,EAAmB;;;;;;;;;;AAUf,EAAA,OAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,iBAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,YAAA,CAAA,GAAA,GAAA,CAAA,GAAA,YAAA;;;;;;AAMA,EAAA,OAAA,CAAA,OAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;;AAUA,EAAA,OAAA,CAAA,OAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;;;;;AAKA,EAAA,OAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;;;;;;;;;;AAUA,EAAA,OAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,oBAAA;;;;;AAKA,EAAA,OAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;;AAUA,EAAA,OAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,mBAAA;AACH,CAlED,EAAYA,OAAAA,CAAAA,OAAAA,KAAAA,OAAAA,CAAAA,OAAAA,GAAO,EAAPA,CAAZ;AAqEA;;;;;;;AAOA;;;;;;;;AAQYC,OAAAA,CAAAA,OAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,OAAZ,EAAmB;;;;;;;;AAQf,EAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAA;;;;;;;;;;AAUA,EAAA,OAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;;;;;;;;;AASA,EAAA,OAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GAAA,GAAA,CAAA,GAAA,MAAA;AACH,CAvDD,EAAYA,OAAAA,CAAAA,OAAAA,KAAAA,OAAAA,CAAAA,OAAAA,GAAO,EAAPA,CAAZ;;AAyDYC,OAAAA,CAAAA,SAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,SAAZ,EAAqB;;;;AAIjB,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;;;;;AAKA,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;;;;;;;;;;;AAWA,EAAA,SAAA,CAAA,SAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;;;;;AAKA,EAAA,SAAA,CAAA,SAAA,CAAA,iBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,iBAAA;AACH,CA1BD,EAAYA,OAAAA,CAAAA,SAAAA,KAAAA,OAAAA,CAAAA,SAAAA,GAAS,EAATA,CAAZ,GA4BA;;;MACa,kBAAkB,GAAG;AACtBC,OAAAA,CAAAA,gBAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,gBAAZ,EAA4B;;;;;;;;AAQxB,EAAA,gBAAA,CAAA,gBAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;;;;;;;;;AASA,EAAA,gBAAA,CAAA,gBAAA,CAAA,oBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,oBAAA;AACH,CAlBD,EAAYA,OAAAA,CAAAA,gBAAAA,KAAAA,OAAAA,CAAAA,gBAAAA,GAAgB,EAAhBA,CAAZ,GAoBA;;;MACa,cAAc,GAAG;AAClBC,OAAAA,CAAAA,YAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,YAAZ,EAAwB;;;;;;;;AAQpB,EAAA,YAAA,CAAA,YAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,GAAA,CAAA,GAAA,gBAAA;;;;;;;;;AASA,EAAA,YAAA,CAAA,YAAA,CAAA,cAAA,CAAA,GAAA,GAAA,CAAA,GAAA,cAAA;AACH,CA3BD,EAAYA,OAAAA,CAAAA,YAAAA,KAAAA,OAAAA,CAAAA,YAAAA,GAAY,EAAZA,CAAZ,GC/2JA;AACA;AACA;AACA;AACA;AACA;;;MAEa,WAAW,GAAG;MACd,WAAW,GAAG;MAEd,cAAc,GAAG;MACjB,mBAAmB,GAAG;MACtB,qBAAqB,GAAG;MACxB,sBAAsB,GAAG;MAEzB,YAAY,GAAG;MACf,YAAY,GAAG;MAEf,aAAa,GAAG;MAChB,aAAa,GAAG,KAE7B;AACA;AACA;AACA;;MACa,sBAAsB,GAAG;MAEzB,eAAe,GAAG;MAClB,iBAAiB,GAAG;MACpB,eAAe,GAAG;MAClB,kBAAkB,GAAG;MAErB,qBAAqB,GAAG;MACxB,0BAA0B,GAAG;MAC7B,qBAAqB,GAAG;MACxB,yBAAyB,GAAG;MAC5B,wBAAwB,GAAG;MAC3B,qBAAqB,GAAG;MACxB,2BAA2B,GAAG;MAC9B,qBAAqB,GAAG,MAErC;AACA;AACA;;MACa,qBAAqB,GAAG,MACrC;;MACa,2BAA2B,GAAG,MAC3C;;MACa,yCAAyC,GAAG;MAE5C,+BAA+B,GAAG;MAClC,gCAAgC,GAAG,YAEhD;;MACa,oBAAoB,GAAG,MACpC;;MACa,4BAA4B,GAAG;MAE/B,gBAAgB,GAAG;MAEnB,mBAAmB,GAAG;MAEtB,YAAY,GAAG;MACf,eAAe,GAAG;MAElB,gBAAgB,GAAG;MACnB,OAAO,GAAG;MACV,IAAI,GAAG;MACP,KAAK,GAAG;MACR,UAAU,GAAG;MACb,UAAU,GAAG;MACb,aAAa,GAAG;MAChB,QAAQ,GAAG;MACX,KAAK,GAAG;MACR,OAAO,GAAG;MACV,IAAI,GAAG;MACP,MAAM,GAAG;MACT,KAAK,GAAG;MACR,MAAM,GAAG;MACT,OAAO,GAAG;MACV,OAAO,GAAG;MACV,qBAAqB,GAAG;MACxB,IAAI,GAAG;MACP,WAAW,GAAG;MACd,oBAAoB,GAAG;MACvB,sBAAsB,GAAG;MACzB,YAAY,GAAG;MACf,WAAW,GAAG;MACd,mBAAmB,GAAG;MAEtB,sBAAsB,GAAG;MACzB,wBAAwB,GAAG;MAE3B,QAAQ,GAAG;MACX,iBAAiB,GAAG;MACpB,KAAK,GAAG;MAER,IAAI,GAAG;MACP,KAAK,GAAG;MAER,cAAc,GAAG;MACjB,WAAW,GAAG;MACd,YAAY,GAAG;MACf,iBAAiB,GAAG;MACpB,eAAe,GAAG;MAClB,sBAAsB,GAAG;MACzB,cAAc,GAAG;MACjB,aAAa,GAAG;MAChB,oBAAoB,GAAG;MACvB,YAAY,GAAG;MACf,aAAa,GAAG;MAEhB,WAAW,GAAG;MACd,sBAAsB,GAAG;MAEzB,kBAAkB,GAAG;MACrB,cAAc,GAAG;MACjB,cAAc,GAAG;MACjB,uBAAuB,GAAG;MAC1B,YAAY,GAAG;MACf,aAAa,GAAG;MAChB,eAAe,GAAG;MAClB,kBAAkB,GAAG;MACrB,mBAAmB,GAAG;MACtB,qBAAqB,GAAG;MAExB,cAAc,GAAG;MACjB,aAAa,GAAG;MAChB,eAAe,GAAG;MAElB,KAAK,GAAG;MACR,KAAK,GAAG;MACR,OAAO,GAAG;MACV,kBAAkB,GAAG;MAErB,QAAQ,GAAG;MAEX,cAAc,GAAG;MACjB,cAAc,GAAG;MACjB,iBAAiB,GAAG;MACpB,oBAAoB,GAAG;MAEvB,kBAAkB,GAAG;MACrB,gBAAgB,GAAG;MACnB,eAAe,GAAG;MAClB,eAAe,GAAG;MAClB,iBAAiB,GAAG;MACpB,uBAAuB,GAAG;MAC1B,gBAAgB,GAAG;MACnB,wBAAwB,GAAG;MAC3B,aAAa,GAAG;MAChB,iBAAiB,GAAG;MACpB,eAAe,GAAG;MAClB,cAAc,GAAG;MACjB,qBAAqB,GAAG;MACxB,iBAAiB,GAAG;MACpB,sBAAsB,GAAG;MAEzB,wBAAwB,GAAG;MAC3B,wBAAwB,GAAG;MAC3B,wBAAwB,GAAG;MAC3B,gCAAgC,GAAG;MACnC,mCAAmC,GAAG;MACtC,6BAA6B,GAAG;MAChC,iCAAiC,GAAG;MACpC,sCAAsC,GAAG;MACzC,0CAA0C,GAAG;MAC7C,4BAA4B,GAAG;MAC/B,0BAA0B,GAAG;MAE7B,iBAAiB,GAAG;MAEpB,iBAAiB,GAAG;MACpB,iBAAiB,GAAG;MACpB,qBAAqB,GAAG;MAExB,aAAa,GAAG;MAChB,mBAAmB,GAAG;MACtB,gBAAgB,GAAG;MACnB,kBAAkB,GAAG;MACrB,mBAAmB,GAAG;MAEtB,QAAQ,GAAG;MACX,eAAe,GAAG;MAClB,SAAS,GAAG;MACZ,QAAQ,GAAG;MACX,UAAU,GAAG;MAEb,gBAAgB,GAAG;MAEnB,oBAAoB,GAAG;MACvB,sBAAsB,GAAG;MAEzB,wBAAwB,GAAG;MAC3B,kCAAkC,GAC3C;MACS,kCAAkC,GAC3C;MACS,oCAAoC,GAC7C;MAES,6BAA6B,GAAG;MAChC,uBAAuB,GAAG,OAAK;;MAE/B,iBAAiB,GAAG;MACpB,sBAAsB,GAAG;MACzB,6BAA6B,GAAG;MAChC,6BAA6B,GAAG;MAEhC,UAAU,GAAG;MACb,YAAY,GAAG;MACf,mBAAmB,GAAG;MACtB,KAAK,GAAG;MACR,OAAO,GAAG;MAEV,YAAY,GAAG;;SCvNZ,eAAe,cAAoB;AAC/C,SAAO,CAAC,YAAY,GAAG,SAAhB,MAAiC,SAAxC;AACH;;SAWe,cACZ,MACA,GACA,UAAU,GAAG,OAAK;AAElB,MAAI,mBAAmB,IAAnB,CAAwB,CAAxB,KAA8B,aAAa,IAAb,CAAkB,CAAlB,CAAlC,EAAwD;AACpD,UAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAF,CAAU,IAAV,EAAgB,EAAhB,CAAD,CAAlB,CADoD,CACb;;AACvC,QAAI,KAAK,CAAC,CAAD,CAAT,EAAc,MAAM,IAAI,KAAJ,CAAU,sBAAsB,CAAhC,CAAN;AACd,WAAO,CAAP;AACH;;AAED,MAAI,UAAU,IAAI,6BAA6B,IAA7B,CAAkC,CAAlC,CAAlB,EAAwD;AACpD,UAAM,CAAC,GAAG,UAAU,CAAC,CAAD,CAApB;AACA,QAAI,KAAK,CAAC,CAAD,CAAT,EAAc,MAAM,IAAI,KAAJ,CAAU,wBAAwB,CAAlC,CAAN;AACd,WAAO,CAAP;AACH;;AAED,QAAM,EAAE,GAAG,CAAC,CAAC,KAAF,CAAQ,IAAR,CAAX;;AACA,MAAI,EAAE,CAAC,MAAH,IAAa,CAAjB,EAAoB;AAChB,UAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;AACH;;AACD,QAAM,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,EAAE,CAAC,CAAD,CAAb,CAAX;;AACA,MAAI,CAAC,EAAL,EAAS;AACL,UAAM,IAAI,KAAJ,CAAU,GAAG,EAAE,CAAC,CAAD,CAAG,sBAAlB,CAAN;AACH,GArBiB;;;AAuBlB,MAAI,CAAC,EAAE,CAAC,OAAH,CAAW,cAAX,CAA0B,EAAE,CAAC,CAAD,CAA5B,CAAL,EACI,MAAM,IAAI,KAAJ,CAAU,GAAG,EAAE,CAAC,CAAD,CAAG,uBAAuB,EAAE,CAAC,CAAD,CAAG,EAA9C,CAAN;AACJ,SAAO,EAAE,CAAC,OAAH,CAAW,EAAE,CAAC,CAAD,CAAb,KAAqB,CAA5B;AACJ;AC1CA;;;MAKa,kBAAkB,GAAG;MACrB,mBAAmB,GAAG,KAEnC;;MACa,eAAe,GAAwB;AAChD,OAAK,OAD2C;AAEhD,SAAO,eAFyC;AAGhD,UAAQ,uBAHwC;AAIhD,EAAA,CAAC,EAAE,OAJ6C;AAKhD,EAAA,EAAE,EAAE,UAL4C;AAMhD,EAAA,CAAC,EAAE,QAN6C;AAOhD,EAAA,CAAC,EAAE,QAP6C;AAQhD,EAAA,CAAC,EAAE,QAR6C;AAShD,EAAA,EAAE,EAAE,SAT4C;AAUhD,EAAA,GAAG,EAAE,MAV2C;AAWhD,EAAA,EAAE,EAAE,OAX4C;AAYhD,EAAA,GAAG,EAAE,QAZ2C;AAahD,EAAA,EAAE,EAAE,WAb4C;AAchD,EAAA,CAAC,EAAE,QAd6C;AAehD,EAAA,EAAE,EAAE,QAf4C;AAgBhD,EAAA,CAAC,EAAE,OAhB6C;AAiBhD,EAAA,CAAC,EAAE,MAjB6C;AAkBhD,EAAA,CAAC,EAAE,SAlB6C;AAmBhD,EAAA,CAAC,EAAE,MAnB6C;AAoBhD,EAAA,CAAC,EAAE,OApB6C;AAqBhD,EAAA,GAAG,EAAE,KArB2C;AAsBhD,EAAA,CAAC,EAAE,SAtB6C;AAuBhD,EAAA,EAAE,EAAE,OAvB4C;AAwBhD,EAAA,CAAC,EAAE,OAxB6C;AAyBhD,EAAA,CAAC,EAAE,OAzB6C;AA0BhD,QAAM,iBA1B0C;AA2BhD,EAAA,EAAE,EAAE,OA3B4C;AA4BhD,EAAA,EAAE,EAAE,KA5B4C;AA6BhD,EAAA,EAAE,EAAE,WA7B4C;AA8BhD,EAAA,EAAE,EAAE,MA9B4C;AA+BhD,EAAA,EAAE,EAAE,SA/B4C;AAgChD,EAAA,GAAG,EAAE,OAhC2C;AAiChD,EAAA,EAAE,EAAE,qBAjC4C;AAkChD,EAAA,EAAE,EAAE,sBAlC4C;AAmChD,SAAO,6BAnCyC;AAoChD,UAAQ,wCApCwC;AAqChD,UAAQ,oCArCwC;AAsChD,UAAQ,oCAtCwC;AAuChD,WAAS,sCAvCuC;AAwChD,EAAA,GAAG,EAAE,2BAxC2C;AAyChD,WAAS,4BAzCuC;AA0ChD,EAAA,GAAG,EAAE,kBA1C2C;AA2ChD,EAAA,GAAG,EAAE,mBA3C2C;AA4ChD,EAAA,EAAE,EAAE,0CA5C4C;AA6ChD,EAAA,EAAE,EAAE,gCA7C4C;AA8ChD,EAAA,GAAG,EAAE,uCA9C2C;AA+ChD,EAAA,KAAK,EAAE,mBA/CyC;AAgDhD,OAAK,mCAhD2C;AAiDhD,SAAO,gCAjDyC;AAkDhD,SAAO,6CAlDyC;AAmDhD,EAAA,EAAE,EAAE,0CAnD4C;AAoDhD,SAAO,2BApDyC;AAqDhD,SAAO,kCArDyC;AAsDhD,EAAA,CAAC,EAAE,4BAtD6C;AAuDhD,EAAA,EAAE,EAAE,8BAvD4C;AAwDhD,EAAA,GAAG,EAAE,sCAxD2C;AAyDhD,EAAA,GAAG,EAAE,uCAzD2C;AA0DhD,EAAA,IAAI,EAAE,+CA1D0C;AA2DhD,SAAO,uCA3DyC;AA4DhD,WAAS,6DA5DuC;AA6DhD,WAAS,kCA7DuC;AA8DhD,WAAS,QA9DuC;AA+DhD,EAAA,GAAG,EAAE,eA/D2C;AAgEhD,EAAA,GAAG,EAAE,WAhE2C;AAiEhD,EAAA,GAAG,EAAE,wBAjE2C;AAkEhD,EAAA,EAAE,EAAE,UAlE4C;AAmEhD,EAAA,GAAG,EAAE,aAnE2C;AAoEhD,EAAA,GAAG,EAAE,kBApE2C;AAqEhD,EAAA,GAAG,EAAE,gBArE2C;AAsEhD,EAAA,EAAE,EAAE;AAtE4C;MAyEvC,uBAAuB,GAK/B;AACD,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,aAAR;AAAuB,IAAA,IAAI,EAAE,GAA7B;AAAkC,IAAA,KAAK,EAAE,IAAI,IAA7C;AAAmD,IAAA,MAAM,EAAE;AAA3D,GADH;AAED,EAAA,GAAG,EAAE;AAAE,IAAA,IAAI,EAAE,QAAR;AAAkB,IAAA,IAAI,EAAE,GAAxB;AAA6B,IAAA,KAAK,EAAE,EAApC;AAAwC,IAAA,MAAM,EAAE;AAAhD,GAFJ;AAGD,EAAA,CAAC,EAAE;AAAE,IAAA,IAAI,EAAE,MAAR;AAAgB,IAAA,IAAI,EAAE,GAAtB;AAA2B,IAAA,KAAK,EAAE,IAAlC;AAAwC,IAAA,MAAM,EAAE;AAAhD,GAHF;AAID,EAAA,GAAG,EAAE;AAAE,IAAA,IAAI,EAAE,WAAR;AAAqB,IAAA,IAAI,EAAE,IAA3B;AAAiC,IAAA,KAAK,EAAE,OAAxC;AAAiD,IAAA,MAAM,EAAE;AAAzD,GAJJ;AAKD,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,UAAR;AAAoB,IAAA,IAAI,EAAE,GAA1B;AAA+B,IAAA,KAAK,EAAE,IAAtC;AAA4C,IAAA,MAAM,EAAE;AAApD,GALH;AAMD,EAAA,GAAG,EAAE;AAAE,IAAA,IAAI,EAAE,iBAAR;AAA2B,IAAA,IAAI,EAAE,IAAjC;AAAuC,IAAA,KAAK,EAAE,IAA9C;AAAoD,IAAA,MAAM,EAAE;AAA5D,GANJ;AAOD,EAAA,IAAI,EAAE;AAAE,IAAA,IAAI,EAAE,SAAR;AAAmB,IAAA,IAAI,EAAE,KAAzB;AAAgC,IAAA,KAAK,EAAE,IAAvC;AAA6C,IAAA,MAAM,EAAE;AAArD,GAPL;AAQD,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,aAAR;AAAuB,IAAA,IAAI,EAAE,GAA7B;AAAkC,IAAA,KAAK,EAAE,IAAzC;AAA+C,IAAA,MAAM,EAAE;AAAvD,GARH;AASD,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,WAAR;AAAqB,IAAA,IAAI,EAAE,GAA3B;AAAgC,IAAA,KAAK,EAAE,IAAvC;AAA6C,IAAA,MAAM,EAAE;AAArD,GATH;AAUD,EAAA,GAAG,EAAE;AAAE,IAAA,IAAI,EAAE,eAAR;AAAyB,IAAA,IAAI,EAAE,GAA/B;AAAoC,IAAA,KAAK,EAAE,OAA3C;AAAoD,IAAA,MAAM,EAAE;AAA5D,GAVJ;AAWD,EAAA,IAAI,EAAE;AAAE,IAAA,IAAI,EAAE,UAAR;AAAoB,IAAA,IAAI,EAAE,MAA1B;AAAkC,IAAA,KAAK,EAAE,IAAzC;AAA+C,IAAA,MAAM,EAAE;AAAvD,GAXL;AAYD,EAAA,KAAK,EAAE;AAAE,IAAA,IAAI,EAAE,cAAR;AAAwB,IAAA,IAAI,EAAE,MAA9B;AAAsC,IAAA,KAAK,EAAE,OAA7C;AAAsD,IAAA,MAAM,EAAE;AAA9D,GAZN;AAaD,EAAA,IAAI,EAAE;AACF,IAAA,IAAI,EAAE,sBADJ;AAEF,IAAA,IAAI,EAAE,KAFJ;AAGF,IAAA,KAAK,EAAE,OAHL;AAIF,IAAA,MAAM,EAAE;AAJN,GAbL;AAmBD,WAAS;AACL,IAAA,IAAI,EAAE,yBADD;AAEL,IAAA,IAAI,EAAE,KAFD;AAGL,IAAA,KAAK,EAAE,GAHF;AAIL,IAAA,MAAM,EAAE;AAJH,GAnBR;AAyBD,EAAA,GAAG,EAAE;AAAE,IAAA,IAAI,EAAE,UAAR;AAAoB,IAAA,IAAI,EAAE,GAA1B;AAA+B,IAAA,KAAK,EAAE,IAAtC;AAA4C,IAAA,MAAM,EAAE;AAApD,GAzBJ;AA0BD,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,UAAR;AAAoB,IAAA,IAAI,EAAE,GAA1B;AAA+B,IAAA,KAAK,EAAE,KAAtC;AAA6C,IAAA,MAAM,EAAE;AAArD,GA1BH;AA2BD,YAAU;AACN,IAAA,IAAI,EAAE,oBADA;AAEN,IAAA,IAAI,EAAE,OAFA;AAGN,IAAA,KAAK,EAAE,OAHD;AAIN,IAAA,MAAM,EAAE;AAJF,GA3BT;AAiCD,SAAO;AAAE,IAAA,IAAI,EAAE,iBAAR;AAA2B,IAAA,IAAI,EAAE,OAAjC;AAA0C,IAAA,KAAK,EAAE,CAAjD;AAAoD,IAAA,MAAM,EAAE;AAA5D,GAjCN;AAkCD,UAAQ;AACJ,IAAA,IAAI,EAAE,qBADF;AAEJ,IAAA,IAAI,EAAE,OAFF;AAGJ,IAAA,KAAK,EAAE,OAHH;AAIJ,IAAA,MAAM,EAAE;AAJJ,GAlCP;AAwCD,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,WAAR;AAAqB,IAAA,IAAI,EAAE,GAA3B;AAAgC,IAAA,KAAK,EAAE,IAAI,IAA3C;AAAiD,IAAA,MAAM,EAAE;AAAzD,GAxCH;AAyCD,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,aAAR;AAAuB,IAAA,IAAI,EAAE,GAA7B;AAAkC,IAAA,KAAK,EAAE,IAAI,IAA7C;AAAmD,IAAA,MAAM,EAAE;AAA3D,GAzCH;AA0CD,EAAA,GAAG,EAAE;AAAE,IAAA,IAAI,EAAE,qBAAR;AAA+B,IAAA,IAAI,EAAE,KAArC;AAA4C,IAAA,KAAK,EAAE,CAAnD;AAAsD,IAAA,MAAM,EAAE,CAAC;AAA/D,GA1CJ;AA2CD,WAAS;AACL,IAAA,IAAI,EAAE,2BADD;AAEL,IAAA,IAAI,EAAE,OAFD;AAGL,IAAA,KAAK,EAAE,MAHF;AAIL,IAAA,MAAM,EAAE;AAJH,GA3CR;AAiDD,UAAQ;AACJ,IAAA,IAAI,EAAE,qBADF;AAEJ,IAAA,IAAI,EAAE,KAFF;AAGJ,IAAA,KAAK,EAAE,IAAI,OAHP;AAIJ,IAAA,MAAM,EAAE;AAJJ,GAjDP;AAuDD,SAAO;AAAE,IAAA,IAAI,EAAE,gBAAR;AAA0B,IAAA,IAAI,EAAE,KAAhC;AAAuC,IAAA,KAAK,EAAE,IAAI,IAAlD;AAAwD,IAAA,MAAM,EAAE;AAAhE,GAvDN;AAwDD,UAAQ;AACJ,IAAA,IAAI,EAAE,wBADF;AAEJ,IAAA,IAAI,EAAE,KAFF;AAGJ,IAAA,KAAK,EAAE,IAAI,GAHP;AAIJ,IAAA,MAAM,EAAE;AAJJ,GAxDP;AA8DD,EAAA,GAAG,EAAE;AAAE,IAAA,IAAI,EAAE,mBAAR;AAA6B,IAAA,IAAI,EAAE,GAAnC;AAAwC,IAAA,KAAK,EAAE,MAA/C;AAAuD,IAAA,MAAM,EAAE;AAA/D,GA9DJ;AA+DD,EAAA,GAAG,EAAE;AAAE,IAAA,IAAI,EAAE,mBAAR;AAA6B,IAAA,IAAI,EAAE,GAAnC;AAAwC,IAAA,KAAK,EAAE,MAA/C;AAAuD,IAAA,MAAM,EAAE;AAA/D,GA/DJ;AAgED,UAAQ;AAAE,IAAA,IAAI,EAAE,SAAR;AAAmB,IAAA,IAAI,EAAE,GAAzB;AAA8B,IAAA,KAAK,EAAE,IAAI,GAAzC;AAA8C,IAAA,MAAM,EAAE;AAAtD,GAhEP;AAiED,OAAK;AAAE,IAAA,IAAI,EAAE,SAAR;AAAmB,IAAA,IAAI,EAAE,GAAzB;AAA8B,IAAA,KAAK,EAAE,IAAI,GAAzC;AAA8C,IAAA,MAAM,EAAE;AAAtD,GAjEJ;AAkED,WAAS;AAAE,IAAA,IAAI,EAAE,UAAR;AAAoB,IAAA,IAAI,EAAE,GAA1B;AAA+B,IAAA,KAAK,EAAE,IAAI,IAA1C;AAAgD,IAAA,MAAM,EAAE;AAAxD,GAlER;AAmED,EAAA,GAAG,EAAE;AAAE,IAAA,IAAI,EAAE,aAAR;AAAuB,IAAA,IAAI,EAAE,IAA7B;AAAmC,IAAA,KAAK,EAAE,GAA1C;AAA+C,IAAA,MAAM,EAAE;AAAvD,GAnEJ;AAoED,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,YAAR;AAAsB,IAAA,IAAI,EAAE,GAA5B;AAAiC,IAAA,KAAK,EAAE,IAAI,IAA5C;AAAkD,IAAA,MAAM,EAAE;AAA1D,GApEH;AAqED,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,YAAR;AAAsB,IAAA,IAAI,EAAE,GAA5B;AAAiC,IAAA,KAAK,EAAE,IAAI,GAA5C;AAAiD,IAAA,MAAM,EAAE;AAAzD,GArEH;AAsED,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,WAAR;AAAqB,IAAA,IAAI,EAAE,GAA3B;AAAgC,IAAA,KAAK,EAAE,IAAvC;AAA6C,IAAA,MAAM,EAAE;AAArD,GAtEH;AAuED,UAAQ;AACJ,IAAA,IAAI,EAAE,oBADF;AAEJ,IAAA,IAAI,EAAE,KAFF;AAGJ,IAAA,KAAK,EAAE,IAAI,GAHP;AAIJ,IAAA,MAAM,EAAE;AAJJ,GAvEP;AA6ED,SAAO;AAAE,IAAA,IAAI,EAAE,gBAAR;AAA0B,IAAA,IAAI,EAAE,GAAhC;AAAqC,IAAA,KAAK,EAAE,IAAI,IAAhD;AAAsD,IAAA,MAAM,EAAE;AAA9D,GA7EN;AA8ED,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,WAAR;AAAqB,IAAA,IAAI,EAAE,GAA3B;AAAgC,IAAA,KAAK,EAAE,IAAvC;AAA6C,IAAA,MAAM,EAAE;AAArD,GA9EH;AA+ED,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,YAAR;AAAsB,IAAA,IAAI,EAAE,GAA5B;AAAiC,IAAA,KAAK,EAAE,GAAxC;AAA6C,IAAA,MAAM,EAAE;AAArD,GA/EH;;AAkFD,EAAA,IAAI,EAAE;AAAE,IAAA,IAAI,EAAE,OAAR;AAAiB,IAAA,IAAI,EAAE,GAAvB;AAA4B,IAAA,KAAK,EAAE,CAAnC;AAAsC,IAAA,MAAM,EAAE;AAA9C,GAlFL;AAmFD,EAAA,EAAE,EAAE;AAAE,IAAA,IAAI,EAAE,eAAR;AAAyB,IAAA,IAAI,EAAE,GAA/B;AAAoC,IAAA,KAAK,EAAE,IAA3C;AAAiD,IAAA,MAAM,EAAE;AAAzD,GAnFH;AAoFD,EAAA,GAAG,EAAE;AAAE,IAAA,IAAI,EAAE,iBAAR;AAA2B,IAAA,IAAI,EAAE,GAAjC;AAAsC,IAAA,KAAK,EAAE,MAA7C;AAAqD,IAAA,MAAM,EAAE;AAA7D,GApFJ;AAqFD,EAAA,CAAC,EAAE;AAAE,IAAA,IAAI,EAAE,eAAR;AAAyB,IAAA,IAAI,EAAE,MAA/B;AAAuC,IAAA,KAAK,EAAE,OAA9C;AAAuD,IAAA,MAAM,EAAE;AAA/D,GArFF;AAsFD,OAAK;AAAE,IAAA,IAAI,EAAE,OAAR;AAAiB,IAAA,IAAI,EAAE,GAAvB;AAA4B,IAAA,KAAK,EAAE,CAAnC;AAAsC,IAAA,MAAM,EAAE;AAA9C;AAtFJ;MAyFQ,SAAS,GAAiC;AACnD,EAAA,IAAI,EAAE,MAD6C;AAEnD,EAAA,MAAM,EAAE;AAF2C;;SAKvC,YAAY,MAAY;AACpC,MAAI,CAAC,IAAL,EAAW,OAAO;AAAE,IAAA,IAAI,EAAE,EAAR;AAAY,IAAA,KAAK,EAAE,CAAnB;AAAsB,IAAA,MAAM,EAAE;AAA9B,GAAP,CADyB,CACe;;;AAGnD,QAAM,EAAE,GAAG,uBAAuB,CAAC,IAAD,CAAlC;AACA,MAAI,EAAJ,EAAQ,OAAO,EAAP;AAER,QAAM,IAAI,GAAG,eAAe,CAAC,IAAD,CAA5B;AACA,MAAI,IAAJ,EAAU,OAAO;AAAE,IAAA,IAAF;AAAQ,IAAA,IAAR;AAAc,IAAA,KAAK,EAAE,CAArB;AAAwB,IAAA,MAAM,EAAE;AAAhC,GAAP;AAEV,SAAO,SAAP;AACH;;SAEe,QAAK;AACjB,QAAM,CAAC,GAA4C,EAAnD;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,eAAZ,EAA6B,OAA7B,CAAqC,CAAC,IAAA;AAClC,IAAA,CAAC,CAAC,IAAF,CAAO;AAAE,MAAA,IAAI,EAAE,CAAR;AAAW,MAAA,WAAW,EAAE,eAAe,CAAC,CAAD;AAAvC,KAAP;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,uBAAZ,EACK,MADL,CACY,GAAG,IAAI,uBAAuB,CAAC,GAAD,CAAvB,CAA6B,IAA7B,KAAsC,CADzD,EAEK,OAFL,CAEa,GAAG,IACR,CAAC,CAAC,IAAF,CAAO;AACH,MAAA,IAAI,EAAE,GADH;AAEH,MAAA,WAAW,EAAE,uBAAuB,CAAC,GAAD,CAAvB,CAA6B;AAFvC,KAAP,CAHR;AAQH,GAVD;AAWA,EAAA,CAAC,CAAC,IAAF,CAAO,CAAC,CAAD,EAAI,CAAJ,KAAU,CAAC,CAAC,IAAF,CAAO,aAAP,CAAqB,CAAC,CAAC,IAAvB,CAAjB;AACA,SAAO,CAAP;AACH;AAED;;;;;;;;;;AAQA,MAAM,gBAAgB,GAA4C;AAC9D,EAAA,EAAE,EAAE,CACA,CAAC,KAAD,EAAQ,KAAR,CADA,EAEA,CAAC,KAAD,EAAQ,KAAR,CAFA,EAGA,CAAC,KAAD,EAAQ,KAAR,CAHA,EAIA,CAAC,KAAD,EAAQ,KAAR,CAJA,CAIc;AAJd,GAD0D;AAO9D,EAAA,EAAE,EAAE,CACA,CAAC,KAAD,EAAQ,KAAR,CADA,EAEA,CAAC,KAAD,EAAQ,KAAR,CAFA,EAGA,CAAC,KAAD,EAAQ,KAAR,CAHA,EAIA,CAAC,KAAD,EAAQ,KAAR,CAJA,CAIc;AAJd,GAP0D;AAa9D,EAAA,KAAK,EAAE,CACH,CAAC,KAAD,EAAQ,KAAR,CADG,EAEH,CAAC,KAAD,EAAQ,KAAR,CAFG,EAGH,CAAC,KAAD,EAAQ,KAAR,CAHG,EAIH,CAAC,KAAD,EAAQ,KAAR,CAJG,CAIW;AAJX,GAbuD;AAmB9D,EAAA,OAAO,EAAE,CACL,CAAC,KAAD,EAAQ,KAAR,CADK,EAEL,CAAC,KAAD,EAAQ,KAAR,CAFK,EAGL,CAAC,KAAD,EAAQ,KAAR,CAHK,CAnBqD;AAwB9D,EAAA,MAAM,EAAE,CACJ,CAAC,KAAD,EAAQ,KAAR,CADI,EAEJ,CAAC,KAAD,EAAQ,KAAR,CAFI,EAGJ,CAAC,KAAD,EAAQ,KAAR,CAHI,CAxBsD;AA6B9D,EAAA,KAAK,EAAE,CACH,CAAC,IAAD,EAAO,IAAP,CADG,EAEH,CAAC,IAAD,EAAO,IAAP,CAFG;AA7BuD,CAAlE;;SAmCgB,wCACZ,aACA,UACA,QAAQ,GAAG,IAAE;AAEb,EAAA,WAAW,GAAG,CAAC,WAAW,IAAI,EAAhB,EAAoB,OAApB,CAA4B,KAA5B,EAAmC,EAAnC,CAAd;AACA,QAAM,IAAI,GAAuB;AAC7B,IAAA,IAAI,EAAE,EADuB;AAE7B,IAAA,MAAM,EAAE,cAFqB;AAG7B,IAAA,OAAO,EAAE,QAAQ,CAAC,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,EAA8B,OAA9B,CAAsC,MAAtC,EAA8C,EAA9C,CAHoB;AAI7B,IAAA,SAAS,EAAE,EAJkB;AAK7B,IAAA,SAAS,EAAE,EALkB;AAM7B,IAAA,OAAO,EAAE,EANoB;AAO7B,IAAA,KAAK,EAAE,EAPsB;AAQ7B,IAAA,eAAe,EAAE,CARY;AAS7B,IAAA,KAAK,EAAE,EATsB;AAU7B,IAAA,SAAS,EAAE,EAVkB;AAW7B,IAAA,OAAO,EAAE,EAXoB;AAY7B,IAAA,IAAI,EAAE;AAZuB,GAAjC;AAeA,MAAI,aAAa,GAAG,EAApB;AACA,MAAI,QAAQ,GAAoB,IAAhC;AACA,MAAI,UAAU,GAAsB,IAApC;AACA,MAAI,UAAU,GAAsB,IAApC;AACA,MAAI,MAAM,GAAwB,EAAlC;AACA,MAAI,MAAM,GAAG,CAAb;AACA,MAAI,MAAM,GAAG,OAAb;AACA,MAAI,OAAJ;AACA,MAAI,iBAAJ;AACA,MAAI,YAAY,GAAqD,EAArE;AAEA,QAAM,UAAU,GAAG,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAG,SAAH,CAA3B;AACA,QAAM,OAAO,GAAwB,EAArC;;AACA,OAAK,MAAM,IAAX,IAAmB,MAAM,CAAC,QAAQ,IAAI,EAAb,CAAzB,EAA2C;AACvC,QAAI,IAAI,CAAC,eAAT,EAA0B,OAAO,CAAC,IAAI,CAAC,eAAL,GAAuB,EAAxB,CAAP,GAAqC,IAAI,CAAC,IAA1C;AAC7B;;AAED,MAAI;AACA,QAAI,QAAQ,CAAC,SAAD,CAAR,IAAuB,QAAQ,CAAC,OAAD,CAAnC,EAA8C,cAAc,CAAC,OAAD,CAAd;;AAC9C,SAAK,MAAM,IAAX,IAAmB,WAAW,CAAC,KAAZ,CAAkB,IAAlB,CAAnB,EAA4C;AACxC,MAAA,MAAM;AACN,MAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,GAND,CAME,OAAO,CAAP,EAAU;AACR,IAAA,KAAK,CAAC,gBAAgB,CAAC,CAAC,OAAnB,CAAL;AACH;;AAED,MAAI,MAAM,CAAC,MAAX,EAAmB,IAAI,CAAC,MAAL,GAAc,MAAd;;AAEnB,OAAK,MAAM,CAAX,IAAgB,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,KAAjB,CAAhB,EACI,IAAI,CAAC,KAAL,CAAW,CAAX,IAAgB,WAAW,CAAC,IAAI,CAAC,KAAL,CAAW,CAAX,CAAD,CAA3B;;AACJ,OAAK,MAAM,CAAX,IAAgB,IAAI,CAAC,OAArB,EAA8B,CAAC,CAAC,WAAF,GAAgB,WAAW,CAAC,CAAC,CAAC,WAAH,CAA3B;;AAE9B,MAAI,CAAC,IAAI,CAAC,SAAV,EACI,IAAI,CAAC,SAAL,GAAiB,QAAQ,CACrB,IAAI,CAAC,IAAL,CACK,OADL,CACa,MADb,EACqB,GADrB,EAEK,OAFL,CAEa,UAFb,EAEyB,CAAC,CAAD,EAAI,CAAJ,KAAU,CAAC,CAAC,WAAF,EAFnC,EAGK,OAHL,CAGa,SAHb,EAGwB,GAHxB,CADqB,CAAzB;AAMJ,MAAI,CAAC,IAAI,CAAC,SAAV,EAAqB,IAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,SAAtB;AAErB,MAAI,IAAI,CAAC,SAAL,IAAkB,QAAtB,EAAgC,IAAI,CAAC,eAAL,GAAuB,SAAvB,CAAhC,KACK,IAAI,IAAI,CAAC,SAAL,IAAkB,MAAtB,EAA8B,IAAI,CAAC,eAAL,GAAuB,SAAvB,CAA9B,KACA,IAAI,IAAI,CAAC,SAAL,IAAkB,QAAtB,EAAgC,IAAI,CAAC,eAAL,GAAuB,SAAvB;AAErC,MAAI,IAAI,CAAC,SAAL,IAAkB,SAAlB,IAA+B,CAAC,IAAI,CAAC,eAAzC,EACI,KAAK,CAAC,2BAAD,CAAL;AAEJ,EAAA,IAAI,CAAC,OAAL,CAAa,OAAb,CAAqB,GAAG,IAAK,GAAG,CAAC,UAAJ,GAAiB,UAAU,CAAC,IAAD,EAAO,GAAP,CAAxD;AAEA,SAAO,IAAP;;AAEA,WAAS,WAAT,CAAqB,IAArB,EAAiC;AAC7B,QAAI,aAAJ,EAAmB;AACf,UAAI,IAAI,CAAC,IAAL,MAAe,KAAnB,EAA0B;AACtB,QAAA,aAAa,GAAG,IAAhB;AACA,YAAI,aAAa,IAAI,SAArB,EAAgC;AACnC;AACJ,KALD,MAKO;AACH,YAAM,CAAC,GAAG,WAAW,IAAX,CAAgB,IAAhB,CAAV;;AACA,UAAI,CAAJ,EAAO;AACH,QAAA,aAAa,GAAG,CAAC,CAAC,CAAD,CAAD,IAAQ,SAAxB;AACA,YAAI,aAAa,IAAI,SAArB,EAAgC;AACnC;AACJ;;AAED,UAAM,SAAS,GACX,aAAa,IAAI,SAAjB,IAA8B,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,CAAd,KAAoB,MADtD;;AAGA,QAAI,CAAC,SAAL,EAAgB;AACZ,YAAM,CAAC,GAAG,eAAe,IAAf,CAAoB,IAApB,CAAV;;AACA,UAAI,CAAJ,EAAO;AACH,cAAM,GAAG,EAAH,EAAO,IAAP,IAAe,CAArB;AACA,QAAA,iBAAiB,GAAG,IAApB;AACA,cAAM,SAAS,GAAG,IAAI,CAAC,IAAL,GAAY,WAAZ,EAAlB;;AACA,YAAI,EAAE,IAAI,GAAN,IAAa,CAAC,IAAI,CAAC,IAAvB,EAA6B;AACzB,UAAA,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,IAAL,EAAZ;AACA,UAAA,IAAI,GAAG,EAAP;AACH,SAHD,MAGO,IACH,SAAS,IAAI,WAAb,IACA,SAAS,IAAI,UADb,IAEA,SAAS,IAAI,QAFb,IAGA,SAAS,IAAI,UAJV,EAKL;AACE,UAAA,MAAM,GAAG,SAAT;AACA,UAAA,IAAI,GAAG,EAAP;AACH,SARM,MAQA;AACH,cAAI,MAAM,IAAI,OAAd,EAAuB,MAAM,GAAG,MAAT,CADpB;AAGN;AACJ;;AAED,UAAI,iBAAJ,EAAuB;AACnB,aAAK,MAAM,KAAX,IAAoB,iBAApB,EACI,KAAK,CAAC,WAAN,IAAqB,IAAI,GAAG,IAA5B;AACP,OAHD,MAGO;AACH,YAAI,IAAI,IAAI,IAAI,CAAC,KAAL,CAAW,MAAX,CAAZ,EAAgC;AAC5B,cAAI,CAAC,IAAI,CAAC,KAAL,CAAW,MAAX,CAAL,EAAyB,IAAI,CAAC,KAAL,CAAW,MAAX,IAAqB,EAArB;AACzB,UAAA,IAAI,CAAC,KAAL,CAAW,MAAX,KAAsB,IAAI,GAAG,IAA7B;AACH;AACJ;AACJ,KAhCD,MAgCO;AACH,UAAI,iBAAiB,IAAI,iBAAiB,CAAC,CAAD,CAAjB,CAAqB,WAA9C,EACI,iBAAiB,GAAG,IAApB;AACJ,YAAM,QAAQ,GAAG,IAAI,CAChB,OADY,CACJ,QADI,EACM,EADN,EAEZ,OAFY,CAEJ,aAFI,EAEW,CAAC,IAAI,MAAM,CAAN,GAAU,GAF1B,EAGZ,IAHY,EAAjB;AAIA,UAAI,CAAC,QAAL,EAAe;AACf,YAAM,KAAK,GAAG,QAAQ,CAAC,KAAT,CAAe,KAAf,CAAd;AACA,UAAI,QAAQ,IAAR,CAAa,KAAK,CAAC,KAAK,CAAC,MAAN,GAAe,CAAhB,CAAlB,CAAJ,EAA2C,KAAK,CAAC,GAAN;AAC3C,UAAI,GAAG,GAAG,KAAK,CAAC,CAAD,CAAf,CAVG;;AAYH,UAAI,KAAK,CAAC,CAAD,CAAL,IAAY,GAAZ,IAAmB,KAAK,CAAC,CAAD,CAAL,IAAY,GAAnC,EAAwC,GAAG,GAAG,GAAN;;AACxC,cAAQ,GAAR;AACI,aAAK,MAAL;AACA,aAAK,OAAL;AACI,UAAA,SAAS,CAAC,KAAD,CAAT;AACA;;AACJ,aAAK,QAAL;AACI,UAAA,QAAQ,CAAC,KAAD,CAAR;AACA;;AACJ,aAAK,MAAL;AACA,aAAK,MAAL;AACA,aAAK,QAAL;AACA,aAAK,SAAL;AACA,aAAK,OAAL;AACA,aAAK,IAAL;AACA,aAAK,IAAL;AACA,aAAK,OAAL;AACA,aAAK,QAAL;AACA,aAAK,UAAL;AACA,aAAK,UAAL;AACA,aAAK,YAAL;AACI,UAAA,WAAW,CAAC,KAAD,CAAX;AACA;;AACJ,aAAK,GAAL;AACI,cAAI,UAAJ,EAAgB;AACZ,YAAA,YAAY;AACf,WAFD,MAEO,IAAI,QAAJ,EAAc;AACjB,YAAA,QAAQ,GAAG,IAAX;AACH,WAFM,MAEA;AACH,YAAA,KAAK,CAAC,qBAAD,CAAL;AACH;;AACD;;AACJ;AACI,cAAI,UAAJ,EAAgB,WAAW,CAAC,KAAD,CAAX,CAAhB,KACK,IAAI,QAAJ,EAAc,UAAU,CAAC,KAAD,CAAV,CAAd,KACA,cAAc,CAAC,KAAD,CAAd;AAlCb;AAoCH;AACJ;;AAED,WAAS,YAAT,GAAqB;AACjB,UAAM,MAAM,GAAG,YAAY,CAAC,UAAD,CAA3B;;AAEA,QAAI,MAAJ,EAAY;AACR,MAAA,UAAU,CAAC,MAAX,GAAoB,IAApB;AACA,MAAA,KAAK,CAAC,GAAG,MAAM,OAAO,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,EAAnD,CAAL;AACH;;AAED,QAAI,OAAO,GAAG,KAAd;AACA,QAAI,OAAO,GAAG,KAAd;;AACA,SAAK,MAAM,CAAX,IAAgB,UAAU,CAAC,MAA3B,EAAmC;AAC/B,UAAI,OAAJ,EAAa;AACT,QAAA,KAAK,CACD,SAAS,CAAC,CAAC,IAAI,OAAO,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,iCADvD,CAAL;AAGA;AACH;;AACD,UAAI,CAAC,CAAC,YAAN,EAAoB;AAChB,YAAI,OAAJ,EACI,KAAK,CACD,2CAA2C,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,EAD5E,CAAL;AAGJ,QAAA,OAAO,GAAG,IAAV;AACH;;AACD,UAAI,CAAC,CAAC,OAAF,IAAa,CAAb,IAAkB,CAAC,CAAC,IAAF,IAAU,SAAhC,EAA2C;AACvC,YAAI,OAAJ,EAAa;AACT,UAAA,KAAK,CACD,wBAAwB,CAAC,CAAC,IAAI,OAAO,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,gBADtE,CAAL;AAGA;AACH;;AACD,QAAA,OAAO,GAAG,IAAV;AACH;AACJ;;AAED,UAAM,GAAG,GAAG,UAAU,CAAC,UAAvB;AACA,UAAM,MAAM,GAAG,gBAAgB,CAAC,UAAU,CAAC,IAAZ,CAA/B;AACA,QACI,UAAU,CAAC,IAAX,IAAmB,cAAnB,IACA,UAAU,CAAC,IAAX,IAAmB,cADnB,IAEA,MAFA,IAGA,CAAC,MAAM,CAAC,IAAP,CAAY,KAAK,IAAI,KAAK,CAAC,CAAD,CAAL,IAAY,GAAZ,IAAmB,GAAG,IAAI,KAAK,CAAC,CAAD,CAApD,CAJL,EAMI,KAAK,CACD,GAAG,UAAU,CAAC,IAAI,iBAAiB,GAAG,CAAC,QAAJ,CAC/B,EAD+B,CAElC,8BAA8B,MAAM,CAChC,GAD0B,CAEvB,KAAK,IACD,IAAI,KAAK,CACJ,GADD,CACK,CAAC,IAAI,KAAK,CAAC,CAAC,QAAF,CAAW,EAAX,CAAc,EAD7B,EAEC,IAFD,CAEM,IAFN,CAEW,GALI,EAO1B,IAP0B,CAOrB,IAPqB,CAOhB,EAVd,CAAL,CA3Ca;;AAyDjB,QACI,CACI,eADJ,EAEI,aAFJ,EAGI,aAHJ,EAII,oBAJJ,EAKE,OALF,CAKU,UAAU,CAAC,cALrB,IAKuC,CAAC,CAN5C,EAOE;AACE,YAAM,KAAK,GAAG,UAAU,CAAC,cAAzB;AACA,UAAI,UAAU,CAAC,MAAX,CAAkB,MAAlB,GAA2B,CAA/B,EAAkC,KAAK,CAAC,GAAG,KAAK,mBAAT,CAAL;AAClC,YAAM,OAAO,GAAG,IAAI,CAAC,OAAL,CAAa,IAAb,CACZ,GAAG,IAAI,GAAG,CAAC,IAAJ,KAAa,IAAb,IAAqB,GAAG,CAAC,cAAJ,KAAuB,SADvC,CAAhB;AAGA,UAAI,CAAC,OAAL,EAAc,KAAK,CAAC,GAAG,KAAK,sCAAT,CAAL,CAAd,KACK,IAAI,UAAU,CAAC,MAAX,CAAkB,CAAlB,EAAqB,IAArB,KAA8B,OAAO,CAAC,MAAR,CAAe,CAAf,EAAkB,IAApD,EACD,KAAK,CACD,GAAG,KAAK,UAAU,UAAU,CAAC,MAAX,CAAkB,CAAlB,EAAqB,IAAI,uBAAuB,OAAO,CAAC,MAAR,CAAe,CAAf,EAAkB,IAAI,cADvF,CAAL;AAGP;;AAED,IAAA,UAAU,GAAG,IAAb;AACH;;AAED,WAAS,WAAT,CAAqB,EAArB,EAA+B;AAC3B,WAAO,EAAE,CAAC,OAAH,CAAW,MAAX,EAAmB,EAAnB,EAAuB,OAAvB,CAA+B,MAA/B,EAAuC,EAAvC,CAAP;AACH;;AAED,WAAS,WAAT,CAAqB,KAArB,EAAoC;AAChC,QAAI,QAAQ,IAAI,UAAhB,EAA4B,KAAK,CAAC,mBAAD,CAAL;;AAC5B,QAAI,KAAJ,EAAW;AACP,UAAI,KAAK,CAAC,CAAD,CAAL,IAAY,GAAhB,EAAqB,KAAK,CAAC,cAAc,KAAK,CAAC,CAAD,CAAG,SAAvB,CAAL;AACxB;;AAED,IAAA,QAAQ,GAAG,IAAX;AACA,IAAA,UAAU,GAAG,IAAb;AACH;;AAED,WAAS,YAAT,CAAsB,SAAtB,EAAuC;AACnC,QAAI,MAAM,IAAI,SAAd,EAAyB;AACrB,MAAA,KAAK,CAAC,8BAA8B,SAAS,cAAc,MAAM,EAA5D,CAAL;AACH;AACJ;;AAED,WAAS,WAAT,CAAqB,CAArB,EAAyC;AACrC,YAAQ,CAAR;AACI,WAAK,OAAL;AACA,WAAK,IAAL;AACA,WAAK,IAAL;AACI,eAAO,IAAP;;AACJ;AACI,eAAO,CAAP;AANR;AAQH;;AAED,WAAS,WAAT,CAAqB,KAArB,EAAoC;AAChC,IAAA,WAAW,CAAC,IAAD,CAAX;AAEA,QAAI,MAAM,GAAY,SAAtB;AACA,QAAI,QAAQ,GAAY,SAAxB;AACA,QAAI,UAAU,GAAY,SAA1B;;AACA,QAAI,KAAK,CAAC,CAAD,CAAL,KAAa,YAAjB,EAA+B;AAC3B,MAAA,UAAU,GAAG,IAAb;AACA,MAAA,KAAK,CAAC,KAAN;AACH,KAHD,MAGO,IAAI,KAAK,CAAC,CAAD,CAAL,KAAa,QAAjB,EAA2B;AAC9B,MAAA,MAAM,GAAG,IAAT;AACA,MAAA,KAAK,CAAC,KAAN;AACH,KAHM,MAGA,IAAI,KAAK,CAAC,CAAD,CAAL,KAAa,UAAjB,EAA6B;AAChC,MAAA,QAAQ,GAAG,IAAX;AACA,MAAA,KAAK,CAAC,KAAN;AACH;;AAED,UAAM,MAAM,GAAG,KAAK,CAAC,KAAN,EAAf;AACA,QAAI,IAAI,GAAsB,SAA9B;;AACA,QAAI,MAAM,IAAI,MAAd,EAAsB;AAClB,MAAA,YAAY,CAAC,UAAD,CAAZ;AACA,UAAI,EAAE,GAAG,KAAK,CAAC,KAAN,EAAT;AACA,UAAI,EAAE,IAAI,MAAV,EAAkB,EAAE,GAAG,KAAK,CAAC,KAAN,EAAL;AAClB,UAAI,EAAE,IAAI,QAAN,IAAkB,EAAE,IAAI,SAA5B,EACI,IAAI,GAAI,eAAe,EAAvB,CADJ,KAEK,KAAK,CAAC,0BAAD,CAAL;AACR,KAPD,MAOO,IAAI,MAAM,IAAI,MAAd,EAAsB;AACzB,MAAA,YAAY,CAAC,UAAD,CAAZ;AACA,YAAM,EAAE,GAAG,KAAK,CAAC,KAAN,EAAX;AACA,UAAI,EAAE,IAAI,QAAN,IAAkB,EAAE,IAAI,SAA5B,EAAuC,IAAI,GAAI,UAAU,EAAlB,CAAvC,KACK,KAAK,CAAC,0BAAD,CAAL;AACR,KALM,MAKA;AACH,MAAA,IAAI,GAAG,MAAP;AACH;;AAED,QAAI,UAAU,IAAI,IAAI,KAAK,SAA3B,EACI,KAAK,CAAC,qCAAD,CAAL;AAEJ,QAAI,QAAQ,GAAY,SAAxB;;AACA,QAAI,KAAK,CAAC,CAAD,CAAL,KAAa,UAAjB,EAA6B;AACzB,MAAA,QAAQ,GAAG,IAAX;AACA,MAAA,KAAK,CAAC,KAAN;AACH;;AAED,QAAI,QAAQ,GAAY,SAAxB;;AACA,QAAI,KAAK,CAAC,CAAD,CAAL,KAAa,UAAjB,EAA6B;AACzB,UAAI,IAAI,IAAI,IAAR,IAAgB,IAAI,IAAI,IAA5B,EACI,KAAK,CAAC,mCAAD,CAAL;AACJ,MAAA,QAAQ,GAAG,IAAX;AACA,MAAA,KAAK,CAAC,KAAN;AACH;;AAED,QAAI,IAAI,GAAG,KAAK,CAAC,KAAN,EAAX;AACA,UAAM,QAAQ,GAAG,IAAI,IAAI,QAAzB;;AACA,QAAI,QAAQ,IAAI,OAAZ,IAAuB,CAAC,QAAQ,IAAR,CAAa,IAAb,CAA5B,EAAgD;AAC5C,MAAA,KAAK,CAAC,OAAN,CAAc,IAAd;AACA,MAAA,IAAI,GAAG,OAAO,CAAC,IAAf;AACH;;AAED,IAAA,UAAU,GAAG;AACT,MAAA,IADS;AAET,MAAA,IAAI,EAAE,aAAa,CAAC,IAAD,CAFV;AAGT,MAAA,UAAU,EAAE,SAHH;AAIT,MAAA,WAAW,EAAE,EAJJ;AAKT,MAAA,MAAM,EAAE,EALC;AAMT,MAAA,QANS;AAOT,MAAA,MAPS;AAQT,MAAA,QARS;AAST,MAAA,QATS;AAUT,MAAA;AAVS,KAAb;;AAYA,QAAI,QAAQ,IAAI,OAAZ,IAAuB,IAAI,IAAI,OAAO,CAAC,IAA3C,EAAiD;AAC7C,MAAA,UAAU,CAAC,SAAX,GAAuB,IAAvB;AACA,MAAA,OAAO,CAAC,SAAR,GAAoB,IAApB;AACH;;AACD,QAAI,CAAC,iBAAL,EAAwB,iBAAiB,GAAG,EAApB;AACxB,IAAA,iBAAiB,CAAC,IAAlB,CAAuB,UAAvB;;AACA,QAAI,KAAK,CAAC,CAAD,CAAL,IAAY,GAAhB,EAAqB;AACjB,MAAA,KAAK,CAAC,KAAN;AACA,MAAA,UAAU,CAAC,QAAX,GAAsB,IAAtB;AACH;;AAED,UAAM,IAAI,GAAG,IAAI,CAAC,OAAL,CAAa,MAAb,CAAoB,CAAC,IAAI,CAAC,CAAC,IAAF,IAAU,UAAU,CAAC,IAA9C,CAAb;AACA,QAAI,IAAI,CAAC,MAAL,IAAe,CAAnB,EAAsB,CAAtB,KAEO,IACH,IAAI,CAAC,MAAL,IAAe,CAAf,IACA,IAAI,CAAC,CAAD,CAAJ,CAAQ,IAAR,IAAgB,SADhB,IAEA,UAAU,CAAC,IAAX,IAAmB,QAHhB,EAIL,CAJK,KAMA;AACH,MAAA,KAAK,CAAC,uBAAuB,IAAI,CAAC,GAAL,CAAS,CAAC,IAAI,CAAC,CAAC,IAAhB,EAAsB,IAAtB,CAA2B,IAA3B,CAAgC,GAAxD,CAAL;AACH;;AAED,QAAI,OAAO,IAAP,CAAY,IAAZ,CAAJ,EAAuB;AACnB,UAAI,CAAC,UAAL,EACI,KAAK,CACD,4DADC,CAAL,CADJ,KAIK,UAAU,CAAC,QAAX,GAAsB,UAAU,CAAC,QAAjC;AACR;;AAED,UAAM,IAAI,GAAG,KAAK,CAAC,OAAN,CAAc,GAAd,CAAb;;AACA,QAAI,IAAI,IAAI,cAAR,IAA0B,IAAI,IAAI,aAAtC,EAAqD;;AAEjD,MAAA,UAAU,CAAC,UAAX,GAAwB,CAAxB;AACH,KAHD,MAGO,IAAI,IAAI,IAAI,CAAZ,EAAe;AAClB,YAAM,CAAC,GAAG,KAAK,CAAC,IAAI,GAAG,CAAR,CAAf;AACA,UAAI,CAAC,GAAG,QAAQ,CAAC,CAAD,CAAhB;;AAEA,UAAI,KAAK,CAAC,CAAD,CAAT,EAAc;AACV,QAAA,CAAC,GAAG,CAAJ;;AAEA,YAAI,UAAJ,EAAgB;AACZ,gBAAM,YAAY,GAAG,UAAU,CAAC,OAAX,CAAmB,IAAnB,CACjB,CAAC,IAAI,CAAC,CAAC,IAAF,IAAU,CADE,CAArB;;AAGA,cAAI,YAAJ,EAAkB;AACd,YAAA,CAAC,GAAG,YAAY,CAAC,UAAjB;AACA,YAAA,UAAU,CAAC,cAAX,GAA4B,CAA5B;AACA,gBAAI,YAAY,CAAC,IAAb,IAAqB,IAAzB,EACI,KAAK,CACD,oBAAoB,CAAC,KAAK,YAAY,CAAC,IAAI,OAAO,IAAI,EADrD,CAAL;AAIP,WARD,MAQO,KAAK,CAAC,GAAG,CAAC,uBAAL,CAAL;AACV,SAbD,MAaO;AACH,UAAA,KAAK,CAAC,GAAG,CAAC,+CAAL,CAAL;AACH;AACJ,OAvBiB;;;AA0BlB,UAAI,IAAI,KAAK,IAAT,KAAkB,CAAC,KAAK,KAAN,IAAe,CAAC,KAAK,KAAvC,CAAJ,EACI,UAAU,CAAC,QAAX,GAAsB,IAAtB;AAEJ,UAAI,MAAM,GAAG,KAAb;AACA,UAAI,QAAQ,GAAG,KAAf;AACA,UAAI,MAAM,GAAG,SAAS,CAAT,IAAc,CAAC,IAAI,KAAhC;;AACA,cAAQ,IAAR;AACI,aAAK,OAAL;AACA,aAAK,IAAL;AACI,UAAA,YAAY,CAAC,WAAD,CAAZ;AACA,UAAA,QAAQ,GAAG,SAAS,CAAT,IAAc,CAAC,IAAI,KAA9B;AACA,UAAA,MAAM,GAAG,SAAS,CAAT,IAAc,CAAC,IAAI,KAA5B;AACA;;AACJ,aAAK,IAAL;AACI,UAAA,YAAY,CAAC,WAAD,CAAZ;AACA,UAAA,QAAQ,GAAG,QAAQ,CAAR,IAAa,CAAC,IAAI,IAA7B;AACA,UAAA,MAAM,GAAG,QAAQ,CAAR,IAAa,CAAC,IAAI,IAA3B;AACA;;AACJ,aAAK,QAAL;AACA,aAAK,SAAL;AACI,UAAA,YAAY,CAAC,UAAD,CAAZ;AACA,UAAA,QAAQ,GAAG,QAAQ,CAAR,IAAa,CAAC,IAAI,IAA7B;AACA,UAAA,MAAM,GAAG,QAAQ,CAAR,IAAa,CAAC,IAAI,IAA3B;AACA,UAAA,MAAM,GAAG,SAAS,CAAT,IAAc,CAAC,IAAI,KAA5B;AACA;;AACJ,aAAK,OAAL;AACI,UAAA,YAAY,CAAC,QAAD,CAAZ;AACA,UAAA,QAAQ,GAAG,QAAQ,CAAR,IAAa,CAAC,IAAI,IAA7B;AACA,UAAA,MAAM,GAAG,QAAQ,CAAR,IAAa,CAAC,IAAI,IAA3B;AACA;AAvBR;;AA0BA,UAAI,MAAJ,EAAY,CAAZ,KAEO,IAAI,QAAJ,EAAc;AACjB,YAAI,CAAC,UAAU,CAAC,cAAhB,EACI,IAAI,CACA,GAAG,IAAI,MAAMC,OAAK,CACd,CADc,CAEjB,kDAHD,CAAJ;AAKP,OAPM,MAOA,IAAI,MAAJ,EAAY;AACf,YAAI,CAAC,IAAI,CAAC,YAAV,EACI,IAAI,CACA,GAAG,IAAI,MAAMA,OAAK,CACd,CADc,CAEjB,mDAHD,CAAJ;AAKP;AAED,MAAA,UAAU,CAAC,UAAX,GAAwB,CAAxB;AACA,MAAA,KAAK,CAAC,MAAN,CAAa,IAAb,EAAmB,CAAnB;AACH,KA9EM,MA8EA;AACH,UAAI,QAAQ,IAAI,OAAhB,EAAyB,UAAU,CAAC,UAAX,GAAwB,OAAO,CAAC,UAAhC,CAAzB,KACK,KAAK,CAAC,kBAAkB,UAAU,CAAC,IAAI,EAAlC,CAAL;AACR;;AAED,QACI,IAAI,CAAC,OAAL,CAAa,IAAb,CACI,CAAC,IACG,WAAW,CAAC,CAAC,CAAC,IAAH,CAAX,IAAuB,WAAW,CAAC,UAAU,CAAC,IAAZ,CAAlC,KACC,CAAC,OAAO,IAAP,CAAY,CAAC,CAAC,IAAd,CAAD,IACG,CAAC,CAAC,QAAF,IAAc,UAAU,CAAC,QAF7B,KAGA,CAAC,CAAC,UAAF,IAAgB,UAAU,CAAC,UALnC,CADJ,EAQE;AACE,MAAA,KAAK,CAAC,gCAAD,CAAL;AACH;;AAED,IAAA,IAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,UAAlB;AAEA,QAAI,IAAI,IAAI,SAAZ,EAAuB,OAAO,GAAG,UAAV,CAAvB,KACK,OAAO,GAAG,IAAV;;AAEL,QAAI,KAAK,CAAC,CAAD,CAAL,IAAY,GAAZ,IAAmB,KAAK,CAAC,CAAD,CAAL,IAAY,GAAnC,EAAwC;AACpC,MAAA,KAAK,CAAC,OAAN,CAAc,GAAd;AACA,MAAA,WAAW,CAAC,KAAD,CAAX;AACA,MAAA,YAAY;AACf,KAJD,MAIO;AACH,YAAM,IAAI,GAAG,KAAK,CAAC,KAAN,EAAb;;AACA,UAAI,IAAI,IAAI,GAAZ,EAAiB;AACb,YAAI,KAAK,CAAC,CAAD,CAAL,IAAY,KAAhB,EAAuB,KAAK,CAAC,KAAN;;AACvB,YAAI,KAAK,CAAC,CAAD,CAAL,IAAY,GAAhB,EAAqB;AACjB,UAAA,KAAK,CAAC,KAAN;AACA,UAAA,YAAY;AACf;;AACD,YAAI,KAAK,CAAC,MAAV,EAAkB,KAAK,CAAC,qBAAqB,KAAK,CAAC,CAAD,CAAG,KAA9B,CAAL;AACrB,OAPD,MAOO;AACH,YAAI,IAAI,KAAK,SAAT,IAAsB,IAAI,IAAI,OAAlC,EAA2C;AACvC,UAAA,YAAY;AACf,SAFD,MAEO;AACH,UAAA,KAAK,CAAC,eAAD,CAAL;AACH;AACJ;AACJ;AACJ;;AAED,WAAS,UAAT,CAAoB,EAApB,EAAgC,CAAhC,EAAyC;AACrC,UAAM,CAAC,OAAD,EAAU,IAAV,EAAgB,SAAhB,IAA6B,oBAAoB,CAAC,EAAD,CAAvD;AAEA,QAAI,KAAK,CAAC,CAAD,CAAT,EAAc,OAAO,CAAP,CAHuB,CAGf;;AAEtB,QAAI,OAAO,IAAI,CAAf,EAAkB;AACd,MAAA,KAAK,CAAC,uBAAuB,CAAC,oBAAoB,EAAE,EAA/C,CAAL;AACA,aAAO,CAAP;AACH;;AAED,QAAI,CAAC,GAAG,CAAJ,IAAS,OAAO,GAAG,CAAvB,EAA0B;AACtB,MAAA,KAAK,CAAC,wBAAwB,CAAC,oBAAoB,EAAE,EAAhD,CAAL;AACA,aAAO,CAAP;AACH;;AAED,QAAI,IAAI,CAAC,KAAL,CAAW,CAAX,KAAiB,CAAjB,IAAsB,SAAS,IAAI,CAAvC,EAA0C;AACtC,MAAA,KAAK,CAAC,mCAAmC,EAAE,SAAS,CAAC,EAAhD,CAAL;AACA,aAAO,CAAP;AACH;;AAED,QAAI,IAAI,GAAG,OAAO,GAAG,CAAV,GAAc,CAAC,OAAD,GAAW,CAAX,GAAe,CAA7B,GAAiC,OAAO,GAAG,CAAtD;AACA,IAAA,IAAI,IAAI,SAAS,IAAI,CAArB,CArBqC;;AAuBrC,QAAI,GAAG,GAAG,CAAV;;AACA,WAAO,IAAI,EAAX,EAAe,GAAG,IAAI,CAAP;;AACf,QAAI,CAAC,CAAD,IAAM,GAAV,EAAe,CAAf,KAEO,IAAI,GAAG,IAAI,CAAP,IAAY,CAAC,IAAI,CAArB,EAAwB,CAAxB,KAEA;AACH,UAAI,IAAI,CAAC,GAAL,CAAS,CAAT,KAAe,GAAnB,EAAwB;AACpB,QAAA,KAAK,CAAC,SAAS,CAAC,wBAAwB,EAAE,EAArC,CAAL;AACA,eAAO,CAAP;AACH;AACJ;AAED,WAAO,CAAP;AACH;;AAED,WAAS,QAAT,CAAkB,KAAlB,EAAiC;AAC7B,UAAM,EAAE,GAAG,KAAK,CAAC,KAAN,EAAX;AACA,QAAI,EAAE,IAAI,GAAN,IAAa,EAAE,IAAI,GAAvB,EAA4B,KAAK,CAAC,eAAD,CAAL;AAC5B,UAAM,GAAG,GAAG,KAAK,CAAC,KAAN,EAAZ;AACA,WAAO,aAAa,CAAC,GAAD,EAAM,IAAN,CAApB;AACH;;AAED,WAAS,QAAT,CAAkB,KAAlB,EAAiC;AAC7B,QAAI,KAAK,CAAC,MAAN,IAAgB,CAApB,EAAuB;AACnB,MAAA,KAAK,CAAC,yCAAyC,KAAK,CAAC,IAAN,CAAW,GAAX,CAAe,GAAzD,CAAL;AACA;AACH;;AAED,UAAM,IAAI,GAAG,KAAK,CAAC,CAAD,CAAlB;AACA,UAAM,MAAM,GAAG,KAAK,CAAC,CAAD,CAApB;AAEA,UAAM,GAAG,GAAG,MAAM,IAAN,CAAW,MAAX,CAAZ;AACA,UAAM,KAAK,GAAG,GAAG,GAAG,QAAQ,CAAC,MAAD,EAAS,EAAT,CAAX,GAA0B,QAAQ,CAAC,MAAD,CAAnD;;AACA,QAAI,KAAK,CAAC,KAAD,CAAT,EAAkB;AACd,MAAA,KAAK,CAAC,oCAAD,CAAL;AACA;AACH;;AACD,IAAA,IAAI,CAAC,SAAL,CAAe,IAAf,IAAuB;AAAE,MAAA,KAAF;AAAS,MAAA;AAAT,KAAvB;AACH;;AAED,WAAS,WAAT,CAAqB,KAArB,EAAoC;;;AAChC,QACI,KAAK,CAAC,MAAN,IAAgB,CAAhB,KACC,KAAK,CAAC,CAAD,CAAL,IAAY,SAAZ,IACG,KAAK,CAAC,CAAD,CAAL,IAAY,WADf,IAEG,KAAK,CAAC,CAAD,CAAL,IAAY,iBAHhB,CADJ,EAKE;AACE,MAAA,YAAY,GAAG,KAAK,CAAC,CAAD,CAApB;AACA;AACH;;AACD,UAAM,IAAI,GAAG,aAAa,CAAC,KAAK,CAAC,KAAN,EAAD,CAA1B;AACA,QAAI,YAAY,GAAW,SAA3B;AACA,QAAI,UAAU,GAAY,SAA1B;AACA,QAAI,EAAE,GAAG,KAAK,CAAC,KAAN,EAAT;;AACA,QAAI,EAAE,IAAI,GAAV,EAAe;AACX,MAAA,UAAU,GAAG,IAAb;AACA,MAAA,EAAE,GAAG,KAAK,CAAC,KAAN,EAAL;AACH;;AACD,QAAI,EAAE,IAAI,GAAV,EAAe;AACX,MAAA,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,KAAN,EAAD,EAAgB,IAAhB,CAA5B;AACA,MAAA,EAAE,GAAG,KAAK,CAAC,KAAN,EAAL;AACH;;AAED,QAAI,EAAE,IAAI,GAAV,EAAe,KAAK,CAAC,eAAD,CAAL;AAEf,UAAM,EAAE,GAAG,KAAK,CAAC,KAAN,EAAX;AACA,UAAM,CAAC,OAAD,EAAU,IAAV,EAAgB,SAAhB,IAA6B,oBAAoB,CAAC,EAAD,CAAvD;AACA,UAAM,OAAO,GAAG,SAAS,KAAK,IAAd,IAAsB,SAAtC;AAEA,QAAI,GAAG,GAAG,KAAK,CAAC,KAAN,EAAV;AACA,QAAI,IAAJ;AACA,QAAI,QAAJ;;AACA,QAAI,GAAG,IAAI,GAAX,EAAgB;AACZ,UAAI,IAAI,KAAK,QAAT,IAAqB,IAAI,KAAK,OAAlC,EACI,QAAQ,GAAG,iBAAiB,CAAC,GAAD,CAA5B,CADJ,KAEK,IAAI,GAAG,aAAa,CAAC,GAAD,CAApB;AACL,MAAA,GAAG,GAAG,KAAK,CAAC,KAAN,EAAN;AACH;;AAED,QAAI,YAAY,KAAK,SAArB,EAAgC,UAAU,CAAC,EAAD,EAAK,YAAL,CAAV;AAEhC,QAAI,KAAK,GAAG,SAAS,IAAI,SAAzB;;AACA,QAAI,IAAI,IAAI,GAAZ,EAAiB;;AAEb,UAAI,CAAC,iBAAiB,IAAjB,CAAsB,EAAtB,CAAL,EACI,KAAK,CACD,oEAAoE,EAAE,GADrE,CAAL;AAIJ,MAAA,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,OAAT,IAAoB,CAA5B;AACA,UAAI,OAAO,GAAG,CAAd,EAAiB,KAAK,IAAI,CAAT;AACpB;;AAED,UAAM,KAAK,GAAwB;AAC/B,MAAA,IAD+B;AAE/B,MAAA,IAF+B;AAG/B,MAAA,QAH+B;AAI/B,MAAA,KAJ+B;AAK/B,MAAA,OAL+B;AAM/B,MAAA,IAN+B;AAO/B,MAAA,OAP+B;AAQ/B,MAAA,YAAY,EAAE,aAAa,CAAC,OAAD,CAAb,IAA0B,IAA1B,IAAkC,SARjB;AAS/B,MAAA,YAT+B;AAU/B,MAAA,UAV+B;AAW/B,MAAA,cAAc,EAAE,YAAY,IAAI,iBAAhB,IAAqC,SAXtB;AAY/B,MAAA,SAAS,EACL,YAAY,IAAI,WAAhB,IACA,YAAY,IAAI,iBADhB,IAEA,SAf2B;AAgB/B,MAAA,YAAY,EAAE,YAAY,IAAI,SAAhB,IAA6B;AAhBZ,KAAnC;AAmBA,QAAI,CAAC,IAAL,EAAW,OAAO,KAAK,CAAC,IAAb;AACX,QAAI,CAAC,QAAL,EAAe,OAAO,KAAK,CAAC,QAAb;;AAEf,QAAI,GAAG,IAAI,GAAX,EAAgB;AACZ,aAAO,KAAK,CAAC,MAAb,EAAqB;AACjB,QAAA,GAAG,GAAG,KAAK,CAAC,KAAN,EAAN;AACA,YAAI,GAAG,IAAI,GAAX,EAAgB;AAChB,QAAA,GAAG,GAAG,QAAQ,CAAC,GAAD,CAAd;;AACA,gBAAQ,GAAR;AACI,eAAK,UAAL;AAAiB;AAEX,cAAA,KAAa,CAAC,GAAD,CAAb,GAAqB,UAAU,CAAC,IAAD,EAAO,QAAQ,CAAC,KAAD,CAAf,CAA/B;AACF;AACH;;AACD,eAAK,YAAL;AACA,eAAK,YAAL;AACA,eAAK,aAAL;AACA,eAAK,aAAL;AAAoB;AAEd,cAAA,KAAa,CAAC,GAAD,CAAb,GAAqB,UAAU,CAAC,EAAD,EAAK,QAAQ,CAAC,KAAD,CAAb,CAA/B;AACF;AACH;;AACD,eAAK,mBAAL;AAA0B;;AAEtB,kBAAK,UAAkB,CAAC,GAAD,CAAlB,KAA4B,SAAjC,EACI,KAAK,CAAC,SAAS,GAAG,cAAb,CAAL;AAEF,cAAA,UAAkB,CAAC,GAAD,CAAlB,GAA0B,UAAU,CAClC,KADkC,EAElC,QAAQ,CAAC,KAAD,CAF0B,CAApC;AAIF;AACH;;AACD;AACI,YAAA,KAAK,CAAC,yBAAyB,GAA1B,CAAL;AACA;AA3BR;;AA6BA,YAAI,KAAK,CAAC,CAAD,CAAL,IAAY,GAAhB,EAAqB,KAAK,CAAC,KAAN;AACxB;;AACD,UAAI,GAAG,IAAI,GAAX,EAAgB,GAAG,GAAG,IAAN;AACnB;;AAED,QAAI,GAAJ,EAAS,KAAK,CAAC,0CAA0C,GAAG,KAA9C,CAAL;AAET,QACI,KAAK,CAAC,UAAN,KAAqB,SAArB,IACA,KAAK,CAAC,UAAN,KAAqB,SADrB,IAEA,OAAO,GAAG,CAHd,EAKI,KAAK,CAAC,UAAN,GAAmB,CAAnB;AAEJ,QACI,KAAK,CAAC,WAAN,KAAsB,SAAtB,IACA,KAAK,CAAC,WAAN,KAAsB,SADtB,IAEA,OAAO,GAAG,CAHd,EAKI,KAAK,CAAC,WAAN,GAAoB,CAApB;AAEJ,QAAI,CAAC,KAAK,CAAC,OAAP,IAAkB,KAAK,CAAC,QAA5B,EAAsC,KAAK,CAAC,OAAN,GAAgB,KAAK,CAAC,QAAtB;;AAEtC,QAAI,OAAO,IAAP,CAAY,IAAZ,CAAJ,EAAuB;AACnB,MAAA,UAAU,CAAC,QAAX,GAAsB,UAAU,CAAC,IAAjC;AACA,UACI,UAAU,IACV,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,IAD9B,IAEA,UAAU,CAAC,IAAX,IAAmB,QAHvB,EAIE,CAJF,KAMO;AACH,QAAA,UAAU,GAAG,UAAb;AACH;AACJ;;AAED,QACI,CAAC,KAAK,CAAC,UAAP,KACA,CAAA,EAAA,GAAA,UAAU,CAAC,MAAX,CAAkB,UAAU,CAAC,MAAX,CAAkB,MAAlB,GAA2B,CAA7C,CAAA,MAA+C,IAA/C,IAA+C,EAAA,KAAA,KAAA,CAA/C,GAA+C,KAAA,CAA/C,GAA+C,EAAA,CAAE,UADjD,CADJ,EAGE;AACE,MAAA,KAAK,CAAC,qDAAD,CAAL;AACH;;AAED,IAAA,UAAU,CAAC,MAAX,CAAkB,IAAlB,CAAuB,KAAvB;AACA,IAAA,YAAY,GAAG,SAAf;AACH;;AAED,WAAS,SAAT,CAAmB,KAAnB,EAAkC;AAC9B,IAAA,WAAW,CAAC,IAAD,CAAX;AACA,QAAI,KAAK,CAAC,CAAD,CAAL,IAAY,GAAZ,IAAmB,KAAK,CAAC,CAAD,CAAL,IAAY,GAAnC,EACI,KAAK,CAAC,+BAAD,CAAL;AACJ,IAAA,QAAQ,GAAG;AACP,MAAA,IAAI,EAAE,aAAa,CAAC,KAAK,CAAC,CAAD,CAAN,CADZ;AAEP,MAAA,OAAO,EAAE,oBAAoB,CAAC,KAAK,CAAC,CAAD,CAAN,CAApB,CAA+B,CAA/B,CAFF;AAGP,MAAA,OAAO,EAAE,KAAK,CAAC,CAAD,CAAL,IAAY,OAAZ,IAAuB,SAHzB;AAIP,MAAA,OAAO,EAAE;AAJF,KAAX;AAMA,QAAI,IAAI,CAAC,KAAL,CAAW,QAAQ,CAAC,IAApB,CAAJ,EAA+B,KAAK,CAAC,mBAAD,CAAL;AAC/B,IAAA,IAAI,CAAC,KAAL,CAAW,QAAQ,CAAC,IAApB,IAA4B,QAA5B;AACH;;AAED,WAAS,UAAT,CAAoB,KAApB,EAAmC;AAC/B,QAAI,KAAK,CAAC,CAAD,CAAL,IAAY,GAAZ,IAAmB,KAAK,CAAC,MAAN,IAAgB,CAAvC,EACI,KAAK,CAAC,iCAAD,CAAL;AACJ,IAAA,QAAQ,CAAC,OAAT,CAAiB,aAAa,CAAC,KAAK,CAAC,CAAD,CAAN,CAA9B,IAA4C,UAAU,CAClD,aAAa,CAAC,QAAQ,CAAC,OAAV,CADqC,EAElD,aAAa,CAAC,KAAK,CAAC,CAAD,CAAN,CAFqC,CAAtD;AAIH;;AAED,WAAS,aAAT,CAAuB,CAAvB,EAAkC,UAAU,GAAG,KAA/C,EAAoD;AAChD,QAAI;AACA,aAAO,aAAa,CAAC,IAAD,EAAO,CAAP,EAAU,UAAV,CAApB;AACH,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,MAAA,KAAK,CAAC,CAAC,CAAC,OAAH,CAAL;AACA,aAAO,CAAP;AACH;AACJ;;AAED,WAAS,WAAT,CAAqB,CAArB,EAA8B;AAC1B,UAAM,CAAC,GAAG,CAAC,CAAC,QAAF,CAAW,EAAX,CAAV;AACA,UAAM,CAAC,GAAG,kBAAV;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,MAAtB,EAA8B,EAAE,CAAhC,EAAmC;AAC/B,YAAM,EAAE,GAAG,CAAC,CAAC,CAAD,CAAZ;AACA,UAAI,CAAC,CAAC,OAAF,CAAU,EAAE,GAAG,EAAL,GAAU,EAApB,KAA2B,CAA/B,EAAkC,OAAO,KAAP;AACrC;;AACD,QAAI,sBAAsB,IAAtB,CAA2B,CAA3B,CAAJ,EAAmC,OAAO,KAAP;AACnC,WAAO,IAAP;AACH;;AAED,WAAS,SAAT,GAAkB;AACd,aAAS;AACL,YAAM,CAAC,GAAI,IAAI,CAAC,MAAL,KAAgB,SAAjB,GAA+B,SAAzC;AACA,UAAI,WAAW,CAAC,CAAD,CAAf,EAAoB,OAAO,CAAP;AACvB;AACJ;;AAED,WAAS,cAAT,CAAwB,KAAxB,EAAuC;AACnC,QACI,EACI,CAAC,KAAK,CAAC,CAAD,CAAL,IAAY,GAAZ,IAAmB,KAAK,CAAC,CAAD,CAAL,IAAY,GAAhC,MACC,KAAK,CAAC,CAAD,CAAL,IAAY,MAAZ,IAAsB,KAAK,CAAC,MAAN,IAAgB,CADvC,CADJ,CADJ,EAMI,KAAK,CAAC,qDAAD,CAAL;;AACJ,YAAQ,KAAK,CAAC,CAAD,CAAb;AACI,WAAK,SAAL;AACI,QAAA,cAAc,CAAC,KAAK,CAAC,CAAD,CAAN,CAAd;AACA;;AACJ,WAAK,OAAL;AACA,WAAK,YAAL;AAAmB;AACf,UAAA,IAAI,CAAC,eAAL,GAAuB,aAAa,CAAC,KAAK,CAAC,CAAD,CAAN,CAApC;AACA,cAAI,IAAI,CAAC,IAAL,IAAa,SAAb,IAA0B,IAAI,CAAC,eAAL,IAAwB,CAAtD,EACI,IAAI,CAAC,eAAL,GAAuB,CAAvB;AACJ,gBAAM,GAAG,GAAG,aAAaA,OAAK,CAAC,SAAS,EAAV,CAAa,EAA3C;AACA,cACI,EACI,IAAI,CAAC,eAAL,IAAwB,CAAxB,IACC,aAAe,IAAI,CAAC,eAApB,IACG,IAAI,CAAC,eAAL,IAAwB,SAF5B,IAGC,aAAe,IAAI,CAAC,eAApB,IACG,IAAI,CAAC,eAAL,IAAwB,WALhC,CADJ,EASI,KAAK,CAAC,kCAAkC,GAAG,EAAtC,CAAL;AACJ,cAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAN,CAAhB,EACI,KAAK,CAAC,yCAAyC,GAAG,EAA7C,CAAL;AACJ,cAAI,OAAO,CAAC,IAAI,CAAC,eAAL,GAAuB,EAAxB,CAAX,EACI,KAAK,CACD,oBAAoBA,OAAK,CACrB,IAAI,CAAC,eADgB,CAExB,oBACG,OAAO,CAAC,IAAI,CAAC,eAAL,GAAuB,EAAxB,CACX,KAAK,GAAG,EALP,CAAL;AAOJ;AACH;;AACD,WAAK,OAAL;AACI,QAAA,IAAI,CAAC,SAAL,GAAiB,KAAK,CAAC,CAAD,CAAtB;AACA;;AACJ,WAAK,OAAL;AACI,QAAA,IAAI,CAAC,SAAL,GAAiB,KAAK,CAAC,CAAD,CAAtB;AACA;;AACJ,WAAK,MAAL;AACI,QAAA,IAAI,CAAC,YAAL,GAAoB,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAD,CAAN,CAAnC;AACA;;AACJ,WAAK,QAAL;AACI,YACI,CAAC,QAAD,EAAW,cAAX,EAA2B,YAA3B,EAAyC,OAAzC,CAAiD,KAAK,CAAC,CAAD,CAAtD,IACA,CAAC,CAFL,EAII,IAAI,CAAC,MAAL,GAAmB,KAAK,CAAC,CAAD,CAAxB,CAJJ,KAKK,KAAK,CAAC,gBAAD,CAAL;AACL;;AACJ,WAAK,OAAL;AACI,QAAA,IAAI,CAAC,KAAL,GAAa,UAAU,CAAC,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,IAAf,CAAoB,GAApB,CAAD,CAAvB;AACA;;AACJ,WAAK,MAAL;AAAa;AACT,gBAAM,IAAI,GAAG,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,MAAf,CAAsB,CAAC,IAAI,CAAC,IAAI,GAAL,IAAY,CAAC,IAAI,GAA5C,CAAb;AACA,UAAA,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,IAAL,CAAU,MAAV,CAAiB,IAAjB,CAAZ;AACA;AACH;;AACD;AACI,QAAA,KAAK,CAAC,6BAA6B,KAAK,CAAC,CAAD,CAAnC,CAAL;AACA;AA3DR;AA6DH;;AAED,WAAS,cAAT,CAAwB,IAAxB,EAAoC;AAChC,QAAI,IAAI,IAAI,SAAZ,EAAuB;AACvB,UAAM,KAAK,GAAG,QAAQ,CAAC,IAAD,CAAtB;AACA,QAAI,CAAC,KAAL,EAAY,OAAO,KAAK,CAAC,6BAA6B,IAA9B,CAAZ;AACZ,QACI,IAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,OAA9B,KACA,MAAM,CAAC,IAAI,CAAC,KAAN,CAAN,CAAmB,IAAnB,CAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,OAAhC,CAFJ,EAII,KAAK,CAAC,8CAAD,CAAL;AACJ,QAAI,KAAK,CAAC,MAAV,EAAkB,MAAM,GAAG,MAAM,CAAC,MAAP,CAAc,KAAK,CAAC,MAApB,CAAT;AAClB,UAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,KAAP,CAAxB;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,UAAZ,EACK,MADL,CACY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAL,CAAW,CAAX,CADlB,EAEK,OAFL,CAEa,CAAC,IAAA;AACN,YAAM,EAAE,GAAG,UAAU,CAAC,CAAD,CAArB;AACA,MAAA,EAAE,CAAC,OAAH,GAAa,IAAb;AACA,MAAA,IAAI,CAAC,KAAL,CAAW,CAAX,IAAgB,EAAhB;AACH,KANL;AAOA,UAAM,YAAY,GAAG,KAAK,CACtB,KAAK,CAAC,OAAN,CAAc,MAAd,CACI,GAAG,IACC,CAAC,IAAI,CAAC,OAAL,CAAa,IAAb,CACG,IAAI,IACA,IAAI,CAAC,IAAL,KAAc,GAAG,CAAC,IAAlB,IACA,IAAI,CAAC,UAAL,KAAoB,GAAG,CAAC,UAH/B,CAFT,CADsB,CAA1B;AAUA,IAAA,YAAY,CAAC,OAAb,CAAqB,GAAG,IAAK,GAAG,CAAC,OAAJ,GAAc,IAA3C;AACA,IAAA,IAAI,CAAC,OAAL,GAAe,CAAC,GAAG,IAAI,CAAC,OAAT,EAAkB,GAAG,YAArB,CAAf;AACA,QAAI,KAAK,CAAC,YAAV,EAAwB,IAAI,CAAC,YAAL,GAAoB,IAApB;AACxB,IAAA,IAAI,CAAC,OAAL,GAAe,KAAK,CAAC,OAAN,CAAc,MAAd,CAAqB,CAAC,IAAD,CAArB,CAAf;AACH;;AAED,WAAS,KAAT,CAAkB,CAAlB,EAAsB;AAClB,WAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,CAAf,CAAX,CAAP;AACH;;AAED,WAAS,KAAT,CAAe,GAAf,EAA0B;AACtB,QAAI,CAAC,GAAL,EAAU,GAAG,GAAG,cAAN;AACV,QAAI,MAAM,CAAC,IAAP,CAAY,CAAC,IAAI,CAAC,CAAC,IAAF,IAAU,MAAV,IAAoB,CAAC,CAAC,OAAF,IAAa,GAAlD,CAAJ,EAA4D;AAC5D,IAAA,MAAM,CAAC,IAAP,CAAY;AAAE,MAAA,IAAI,EAAE,QAAR;AAAkB,MAAA,IAAI,EAAE,MAAxB;AAAgC,MAAA,OAAO,EAAE;AAAzC,KAAZ;AACH;;AAED,WAAS,IAAT,CAAc,GAAd,EAAyB;AACrB,QAAI,IAAI,CAAC,SAAL,IAAkB,QAAtB,EAAgC,OADX,CACiB;;AACtC,QAAI,MAAM,CAAC,IAAP,CAAY,CAAC,IAAI,CAAC,CAAC,IAAF,IAAU,MAAV,IAAoB,CAAC,CAAC,OAAF,IAAa,GAAlD,CAAJ,EAA4D;AAC5D,IAAA,MAAM,CAAC,IAAP,CAAY;AAAE,MAAA,IAAI,EAAE,QAAR;AAAkB,MAAA,IAAI,EAAE,MAAxB;AAAgC,MAAA,OAAO,EAAE;AAAzC,KAAZ;AACH;;AAED,WAAS,aAAT,CAAuB,CAAvB,EAAgC;AAC5B,QAAI,CAAC,QAAQ,IAAR,CAAa,CAAb,CAAL,EAAsB,KAAK,CAAC,qBAAD,CAAL;AACtB,QAAI,CAAC,CAAC,MAAF,GAAW,EAAf,EAAmB,KAAK,CAAC,SAAS,CAAC,YAAX,CAAL;AACnB,WAAO,CAAP;AACH;;AAED,WAAS,oBAAT,CACI,EADJ,EACc;AAEV,QAAI,IAAI,CAAC,KAAL,CAAW,EAAX,CAAJ,EAAoB,OAAO,CAAC,IAAI,CAAC,KAAL,CAAW,EAAX,EAAe,OAAhB,EAAyB,EAAzB,EAA6B,CAA7B,CAAP;AACpB,QAAI,CAAC,EAAL,EAAS,KAAK,CAAC,qBAAD,CAAL;AACT,UAAM,GAAG,GAAG,EAAE,CAAC,OAAH,CAAW,KAAX,EAAkB,EAAlB,EAAsB,WAAtB,EAAZ;AACA,UAAM,CAAC,GAAG,uBAAuB,IAAvB,CAA4B,GAA5B,CAAV;;AACA,QAAI,CAAJ,EAAO;AACH,YAAM,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAD,CAAF,CAAvB;AACA,YAAM,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAD,CAAF,CAAvB;AACA,YAAM,GAAG,GAAG,CAAC,GAAG,CAAhB;AACA,UAAI,EAAE,GAAG,IAAI,CAAP,IAAY,GAAG,IAAI,EAAnB,IAAyB,GAAG,IAAI,EAAhC,IAAsC,GAAG,IAAI,EAA/C,CAAJ,EACI,KAAK,CAAC,eAAe,EAAE,aAAa,GAAG,OAAlC,CAAL;AACJ,UAAI,CAAC,IAAI,CAAL,IAAU,CAAC,CAAC,CAAD,CAAD,IAAQ,GAAtB,EACI,KAAK,CACD,eAAe,EAAE,yCADhB,CAAL;AAGJ,aAAO,CAAC,CAAC,CAAC,CAAC,CAAD,CAAD,IAAQ,GAAR,GAAc,CAAC,CAAf,GAAmB,CAApB,KAA0B,GAAG,IAAI,CAAjC,CAAD,EAAsC,GAAtC,EAA2C,CAA3C,CAAP;AACH;;AAED,YAAQ,GAAR;AACI,WAAK,MAAL;AACI,eAAO,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CAAP;;AACJ,WAAK,IAAL;AACA,WAAK,IAAL;AACA,WAAK,KAAL;AACA,WAAK,KAAL;AACA,WAAK,KAAL;AACA,WAAK,KAAL;AACA,WAAK,KAAL;AACA,WAAK,KAAL;AAAY;AACR,cAAI,EAAE,GAAG,aAAa,CAAC,GAAG,CAAC,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAD,CAAb,IAAwC,CAAjD;AACA,cAAI,GAAG,CAAC,CAAD,CAAH,IAAU,GAAd,EAAmB,EAAE,GAAG,CAAC,EAAN;AACnB,iBAAO,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,CAAP;AACH;;AACD,WAAK,KAAL;AACI,eAAO,CAAC,CAAD,EAAI,GAAJ,EAAS,IAAT,CAAP;;AACJ,WAAK,KAAL;AACI,eAAO,CAAC,CAAD,EAAI,GAAJ,EAAS,IAAT,CAAP;;AACJ,WAAK,KAAL;AACI,eAAO,CAAC,CAAD,EAAI,GAAJ,EAAS,IAAT,CAAP;;AACJ,WAAK,MAAL;AACI,eAAO,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,CAAP;;AACJ,WAAK,WAAL;AACI,eAAO,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CAAP;;AACJ,WAAK,OAAL;AACI,eAAO,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CAAP;;AACJ,WAAK,OAAL;AACA,WAAK,QAAL;AACA,WAAK,SAAL;AACI,eAAO,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CAAP;;AACJ;AAAS;AACL,gBAAM,CAAC,GAAG,gBAAgB,IAAhB,CAAqB,GAArB,CAAV;AACA,cAAI,CAAJ,EAAO,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAD,CAAF,CAAd,EAAsB,GAAtB,EAA2B,CAA3B,CAAP;AACP,UAAA,KAAK,CAAC,mBAAmB,EAAnB,GAAwB,GAAxB,GAA8B,GAA/B,CAAL;AACA,iBAAO,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CAAP;AACH;AApCL;AAsCH;;AAED,WAAS,iBAAT,CAA2B,IAA3B,EAAuC;AACnC,WAAQ,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,WAAL,EAAD,CAAlB,IAA2C,SAAlD;AACH;;AAED,WAAS,aAAT,CAAuB,IAAvB,EAAmC;AAC/B,QAAI,IAAI,KAAK,SAAT,IAAsB,IAAI,KAAK,IAAnC,EAAyC,OAAO,SAAP;AAEzC,QAAI,eAAe,CAAC,IAAD,CAAf,IAAyB,uBAAuB,CAAC,IAAD,CAApD,EACI,OAAO,IAAP;AACJ,IAAA,KAAK,CAAC,wBAAwB,IAAI,GAA7B,CAAL;AACA,WAAO,SAAP;AACH;;AAED,WAAS,YAAT,CAAsB,KAAtB,EAA8C;AAC1C,QAAI,UAAU,GAAG,CAAjB;;AAEA,SAAK,MAAM,CAAX,IAAgB,KAAK,CAAC,MAAtB,EAA8B;AAC1B,YAAM,EAAE,GAAG,UAAU,CAAC,CAAD,CAArB;AACA,UAAI,EAAE,IAAI,CAAV,EAAa;AACb,YAAM,GAAG,GAAG,EAAE,GAAG,CAAL,GAAS,CAAT,GAAa,EAAzB;AACA,UAAI,CAAC,QAAQ,IAAR,CAAa,CAAC,CAAC,IAAf,CAAD,IAAyB,UAAU,GAAG,GAAb,IAAoB,CAAjD,EACI,OAAO,mBACH,GAAG,GAAI,UAAU,GAAG,GACxB,mBAAmB,CAAC,CAAC,IAAI,EAFzB;AAGJ,MAAA,UAAU,IAAI,EAAd;AACH;;AAED,WAAO,IAAP;AACH;AACJ;;AAED,SAAS,MAAT,CAAmB,CAAnB,EAAoC;AAChC,QAAM,CAAC,GAAQ,EAAf;;AACA,OAAK,MAAM,CAAX,IAAgB,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAhB,EAAgC,CAAC,CAAC,IAAF,CAAO,CAAC,CAAC,CAAD,CAAR;;AAChC,SAAO,CAAP;AACH;;AAMD,SAAS,OAAT,CAAiB,IAAjB,EAA6B;AACzB,SAAO,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CACL,OADC,CACO,iBADP,EAC0B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,KAAa,CAAC,GAAG,GAAJ,GAAU,CADjD,EAEF,WAFE,EAAP;AAGH;;AAED,SAAS,OAAT,CAAiB,IAAjB,EAA6B;AACzB,SAAO,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CACL,OADC,CACO,iBADP,EAC0B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,KAAa,CAAC,GAAG,GAAJ,GAAU,CADjD,EAEF,WAFE,EAAP;AAGH;;AAED,SAAS,MAAT,CAAgB,KAAhB,EAAwC;AACpC,MAAI,CAAC,KAAK,CAAC,MAAX,EAAmB,OAAO,EAAP,CAAnB,KACK,OAAO,0BAAP;AACR;;AAED,SAAS,QAAT,CAAkB,EAAlB,EAAwC;AACpC,MAAI,EAAE,IAAI,CAAN,IAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,OAAb,CAAqB,IAAI,CAAC,GAAL,CAAS,EAAT,CAArB,IAAqC,CAApD,EAAuD,OAAO,OAAP;AACvD,MAAI,EAAE,GAAG,CAAT,EAAY,OAAO,MAAM,CAAC,EAAD,GAAM,CAAC,IAApB,CAAZ,KACK,OAAO,OAAO,EAAE,GAAG,CAAC,IAApB;AACR;;AAED,SAAS,aAAT,CAAuB,EAAvB,EAA6C;AACzC,MAAI,EAAE,IAAI,CAAN,IAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,OAAb,CAAqB,IAAI,CAAC,GAAL,CAAS,EAAT,CAArB,IAAqC,CAApD,EAAuD,OAAO,OAAP;;AACvD,UAAQ,EAAR;AACI,SAAK,CAAC,CAAN;AACI,aAAO,OAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAP;;AACJ,SAAK,CAAC,CAAN;AACI,aAAO,OAAP;;AACJ,SAAK,CAAL;AACI,aAAO,QAAP;;AACJ,SAAK,CAAC,CAAN;AACI,aAAO,KAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAP;AAZR;;AAcA,SAAO,YAAY,EAAE,GAArB;AACH;;AAED,SAAS,aAAT,CAAuB,EAAvB,EAA6C;AACzC,MAAI,EAAE,IAAI,CAAV,EAAa,OAAO,OAAP;AACb,MAAI,EAAE,GAAG,CAAT,EAAY,OAAO,IAAI,CAAC,EAAD,GAAM,CAAC,EAAlB,CAAZ,KACK,OAAO,IAAI,EAAE,GAAG,CAAC,EAAjB;AACR;;AAED,SAASC,YAAT,CAAoB,CAApB,EAAwC;AACpC,SAAO,CAAC,IAAI,IAAL,IAAa,CAAC,IAAI,IAAlB,IAA0B,CAAC,IAAI,OAAtC;AACH;;AAED,SAASD,OAAT,CAAe,CAAf,EAAwB;AACpB,MAAI,CAAC,KAAK,SAAV,EAAqB,OAAO,EAAP;AACrB,MAAI,CAAC,GAAG,CAAR,EAAW,OAAO,MAAMA,OAAK,CAAC,CAAD,CAAlB;AACX,SAAO,OAAO,CAAC,CAAC,QAAF,CAAW,EAAX,CAAd;AACH;;AAED,SAAS,QAAT,CAAkB,CAAlB,EAAwC;AACpC,MAAI,CAAC,CAAC,CAAC,IAAP,EAAa,OAAO,EAAP,CAAb,KACK,OAAOE,YAAU,CAAC,CAAC,CAAC,IAAH,CAAVA,GAAqB,GAA5B;AACR;;AAED,SAASA,YAAT,CAAoB,CAApB,EAAkC;AAC9B,UAAQ,CAAR;AACI,SAAK,IAAL;AACI,aAAO,IAAP;;AACJ,SAAK,GAAL;AACI,aAAO,IAAP;;AACJ,SAAK,GAAL;AACI,aAAO,OAAP;;AACJ;AACI,aAAO,CAAP;AARR;AAUH;;AAED,SAAS,QAAT,CAAkB,IAAlB,EAA0C;AACtC,QAAM,CAAC,GAAG,CACN,8BAA8B,IAAI,CAAC,IAD7B,EAEN,qCAFM,CAAV;AAKA,MAAI,IAAI,GAAG,QAAQ,OAAO,CAAC,IAAI,CAAC,SAAN,CAAf,GAAkC,GAA7C;AAEA,MAAI,IAAI,CAAC,OAAL,CAAa,CAAb,KAAmB,GAAvB,EAA4B,IAAI,GAAG,KAAP;AAE5B,MAAI,IAAI,CAAC,OAAL,CAAa,CAAb,KAAmB,GAAvB,EACI,CAAC,CAAC,IAAF,CACI,qBAAqB,OAAO,CAAC,IAAI,CAAC,SAAN,CAAgB,YAAYF,OAAK,CACzD,IAAI,CAAC,eADoD,CAE5D,GAHL;;AAKJ,OAAK,MAAM,GAAX,IAAkB,IAAI,CAAC,SAAvB,EAAkC;AAC9B,UAAM;AAAE,MAAA,KAAF;AAAS,MAAA;AAAT,QAAiB,IAAI,CAAC,SAAL,CAAe,GAAf,CAAvB;AACA,IAAA,CAAC,CAAC,IAAF,CACI,OAAO,OAAO,CAAC,GAAD,CAAK,YACf,GAAG,GAAG,KAAK,CAAC,QAAN,EAAH,GAAsBA,OAAK,CAAC,KAAD,CAClC,KAHJ;AAKH;;AACD,OAAK,MAAM,EAAX,IAAiB,MAAM,CAAC,IAAI,CAAC,KAAN,CAAN,CAAmB,MAAnB,CAA0B,EAAE,IAAI,CAAC,EAAE,CAAC,OAApC,CAAjB,EAA+D;AAC3D,UAAM,MAAM,GAAG,IAAI,GAAG,OAAO,CAAC,EAAE,CAAC,IAAJ,CAA7B;;AACA,SAAK,MAAM,CAAX,IAAgB,MAAM,CAAC,IAAP,CAAY,EAAE,CAAC,OAAf,CAAhB,EACI,CAAC,CAAC,IAAF,CAAO,IAAI,MAAM,IAAI,OAAO,CAAC,CAAD,CAAG,YAAYA,OAAK,CAAC,EAAE,CAAC,OAAH,CAAW,CAAX,CAAD,CAAe,GAA/D;AACP;;AACD,OAAK,MAAM,GAAX,IAAkB,IAAI,CAAC,OAAvB,EAAgC;AAC5B,QAAI,GAAG,CAAC,OAAR,EAAiB;;AACjB,QACI,CAAC,GAAG,CAAC,SAAL,IACA,GAAG,CAAC,IAAJ,IAAY,cADZ,IAEA,GAAG,CAAC,IAAJ,IAAY,aAHhB,EAIE;AACE,UAAI,KAAK,GAAG,KAAZ;AACA,UAAIC,YAAU,CAAC,GAAG,CAAC,IAAL,CAAd,EAA0B,KAAK,GAAG,KAAR,CAA1B,KACK,IAAI,GAAG,CAAC,IAAJ,IAAY,OAAhB,EAAyB,KAAK,GAAG,IAAR,CAAzB,KACA,IACD,GAAG,CAAC,IAAJ,IAAY,mBAAZ,IACA,GAAG,CAAC,IAAJ,IAAY,kBAFX,EAID,KAAK,GAAG,MAAR;AACJ,UAAI,GAAG,GAAGD,OAAK,CAAC,GAAG,CAAC,UAAL,CAAf;;AACA,UAAI,GAAG,CAAC,cAAR,EAAwB;;AAEpB,QAAA,GAAG,GAAG,QAAQ,KAAR,GAAgB,GAAhB,GAAsB,OAAO,CAAC,GAAG,CAAC,cAAL,CAAnC;AACH;;AACD,YAAM,IAAI,GAAG,IAAI,GAAG,KAAP,GAAe,GAAf,GAAqB,OAAO,CAAC,GAAG,CAAC,IAAL,CAAzC;AACA,UAAI,IAAI,IAAI,GAAZ,EAAiB,CAAC,CAAC,IAAF,CAAO,IAAI,IAAI,YAAY,GAAG,GAA9B;AACpB;AACJ;;AACD,SAAO,CAAC,CAAC,IAAF,CAAO,IAAP,CAAP;AACH;;AAED,SAAS,GAAT,CAAa,IAAb,EAAqC;AACjC,MAAI,CAAC,GAAG,wCAAwC,IAAI,CAAC,IAA7C,GAAoD,IAA5D;AACA,QAAM,KAAK,GAAG,gBAAgB,OAAO,CAAC,IAAI,CAAC,SAAN,CAAgB,IAArD;AACA,EAAA,CAAC,IAAI,WAAW,KAAK,IAArB;AACA,EAAA,CAAC,IAAI,WAAW,KAAK,MAArB;AAEA,MAAI,IAAI,GAAG,QAAQ,OAAO,CAAC,IAAI,CAAC,SAAN,CAAf,GAAkC,GAA7C;AAEA,MAAI,IAAI,CAAC,OAAL,CAAa,CAAb,KAAmB,GAAvB,EAA4B,IAAI,GAAG,KAAP;AAE5B,MAAI,IAAI,CAAC,OAAL,CAAa,CAAb,KAAmB,GAAvB,EACI,CAAC,IAAI,8BAA8B,OAAO,CAAC,IAAI,CAAC,SAAN,CAAgB,KAAKA,OAAK,CAChE,IAAI,CAAC,eAD2D,CAEnE,IAFD;;AAIJ,OAAK,MAAM,GAAX,IAAkB,IAAI,CAAC,SAAvB,EAAkC;AAC9B,UAAM;AAAE,MAAA,KAAF;AAAS,MAAA;AAAT,QAAiB,IAAI,CAAC,SAAL,CAAe,GAAf,CAAvB;AACA,IAAA,CAAC,IAAI,WAAW,IAAI,GAAG,OAAO,CAAC,GAAD,CAAK,IAC/B,GAAG,GAAGA,OAAK,CAAC,KAAD,CAAR,GAAkB,KAAK,CAAC,QAAN,EACzB,IAFA;AAGH;;AACD,OAAK,MAAM,EAAX,IAAiB,MAAM,CAAC,IAAI,CAAC,KAAN,CAAN,CAAmB,MAAnB,CAA0B,EAAE,IAAI,CAAC,EAAE,CAAC,OAApC,CAAjB,EAA+D;AAC3D,UAAM,MAAM,GAAG,IAAI,GAAG,OAAO,CAAC,EAAE,CAAC,IAAJ,CAA7B;AACA,IAAA,CAAC,IAAI,aAAa,EAAE,CAAC,IAAI,KAAK,QAAQ,CAAC,EAAE,CAAC,OAAJ,CAAY,KAAlD;;AACA,SAAK,MAAM,CAAX,IAAgB,MAAM,CAAC,IAAP,CAAY,EAAE,CAAC,OAAf,CAAhB,EACI,CAAC,IACG,aACA,MADA,GAEA,GAFA,GAGA,OAAO,CAAC,CAAD,CAHP,GAIA,GAJA,GAKAA,OAAK,CAAC,EAAE,CAAC,OAAH,CAAW,CAAX,CAAD,CALL,GAMA,IAPJ;AAQP;;AACD,OAAK,MAAM,GAAX,IAAkB,IAAI,CAAC,OAAvB,EAAgC;AAC5B,QAAI,GAAG,CAAC,OAAR,EAAiB;AAEjB,UAAM,GAAG,GAAG,UAAU,CAAC,GAAD,CAAtB;AACA,IAAA,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,OAAL,CAAhB;;AAEA,QACI,CAAC,GAAG,CAAC,SAAL,IACA,GAAG,CAAC,IAAJ,IAAY,cADZ,IAEA,GAAG,CAAC,IAAJ,IAAY,aAHhB,EAIE;AACE,UAAI,KAAK,GAAG,KAAZ;AACA,UAAIC,YAAU,CAAC,GAAG,CAAC,IAAL,CAAd,EAA0B,KAAK,GAAG,KAAR,CAA1B,KACK,IAAI,GAAG,CAAC,IAAJ,IAAY,OAAhB,EAAyB,KAAK,GAAG,IAAR,CAAzB,KACA,IACD,GAAG,CAAC,IAAJ,IAAY,mBAAZ,IACA,GAAG,CAAC,IAAJ,IAAY,kBAFX,EAID,KAAK,GAAG,MAAR;AACJ,UAAI,GAAG,GAAGD,OAAK,CAAC,GAAG,CAAC,UAAL,CAAf;AACA,UAAI,GAAG,CAAC,cAAR,EACI,GAAG,GAAG,QAAQ,KAAR,GAAgB,GAAhB,GAAsB,OAAO,CAAC,GAAG,CAAC,cAAL,CAAnC;AACJ,YAAM,IAAI,GAAG,IAAI,GAAG,KAAP,GAAe,GAAf,GAAqB,OAAO,CAAC,GAAG,CAAC,IAAL,CAAzC;AACA,UAAI,IAAI,IAAI,GAAZ,EAAiB,CAAC,IAAI,WAAW,IAAI,IAAI,GAAG,IAA3B;AACpB;;AAED,UAAM,UAAU,GACZ,GAAG,CAAC,IAAJ,IAAY,kBAAZ,IAAkC,GAAG,CAAC,IAAJ,IAAY,mBADlD;;AAGA,QAAI,GAAG,CAAC,WAAJ,IAAmB,UAAvB,EAAmC;AAC/B,UAAI,KAAK,GACL,QAAQ,OAAO,CAAC,IAAI,CAAC,SAAN,CAAf,GAAkC,GAAlC,GAAwC,OAAO,CAAC,GAAG,CAAC,IAAL,CADnD;AAEA,UAAI,GAAG,CAAC,IAAJ,IAAY,QAAhB,EAA0B,KAAK,IAAI,SAAT;AAC1B,MAAA,CAAC,IAAI,kBAAkB,KAAK,MAA5B;;AACA,UAAI,UAAJ,EAAgB;AACZ,QAAA,CAAC,IAAI,+BAA+BA,OAAK,CAAC,GAAG,CAAC,UAAL,CAAgB,IAAzD;AACH;;AACD,UAAI,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,MAAJ,CAAW,MAA/B,EAAuC,EAAE,CAAzC,EAA4C;AACxC,cAAM,CAAC,GAAG,GAAG,CAAC,MAAJ,CAAW,CAAX,CAAV;AACA,YAAI,GAAG,GAAG,EAAV;AACA,cAAM,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAH,CAApB;AACA,cAAM,EAAE,GAAG,UAAU,CAAC,CAAD,CAArB;AACA,YAAI,CAAC,CAAC,IAAF,IAAU,QAAV,IAAsB,CAAC,CAAC,IAAF,IAAU,SAApC,EACI,GAAG,GAAG,QAAQ,CAAC,CAAC,IAAI,IAAI,EAAE,GAA1B,CADJ,KAEK,IAAI,GAAG,IAAI,OAAX,EAAoB,GAAG,GAAG,WAAW,CAAC,CAAC,IAAI,IAAI,EAAE,GAA7B,CAApB,KACA,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,IAAI,EAAtB,CARmC;;AAUxC,YAAI,CAAC,CAAC,YAAF,IAAkB,CAAC,IAAI,GAAG,CAAC,MAAJ,CAAW,MAAX,GAAoB,CAA/C,EAAkD,GAAG,IAAI,KAAP;AAClD,QAAA,GAAG,IAAI,GAAP;AACA,YAAI,CAAC,CAAC,CAAC,YAAH,IAAmB,CAAC,CAAC,IAAF,IAAU,OAAjC,EACI,GAAG,IAAI,UAAU,QAAQ,CAAC,CAAD,CAAlB,GAAwB,CAAC,CAAC,IAAjC,CADJ,KAEK,IAAI,CAAC,CAAC,IAAN,EAAY,GAAG,IAAI,SAASE,YAAU,CAAC,CAAC,CAAC,IAAH,CAA1B;AACjB,QAAA,CAAC,IAAI,SAAS,SAAT,GAAqB,GAArB,GAA2B,IAAhC;AACA,YAAI,CAAC,CAAC,IAAF,IAAU,SAAd,EAAyB,SAAS,GAAG,KAAZ;AAC5B;;AACD,MAAA,CAAC,IAAI,IAAI,MAAM,CAAC,GAAD,CAAK,IAAI,KAAK,SAA7B;AACH;AACJ;;AACD,EAAA,CAAC,IAAI,YAAL;AACA,SAAO,CAAP;AACH;;SAEe,SAAS,MAAY;AACjC,MAAI,CAAC,IAAL,EAAW,OAAO,IAAP;AACX,SACI,IAAI,CAAC,CAAD,CAAJ,CAAQ,WAAR,KACA,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,OAAd,CAAsB,eAAtB,EAAuC,CAAC,CAAD,EAAI,CAAJ,KAAU,CAAC,CAAC,WAAF,EAAjD,CAFJ;AAIH;;SAEe,WAAW,MAAY;AACnC,MAAI,CAAC,IAAL,EAAW,OAAO,IAAP;AACX,SAAO,IAAI,CAAC,CAAD,CAAJ,CAAQ,WAAR,KAAwB,IAAI,CAAC,KAAL,CAAW,CAAX,CAA/B;AACH;;AAED,SAAS,UAAT,CAAoB,IAApB,EAAgC;AAC5B,EAAA,IAAI,GAAG,QAAQ,CAAC,IAAD,CAAf;AACA,MAAI,EAAC,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,MAAP,CAAJ,EAAmB,OAAO,IAAP;AACnB,SAAO,IAAI,CAAC,CAAD,CAAJ,CAAQ,WAAR,KAAwB,IAAI,CAAC,KAAL,CAAW,CAAX,CAA/B;AACH;;SAEe,QAAQ,MAAY;AAChC,SAAO,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,OAAN,CAAc,iBAAd,EAAiC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,KAAa,CAAC,GAAG,GAAJ,GAAU,CAAxD,CAAP;AACH;;SAEe,QAAQ,MAAY;AAChC,MAAI,CAAC,IAAL,EAAW,OAAO,IAAP;AACX,SAAO,OAAO,CAAC,IAAI,CAAC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAD,CAAP,CACF,OADE,CACM,UADN,EACkB,GADlB,EAEF,WAFE,EAAP;AAGH;;SAEe,SAAS,MAAY;AACjC,SAAO,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CACL,OADC,CACO,iBADP,EAC0B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,KAAa,CAAC,GAAG,GAAJ,GAAU,CADjD,EAEF,OAFE,CAEM,QAFN,EAEgB,GAFhB,CAAP;AAGH;;AAED,SAAS,UAAT,CAAoB,GAApB,EAA0C;AACtC,MAAI,OAAO,GAAG,EAAd;AAEA,MAAI,QAAQ,GAAG,EAAf;AACA,MAAI,WAAW,GAAG,KAAlB;;AACA,MAAI,GAAG,CAAC,MAAJ,CAAW,MAAX,IAAqB,CAAzB,EAA4B;AACxB,QAAI,GAAG,CAAC,IAAJ,IAAY,OAAhB,EAAyB,QAAQ,GAAG,SAAX;AAC5B,GAFD,MAEO,IAAI,GAAG,CAAC,MAAJ,CAAW,MAAX,IAAqB,CAArB,IAA0B,CAAC,GAAG,CAAC,MAAJ,CAAW,CAAX,EAAc,YAA7C,EAA2D;AAC9D,UAAM,EAAE,GAAG,GAAG,CAAC,MAAJ,CAAW,CAAX,CAAX;AACA,IAAA,QAAQ,GAAG,QAAQ,CAAC,EAAE,CAAC,OAAJ,CAAnB;AACA,QAAI,CAAC,EAAE,CAAC,YAAR,EAAsB,QAAQ,GAAG,EAAE,CAAC,IAAH,GAAU,IAAV,GAAiB,QAAjB,GAA4B,GAAvC;AACtB,IAAA,QAAQ,GAAG,QAAQ,CAAC,EAAD,CAAR,GAAe,QAA1B;AACA,QAAI,EAAE,CAAC,IAAH,IAAW,GAAf,EAAoB,QAAQ,GAAG,EAAE,CAAC,IAAH,GAAU,GAAV,GAAgB,QAA3B;AACvB,GANM,MAMA;AACH,IAAA,WAAW,GAAG,IAAd;AACH;;AAED,MAAI,GAAG,CAAC,MAAJ,CAAW,MAAX,IAAqB,CAAzB,EAA4B;AACxB,QAAID,YAAU,CAAC,GAAG,CAAC,IAAL,CAAd,EAA0B;AACtB,UAAI,IAAI,GAAG,EAAX;AACA,UAAI,GAAG,CAAC,IAAJ,IAAY,IAAhB,EAAsB,IAAI,GAAG,WAAP,CAAtB,KACK,IAAI,GAAG,CAAC,IAAJ,IAAY,OAAhB,EAAyB,IAAI,GAAG,UAAP,CAAzB,KACA,IAAI,GAAG,YAAP;AACL,UAAI,QAAJ,EAAc,QAAQ,GAAG,IAAI,GAAG,GAAP,GAAa,QAAxB,CAAd,KACK,QAAQ,GAAG,IAAX;AACR,KAPD,MAOO,IAAI,QAAJ,EAAc;AACjB,MAAA,QAAQ,GAAG,eAAe,QAA1B;AACH;AACJ;;AAED,MAAI,GAAG,CAAC,IAAJ,IAAY,QAAZ,IAAwB,GAAG,CAAC,SAAhC,EAA2C;AACvC,IAAA,OAAO,IAAI,aAAa,QAAb,GAAwB,IAAnC;AACH,GAFD,MAEO;AACH,QAAI,GAAG,CAAC,WAAR,EAAqB;AACjB,UAAI,IAAI,GAAG,GAAG,CAAC,WAAJ,CAAgB,OAAhB,CAAwB,UAAxB,EAAoC,EAApC,CAAX;AACA,UAAI,QAAJ,EAAc,IAAI,GAAG,QAAQ,GAAG,IAAX,GAAkB,IAAzB;AACd,MAAA,OAAO,GAAG,IAAI,GAAG,IAAP,GAAc,OAAxB;AACH;AACJ;;AAED,SAAO;AACH,IAAA,OADG;AAEH,IAAA;AAFG,GAAP;AAIH;;AAED,SAAS,WAAT,CAAqB,OAArB,EAAoC;AAChC,SACI,eACA,OAAO,CAAC,OAAR,CAAgB,MAAhB,EAAwB,EAAxB,EAA4B,OAA5B,CAAoC,KAApC,EAA2C,OAA3C,CADA,GAEA,SAHJ;AAKH;;AAED,SAAS,WAAT,CAAqB,IAArB,EAAiC;AAC7B,MAAI,CAAC,IAAL,EAAW,OAAO,IAAP;AACX,SAAO;;EAET,IAAI,CAAC,OAAL,CAAa,MAAb,EAAqB,EAArB,EAAyB,OAAzB,CAAiC,MAAjC,EAAyC,EAAzC,CAA4C;;CAF1C;AAKH;;MAEY,2BAA2B,GAAG;;AAC3C,SAAS,kBAAT,CACI,IADJ,EAEI,GAFJ,EAGI,QAHJ,EAII,WAJJ,EAIyB;AAErB,QAAM,EAAE,GAAG,UAAU,CAAC,GAAD,CAArB;AACA,QAAM,MAAM,GAAG,EAAE,GAAG,IAAI,EAAE,GAAT,GAAe,EAAhC;AACA,MAAI,MAAM,GAAG,QAAb;AACA,MAAI,GAAG,GAAG,EAAV;;AACA,MAAI,qBAAqB,IAArB,CAA0B,GAAG,CAAC,IAA9B,KAAuC,KAAK,EAA5C,IAAkD,EAAE,IAAI,CAA5D,EAA+D;AAC3D,IAAA,GAAG,GAAG,GAAG,CAAC,IAAV;AACH,GAFD,MAEO,IAAI,cAAc,IAAd,CAAmB,GAAG,CAAC,IAAvB,CAAJ,EAAkC;AACrC,IAAA,GAAG,GAAG,MAAM,MAAZ;AACH,GAFM,MAEA,IAAI,IAAI,CAAC,KAAL,CAAW,GAAG,CAAC,IAAf,CAAJ,EAA0B;AAC7B,IAAA,GAAG,GAAG,aAAa,CAAC,IAAI,CAAC,KAAL,CAAW,GAAG,CAAC,IAAf,EAAqB,OAAtB,CAAnB;AACA,IAAA,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,SAAN,CAAV,GAA6B,UAAU,CAAC,GAAG,CAAC,IAAL,CAAhD;AACA,QAAI,QAAJ,EAAc,MAAM,GAAG,2BAA2B,GAAG,GAA9B,GAAoC,MAA7C;AACjB,GAJM,MAIA;AACH,YAAQ,GAAG,CAAC,IAAZ;AACI,WAAK,QAAL;AACI,QAAA,GAAG,GAAG,MAAM,MAAZ;AACA,QAAA,MAAM,GAAG,QAAT;AACA;;AACJ,WAAK,OAAL;AACI,QAAA,GAAG,GAAG,MAAM,MAAZ;AACA;;AACJ,WAAK,SAAL;AACI,QAAA,GAAG,GAAG,GAAN;AACA,QAAA,MAAM,GAAG,QAAT;AACA;;AACJ,WAAK,OAAL;AACI,QAAA,GAAG,GAAG,MAAN;AACA;;AACJ,WAAK,WAAL;AACI,QAAA,GAAG,GAAG,KAAN;AACA;;AACJ,WAAK,MAAL;AACI,QAAA,GAAG,GAAG,OAAN;AACA;;AACJ,WAAK,MAAL;;AAEI,QAAA,GAAG,GAAG,IAAN;AACA,YAAI,WAAJ,EAAiB,MAAM,GAAG,SAAT;AACjB;;AACJ;AACI,eAAO,IAAP;AA3BR;AA6BH;;AAED,MAAI,MAAM,IAAI,QAAV,IAAsB,GAAtB,IAA6B,GAAG,CAAC,CAAD,CAAH,IAAU,GAA3C,EAAgD,MAAM,GAAG,QAAT;AAChD,SAAO;AAAE,IAAA,GAAF;AAAO,IAAA;AAAP,GAAP;AACH;AAED;;;;;;;SAKgB,WACZ,OACA,KACA,aAAqB;;;AAErB,MAAI,GAAG,CAAC,MAAJ,IAAc,EAAC,CAAA,EAAA,GAAA,GAAG,CAAC,MAAJ,MAAU,IAAV,IAAU,EAAA,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAU,EAAA,CAAE,MAAb,CAAlB,EAAuC,OAAO,SAAP;AAEvC,QAAM,GAAG,GAAa,EAAtB;;AACA,OAAK,MAAM,GAAX,IAAkB,GAAG,CAAC,MAAtB,EAA8B;AAC1B,QAAI,GAAG,CAAC,YAAR,EAAsB,GAAG,CAAC,IAAJ,CAAS,IAAT;AACtB,UAAM,EAAE,GAAG,kBAAkB,CAAC,KAAD,EAAQ,GAAR,EAAa,KAAb,EAAoB,WAApB,CAA7B;AACA,QAAI,CAAC,EAAL,EAAS,OAAO,SAAP;AACT,IAAA,GAAG,CAAC,IAAJ,CAAS,EAAE,CAAC,GAAZ;AACH;;AAED,SAAO,GAAG,CAAC,IAAJ,CAAS,GAAT,CAAP;AACH;;SAEe,SACZ,MACA,KACA,SAIC;AAED,QAAM;AACF,IAAA,QAAQ,GAAG,KADT;AAEF,IAAA,WAAW,GAAG,KAFZ;AAGF,IAAA,OAAO,GAAG;AAHR,MAIF,OAAO,IAAI,EAJf;AAKA,QAAM;AAAE,IAAA;AAAF,MAAW,GAAjB;AACA,QAAM,IAAI,GAAa,EAAvB;AACA,QAAM,KAAK,GAAa,EAAxB;AACA,MAAI,GAAG,GAAG,EAAV;AACA,MAAI,OAAJ;AACA,MAAI,KAAJ;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,MAAJ,CAAW,MAA/B,EAAuC,EAAE,CAAzC,EAA4C;AACxC,UAAM,GAAG,GAAG,GAAG,CAAC,MAAJ,CAAW,CAAX,CAAZ;AACA,QAAI,OAAO,GAAG,EAAd;;AACA,QAAI,GAAG,CAAC,YAAR,EAAsB;AAClB,UAAI,CAAC,IAAI,GAAG,CAAC,MAAJ,CAAW,MAAX,GAAoB,CAA7B,EAAgC;AAC5B,QAAA,OAAO,GAAG,IAAV;AACH,OAFD,MAEO;AACH,QAAA,GAAG,IAAI,KAAP;AACA,QAAA,OAAO,GAAG,EAAV;AACA,QAAA,KAAK,GAAG,EAAR;AACA,QAAA,IAAI,CAAC,IAAL,CAAU,MAAV;AACH;AACJ;;AACD,UAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAJ,IAAY,GAAZ,GAAkB,GAAG,CAAC,IAAtB,GAA6B,GAAG,CAAC,IAAlC,CAAxB;AACA,UAAM,EAAE,GAAG,kBAAkB,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,WAAtB,CAA7B;;AACA,QAAI,CAAC,EAAD,IAAO,qBAAqB,IAArB,CAA0B,GAAG,CAAC,IAA9B,CAAX,EAAgD;AAC5C,UAAI,CAAC,EAAL,EACI,OAAO,CAAC,GAAR,CACI,GAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,4BAA4B,GAAG,CAAC,IAAI,GAD/D;AAGJ,MAAA,GAAG,IAAI,KAAK,UAAU,CAAC,GAAD,CAAK,IAA3B;AACH,KAND,MAMO;AACH,MAAA,GAAG,IAAI,EAAE,CAAC,GAAH,GAAS,OAAT,GAAmB,GAA1B;AACA,UAAI,EAAE,GAAG,EAAE,CAAC,MAAZ;AACA,UAAI,EAAE,IAAI,QAAN,IAAkB,CAAC,QAAvB,EAAiC,EAAE,GAAG,YAAL;AACjC,MAAA,EAAE,IAAI,OAAN;;AACA,UAAI,OAAJ,EAAa;AACT,QAAA,OAAO,CAAC,IAAR,CAAa,OAAb;AACA,QAAA,KAAK,CAAC,IAAN,CAAW,EAAX;AACH,OAHD,MAGO;AACH,QAAA,IAAI,CAAC,IAAL,CAAU,OAAV;AACA,QAAA,KAAK,CAAC,IAAN,CAAW,EAAX;AACH;AACJ;AACJ;;AAED,EAAA,GAAG,GAAG,GAAG,CAAC,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAN;AAEA,MAAI,KAAJ,EAAW,KAAK,CAAC,IAAN,CAAW,OAAO,KAAK,CAAC,IAAN,CAAW,IAAX,CAAP,GAA0B,MAArC;AAEX,QAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAL,CAAxB;AACA,MAAI,OAAO,GAAG,EAAd;;AACA,MAAI,OAAJ,EAAa;AACT,QAAI,IAAI,KAAK,SAAb,EAAwB;AACpB,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,EAAE,CAAnC,EACI,OAAO,IAAI,SAAS,IAAI,CAAC,CAAD,CAAG,KAAK,KAAK,CAAC,CAAD,CAAG,UAAxC;;AACJ,MAAA,OAAO,IAAI,oCAAoC,UAAU,CACrD,IAAI,CAAC,SADgD,CAExD,OAAO,UAAU,CAAC,OAAD,CAAS,MAAM,IAAI,CAAC,IAAL,CAAU,IAAV,CAAe,MAFhD;AAGH,KAND,MAMO,IAAIA,YAAU,CAAC,IAAD,CAAd,EAAsB;AACzB,MAAA,OAAO,IACH,yEADJ;AAEA,MAAA,OAAO,IAAI,SAAS,OAAO,0BAA0B,UAAU,CAC3D,IAAI,CAAC,SADsD,CAE9D,OAAO,UAAU,CAAC,OAAD,CAAS,KAF3B;AAGA,MAAA,OAAO,IAAI,UAAU,IAAI,CAAC,IAAL,CAAU,IAAV,CAAe,QAAQ,KAAK,CAAC,IAAN,CACxC,IADwC,CAE3C,OAAO,OAAO,qBAFf;;AAGA,UAAI,IAAI,KAAK,IAAb,EAAmB;AACf,QAAA,OAAO,IAAI,UAAX;AACA,QAAA,OAAO,IAAI,SAAS,OAAO,2BAA2B,IAAI,CAAC,IAAL,CAClD,IADkD,CAErD,MAFD;AAGH;AACJ;AACJ,GAvBD,MAuBO;AACH,IAAA,OAAO,IAAI,UAAU,IAAI,CAAC,IAAL,CAAU,IAAV,CAAe,iBAAiB,KAAK,CAAC,IAAN,CACjD,IADiD,CAEpD,YAAY,GAAG,MAFhB;AAGH;;AACD,MAAI,OAAJ,EAAa,OAAO,IAAI,UAAU,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,eAAvC;AAEb,EAAA,OAAO,GAAG,OAAO,CAAC,OAAR,CAAgB,MAAhB,EAAwB,EAAxB,CAAV;AAEA,SAAO;AACH,IAAA,OADG;AAEH,IAAA,KAAK,EAAE,IAFJ;AAGH,IAAA,KAAK,EAAE;AAHJ,GAAP;AAKH;;AAED,SAAS,UAAT,CAAoB,GAApB,EAA4C;AACxC,SAAO,IAAI,CAAC,GAAL,CAAS,GAAG,CAAC,OAAb,CAAP;AACH;;AAED,SAAS,YAAT,CAAsB,IAAtB,EAAgD,QAAhD,EAA6E;AACzE,QAAM,GAAG,GAAG,QAAQ,KAAK,KAAzB;AACA,QAAM,MAAM,GAAG,QAAQ,KAAK,IAA5B;AACA,QAAM,YAAY,GAAG,GAAG,IAAI,MAA5B;AAEA,QAAM,MAAM,GAAG,YAAY,GAAG,MAAH,GAAY,EAAvC;AACA,QAAM,OAAO,GAAG,MAAM,GAAG,MAAzB;AACA,QAAM,QAAQ,GAAG,MAAM,GAAG,OAAH,GAAa,EAApC;AACA,QAAM,KAAK,GAAG,MAAM,GAAG,QAAH,GAAc,EAAlC;AACA,QAAM,MAAM,GAAG,MAAM,GACf,MAAM,GAAG,aADM,GAEf,GAAG,GACH,MAAM,GAAG,mBADN,GAEH,aAJN;AAKA,QAAM,QAAQ,GAAG,MAAM,GAAG,QAAH,GAAc,QAArC;AACA,QAAM,IAAI,GAAG,MAAM,GAAG,GAAH,GAAS,EAA5B;AACA,MAAI,CAAC,GAAG,YAAY,GACd,aACI,MAAM,GACA,UAAU,CAAC,2BAAD,CADV,GAEA,2BACV,MALc,GAMd,EANN;AAQA,EAAA,CAAC,IAAI,MAAM,GAAG,cAAT,GAA0B,IAAI,CAAC,IAA/B,GAAsC,IAA3C;;AACA,MAAI,MAAJ,EAAY;AACR,IAAA,CAAC,IAAI,GAAG,MAAM,uBAAuB,UAAU,CAC3C,IAAI,CAAC,SADsC,CAE9C,cAAc,MAAM,KAFrB;AAGH;;AACD,MAAI,IAAI,CAAC,OAAL,CAAa,CAAb,KAAmB,GAAvB,EAA4B;AACxB,UAAM,IAAI,GAAG,MAAM,GACb,cADa,GAEb,OAAO,OAAO,CAAC,IAAI,CAAC,SAAN,CAAP,CAAwB,iBAAxB,EAA2C,EAFxD;AAGA,IAAA,CAAC,IACG,MAAM,IACL,MAAM,GAAG,MAAH,GAAY,EADb,CAAN,GAEA,GAAG,QAAQ,UAAU,QAAQ,GAAG,IAAI,MAAMD,OAAK,CAC3C,IAAI,CAAC,eADsC,CAE9C,GAAG,IAAI,IALZ;AAMH;;AACD,QAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,SAAN,CAAvB;;AACA,OAAK,MAAM,GAAX,IAAkB,IAAI,CAAC,SAAvB,EAAkC;AAC9B,UAAM;AAAE,MAAA,KAAF;AAAS,MAAA;AAAT,QAAiB,IAAI,CAAC,SAAL,CAAe,GAAf,CAAvB;AACA,IAAA,CAAC,IACG,MAAM,IACL,MAAM,GAAG,MAAH,GAAY,EADb,CAAN,GAEA,GAAG,QAAQ,UAAU,GAAG,GAAG,KAAH,GAAW,QAAQ,GACvC,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAD,CAAT,CAAb,GAA+B,OAAO,CAAC,GAAD,CAChD,MAAM,GAAG,GAAG,KAAK,CAAC,QAAN,EAAH,GAAsBA,OAAK,CAAC,KAAD,CAAO,GAAG,IAAI,IALtD;AAMH;;AAED,MAAI,MAAJ,EAAY;AACR,IAAA,CAAC,IAAI,MAAM,GAAG,KAAd;AACH;;AAED,OAAK,MAAM,EAAX,IAAiB,MAAM,CAAC,IAAI,CAAC,KAAN,CAAvB,EAAqC;AACjC,UAAM,MAAM,GAAG,IAAI,GAAG,UAAU,CAAC,EAAE,CAAC,IAAJ,CAAhC;AACA,IAAA,CAAC,IAAI,KAAK,MAAM,IAAI,MAAM,GACtB,MAAM,GAAG,KAAK,aAAa,CAAC,EAAE,CAAC,OAAJ,CAAY,EAAjC,GAAsC,EAChD,SAAS,QAAQ,CAAC,EAAE,CAAC,OAAJ,CAAY,IAF7B;;AAGA,SAAK,MAAM,CAAX,IAAgB,MAAM,CAAC,IAAP,CAAY,EAAE,CAAC,OAAf,CAAhB,EAAyC;AACrC,UAAI,GAAJ,EAAS,CAAC,IAAI,OAAO,GAAG,cAAc,QAAQ,CAAC,CAAD,CAAR,CAAY,WAAZ,EAAyB,KAAtD;AACT,MAAA,CAAC,IAAI,OAAO,GAAG,CAAV,GAAc,KAAd,GAAsBA,OAAK,CAAC,EAAE,CAAC,OAAH,CAAW,CAAX,CAAD,CAA3B,GAA6C,KAAlD;AACH;;AACD,IAAA,CAAC,IAAI,MAAM,GAAG,OAAd;AACH;;AACD,QAAM,OAAO,GAAwB,EAArC;;AAEA,OAAK,MAAM,GAAX,IAAkB,IAAI,CAAC,OAAvB,EAAgC;AAC5B,QAAI,GAAG,CAAC,OAAR,EAAiB;AAEjB,UAAM,GAAG,GAAG,UAAU,CAAC,GAAD,CAAtB;AACA,UAAM,IAAI,GAAG,GAAG,CAAC,MAAJ,CAAW,MAAX,GACP,QAAQ,CAAC,IAAD,EAAO,GAAP,EAAY;AAChB,MAAA,QAAQ,EAAE,GADM;AAEhB,MAAA,WAAW,EAAE;AAFG,KAAZ,CAAR,CAGG,OAJI,GAKP,EALN;AAOA,QAAI,KAAK,GAAG,KAAZ;AACA,QAAIC,YAAU,CAAC,GAAG,CAAC,IAAL,CAAd,EAA0B,KAAK,GAAG,KAAR,CAA1B,KACK,IAAI,GAAG,CAAC,IAAJ,IAAY,OAAhB,EAAyB,KAAK,GAAG,OAAR,CAAzB,KACA,IACD,GAAG,CAAC,IAAJ,IAAY,mBAAZ,IACA,GAAG,CAAC,IAAJ,IAAY,kBAFX,EAID,KAAK,GAAG,SAAR,CAJC,KAKA,IAAI,GAAG,CAAC,IAAJ,IAAY,cAAZ,IAA8B,GAAG,CAAC,IAAJ,IAAY,aAA9C,EACD,KAAK,GAAG,MAAR;AAEJ,QAAI,IAAI,GAAG,EAAX;AACA,QAAI,IAAI,GAAG,EAAX;;AACA,QAAI,GAAG,CAAC,SAAJ,IAAiB,KAAK,IAAI,MAA9B,EAAsC;AAClC,UAAI,IAAJ,EACI,IAAI,GAAG,WAAW,CACd,GAAG,GAAG,CAAC,IAAI,IAAI,UAAU,CAAC,GAAG,CAAC,IAAL,CAAU,GAC/B,GAAG,CAAC,MAAJ,GAAa,EAAb,GAAkB,WAAW,CAAC,IAAD,CACjC,EAHc,CAAlB;AAKP,KAPD,MAOO;AACH,YAAM,GAAG,GAAGD,OAAK,CAAC,GAAG,CAAC,UAAL,CAAjB;;AACA,UAAI,GAAG,IAAI,GAAG,CAAC,IAAJ,KAAa,OAAxB,EAAiC;AAC7B,QAAA,IAAI,GAAG,cAAc,OAAO,CAAC,GAAG,CAAC,IAAL,CAAP,CAAkB,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,CAAoC,KAAzD;AACH;;AACD,MAAA,IAAI,GAAG,GACH,WAAW,CACP,GAAG,CAAC,OAAJ,IAAe,GAAG,CAAC,MAAJ,GAAa,EAAb,GAAkB,WAAW,CAAC,IAAD,CAA5C,CADO,CAAX,GAEI,IACR,GAAG,UAAU,CAAC,GAAG,CAAC,IAAL,CAAU,MAAM,GAAG,KAJhC;AAKH;;AAED,QAAI,IAAJ,EAAU,OAAO,CAAC,KAAD,CAAP,GAAiB,CAAC,OAAO,CAAC,KAAD,CAAP,IAAkB,EAAnB,IAAyB,IAA1C,CA3CkB;;AA+C/B;;AAED,OAAK,MAAM,CAAX,IAAgB,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAhB,EAAsC;AAClC,QAAI,CAAC,IAAI,MAAT,EAAiB,CAAC,IAAI,OAAO,CAAC,CAAD,CAAP,CAAW,OAAX,CAAmB,KAAnB,EAA0B,MAA1B,IAAoC,MAAzC,CAAjB,KACK;AACD,YAAM,KAAK,GAAG,OAAO,CAAC,CAAD,CAAP,CACT,OADS,CACD,MADC,EACO,EADP,EAET,OAFS,CAED,KAFC,EAEM,EAFN,EAGT,OAHS,CAGD,KAHC,EAGM,WAAW,MAHjB,CAAd;AAIA,MAAA,CAAC,IAAI,GAAG,MAAM,IAAI,IAAI,GAAG,CAAC,WAAW,MAAM,GAAG,KAAK,KAAK,MAAM,OAA9D;AACH;AACJ;;AAED,MAAI,YAAJ,EAAkB,CAAC,IAAI,KAAL;AAElB,SAAO,CAAC,CAAC,OAAF,CAAU,OAAV,EAAmB,EAAnB,CAAP;AACH;;SAEe,8BAA8B,KAAsB;AAChE,SACI,sBAAsB,CAAC,GAAG,CAAC,OAAL,CAAtB,GACA,GADA,GAEA,0BAA0B,CAAC,GAAG,CAAC,IAAL,CAF1B,IAGC,GAAG,CAAC,gBAAJ,IAAwB,EAHzB,IAIA,CAAC,GAAG,CAAC,OAAJ,GACK,IAAI,GAAG,CAAC,OAAJ,CACC,WADD,GAEC,OAFD,CAES,IAFT,EAEe,EAFf,EAGC,OAHD,CAGS,KAHT,EAGgB,EAHhB,CAGmB,EAJ5B,GAKK,EALN,EAME,WANF,EALJ;AAaH;;SAEe,6BAA6B,KAAsB;SAAA;;;AAE/D,QAAM,KAAK,GAAsB;AAC7B,IAAA,EAAE,EAAE,6BAA6B,CAAC,GAAD,CADJ;AAE7B,IAAA,IAAI,EAAE,GAAG,CAAC,IAFmB;AAG7B,IAAA,OAAO,EAAE,GAAG,CAAC,OAHgB;AAI7B,IAAA,WAAW,EAAE,GAAG,CAAC,WAJY;AAK7B,IAAA,IAAI,EAAE,GAAG,CAAC,IALmB;AAM7B,IAAA,IAAI,EAAE,GAAG,CAAC,IANmB;AAO7B,IAAA,QAAQ,EAAE,GAAG,CAAC,QAPe;AAQ7B,IAAA,kBAAkB,EAAE,GAAG,CAAC,kBARK;AAS7B,IAAA,SAAS,EAAE,CAAA,EAAA,GAAA,GAAG,CAAC,SAAJ,MAAa,IAAb,IAAa,EAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAa,EAAA,CAAE,WAAF,EATK;AAU7B,IAAA,IAAI,EAAE,GAAG,CAAC,IAVmB;AAW7B,IAAA,SAAS,EAAE,GAAG,CAAC,SAXc;AAY7B,IAAA,OAAO,EAAE,GAAG,CAAC,OAAJ,GAAc,GAAG,CAAC,OAAJ,CAAY,OAAZ,CAAoB,IAApB,EAA0B,EAA1B,CAAd,GAA8C,SAZ1B;AAa7B,IAAA,gBAAgB,EAAE,GAAG,CAAC;AAbO,GAAjC;AAeA,MAAI,GAAG,CAAC,MAAJ,KAAe,SAAnB,EAA8B,KAAK,CAAC,MAAN,GAAe,GAAG,CAAC,MAAnB;AAC9B,SAAO,KAAP;AACH;;SAEe,uBAAuB,MAAY;AAC/C,MAAI,CAAC,IAAL,EAAW,IAAI,GAAG,EAAP;AACX,QAAM,OAAO,GAAG,IAAI,CACf,IADW,GAEX,WAFW,GAGX,OAHW,CAGH,kBAHG,EAGiB,GAHjB,EAIX,OAJW,CAIH,KAJG,EAII,EAJJ,EAIO;AAJP,GAKX,OALW,CAKH,KALG,EAKI,EALJ,EAMX,OANW,CAMH,KANG,EAMI,EANJ,CAAhB;AAOA,QAAM,EAAE,GAAG,OAAO,CAAC,OAAD,CAAlB;AACA,SAAO,EAAP;AACH;;SAEe,2BAA2B,MAAY;AACnD,SAAO,sBAAsB,CAAC,IAAD,CAAtB,CAA6B,OAA7B,CAAqC,IAArC,EAA2C,EAA3C,CAAP;AACH;;SAEe,aAAU;AACtB,SAAO;AACH,IAAA,IAAI,EAAG,CAAD,IAA2B,IAAI,CAAC,SAAL,CAAe,CAAf,EAAkB,IAAlB,EAAwB,CAAxB,CAD9B;AAEH,IAAA,CAAC,EAAE,GAFA;AAGH,IAAA,EAAE,EAAE,CAAC,IAAI,YAAY,CAAC,CAAD,EAAI,IAAJ,CAHlB;AAIH,IAAA,GAAG,EAAE,CAAC,IAAI,YAAY,CAAC,CAAD,EAAI,KAAJ,CAJnB;AAKH,IAAA,EAAE,EAAE,CAAC,IAAI,YAAY,CAAC,CAAD,EAAI,IAAJ,CALlB;AAMH,IAAA,EAAE,EAAE,CAAC,IAAI,QAAQ,CAAC,CAAD;;;;;AANd,GAAP;AAWH;;SAEe,cAAc,OAA0B;AACpD,QAAM,EAAE,GAAG,KAAK,CAAC,IAAjB;AACA,SACI,CAAC,KAAK,CAAC,YAAP,IACA,qBAAqB,IAArB,CAA0B,EAA1B,CADA,IAEA,EAAE,IAAI,WAFN,IAGA,EAAE,IAAI,MAJV;AAMJ;ACt8DA;;;;;;MAIa,MAAK;AACd;;;;;AAGO,KAAA,CAAA,WAAA,GAAc,KAAd;AACP;;;;AAGO,KAAA,CAAA,KAAA,GAAQ,KAAR;AACP;;;;AAGO,KAAA,CAAA,MAAA,GAAS,IAAT;AACP;;;;AAGO,KAAA,CAAA,SAAA,GAAY,IAAZ;AAEP;;;;AAGO,KAAA,CAAA,YAAA,GAAe,KAAf;;SCvBK,WAAW,KAAa,QAAgB;AACpD,QAAM,CAAC,GAAG,IAAI,KAAJ,CAAU,GAAV,CAAV;AACA,MAAI,MAAJ;AAEK,IAAA,CAAS,CAAC,QAAV,GAAqB,IAArB;AACL,QAAM,CAAN;AACH;;SAEe,cAAc,GAAQ;SAAA;;;AAElC,SAAO,CAAC,EAAC,CAAA,EAAA,GAAC,CAAD,MAAU,IAAV,IAAU,EAAA,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAU,EAAA,CAAE,QAAb,CAAR;AACH;;SAEe,YAAY,GAAQ;;AAEhC,MAAI,CAAJ,EAAQ,CAAS,CAAC,KAAV,GAAkB,IAAlB;AACX;;SAEe,WAAW,GAAQ;SAAA;;;AAE/B,SAAO,CAAC,EAAC,CAAA,EAAA,GAAC,CAAD,MAAU,IAAV,IAAU,EAAA,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAU,EAAA,CAAE,KAAb,CAAR;AACH;;SAEe,MAAS,QAAgB,OAAS;AAC9C,SAAO,IAAI,OAAJ,CAAY,OAAO,IAAI,UAAU,CAAC,MAAM,OAAO,CAAC,KAAD,CAAd,EAAuB,MAAvB,CAAjC,CAAP;AACH;;SAEe,OACZ,KACA,QACA,KACA,QACA,KAAY;AAEZ,MAAI,MAAM,KAAK,KAAK,CAApB,EAAuB,MAAM,GAAG,CAAT;AACvB,MAAI,GAAG,KAAK,KAAK,CAAjB,EAAoB,GAAG,GAAG,GAAG,CAAC,MAAJ,GAAa,MAAnB;;AACpB,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAApB,EAAyB,EAAE,CAA3B,EAA8B,GAAG,CAAC,MAAM,GAAG,CAAV,CAAH,GAAkB,GAAG,CAAC,MAAM,GAAG,CAAV,CAArB;AACjC;;SAEe,OAAO,GAAW,GAAS;AACvC,MAAI,CAAC,IAAI,CAAT,EAAY,OAAO,CAAP;AACZ,MAAI,CAAC,GAAG,CAAR,EAAW,OAAO,CAAC,CAAR,CAAX,KACK,OAAO,CAAP;AACR;;SAEe,SAAS,GAAe,GAAsB,MAAM,GAAG,GAAC;AACpE,MAAI,CAAC,IAAI,CAAT,EAAY,OAAO,IAAP;AACZ,MAAI,CAAC,CAAD,IAAM,CAAC,CAAP,IAAY,CAAC,CAAC,MAAF,IAAY,CAAC,CAAC,MAA9B,EAAsC,OAAO,KAAP;;AACtC,OAAK,IAAI,CAAC,GAAG,MAAb,EAAqB,CAAC,GAAG,CAAC,CAAC,MAA3B,EAAmC,EAAE,CAArC,EAAwC;AACpC,QAAI,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAC,CAAC,CAAD,CAAb,EAAkB,OAAO,KAAP;AACrB;;AACD,SAAO,IAAP;AACH;;SAEe,KAAK,KAAiB,MAAY;AAC9C,EAAA,IAAI,IAAI,CAAR;AACA,MAAI,IAAI,GAAG,CAAX,EAAc,OAAO,CAAP;AACd,QAAM,CAAC,GAAG,IAAI,CAAC,GAAD,CAAd;AACA,MAAI,IAAI,IAAI,EAAZ,EAAgB,OAAO,CAAC,KAAK,CAAb,CAAhB,KACK,OAAO,CAAC,CAAC,CAAC,GAAI,CAAC,KAAK,IAAZ,IAAsB,CAAC,KAAK,IAAN,IAAc,CAArC,MAA6C,CAApD;AACR;;SAEe,KAAK,GAAW,GAAS;AACrC,SAAQ,CAAC,CAAC,GAAG,CAAL,KAAW,CAAC,GAAG,CAAf,CAAD,GAAsB,CAA7B;AACH;;SACe,KAAK,MAAgB;AACjC,MAAI,CAAC,GAAG,UAAR;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;AAClC,IAAA,CAAC,GAAG,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,SAAb,IAA0B,IAAI,CAAC,CAAD,CAAlC;AACH;;AACD,SAAO,CAAP;AACH;;SAEe,IAAI,GAAa;AAC7B,MAAI,GAAG,GAAG,MAAV;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,MAAtB,EAA8B,EAAE,CAAhC,EAAmC;AAC/B,UAAM,IAAI,GAAG,CAAC,CAAC,CAAD,CAAd;AACA,QAAI,CAAC,GAAI,GAAG,IAAI,CAAR,GAAa,IAArB;AACA,IAAA,CAAC,IAAI,CAAC,IAAI,CAAV;AACA,IAAA,GAAG,GAAI,GAAG,IAAI,CAAR,GAAc,CAAC,IAAI,EAAnB,GAA0B,CAAC,IAAI,CAA/B,GAAoC,CAA1C;AACA,IAAA,GAAG,IAAI,MAAP;AACH;;AACD,SAAO,GAAP;AACH;;SAEe,MAAM,GAAS;AAC3B,SAAQ,CAAC,GAAG,CAAL,GAAU,CAAC,CAAlB;AACH,EAED;;;SACgB,mBAAmB,OAAa;AAC5C,QAAM,GAAG,GAAG,KAAK,CAAC,MAAlB;AACA,QAAM,GAAG,GAAG,IAAI,UAAJ,CAAe,GAAf,CAAZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAApB,EAAyB,EAAE,CAA3B,EAA8B,GAAG,CAAC,CAAD,CAAH,GAAS,KAAK,CAAC,UAAN,CAAiB,CAAjB,IAAsB,IAA/B;;AAC9B,SAAO,GAAP;AACH;;SAEe,mBAAmB,OAAwB;AACvD,QAAM,GAAG,GAAG,KAAK,CAAC,MAAlB;AACA,MAAI,GAAG,GAAG,EAAV;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAApB,EAAyB,EAAE,CAA3B,EAA8B,GAAG,IAAI,MAAM,CAAC,YAAP,CAAoB,KAAK,CAAC,CAAD,CAAzB,CAAP;;AAC9B,SAAO,GAAP;AACH;;SAEe,SAAS,QAAc;AACnC,MAAI,CAAC,MAAL,EAAa,OAAO,EAAP,CADsB;;AAInC,MAAI,OAAO,GAAG,EAAd;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,EAAE,CAArC,EAAwC;AACpC,UAAM,CAAC,GAAG,MAAM,CAAC,UAAP,CAAkB,CAAlB,IAAuB,IAAjC;;AACA,QAAI,CAAC,IAAI,EAAL,IAAW,CAAC,GAAG,IAAnB,EAAyB;AACrB,MAAA,OAAO,IAAI,MAAM,CAAC,CAAC,QAAF,CAAW,EAAX,CAAjB;AACH,KAFD,MAEO;AACH,MAAA,OAAO,IAAI,MAAM,CAAC,MAAP,CAAc,CAAd,CAAX;AACH;AACJ,GAZkC;;;AAenC,SAAO,kBAAkB,CAAC,OAAD,CAAzB;AACH;;SAEe,OAAO,KAAa,OAAe;AAC/C,MAAI,GAAG,GAAG,EAAV;AACA,MAAI,CAAC,GAAL,EAAU,OAAO,GAAP;;AACV,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,EAAE,CAAlC,EAAqC;AACjC,QAAI,IAAI,GAAG,GAAG,CAAC,UAAJ,CAAe,CAAf,CAAX;AACA,QAAI,IAAI,IAAI,IAAZ,EAAkB,GAAG,IAAI,GAAG,CAAC,MAAJ,CAAW,CAAX,CAAP,CAAlB,KACK,IAAI,IAAI,IAAI,KAAZ,EAAmB;AACpB,MAAA,GAAG,IAAI,MAAM,CAAC,YAAP,CAAoB,OAAQ,IAAI,IAAI,CAApC,EAAwC,OAAQ,IAAI,GAAG,IAAvD,CAAP;AACH,KAFI,MAEE;AACH,UAAI,CAAC,KAAD,IAAU,UAAU,IAApB,IAA4B,IAAI,IAAI,MAAxC,EAAgD;AAC5C,cAAM,IAAI,GAAG,GAAG,CAAC,UAAJ,CAAe,EAAE,CAAjB,CAAb;AACA,YAAI,CAAC,KAAK,CAAC,IAAD,CAAV,EACI,IAAI,GAAG,WAAY,IAAI,GAAG,MAAR,IAAmB,EAA9B,KAAqC,IAAI,GAAG,MAA5C,CAAP;AACP;;AAED,UAAI,IAAI,IAAI,MAAZ,EACI,GAAG,IAAI,MAAM,CAAC,YAAP,CACH,OAAQ,IAAI,IAAI,EADb,EAEH,OAAS,IAAI,IAAI,CAAT,GAAc,IAFnB,EAGH,OAAQ,IAAI,GAAG,IAHZ,CAAP,CADJ,KAOI,GAAG,IAAI,MAAM,CAAC,YAAP,CACH,OAAQ,IAAI,IAAI,EADb,EAEH,OAAS,IAAI,IAAI,EAAT,GAAe,IAFpB,EAGH,OAAS,IAAI,IAAI,CAAT,GAAc,IAHnB,EAIH,OAAQ,IAAI,GAAG,IAJZ,CAAP;AAMP;AACJ;;AACD,SAAO,GAAP;AACH;AAMD;;;MACa,cAAa;AAA1B,EAAA,WAAA,GAAA;AACY,SAAA,OAAA,GAAsC,EAAtC;AACA,SAAA,SAAA,GAA2B,EAA3B;AA4CX;;AA1CG,EAAA,KAAK,GAAA;AACD,SAAK,MAAM,CAAX,IAAgB,KAAK,OAArB,EAA8B;AAC1B,MAAA,CAAC,CAAC,IAAI,KAAJ,CAAU,sBAAV,CAAD,CAAD;AACH;;AACD,SAAK,OAAL,GAAe,EAAf;AACA,SAAK,SAAL,GAAiB,EAAjB;AACH;;AAED,EAAA,SAAS,CAAC,CAAD,EAAS;;AAEd,SAAK,IAAL,CAAU,CAAV;AACH;;AAED,EAAA,IAAI,CAAC,CAAD,EAAK;AACL,UAAM,CAAC,GAAG,KAAK,OAAL,CAAa,KAAb,EAAV;AACA,QAAI,CAAJ,EAAO,CAAC,CAAC,CAAD,CAAD,CAAP,KACK,KAAK,SAAL,CAAe,IAAf,CAAoB,CAApB;AACR;;AAED,EAAA,UAAU,CAAC,OAAO,GAAG,CAAX,EAAY;AAClB,QAAI,KAAK,SAAL,CAAe,MAAf,GAAwB,CAA5B,EAA+B;AAC3B,YAAM,CAAC,GAAG,KAAK,SAAL,CAAe,KAAf,EAAV;AACA,UAAI,CAAC,YAAY,KAAjB,EAAwB,OAAO,OAAO,CAAC,MAAR,CAAkB,CAAlB,CAAP,CAAxB,KACK,OAAO,OAAO,CAAC,OAAR,CAA+B,CAA/B,CAAP;AACR,KAJD,MAKI,OAAO,IAAI,OAAJ,CAAe,CAAC,OAAD,EAAU,MAAV,KAAgB;AAClC,YAAM,CAAC,GAAI,CAAD,IAAa;AACnB,YAAI,CAAC,YAAY,KAAjB,EAAwB,MAAM,CAAC,CAAD,CAAN,CAAxB,KACK,OAAO,CAAC,CAAD,CAAP;AACR,OAHD;;AAIA,WAAK,OAAL,CAAa,IAAb,CAAkB,CAAlB;;AACA,UAAI,OAAO,GAAG,CAAd,EAAiB;AACb,QAAA,KAAK,CAAC,OAAD,CAAL,CAAe,IAAf,CAAoB,MAAA;AAChB,gBAAM,GAAG,GAAG,KAAK,OAAL,CAAa,OAAb,CAAqB,CAArB,CAAZ;;AACA,cAAI,GAAG,IAAI,CAAX,EAAc;AACV,iBAAK,OAAL,CAAa,MAAb,CAAoB,GAApB,EAAyB,CAAzB;AACA,YAAA,MAAM,CAAC,IAAI,KAAJ,CAAU,SAAV,CAAD,CAAN;AACH;AACJ,SAND;AAOH;AACJ,KAfM,CAAP;AAgBP;;AA7CqB;AAgD1B;;;MACa,aAAY;AAAzB,EAAA,WAAA,GAAA;;AAEqB,SAAA,QAAA,GAAyC,EAAzC;AA4BpB;;AA1BG,EAAA,OAAO,CAAI,EAAJ,EAAgB,CAAhB,EAAmC;AACtC,WAAO,IAAI,OAAJ,CAAe,CAAC,OAAD,EAAU,MAAV,KAAgB;AAClC,UAAI,GAAG,GAAG,KAAK,QAAL,CAAc,EAAd,CAAV;;AACA,UAAI,CAAC,GAAL,EAAU;AACN,QAAA,GAAG,GAAG,KAAK,QAAL,CAAc,EAAd,IAAoB,EAA1B;AACH;;AACD,YAAM,OAAO,GAAG,MAAA;AACZ,QAAA,GAAG,CAAC,KAAJ;AACA,YAAI,GAAG,CAAC,MAAJ,IAAc,CAAlB,EAAqB,OAAO,KAAK,QAAL,CAAc,EAAd,CAAP,CAArB,KACK,GAAG,CAAC,CAAD,CAAH;AACR,OAJD;;AAKA,MAAA,GAAG,CAAC,IAAJ,CAAS,MACL,CAAC,GAAG,IAAJ,CACI,CAAC,IAAA;AACG,QAAA,OAAO;AACP,QAAA,OAAO,CAAC,CAAD,CAAP;AACH,OAJL,EAKI,GAAG,IAAA;AACC,QAAA,OAAO;AACP,QAAA,MAAM,CAAC,GAAD,CAAN;AACH,OARL,CADJ;AAYA,UAAI,GAAG,CAAC,MAAJ,IAAc,CAAlB,EAAqB,GAAG,CAAC,CAAD,CAAH;AACxB,KAvBM,CAAP;AAwBH;;AA7BoB;;SAgCT,eAAe,KAAW;AACtC,SAAO,IAAI,CAAC,WAAW,GAAG,CAAC,QAAJ,CAAa,EAAb,CAAZ,EAA8B,KAA9B,CAAoC,CAAC,CAArC,CAAuC,EAAlD;AACH;;SAEe,UAAU,GAAW;AACjC,SACI,OAAO,CAAC,CAAC,GAAF,CAAM,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,QAAH,CAAY,EAAZ,CAAf,EAAgC,KAAhC,CAAsC,CAAC,CAAvC,CAAZ,EAAuD,IAAvD,CAA4D,EAA5D,CADX;AAGH;;SAEe,MAAM,OAAwB;AAC1C,MAAI,CAAC,KAAL,EAAY,OAAO,SAAP;AACZ,MAAI,CAAC,GAAG,EAAR;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,EAAE,CAApC,EACI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAD,CAAL,CAAS,QAAT,CAAkB,EAAlB,CAAP,EAA8B,KAA9B,CAAoC,CAAC,CAArC,CAAL;;AACJ,SAAO,CAAP;AACH;;SAEe,QAAQ,KAAW;AAC/B,QAAM,CAAC,GAAG,IAAI,UAAJ,CAAe,GAAG,CAAC,MAAJ,IAAc,CAA7B,CAAV;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,CAAC,IAAI,CAArC,EACI,CAAC,CAAC,CAAC,IAAI,CAAN,CAAD,GAAY,QAAQ,CAAC,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,CAAC,GAAG,CAAjB,CAAD,EAAsB,EAAtB,CAApB;;AACJ,SAAO,CAAP;AACH;;SAEe,MAAM,GAAU;AAC5B,SAAO,CAAC,KAAK,IAAN,IAAc,CAAC,KAAK,SAA3B;AACH;;SAEe,QAAW,GAAe;AACtC,QAAM,CAAC,GAAQ,IAAI,KAAJ,CAAU,CAAC,CAAC,MAAZ,CAAf;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,MAAtB,EAA8B,EAAE,CAAhC,EAAmC,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAAR;;AACnC,SAAO,CAAP;AACH;;SAOe,OAAO,GAAS;AAC5B,MAAI,KAAK,CAAC,CAAD,CAAT,EAAc,OAAO,SAAP;AACd,MAAI,CAAC,GAAG,CAAR,EAAW,OAAO,MAAM,MAAM,CAAC,CAAC,CAAF,CAAnB;AACX,SAAO,OAAO,CAAC,CAAC,QAAF,CAAW,EAAX,CAAd;AACH;;SAEe,QAAQ,KAA+B,KAAa,GAAS;AACzE,EAAA,GAAG,CAAC,GAAG,GAAG,CAAP,CAAH,GAAgB,CAAC,IAAI,CAAN,GAAW,IAA1B;AACA,EAAA,GAAG,CAAC,GAAG,GAAG,CAAP,CAAH,GAAgB,CAAC,IAAI,CAAN,GAAW,IAA1B;AACA,EAAA,GAAG,CAAC,GAAG,GAAG,CAAP,CAAH,GAAgB,CAAC,IAAI,EAAN,GAAY,IAA3B;AACA,EAAA,GAAG,CAAC,GAAG,GAAG,CAAP,CAAH,GAAgB,CAAC,IAAI,EAAN,GAAY,IAA3B;AACH;;SAEe,QAAQ,KAA+B,KAAa,GAAS;AACzE,EAAA,GAAG,CAAC,GAAG,GAAG,CAAP,CAAH,GAAgB,CAAC,IAAI,CAAN,GAAW,IAA1B;AACA,EAAA,GAAG,CAAC,GAAG,GAAG,CAAP,CAAH,GAAgB,CAAC,IAAI,CAAN,GAAW,IAA1B;AACH;;SAEe,OAAO,KAAwB,KAAW;AACtD,SACI,CAAC,GAAG,CAAC,GAAD,CAAH,GACI,GAAG,CAAC,GAAG,GAAG,CAAP,CAAH,IAAgB,CADpB,GAEI,GAAG,CAAC,GAAG,GAAG,CAAP,CAAH,IAAgB,EAFpB,GAGI,GAAG,CAAC,GAAG,GAAG,CAAP,CAAH,IAAgB,EAHrB,MAIA,CALJ;AAOH;;SAEe,OAAO,KAAwB,KAAW;AACtD,SAAO,GAAG,CAAC,GAAD,CAAH,GAAY,GAAG,CAAC,GAAG,GAAG,CAAP,CAAH,IAAgB,CAAnC;AACH;;SAEe,YAAY,OAAe;AACvC,QAAM,CAAC,GAAG,IAAI,UAAJ,CAAe,KAAK,CAAC,MAAN,GAAe,CAA9B,CAAV;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,EAAE,CAApC,EAAuC,OAAO,CAAC,CAAD,EAAI,CAAC,GAAG,CAAR,EAAW,KAAK,CAAC,CAAD,CAAhB,CAAP;;AACvC,SAAO,CAAP;AACH;;SAEe,YAAY,KAAe;AACvC,QAAM,GAAG,GAAa,EAAtB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,CAAC,IAAI,CAArC,EAAwC,GAAG,CAAC,IAAJ,CAAS,MAAM,CAAC,GAAD,EAAM,CAAN,CAAf;;AACxC,SAAO,GAAP;AACH;;SAEe,cAAc,MAAgB;AAC1C,MAAI,CAAC,IAAL,EAAW,OAAO,IAAP;AACX,QAAM,CAAC,GAAG,IAAI,CAAC,MAAf;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,EAAE,CAAzB,EAA4B;AACxB,QAAI,IAAI,CAAC,CAAD,CAAR,EAAa,OAAO,KAAP;AAChB;;AACD,SAAO,IAAP;AACH;;SAEe,eAAe,KAAe;AAC1C,SAAO,QAAQ,CAAC,kBAAkB,CAAC,GAAD,CAAnB,CAAf;AACH;;SAEe,eAAe,KAAW;AACtC,SAAO,kBAAkB,CAAC,MAAM,CAAC,GAAD,CAAP,CAAzB;AACH;;SAEe,aAAa,GAAe,GAAa;AACrD,QAAM,CAAC,GAAG,IAAI,UAAJ,CAAe,CAAC,CAAC,MAAF,GAAW,CAAC,CAAC,MAA5B,CAAV;AACA,EAAA,CAAC,CAAC,GAAF,CAAM,CAAN,EAAS,CAAT;AACA,EAAA,CAAC,CAAC,GAAF,CAAM,CAAN,EAAS,CAAC,CAAC,MAAX;AACA,SAAO,CAAP;AACH;;SAEe,iBAAiB,MAAkB;AAC/C,MAAI,EAAE,GAAG,CAAT;;AACA,OAAK,MAAM,GAAX,IAAkB,IAAlB,EAAwB,EAAE,IAAI,GAAG,CAAC,MAAV;;AACxB,QAAM,CAAC,GAAG,IAAI,UAAJ,CAAe,EAAf,CAAV;AACA,EAAA,EAAE,GAAG,CAAL;;AACA,OAAK,MAAM,GAAX,IAAkB,IAAlB,EAAwB;AACpB,IAAA,CAAC,CAAC,GAAF,CAAM,GAAN,EAAW,EAAX;AACA,IAAA,EAAE,IAAI,GAAG,CAAC,MAAV;AACH;;AACD,SAAO,CAAP;AACH;;SAEe,gBAAmB,MAAW;AAC1C,MAAI,CAAC,IAAL,EAAW,OAAO,SAAP,CAD+B;;AAI1C,EAAA,IAAI,GAAG,IAAI,CAAC,MAAL,CAAY,CAAC,IAAI,CAAC,EAAC,CAAC,KAAA,IAAD,IAAA,CAAC,KAAA,KAAA,CAAD,GAAC,KAAA,CAAD,GAAA,CAAC,CAAE,MAAJ,CAAlB,CAAP;AAEA,MAAI,EAAE,GAAG,CAAT;;AACA,OAAK,MAAM,GAAX,IAAkB,IAAlB,EAAwB,EAAE,IAAI,GAAG,CAAC,MAAV;;AACxB,QAAM,CAAC,GAAQ,IAAI,KAAJ,CAAU,EAAV,CAAf;AACA,EAAA,EAAE,GAAG,CAAL;;AACA,OAAK,MAAM,GAAX,IAAkB,IAAlB,EAAwB;AACpB,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,EAAE,CAAlC,EAAqC,CAAC,CAAC,CAAC,GAAG,EAAL,CAAD,GAAY,GAAG,CAAC,CAAD,CAAf;;AACrC,IAAA,EAAE,IAAI,GAAG,CAAC,MAAV;AACH;;AACD,SAAO,CAAP;AACH;;SAEe,aAAgB,KAAQ,KAAM;AAC1C,QAAM,CAAC,GAAG,KAAK,CAAC,GAAD,CAAf;;AACA,OAAK,MAAM,CAAX,IAAgB,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAhB,EAAkC;AAE5B,IAAA,GAAW,CAAC,CAAD,CAAX,GAAkB,CAAS,CAAC,CAAD,CAA3B;AACL;AACJ;;SACe,OACZ,MACA,GAAG,GAAG,oBACN;AACA,WAAe;AAEf,MAAI,CAAC,IAAL,EAAW;AACP,QAAI,SAAJ,EAAe,OAAO,CAAC,KAAR,CAAc,mBAAmB,GAAG,EAApC,EAAwC,SAAxC;AACf,QAAI,KAAK,CAAC,WAAV;AAEI;AACJ,UAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACH;AACJ;;SAEe,UAA6B,KAAa;AACtD,MAAI,GAAG,IAAI,IAAX,EAAiB,OAAO,IAAP,CADqC;;AAGtD,QAAM,CAAC,GAAQ,EAAf;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,OAAjB,CAAyB,CAAC,IAAA;;AAEtB,IAAA,CAAC,CAAC,CAAD,CAAD,GAAQ,GAAW,CAAC,CAAD,CAAnB;AACH,GAHD;AAIA,SAAO,CAAP;AACH;;SAEe,MAAS,GAAI;AACzB,MAAI,CAAC,IAAI,IAAT,EAAe,OAAO,IAAP;AACf,SAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,CAAf,CAAX,CAAP;AACH;;SAEe,SAAS,SAAqB,OAAa;AACvD,MAAI,UAAU,GAAG,IAAjB;AACA,SAAO,YAAA;AACH,QAAI,CAAC,UAAL,EAAiB;AACjB,IAAA,UAAU,GAAG,KAAb;AACA,IAAA,OAAO;AACP,IAAA,UAAU,CAAC,MAAO,UAAU,GAAG,IAArB,EAA4B,KAA5B,CAAV;AACH,GALD;AAMH;;SAMe,SAAM;AAClB,MAAI,OAAJ;AACA,SAAO;AACH,IAAA,SAAS,EAAE,IAAI,OAAJ,CAAY,CAAC,IAAA;AACpB,MAAA,OAAO,GAAG,CAAV;AACH,KAFU,CADR;AAIH,IAAA,MAAM,EAAE,MAAM,OAAO,CAAC,IAAD;AAJlB,GAAP;AAMH;;SAEe,qBAAqB,MAAU;AAC3C,MAAI,IAAI,CAAC,WAAT,EAAsB;AAClB,WAAO,IAAI,CAAC,WAAL,GAAmB,IAAnB,CAAwB,IAAI,IAAI,IAAI,UAAJ,CAAe,IAAf,CAAhC,CAAP;AACH;;AAED,SAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAgB;AAC/B,UAAM,UAAU,GAAG,IAAI,UAAJ,EAAnB;;AACA,IAAA,UAAU,CAAC,MAAX,GAAoB,MAAA;AAChB,MAAA,OAAO,CAAC,IAAI,UAAJ,CAAe,UAAU,CAAC,MAA1B,CAAD,CAAP;AACH,KAFD;;AAGA,IAAA,UAAU,CAAC,OAAX,GAAqB,CAAC,IAAA;AAClB,MAAA,OAAO,CAAC,GAAR,CAAY,CAAZ;AACA,MAAA,MAAM,CAAC,CAAD,CAAN;AACH,KAHD;;AAIA,QAAI;AACA,MAAA,UAAU,CAAC,iBAAX,CAA6B,IAA7B;AACH,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,MAAA,MAAM,CAAC,CAAD,CAAN;AACH;AACJ,GAdM,CAAP;AAeH;;SAEe,eAAe,MAAU;AACrC,MAAI,IAAI,CAAC,IAAT,EAAe;AACX,WAAO,IAAI,CAAC,IAAL,EAAP;AACH;;AAED,SAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAgB;AAC/B,UAAM,UAAU,GAAG,IAAI,UAAJ,EAAnB;;AACA,IAAA,UAAU,CAAC,MAAX,GAAoB,MAAM,OAAO,CAAC,UAAU,CAAC,MAAZ,CAAjC;;AACA,IAAA,UAAU,CAAC,OAAX,GAAqB,CAAC,IAAA;AAClB,MAAA,OAAO,CAAC,GAAR,CAAY,CAAZ;AACA,MAAA,MAAM,CAAC,CAAD,CAAN;AACH,KAHD;;AAIA,QAAI;AACA,MAAA,UAAU,CAAC,UAAX,CAAsB,IAAtB;AACH,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,MAAA,MAAM,CAAC,CAAD,CAAN;AACH;AACJ,GAZM,CAAP;AAaH;;SAEe,SAAS,SAAqB,OAAa;;AAEvD,MAAI,SAAJ;AACA,SAAO,YAAA;AACH,QAAI,SAAJ,EAAe;AACX,MAAA,YAAY,CAAC,SAAD,CAAZ;AACH;;AACD,IAAA,SAAS,GAAG,UAAU,CAAC,YAAA;AACnB,MAAA,OAAO;AACV,KAFqB,EAEnB,KAFmB,CAAtB;AAGH,GAPD;AAQH;;SAEe,cACZ,SACA,OAAa;;AAGb,MAAI,SAAJ;AACA,SAAO,YAAA;AACH,QAAI,SAAJ,EAAe;AACX,MAAA,YAAY,CAAC,SAAD,CAAZ;AACH;;AACD,IAAA,SAAS,GAAG,UAAU,CAAC,YAAA;AACnB,YAAM,OAAO,EAAb;AACH,KAFqB,EAEnB,KAFmB,CAAtB;AAGH,GAPD;AAQH;;SAEe,aAAa,KAAW;AACpC,MAAI,GAAG,KAAK,SAAR,IAAqB,GAAG,KAAK,IAAjC,EAAuC,OAAO,GAAP;;AAEvC,MAAI;AACA,WAAO,IAAI,CAAC,KAAL,CAAW,GAAX,CAAP;AACH,GAFD,CAEE,OAAO,CAAP,EAAU;AACR,WAAO,SAAP;AACH;AACJ;;SAEe,mBAAmB,GAAW,QAAc;AACxD,EAAA,MAAM,GAAG,MAAM,GAAG,CAAlB,CADwD;;AAGxD,MAAI,MAAM,IAAI,CAAd,EAAiB,OAAO,IAAI,CAAC,KAAL,CAAW,CAAX,CAAP;AACjB,MAAI,CAAC,IAAI,CAAT,EAAY,OAAO,CAAP;AACZ,MAAI,CAAC,GAAG,CAAR;;AACA,SAAO,CAAC,IAAI,CAAL,IAAU,MAAM,GAAG,EAA1B,EAA8B;AAC1B,UAAM,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,MAAM,EAAnB,CAAV;AACA,IAAA,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,GAAG,CAAJ,GAAQ,MAAM,CAAC,OAA1B,IAAqC,CAAzC;AACH;;AACD,SAAO,CAAP;AACH;;SAEe,YAAY,KAAa,KAAW;AAChD,SAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,MAAiB,GAAG,GAAG,GAAvB,IAA8B,GAAzC,CAAP;AACH;;SAEe,OAAO,QAAgB;AACnC,SAAO,KAAK,CAAC,IAAN,CAAW,IAAI,GAAJ,CAAQ,MAAR,EAAgB,IAAhB,EAAX,CAAP;AACH;;SAEe,UACZ,QACA,IACA,WAA0B;AAE1B,QAAM,CAAC,GAAY,EAAnB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,EAAE,CAArC,EAAwC;AACpC,UAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,UAAM,GAAG,GAAG,EAAE,CAAC,KAAD,CAAd;;AACA,QAAI,CAAC,CAAC,CAAC,GAAD,CAAN,EAAa;AACT,MAAA,CAAC,CAAC,GAAD,CAAD,GAAS,KAAT;AACH;AACJ;;AACD,SAAO,MAAM,CAAC,MAAP,CAAc,CAAd,EAAiB,GAAjB,CAAqB,SAArB,CAAP;AACH;;SAEe,MACZ,GACA,cACA,gBAA8C;AAE9C,QAAM,CAAC,GAAY,EAAnB;AACA,MAAI,CAAJ,EACI,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,MAAtB,EAA8B,EAAE,CAAhC,EAAmC;AAC/B,UAAM,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAD,CAAF,EAAO,CAAP,CAAxB;AACA,QAAI,GAAG,KAAK,SAAR,IAAqB,GAAG,KAAK,IAAjC,EAAuC;AACvC,IAAA,CAAC,CAAC,GAAD,CAAD,GAAS,cAAc,CAAC,CAAC,CAAC,CAAD,CAAF,EAAO,CAAP,CAAvB;AACH;AACL,SAAO,CAAP;AACH;;SAEe,YACZ,QACA,UACA,OAAO,GAAG,OAAK;AAEf,MAAI,CAAC,GAAG,EAAR;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAAX,IAAqB,CAAC,CAAC,MAAF,GAAW,QAAhD,EAA0D,EAAE,CAA5D,EAA+D;AAC3D,QAAI,CAAJ,EAAO,CAAC,IAAI,IAAL;AACP,IAAA,CAAC,IAAI,MAAM,CAAC,CAAD,CAAX;AACH;;AACD,MAAI,CAAC,CAAC,MAAF,GAAW,QAAf,EAAyB,OAAO,CAAC,CAAC,KAAF,CAAQ,CAAR,EAAW,QAAX,IAAuB,OAA9B,CAAzB,KACK,OAAO,CAAP;AACR;;SAEe,aAAgB,GAAM;AAClC,OAAK,IAAI,CAAC,GAAG,CAAC,CAAC,MAAF,GAAW,CAAxB,EAA2B,CAAC,GAAG,CAA/B,EAAkC,CAAC,EAAnC,EAAuC;AACnC,UAAM,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,MAAiB,CAAC,GAAG,CAArB,CAAX,CAAV;AACC,KAAC,CAAC,CAAC,CAAD,CAAF,EAAO,CAAC,CAAC,CAAD,CAAR,IAAe,CAAC,CAAC,CAAC,CAAD,CAAF,EAAO,CAAC,CAAC,CAAD,CAAR,CAAf;AACJ;;AACD,SAAO,CAAP;AACH;;SAEe,WACZ,OACA,MACA,SAAS,GAAG,IAAE;AAEd,MAAI,KAAK,CAAC,OAAN,CAAc,IAAd,IAAsB,CAA1B,EAA6B,OAAO,IAAP,CAFf;;AAId,MAAI,KAAK,GAAG,CAAZ;;AACA,SAAO,KAAK,CAAC,OAAN,CAAc,GAAG,IAAI,GAAG,SAAS,GAAG,KAAK,EAAzC,IAA+C,CAAC,CAAvD,EAA0D,KAAK;;AAC/D,SAAO,GAAG,IAAI,GAAG,SAAS,GAAG,KAAK,EAAlC;AACH;;SAEe,QAAW,MAAW,KAAyB;AAC3D,MAAI,CAAC,IAAL,EAAW,OAAO,EAAP;AAEX,QAAM,CAAC,GAAc,EAArB;AACA,EAAA,IAAI,CAAC,OAAL,CAAa,IAAI,IAAA;AACb,UAAM,CAAC,GAAG,GAAG,CAAC,IAAD,CAAb;AACA,UAAM,CAAC,GAAG,CAAC,CAAC,CAAD,CAAD,KAAS,CAAC,CAAC,CAAD,CAAD,GAAO,EAAhB,CAAV;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,IAAP;AACH,GAJD;AAKA,SAAO,CAAP;AACH;;SAEe,KAAK,GAAG,QAAgB;AACpC,SAAO,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAE,IAAR,CAAa,CAAC,IAAI,CAAC,KAAK,SAAxB,CAAP;AACH;AAED;;;;;;;SAKgB,YACZ,QACA,WAA4B;AAE5B,QAAM,IAAI,GAAQ,EAAlB;AACA,QAAM,IAAI,GAAQ,EAAlB;AACA,QAAM,CAAC,GAAG,MAAM,CAAC,MAAjB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,EAAE,CAAzB,EAA4B;AACxB,UAAM,CAAC,GAAG,MAAM,CAAC,CAAD,CAAhB;AACA,QAAI,SAAS,CAAC,CAAD,CAAb,EAAkB,IAAI,CAAC,IAAL,CAAU,CAAV,EAAlB,KACK,IAAI,CAAC,IAAL,CAAU,CAAV;AACR;;AACD,SAAO,CAAC,IAAD,EAAO,IAAP,CAAP;AACH;;SAEe,MAAM,KAAW;AAC7B,SAAO,KAAK,CAAC,GAAD,CAAL,CACF,IADE,CACG,CADH,EAEF,GAFE,CAEE,CAAC,CAAD,EAAI,CAAJ,KAAU,CAFZ,CAAP;AAGH;;SAEe,UAAU,MAAkB,UAAgB;;AAExD,MAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAb,CAAf;AACA,QAAM,GAAG,GAAG,QAAQ,GAAG,CAAvB;AACA,QAAM,EAAE,GAAG,OAAQ,IAAI,IAAI,GAAT,GAAgB,CAAvB,CAAX,CAJwD;;AAMxD,MAAI,EAAJ,EAAQ;AACJ,IAAA,IAAI,IAAI,EAAE,KAAK,GAAP,CAAR;AACH,GAFD,MAEO;AACH,IAAA,IAAI,IAAI,KAAK,GAAb;AACH,GAVuD;;;AAYxD,EAAA,IAAI,CAAC,QAAQ,IAAI,CAAb,CAAJ,GAAsB,IAAtB;AACJ;ACtpBA;;;AACYG,OAAAA,CAAAA,YAAAA,GAAAA,KAAAA,CAAAA;;AAAZ,CAAA,UAAY,YAAZ,EAAwB;AACprBD,EAAYA,OAAAA,CAAAA,YAAAA,KAAAA,OAAAA,CAAAA,YAAAA,GAAY,EAAZA,CAAZ;;AAuBA,SAAS,WAAT,CAAqB,GAArB,EAAsC;AAClC,UAAQ,GAAR;AACI,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,MAAlB;AACI,aAAO,CAAC,CAAR;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aAAO,CAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aAAO,CAAC,CAAR;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACI,aAAO,CAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aAAO,CAAC,CAAR;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACI,aAAO,CAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aAAO,CAAC,CAAR;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACI,aAAO,CAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,MAAlB;AACI,aAAO,CAAC,EAAR;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aAAO,EAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aAAO,CAAC,EAAR;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACI,aAAO,EAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aAAO,CAAC,EAAR;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACI,aAAO,EAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aAAO,CAAC,EAAR;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACI,aAAO,EAAP;;AAEJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,SAAlB;AACI,aAAO,CAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,SAAlB;AACI,aAAO,EAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,SAAlB;AACI,aAAO,CAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,SAAlB;AACI,aAAO,EAAP;;AACJ;AACI,YAAM,IAAI,KAAJ,CAAU,gBAAV,CAAN;AA3CR;AA6CH;;AAED,SAAS,OAAT,CAAiB,GAAjB,EAAkC;AAC9B,MAAI,IAAI,GAAG,WAAW,CAAC,GAAD,CAAtB;AACA,MAAI,MAAM,GAAG,KAAb;;AACA,MAAI,IAAI,GAAG,CAAX,EAAc;AACV,IAAA,MAAM,GAAG,IAAT;AACA,IAAA,IAAI,GAAG,CAAC,IAAR;AACH;;AACD,MAAI,IAAI,GAAG,KAAX;;AACA,MAAI,IAAI,IAAI,EAAZ,EAAgB;AACZ,IAAA,IAAI,GAAG,IAAP;AACA,IAAA,IAAI,IAAI,EAAR;AACH;;AACD,MAAI,OAAO,GAAG,KAAd;;AACA,UAAQ,GAAR;AACI,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,SAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,SAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,SAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,SAAlB;AACI,MAAA,OAAO,GAAG,IAAV;AACA;AANR;;AAQA,SAAO;AAAE,IAAA,IAAF;AAAQ,IAAA,MAAR;AAAgB,IAAA,IAAhB;AAAsB,IAAA;AAAtB,GAAP;AACH;AAED;;;;;SAGgB,mBAAmB,QAAoB;AACnD,UAAQ,MAAR;AACI,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,MAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,MAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aAAO,CAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACI,aAAO,CAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,SAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,SAAlB;AACI,aAAO,CAAP;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,SAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,SAAlB;AACI,aAAO,CAAP;AAxBR;;AA0BA,SAAO,CAAP;AACH;;SAEe,UACZ,KACA,KACA,QAAc;AAEd,UAAQ,GAAR;AACI,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aAAO,GAAG,CAAC,MAAD,CAAV;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,MAAlB;AACA,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,MAAlB;AACI,aAAQ,GAAG,CAAC,MAAD,CAAH,IAAe,EAAhB,IAAuB,EAA9B;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACI,aAAO,MAAM,CAAC,GAAD,EAAM,MAAN,CAAb;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aAAQ,MAAM,CAAC,GAAD,EAAM,MAAN,CAAN,IAAuB,EAAxB,IAA+B,EAAtC;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACI,aAAO,MAAM,CAAC,GAAD,EAAM,MAAN,CAAb;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aAAO,MAAM,CAAC,GAAD,EAAM,MAAN,CAAN,IAAuB,CAA9B;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,QAAlB;AACI,aAAO,MAAM,CAAC,GAAD,EAAM,MAAN,CAAN,GAAsB,MAAM,CAAC,GAAD,EAAM,MAAM,GAAG,CAAf,CAAN,GAA0B,WAAvD;;AACJ,SAAKA,OAAAA,CAAAA,YAAAA,CAAa,OAAlB;AACI,aACI,MAAM,CAAC,GAAD,EAAM,MAAN,CAAN,GACA,CAAC,MAAM,CAAC,GAAD,EAAM,MAAM,GAAG,CAAf,CAAN,IAA2B,CAA5B,IAAiC,WAFrC;;AAIJ;AAAS;AACL,cAAM,GAAG,GAAG,OAAO,CAAC,GAAD,CAAnB;;AACA,YAAI,GAAG,CAAC,OAAR,EAAiB;AACb,gBAAM,GAAG,GAAG,IAAI,UAAJ,CAAe,GAAG,CAAC,IAAnB,CAAZ;;AACA,eAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,IAAxB,EAA8B,EAAE,CAAhC,EAAmC;AAC/B,YAAA,GAAG,CAAC,CAAD,CAAH,GAAS,GAAG,CAAC,MAAM,GAAG,CAAV,CAAZ;AACH;;AACD,cAAI,GAAG,CAAC,IAAR,EAAc,GAAG,CAAC,OAAJ;AACd,cAAI,GAAG,CAAC,IAAJ,IAAY,CAAhB,EAAmB,OAAO,IAAI,YAAJ,CAAiB,GAAG,CAAC,MAArB,EAA6B,CAA7B,CAAP,CAAnB,KACK,OAAO,IAAI,YAAJ,CAAiB,GAAG,CAAC,MAArB,EAA6B,CAA7B,CAAP;AACR;;AACD,cAAM,IAAI,KAAJ,CAAU,qBAAqB,GAA/B,CAAN;AACH;AAlCL;AAoCH;;SAEe,UACZ,KACA,KACA,QACA,GAAS;AAET,QAAM,GAAG,GAAG,OAAO,CAAC,GAAD,CAAnB;;AACA,MAAI,GAAG,CAAC,OAAR,EAAiB;AACb,UAAM,GAAG,GAAG,IAAI,UAAJ,CAAe,GAAG,CAAC,IAAnB,CAAZ;AACA,QAAI,GAAG,CAAC,IAAJ,IAAY,CAAhB,EAAmB,IAAI,YAAJ,CAAiB,GAAG,CAAC,MAArB,EAA6B,CAA7B,IAAkC,CAAlC,CAAnB,KACK,IAAI,YAAJ,CAAiB,GAAG,CAAC,MAArB,EAA6B,CAA7B,IAAkC,CAAlC;AACL,QAAI,GAAG,CAAC,IAAR,EAAc,GAAG,CAAC,OAAJ;;AACd,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,IAAxB,EAA8B,EAAE,CAAhC,EAAmC;AAC/B,MAAA,GAAG,CAAC,MAAM,GAAG,CAAV,CAAH,GAAkB,GAAG,CAAC,CAAD,CAArB;AACH;;AACD;AACH;;AAED,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,IAAxB,EAA8B,EAAE,CAAhC,EAAmC;AAC/B,UAAM,GAAG,GAAG,CAAC,GAAG,CAAC,IAAL,GAAY,MAAM,GAAG,CAArB,GAAyB,MAAM,GAAG,GAAG,CAAC,IAAb,GAAoB,CAApB,GAAwB,CAA7D;AACA,IAAA,GAAG,CAAC,GAAD,CAAH,GAAW,CAAC,GAAG,IAAf;AACA,IAAA,CAAC,KAAK,CAAN;AACH;AACJ;;SAEe,aAAa,MAAgB;AACzC,MAAI,GAAJ;;AACA,UAAQ,IAAI,CAAC,MAAb;AACI,SAAK,CAAL;AACA,SAAK,CAAL;AACI,MAAA,GAAG,GAAGA,OAAAA,CAAAA,YAAAA,CAAa,OAAnB;AACA;;AACJ,SAAK,CAAL;AACA,SAAK,CAAL;AACI,MAAA,GAAG,GAAGA,OAAAA,CAAAA,YAAAA,CAAa,QAAnB;AACA;;AACJ;AACI,MAAA,GAAG,GAAGA,OAAAA,CAAAA,YAAAA,CAAa,QAAnB;AACA;AAXR;;AAaA,SAAO,SAAS,CAAC,IAAD,EAAO,GAAP,EAAY,CAAZ,CAAhB;AACH;;SAEe,YAAY,MAAgB;AACxC,MAAI,GAAJ;;AACA,UAAQ,IAAI,CAAC,MAAb;AACI,SAAK,CAAL;AACA,SAAK,CAAL;AACI,MAAA,GAAG,GAAGA,OAAAA,CAAAA,YAAAA,CAAa,MAAnB;AACA;;AACJ,SAAK,CAAL;AACA,SAAK,CAAL;AACI,MAAA,GAAG,GAAGA,OAAAA,CAAAA,YAAAA,CAAa,OAAnB;AACA;;AACJ;AACI,MAAA,GAAG,GAAGA,OAAAA,CAAAA,YAAAA,CAAa,OAAnB;AACA;AAXR;;AAaA,SAAO,SAAS,CAAC,IAAD,EAAO,GAAP,EAAY,CAAZ,CAAhB;AACH;;SAEe,cAAc,MAAkB,KAAiB;AAC7D,QAAM,GAAG,GAAa,EAAtB;AACA,QAAM,EAAE,GAAG,kBAAkB,CAAC,GAAD,CAA7B;;AACA,OAAK,IAAI,GAAG,GAAG,CAAf,EAAkB,GAAG,IAAI,IAAI,CAAC,MAAL,GAAc,EAAvC,EAA2C,GAAG,IAAI,EAAlD,EACI,GAAG,CAAC,IAAJ,CAAS,SAAS,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,CAAlB;;AACJ,SAAO,GAAP;AACH;;SAEe,kBAAkB,QAAoB;AAClD,MAAI,EAAE,GAAG,CAAT;;AACA,OAAK,MAAM,EAAX,IAAiB,MAAjB,EAAyB,EAAE,IAAI,EAAE,CAAC,MAAT;;AACzB,QAAM,CAAC,GAAG,IAAI,UAAJ,CAAe,EAAf,CAAV;AACA,EAAA,EAAE,GAAG,CAAL;;AACA,OAAK,MAAM,EAAX,IAAiB,MAAjB,EAAyB;AACrB,IAAA,CAAC,CAAC,GAAF,CAAM,EAAN,EAAU,EAAV;AACA,IAAA,EAAE,IAAI,EAAE,CAAC,MAAT;AACH;;AACD,SAAO,CAAP;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","\n/**\n * Module dependencies.\n */\n\nvar sep = require('path').sep || '/';\n\n/**\n * Module exports.\n */\n\nmodule.exports = fileUriToPath;\n\n/**\n * File URI to Path function.\n *\n * @param {String} uri\n * @return {String} path\n * @api public\n */\n\nfunction fileUriToPath (uri) {\n  if ('string' != typeof uri ||\n      uri.length <= 7 ||\n      'file://' != uri.substring(0, 7)) {\n    throw new TypeError('must pass in a file:// URI to convert to a file path');\n  }\n\n  var rest = decodeURI(uri.substring(7));\n  var firstSlash = rest.indexOf('/');\n  var host = rest.substring(0, firstSlash);\n  var path = rest.substring(firstSlash + 1);\n\n  // 2.  Scheme Definition\n  // As a special case, <host> can be the string \"localhost\" or the empty\n  // string; this is interpreted as \"the machine from which the URL is\n  // being interpreted\".\n  if ('localhost' == host) host = '';\n\n  if (host) {\n    host = sep + sep + host;\n  }\n\n  // 3.2  Drives, drive letters, mount points, file system root\n  // Drive letters are mapped into the top of a file URI in various ways,\n  // depending on the implementation; some applications substitute\n  // vertical bar (\"|\") for the colon after the drive letter, yielding\n  // \"file:///c|/tmp/test.txt\".  In some cases, the colon is left\n  // unchanged, as in \"file:///c:/tmp/test.txt\".  In other cases, the\n  // colon is simply omitted, as in \"file:///c/tmp/test.txt\".\n  path = path.replace(/^(.+)\\|/, '$1:');\n\n  // for Windows, we need to invert the path separators from what a URI uses\n  if (sep == '\\\\') {\n    path = path.replace(/\\//g, '\\\\');\n  }\n\n  if (/^.+\\:/.test(path)) {\n    // has Windows drive at beginning of path\n  } else {\n    // unix path…\n    path = sep + path;\n  }\n\n  return host + path;\n}\n","/**\n * Module dependencies.\n */\n\nvar fs = require('fs'),\n  path = require('path'),\n  fileURLToPath = require('file-uri-to-path'),\n  join = path.join,\n  dirname = path.dirname,\n  exists =\n    (fs.accessSync &&\n      function(path) {\n        try {\n          fs.accessSync(path);\n        } catch (e) {\n          return false;\n        }\n        return true;\n      }) ||\n    fs.existsSync ||\n    path.existsSync,\n  defaults = {\n    arrow: process.env.NODE_BINDINGS_ARROW || ' → ',\n    compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled',\n    platform: process.platform,\n    arch: process.arch,\n    nodePreGyp:\n      'node-v' +\n      process.versions.modules +\n      '-' +\n      process.platform +\n      '-' +\n      process.arch,\n    version: process.versions.node,\n    bindings: 'bindings.node',\n    try: [\n      // node-gyp's linked version in the \"build\" dir\n      ['module_root', 'build', 'bindings'],\n      // node-waf and gyp_addon (a.k.a node-gyp)\n      ['module_root', 'build', 'Debug', 'bindings'],\n      ['module_root', 'build', 'Release', 'bindings'],\n      // Debug files, for development (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Debug', 'bindings'],\n      ['module_root', 'Debug', 'bindings'],\n      // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Release', 'bindings'],\n      ['module_root', 'Release', 'bindings'],\n      // Legacy from node-waf, node <= 0.4.x\n      ['module_root', 'build', 'default', 'bindings'],\n      // Production \"Release\" buildtype binary (meh...)\n      ['module_root', 'compiled', 'version', 'platform', 'arch', 'bindings'],\n      // node-qbs builds\n      ['module_root', 'addon-build', 'release', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'debug', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'default', 'install-root', 'bindings'],\n      // node-pre-gyp path ./lib/binding/{node_abi}-{platform}-{arch}\n      ['module_root', 'lib', 'binding', 'nodePreGyp', 'bindings']\n    ]\n  };\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings(opts) {\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts };\n  } else if (!opts) {\n    opts = {};\n  }\n\n  // maps `defaults` onto `opts` object\n  Object.keys(defaults).map(function(i) {\n    if (!(i in opts)) opts[i] = defaults[i];\n  });\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName());\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node';\n  }\n\n  // https://github.com/webpack/webpack/issues/4175#issuecomment-342931035\n  var requireFunc =\n    typeof __webpack_require__ === 'function'\n      ? __non_webpack_require__\n      : require;\n\n  var tries = [],\n    i = 0,\n    l = opts.try.length,\n    n,\n    b,\n    err;\n\n  for (; i < l; i++) {\n    n = join.apply(\n      null,\n      opts.try[i].map(function(p) {\n        return opts[p] || p;\n      })\n    );\n    tries.push(n);\n    try {\n      b = opts.path ? requireFunc.resolve(n) : requireFunc(n);\n      if (!opts.path) {\n        b.path = n;\n      }\n      return b;\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND' &&\n          e.code !== 'QUALIFIED_PATH_RESOLUTION_FAILED' &&\n          !/not find/i.test(e.message)) {\n        throw e;\n      }\n    }\n  }\n\n  err = new Error(\n    'Could not locate the bindings file. Tried:\\n' +\n      tries\n        .map(function(a) {\n          return opts.arrow + a;\n        })\n        .join('\\n')\n  );\n  err.tries = tries;\n  throw err;\n}\nmodule.exports = exports = bindings;\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName(calling_file) {\n  var origPST = Error.prepareStackTrace,\n    origSTL = Error.stackTraceLimit,\n    dummy = {},\n    fileName;\n\n  Error.stackTraceLimit = 10;\n\n  Error.prepareStackTrace = function(e, st) {\n    for (var i = 0, l = st.length; i < l; i++) {\n      fileName = st[i].getFileName();\n      if (fileName !== __filename) {\n        if (calling_file) {\n          if (fileName !== calling_file) {\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n    }\n  };\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy);\n  dummy.stack;\n\n  // cleanup\n  Error.prepareStackTrace = origPST;\n  Error.stackTraceLimit = origSTL;\n\n  // handle filename that starts with \"file://\"\n  var fileSchema = 'file://';\n  if (fileName.indexOf(fileSchema) === 0) {\n    fileName = fileURLToPath(fileName);\n  }\n\n  return fileName;\n};\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot(file) {\n  var dir = dirname(file),\n    prev;\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd();\n    }\n    if (\n      exists(join(dir, 'package.json')) ||\n      exists(join(dir, 'node_modules'))\n    ) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir;\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error(\n        'Could not find module root given file: \"' +\n          file +\n          '\". Do you have a `package.json` file? '\n      );\n    }\n    // Try the parent dir next\n    prev = dir;\n    dir = join(dir, '..');\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var usb = exports = module.exports = require('bindings')('usb_bindings');\nvar events = require('events')\nvar util = require('util')\n\nvar isBuffer = function(obj) {\n\treturn obj && obj instanceof Uint8Array\n}\n\nif (usb.INIT_ERROR) {\n\tconsole.warn(\"Failed to initialize libusb.\")\n\tusb.Device = function () { throw new Error(\"Device cannot be instantiated directly.\") };\n\tusb.Transfer = function () { throw new Error(\"Transfer cannot be instantiated directly.\") };\n\tusb.setDebugLevel = function () { };\n\tusb.getDeviceList = function () { return []; };\n\tusb._enableHotplugEvents = function () { };\n\tusb._disableHotplugEvents = function () { };\n}\n\nObject.keys(events.EventEmitter.prototype).forEach(function (key) {\n\texports[key] = events.EventEmitter.prototype[key];\n});\n\n// convenience method for finding a device by vendor and product id\nexports.findByIds = function(vid, pid) {\n\tvar devices = usb.getDeviceList()\n\n\tfor (var i = 0; i < devices.length; i++) {\n\t\tvar deviceDesc = devices[i].deviceDescriptor\n\t\tif ((deviceDesc.idVendor == vid) && (deviceDesc.idProduct == pid)) {\n\t\t\treturn devices[i]\n\t\t}\n\t}\n}\n\nusb.Device.prototype.timeout = 1000\n\nusb.Device.prototype.open = function(defaultConfig){\n\tthis.__open()\n\tif (defaultConfig === false) return\n\tthis.interfaces = []\n\tvar len = this.configDescriptor ? this.configDescriptor.interfaces.length : 0\n\tfor (var i=0; i<len; i++){\n\t\tthis.interfaces[i] = new Interface(this, i)\n\t}\n}\n\nusb.Device.prototype.close = function(){\n\tthis.__close()\n\tthis.interfaces = null\n}\n\nObject.defineProperty(usb.Device.prototype, \"configDescriptor\", {\n\tget: function() {\n\t\ttry {\n\t\t\treturn this._configDescriptor || (this._configDescriptor = this.__getConfigDescriptor())\n\t\t} catch(e) {\n\t\t\t// Check descriptor exists\n\t\t\tif (e.errno == usb.LIBUSB_ERROR_NOT_FOUND) return null;\n\t\t\tthrow e;\n\t\t}\n\t}\n});\n\nObject.defineProperty(usb.Device.prototype, \"allConfigDescriptors\", {\n\tget: function() {\n\t\ttry {\n\t\t\treturn this._allConfigDescriptors || (this._allConfigDescriptors = this.__getAllConfigDescriptors())\n\t\t} catch(e) {\n\t\t\t// Check descriptors exist\n\t\t\tif (e.errno == usb.LIBUSB_ERROR_NOT_FOUND) return [];\n\t\t\tthrow e;\n\t\t}\n\t}\n});\n\nObject.defineProperty(usb.Device.prototype, \"parent\", {\n\tget: function() {\n\t\treturn this._parent || (this._parent = this.__getParent())\n\t}\n});\n\nusb.Device.prototype.interface = function(addr){\n\tif (!this.interfaces){\n\t\tthrow new Error(\"Device must be open before searching for interfaces\")\n\t}\n\taddr = addr || 0\n\tfor (var i=0; i<this.interfaces.length; i++){\n\t\tif (this.interfaces[i].interfaceNumber == addr){\n\t\t\treturn this.interfaces[i]\n\t\t}\n\t}\n}\n\nvar SETUP_SIZE = usb.LIBUSB_CONTROL_SETUP_SIZE\n\nusb.Device.prototype.controlTransfer =\nfunction(bmRequestType, bRequest, wValue, wIndex, data_or_length, callback){\n\tvar self = this\n\tvar isIn = !!(bmRequestType & usb.LIBUSB_ENDPOINT_IN)\n\tvar wLength\n\n\tif (isIn){\n\t\tif (!(data_or_length >= 0)){\n\t\t\tthrow new TypeError(\"Expected size number for IN transfer (based on bmRequestType)\")\n\t\t}\n\t\twLength = data_or_length\n\t}else{\n\t\tif (!isBuffer(data_or_length)){\n\t\t\tthrow new TypeError(\"Expected buffer for OUT transfer (based on bmRequestType)\")\n\t\t}\n\t\twLength = data_or_length.length\n\t}\n\n\t// Buffer for the setup packet\n\t// http://libusbx.sourceforge.net/api-1.0/structlibusb__control__setup.html\n\tvar buf = Buffer.alloc(wLength + SETUP_SIZE)\n\tbuf.writeUInt8(   bmRequestType, 0)\n\tbuf.writeUInt8(   bRequest,      1)\n\tbuf.writeUInt16LE(wValue,        2)\n\tbuf.writeUInt16LE(wIndex,        4)\n\tbuf.writeUInt16LE(wLength,       6)\n\n\tif (!isIn){\n\t\tbuf.set(data_or_length, SETUP_SIZE)\n\t}\n\n\tvar transfer = new usb.Transfer(this, 0, usb.LIBUSB_TRANSFER_TYPE_CONTROL, this.timeout,\n\t\tfunction(error, buf, actual){\n\t\t\tif (callback){\n\t\t\t\tif (isIn){\n\t\t\t\t\tcallback.call(self, error, buf.slice(SETUP_SIZE, SETUP_SIZE + actual))\n\t\t\t\t}else{\n\t\t\t\t\tcallback.call(self, error)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t)\n\n\ttry {\n\t\ttransfer.submit(buf)\n\t} catch (e) {\n\t\tif (callback){\n\t\t\tprocess.nextTick(function() { callback.call(self, e); });\n\t\t}\n\t}\n\treturn this;\n}\n\nusb.Device.prototype.getStringDescriptor = function (desc_index, callback) {\n\tvar langid = 0x0409;\n\tvar length = 255;\n\tthis.controlTransfer(\n\t\tusb.LIBUSB_ENDPOINT_IN,\n\t\tusb.LIBUSB_REQUEST_GET_DESCRIPTOR,\n\t\t((usb.LIBUSB_DT_STRING << 8) | desc_index),\n\t\tlangid,\n\t\tlength,\n\t\tfunction (error, buf) {\n\t\t\tif (error) return callback(error);\n\t\t\tcallback(undefined, buf.toString('utf16le', 2));\n\t\t}\n\t);\n}\n\nusb.Device.prototype.getBosDescriptor = function (callback) {\n\n\tif (this._bosDescriptor) {\n\t\t// Cached descriptor\n\t\treturn callback(undefined, this._bosDescriptor);\n\t}\n\n\tif (this.deviceDescriptor.bcdUSB < 0x201) {\n\t\t// BOS is only supported from USB 2.0.1\n\t\treturn callback(undefined, null);\n\t}\n\n\tthis.controlTransfer(\n\t\tusb.LIBUSB_ENDPOINT_IN,\n\t\tusb.LIBUSB_REQUEST_GET_DESCRIPTOR,\n\t\t(usb.LIBUSB_DT_BOS << 8),\n\t\t0,\n\t\tusb.LIBUSB_DT_BOS_SIZE,\n\t\tfunction (error, buffer) {\n\t\t\tif (error) {\n\t\t\t\t// Check BOS descriptor exists\n\t\t\t\tif (error.errno == usb.LIBUSB_TRANSFER_STALL) return callback(undefined, null);\n\t\t\t\treturn callback(error, null);\n\t\t\t}\n\n\t\t\tvar totalLength = buffer.readUInt16LE(2);\n\t\t\tthis.controlTransfer(\n\t\t\t\tusb.LIBUSB_ENDPOINT_IN,\n\t\t\t\tusb.LIBUSB_REQUEST_GET_DESCRIPTOR,\n\t\t\t\t(usb.LIBUSB_DT_BOS << 8),\n\t\t\t\t0,\n\t\t\t\ttotalLength,\n\t\t\t\tfunction (error, buffer) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\t// Check BOS descriptor exists\n\t\t\t\t\t\tif (error.errno == usb.LIBUSB_TRANSFER_STALL) return callback(undefined, null);\n\t\t\t\t\t\treturn callback(error, null);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar descriptor = {\n\t\t\t\t\t\tbLength: buffer.readUInt8(0),\n\t\t\t\t\t\tbDescriptorType: buffer.readUInt8(1),\n\t\t\t\t\t\twTotalLength: buffer.readUInt16LE(2),\n\t\t\t\t\t\tbNumDeviceCaps: buffer.readUInt8(4),\n\t\t\t\t\t\tcapabilities: []\n\t\t\t\t\t};\n\n\t\t\t\t\tvar i = usb.LIBUSB_DT_BOS_SIZE;\n\t\t\t\t\twhile (i < descriptor.wTotalLength) {\n\t\t\t\t\t\tvar capability = {\n\t\t\t\t\t\t\tbLength: buffer.readUInt8(i + 0),\n\t\t\t\t\t\t\tbDescriptorType: buffer.readUInt8(i + 1),\n\t\t\t\t\t\t\tbDevCapabilityType: buffer.readUInt8(i + 2)\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tcapability.dev_capability_data = buffer.slice(i + 3, i + capability.bLength);\n\t\t\t\t\t\tdescriptor.capabilities.push(capability);\n\t\t\t\t\t\ti += capability.bLength;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Cache descriptor\n\t\t\t\t\tthis._bosDescriptor = descriptor;\n\t\t\t\t\tcallback(undefined, this._bosDescriptor);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t);\n}\n\nusb.Device.prototype.getCapabilities = function (callback) {\n\tvar capabilities = [];\n\tvar self = this;\n\n\tthis.getBosDescriptor(function(error, descriptor) {\n\t\tif (error) return callback(error, null);\n\n\t\tvar len = descriptor ? descriptor.capabilities.length : 0\n\t\tfor (var i=0; i<len; i++){\n\t\t\tcapabilities.push(new Capability(self, i))\n\t\t}\n\n\t\tcallback(undefined, capabilities);\n\t});\n}\n\nusb.Device.prototype.setConfiguration = function(desired, cb) {\n\tvar self = this;\n\tthis.__setConfiguration(desired, function(err) {\n\t\tif (!err) {\n\t\t\tthis.interfaces = []\n\t\t\tvar len = this.configDescriptor ? this.configDescriptor.interfaces.length : 0\n\t\t\tfor (var i=0; i<len; i++) {\n\t\t\t\tthis.interfaces[i] = new Interface(this, i)\n\t\t\t}\n\t\t}\n\t\tcb.call(self, err)\n\t});\n}\n\nfunction Interface(device, id){\n\tthis.device = device\n\tthis.id = id\n\tthis.altSetting = 0;\n\tthis.__refresh()\n}\n\nInterface.prototype.__refresh = function(){\n\tthis.descriptor = this.device.configDescriptor.interfaces[this.id][this.altSetting]\n\tthis.interfaceNumber = this.descriptor.bInterfaceNumber\n\tthis.endpoints = []\n\tvar len = this.descriptor.endpoints.length\n\tfor (var i=0; i<len; i++){\n\t\tvar desc = this.descriptor.endpoints[i]\n\t\tvar c = (desc.bEndpointAddress&usb.LIBUSB_ENDPOINT_IN)?InEndpoint:OutEndpoint\n\t\tthis.endpoints[i] = new c(this.device, desc)\n\t}\n}\n\nInterface.prototype.claim = function(){\n\tthis.device.__claimInterface(this.id)\n}\n\nInterface.prototype.release = function(closeEndpoints, cb){\n\tvar self = this;\n\tif (typeof closeEndpoints == 'function') {\n\t\tcb = closeEndpoints;\n\t\tcloseEndpoints = null;\n\t}\n\n\tif (!closeEndpoints || this.endpoints.length == 0) {\n\t\tnext();\n\t} else {\n\t\tvar n = self.endpoints.length;\n\t\tself.endpoints.forEach(function (ep, i) {\n\t\t\tif (ep.pollActive) {\n\t\t\t\tep.once('end', function () {\n\t\t\t\t\tif (--n == 0) next();\n\t\t\t\t});\n\t\t\t\tep.stopPoll();\n\t\t\t} else {\n\t\t\t\tif (--n == 0) next();\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction next () {\n\t\tself.device.__releaseInterface(self.id, function(err){\n\t\t\tif (!err){\n\t\t\t\tself.altSetting = 0;\n\t\t\t\tself.__refresh()\n\t\t\t}\n\t\t\tcb.call(self, err)\n\t\t})\n\t}\n}\n\nInterface.prototype.isKernelDriverActive = function(){\n\treturn this.device.__isKernelDriverActive(this.id)\n}\n\nInterface.prototype.detachKernelDriver = function() {\n\treturn this.device.__detachKernelDriver(this.id)\n};\n\nInterface.prototype.attachKernelDriver = function() {\n\treturn this.device.__attachKernelDriver(this.id)\n};\n\n\nInterface.prototype.setAltSetting = function(altSetting, cb){\n\tvar self = this;\n\tthis.device.__setInterface(this.id, altSetting, function(err){\n\t\tif (!err){\n\t\t\tself.altSetting = altSetting;\n\t\t\tself.__refresh();\n\t\t}\n\t\tcb.call(self, err)\n\t})\n}\n\nInterface.prototype.endpoint = function(addr){\n\tfor (var i=0; i<this.endpoints.length; i++){\n\t\tif (this.endpoints[i].address == addr){\n\t\t\treturn this.endpoints[i]\n\t\t}\n\t}\n}\n\nfunction Capability(device, id){\n\tthis.device = device\n\tthis.id = id\n\tthis.descriptor = this.device._bosDescriptor.capabilities[this.id]\n\tthis.type = this.descriptor.bDevCapabilityType\n\tthis.data = this.descriptor.dev_capability_data\n}\n\nfunction Endpoint(device, descriptor){\n\tthis.device = device\n\tthis.descriptor = descriptor\n\tthis.address = descriptor.bEndpointAddress\n\tthis.transferType = descriptor.bmAttributes&0x03\n}\nutil.inherits(Endpoint, events.EventEmitter)\n\nEndpoint.prototype.timeout = 0\n\nEndpoint.prototype.clearHalt = function(callback){\n\treturn this.device.__clearHalt(this.address, callback);\n}\n\nEndpoint.prototype.makeTransfer = function(timeout, callback){\n\treturn new usb.Transfer(this.device, this.address, this.transferType, timeout, callback)\n}\n\nEndpoint.prototype.startPoll = function(nTransfers, transferSize, callback){\n\tif (this.pollTransfers){\n\t\tthrow new Error(\"Polling already active\")\n\t}\n\n\tnTransfers = nTransfers || 3;\n\tthis.pollTransferSize = transferSize || this.descriptor.wMaxPacketSize;\n\tthis.pollActive = true\n\tthis.pollPending = 0\n\n\tvar transfers = []\n\tfor (var i=0; i<nTransfers; i++){\n\t\ttransfers[i] = this.makeTransfer(0, callback)\n\t}\n\treturn transfers;\n}\n\nEndpoint.prototype.stopPoll = function(cb){\n\tif (!this.pollTransfers) {\n\t\tthrow new Error('Polling is not active.');\n\t}\n\tfor (var i=0; i<this.pollTransfers.length; i++){\n\t\ttry {\n\t\t\tthis.pollTransfers[i].cancel()\n\t\t} catch (err) {\n\t\t\tthis.emit('error', err);\n\t\t}\n\t}\n\tthis.pollActive = false\n\tif (cb) this.once('end', cb);\n}\n\nfunction InEndpoint(device, descriptor){\n\tEndpoint.call(this, device, descriptor)\n}\n\nexports.InEndpoint = InEndpoint\nutil.inherits(InEndpoint, Endpoint)\nInEndpoint.prototype.direction = \"in\"\n\nInEndpoint.prototype.transfer = function(length, cb){\n\tvar self = this\n\tvar buffer = Buffer.alloc(length)\n\n\tfunction callback(error, buf, actual){\n\t\tcb.call(self, error, buffer.slice(0, actual))\n\t}\n\n\ttry {\n\t\tthis.makeTransfer(this.timeout, callback).submit(buffer)\n\t} catch (e) {\n\t\tprocess.nextTick(function() { cb.call(self, e); });\n\t}\n\treturn this;\n}\n\nInEndpoint.prototype.startPoll = function(nTransfers, transferSize){\n\tvar self = this\n\tthis.pollTransfers = InEndpoint.super_.prototype.startPoll.call(this, nTransfers, transferSize, transferDone)\n\n\tfunction transferDone(error, buf, actual){\n\t\tif (!error){\n\t\t\tself.emit(\"data\", buf.slice(0, actual))\n\t\t}else if (error.errno != usb.LIBUSB_TRANSFER_CANCELLED){\n\t\t\tself.emit(\"error\", error)\n\t\t\tself.stopPoll()\n\t\t}\n\n\t\tif (self.pollActive){\n\t\t\tstartTransfer(this)\n\t\t}else{\n\t\t\tself.pollPending--\n\n\t\t\tif (self.pollPending == 0){\n\t\t\t\tdelete self.pollTransfers;\n\t\t\t\tself.emit('end')\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction startTransfer(t){\n\t\ttry {\n\t\t\tt.submit(Buffer.alloc(self.pollTransferSize), transferDone);\n\t\t} catch (e) {\n\t\t\tself.emit(\"error\", e);\n\t\t\tself.stopPoll();\n\t\t}\n\t}\n\n\tthis.pollTransfers.forEach(startTransfer)\n\tself.pollPending = this.pollTransfers.length\n}\n\n\n\nfunction OutEndpoint(device, descriptor){\n\tEndpoint.call(this, device, descriptor)\n}\nexports.OutEndpoint = OutEndpoint\nutil.inherits(OutEndpoint, Endpoint)\nOutEndpoint.prototype.direction = \"out\"\n\nOutEndpoint.prototype.transfer = function(buffer, cb){\n\tvar self = this\n\tif (!buffer){\n\t\tbuffer = Buffer.alloc(0)\n\t}else if (!isBuffer(buffer)){\n\t\tbuffer = Buffer.from(buffer)\n\t}\n\n\tfunction callback(error, buf, actual){\n\t\tif (cb) cb.call(self, error)\n\t}\n\n\ttry {\n\t\tthis.makeTransfer(this.timeout, callback).submit(buffer);\n\t} catch (e) {\n\t\tprocess.nextTick(function() { callback(e); });\n\t}\n\n\treturn this;\n}\n\nOutEndpoint.prototype.transferWithZLP = function (buf, cb) {\n\tif (buf.length % this.descriptor.wMaxPacketSize == 0) {\n\t\tthis.transfer(buf);\n\t\tthis.transfer(Buffer.alloc(0), cb);\n\t} else {\n\t\tthis.transfer(buf, cb);\n\t}\n}\n\nvar hotplugListeners = 0;\nexports.on('newListener', function(name) {\n\tif (name !== 'attach' && name !== 'detach') return;\n\tif (++hotplugListeners === 1) {\n\t\tusb._enableHotplugEvents();\n\t}\n});\n\nexports.on('removeListener', function(name) {\n\tif (name !== 'attach' && name !== 'detach') return;\n\tif (--hotplugListeners === 0) {\n\t\tusb._disableHotplugEvents();\n\t}\n});\n","'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","/*\n* Node WebUSB\n* Copyright (c) 2019 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { EventEmitter } from \"events\";\n\n// tslint:disable:ban-types\n\n/**\n * @hidden\n */\nexport interface EventListeners<T> {\n    newListener: keyof T;\n    removeListener: keyof T;\n}\n\n/**\n * @hidden\n */\nexport interface TypedDispatcher<T> {\n    addEventListener<K extends keyof T>(type: K, listener: (this: this, event: T[K]) => void): void;\n    addEventListener<E extends keyof EventListeners<T>>(type: E, listener: (this: this, event: EventListeners<T>[E]) => void): void;\n    removeEventListener<K extends keyof T>(type: K, callback: (this: this, event: T[K]) => void): void;\n    removeEventListener<E extends keyof EventListeners<T>>(type: E, callback: (this: this, event: EventListeners<T>[E]) => void): void;\n    dispatchEvent<K extends keyof T>(event: T[K]): boolean;\n    addListener<K extends keyof T>(event: K, listener: (data: T[K]) => void): this;\n    addListener<E extends keyof EventListeners<T>>(event: E, listener: (data: EventListeners<T>[E]) => void): this;\n    on<K extends keyof T>(event: K, listener: (data: T[K]) => void): this;\n    on<E extends keyof EventListeners<T>>(event: E, listener: (data: EventListeners<T>[E]) => void): this;\n    once<K extends keyof T>(event: K, listener: (data: T[K]) => void): this;\n    once<E extends keyof EventListeners<T>>(event: E, listener: (data: EventListeners<T>[E]) => void): this;\n    prependListener<K extends keyof T>(event: K, listener: (data: T[K]) => void): this;\n    prependOnceListener<K extends keyof T>(event: K, listener: (data: T[K]) => void): this;\n    removeListener<K extends keyof T>(event: K, listener: (data: T[K]) => void): this;\n    removeListener<E extends keyof EventListeners<T>>(event: E, listener: (data: EventListeners<T>[E]) => void): this;\n    removeAllListeners<K extends keyof T>(event?: K): this;\n    removeAllListeners<E extends keyof EventListeners<T>>(event?: E): this;\n    listeners<K extends keyof T>(event: K): Array<Function>;\n    listeners<E extends keyof EventListeners<T>>(event: EventListeners<T>[E]): Array<Function>;\n    emit<K extends keyof T>(event: K, data: T[K]): boolean;\n    eventNames<K extends keyof T, E extends keyof EventListeners<T>>(): Array<K | E>;\n    listenerCount<K extends keyof T>(type: K): number;\n    listenerCount<E extends keyof EventListeners<T>>(type: EventListeners<T>[E]): number;\n    setMaxListeners(n: number): this;\n    getMaxListeners(): number;\n}\n\n/**\n * @hidden\n */\nexport class EventDispatcher extends EventEmitter implements EventTarget {\n\n    private isEventListenerObject = (listener: EventListenerOrEventListenerObject): listener is EventListenerObject => (listener as EventListenerObject).handleEvent !== undefined;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject | null) {\n        if (listener) {\n            const handler = this.isEventListenerObject(listener) ? listener.handleEvent : listener;\n            super.addListener(type, handler);\n        }\n    }\n\n    public removeEventListener(type: string, callback: EventListenerOrEventListenerObject | null) {\n        if (callback) {\n            const handler = this.isEventListenerObject(callback) ? callback.handleEvent : callback;\n            super.removeListener(type, handler);\n        }\n    }\n\n    public dispatchEvent(event: Event): boolean {\n        return super.emit(event.type, event);\n    }\n}\n","/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { USBInterface } from \"./interface\";\nimport { W3CUSBConfiguration } from \"./interfaces\";\n\n/**\n * USB Configuration\n */\nexport class USBConfiguration implements W3CUSBConfiguration {\n\n    /**\n     * The value of this configuration\n     */\n    public readonly configurationValue: number = null;\n\n    /**\n     * The name of this configuration\n     */\n    public readonly configurationName?: string = null;\n\n    /**\n     * The array of interfaces on this configuration\n     */\n    public readonly interfaces: Array<USBInterface> = [];\n\n    /**\n     * @hidden\n     */\n    constructor(init?: Partial<USBConfiguration>) {\n        this.configurationValue = init.configurationValue;\n        this.configurationName = init.configurationName;\n        this.interfaces = init.interfaces;\n    }\n}\n","/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { adapter } from \"./adapter\";\nimport { W3CUSBInterface } from \"./interfaces\";\nimport { USBAlternateInterface } from \"./alternate\";\n\n/**\n * USB Interface\n */\nexport class USBInterface implements W3CUSBInterface {\n\n    /**\n     * Number of this interface\n     */\n    public readonly interfaceNumber: number = null;\n\n    /**\n     * Array of alternate interfaces\n     */\n    public readonly alternates: Array<USBAlternateInterface> = [];\n\n    private _claimed: boolean = false;\n    /**\n     * Whether this interface is claimed\n     */\n    public get claimed(): boolean {\n        return this._claimed;\n    }\n\n    private _currentAlternate: number = 0;\n    /**\n     * Return the current alternate interface\n     */\n    public get alternate(): USBAlternateInterface {\n        return this.alternates.find(alternate => alternate.alternateSetting === this._currentAlternate);\n    }\n\n    /**\n     * @hidden\n     */\n    public readonly _handle: string = null;\n\n    /**\n     * @hidden\n     */\n    constructor(init?: Partial<USBInterface>) {\n        this.interfaceNumber = init.interfaceNumber;\n        this.alternates = init.alternates;\n\n        this._handle = init._handle;\n    }\n\n    /**\n     * @hidden\n     */\n    public selectAlternateInterface(alternateSetting: number): Promise<void> {\n        return adapter.selectAlternateInterface(this._handle, this.interfaceNumber, alternateSetting)\n        .then(() => {\n            this._currentAlternate = alternateSetting;\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public claimInterface(): Promise<void> {\n        return adapter.claimInterface(this._handle, this.interfaceNumber)\n        .then(() => {\n            this._claimed = true;\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public releaseInterface(): Promise<void> {\n        return adapter.releaseInterface(this._handle, this.interfaceNumber)\n        .then(() => {\n            this._claimed = false;\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public reset() {\n        this._currentAlternate = 0;\n    }\n}\n","/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { USBEndpoint } from \"./endpoint\";\nimport { W3CUSBAlternateInterface } from \"./interfaces\";\n\n/**\n * USB Alternate Interface\n */\nexport class USBAlternateInterface implements W3CUSBAlternateInterface {\n\n    /**\n     * The alternate setting for this interface\n     */\n    public readonly alternateSetting: number = null;\n\n    /**\n     * The class of this interface\n     */\n    public readonly interfaceClass: number = null;\n\n    /**\n     * The sub class of this interface\n     */\n    public readonly interfaceSubclass: number = null;\n\n    /**\n     * The protocol of this interface\n     */\n    public readonly interfaceProtocol: number = null;\n\n    /**\n     * The name of this interface\n     */\n    public readonly interfaceName?: string = null;\n\n    /**\n     * The array of endpoints on this interface\n     */\n    public readonly endpoints: Array<USBEndpoint> = [];\n\n    /**\n     * @hidden\n     */\n    constructor(init?: Partial<USBAlternateInterface>) {\n        this.alternateSetting = init.alternateSetting;\n        this.interfaceClass = init.interfaceClass;\n        this.interfaceSubclass = init.interfaceSubclass;\n        this.interfaceProtocol = init.interfaceProtocol;\n        this.interfaceName = init.interfaceName;\n        this.endpoints = init.endpoints;\n    }\n}\n","/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { W3CUSBEndpoint } from \"./interfaces\";\n\n/**\n * USB Endpoint\n */\nexport class USBEndpoint implements W3CUSBEndpoint {\n\n    /**\n     * The number of this endpoint\n     */\n    public readonly endpointNumber: number = null;\n\n    /**\n     * The direction of this endpoint\n     */\n    public readonly direction: USBDirection = null;\n\n    /**\n     * The type of this endpoint\n     */\n    public readonly type: USBEndpointType = null;\n\n    /**\n     * The packet size of this endpoint\n     */\n    public readonly packetSize: number = null;\n\n    /**\n     * @hidden\n     */\n    constructor(init?: Partial<USBEndpoint>) {\n        this.endpointNumber = init.endpointNumber;\n        this.direction = init.direction;\n        this.type = init.type;\n        this.packetSize = init.packetSize;\n    }\n}\n","/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { LIBUSB_ENDPOINT_IN } from \"usb\";\nimport { USBConfiguration } from \"./configuration\";\nimport { adapter } from \"./adapter\";\nimport { W3CUSBDevice } from \"./interfaces\";\n\n/**\n * @hidden\n */\ninterface EndpointResult {\n    endpoint: USBEndpoint;\n    iface: USBInterface;\n}\n\n/**\n * USB Device\n */\nexport class USBDevice implements W3CUSBDevice {\n\n    /**\n     * Major USB protocol version supported by the device\n     */\n    public readonly usbVersionMajor: number;\n\n    /**\n     * Minor USB protocol version supported by the device\n     */\n    public readonly usbVersionMinor: number;\n\n    /**\n     * Sub minor USB protocol version supported by the device\n     */\n    public readonly usbVersionSubminor: number;\n\n    /**\n     * Communication interface class of the device\n     */\n    public readonly deviceClass: number;\n\n    /**\n     * Communication interface sub class of the device\n     */\n    public readonly deviceSubclass: number;\n\n    /**\n     * Communication interface protocol of the device\n     */\n    public readonly deviceProtocol: number;\n\n    /**\n     * Vendor Identifier of the device\n     */\n    public readonly vendorId: number;\n\n    /**\n     * Product Identifier of the device\n     */\n    public readonly productId: number;\n\n    /**\n     * Major version of the device\n     */\n    public readonly deviceVersionMajor: number;\n\n    /**\n     * Minor version of the device\n     */\n    public readonly deviceVersionMinor: number;\n\n    /**\n     * Sub minor version of the device\n     */\n    public readonly deviceVersionSubminor: number;\n\n    /**\n     * Manufacturer name of the device\n     */\n    public readonly manufacturerName: string = null;\n\n    /**\n     * Product name of the device\n     */\n    public readonly productName: string = null;\n\n    /**\n     * Serial number of the device\n     */\n    public readonly serialNumber: string = null;\n\n    private _configurations: Array<USBConfiguration> = [];\n    /**\n     * List of configurations supported by the device\n     */\n    public get configurations(): Array<USBConfiguration> {\n        return this._configurations;\n    }\n\n    /**\n     * @hidden\n     */\n    public _currentConfiguration: number = null;\n    /**\n     * The currently selected configuration\n     */\n    public get configuration(): USBConfiguration {\n        return this.configurations.find(configuration => configuration.configurationValue === this._currentConfiguration);\n    }\n\n    /**\n     * @hidden\n     */\n    public get connected(): boolean {\n        return adapter.getConnected(this._handle);\n    }\n\n    /**\n     * A flag indicating whether the device is open\n     */\n    public get opened(): boolean {\n        return adapter.getOpened(this._handle);\n    }\n\n    /**\n     * URL advertised by the device (not part of Web USB specification)\n     */\n    public readonly url: string = null;\n\n    /**\n     * @hidden\n     */\n    public readonly _maxPacketSize: number = 0;\n\n    /**\n     * @hidden\n     */\n    public readonly _handle: string = null;\n\n    /**\n     * @hidden\n     */\n    constructor(init?: Partial<USBDevice>) {\n        this.usbVersionMajor = init.usbVersionMajor;\n        this.usbVersionMinor = init.usbVersionMinor;\n        this.usbVersionSubminor = init.usbVersionSubminor;\n        this.deviceClass = init.deviceClass;\n        this.deviceSubclass = init.deviceSubclass;\n        this.deviceProtocol = init.deviceProtocol;\n        this.vendorId = init.vendorId;\n        this.productId = init.productId;\n        this.deviceVersionMajor = init.deviceVersionMajor;\n        this.deviceVersionMinor = init.deviceVersionMinor;\n        this.deviceVersionSubminor = init.deviceVersionSubminor;\n\n        this.manufacturerName = init.manufacturerName;\n        this.productName = init.productName;\n        this.serialNumber = init.serialNumber;\n\n        this._configurations = init.configurations;\n\n        this.url = init.url;\n        this._maxPacketSize = init._maxPacketSize;\n        this._handle = init._handle;\n        this._currentConfiguration = init._currentConfiguration;\n    }\n\n    private getEndpoint(direction: USBDirection, endpointNumber: number): EndpointResult {\n        let endpoint = null;\n        let iface = null;\n\n        this.configuration.interfaces.some(usbInterface => {\n            endpoint = usbInterface.alternate.endpoints.find(usbEndpoint => {\n                return (usbEndpoint.endpointNumber === endpointNumber && usbEndpoint.direction === direction);\n            });\n\n            if (endpoint) iface = usbInterface;\n            return endpoint;\n        });\n\n        return {\n            endpoint: endpoint,\n            iface: iface\n        };\n    }\n\n    private setupInvalid(setup: USBControlTransferParameters): string {\n        if (setup.recipient === \"interface\") {\n            const interfaceNumber = setup.index & 0xff; // lower 8 bits\n            const iface = this.configuration.interfaces.find(usbInterface => usbInterface.interfaceNumber === interfaceNumber);\n            if (!iface) return \"interface not found\";\n            if (!iface.claimed) return \"invalid state\";\n\n        } else if (setup.recipient === \"endpoint\") {\n            const endpointNumber = setup.index & 0x0f; // lower 4 bits\n            const direction = setup.index & LIBUSB_ENDPOINT_IN ? \"in\" : \"out\";\n\n            const result = this.getEndpoint(direction, endpointNumber);\n            if (!result.endpoint) return \"endpoint not found\";\n            if (!result.iface.claimed) return \"invalid state\";\n        }\n    }\n\n    /**\n     * Opens the device\n     */\n    public open(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"open error: device not found\"));\n            if (this.opened) return resolve();\n\n            adapter.open(this._handle)\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`open error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * Closes the device\n     */\n    public close(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"close error: device not found\"));\n            if (!this.opened) return resolve();\n\n            const releaseInterfacePromises = this.configuration.interfaces.map(\n                iface => this.releaseInterface(iface.interfaceNumber));\n\n            Promise.all(releaseInterfacePromises)\n            .catch(_error => { /* Ignore */ })\n            .then(() => adapter.close(this._handle))\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`close error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * Select a configuration for the device\n     * @param configurationValue The configuration value to select\n     * @returns Promise containing any error\n     */\n    public selectConfiguration(configurationValue: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n\n            // Don't change the configuration if it's already set correctly\n            if (configurationValue === this._currentConfiguration) return resolve();\n\n            if (!this.connected) return reject(new Error(\"selectConfiguration error: device not found\"));\n\n            const config =  this.configurations.find(configuration => configuration.configurationValue === configurationValue);\n            if (!config) return reject(new Error(\"selectConfiguration error: configuration not found\"));\n\n            if (!this.opened) return reject(new Error(\"selectConfiguration error: invalid state\"));\n\n            adapter.selectConfiguration(this._handle, configurationValue)\n            .then(() => {\n                this._currentConfiguration = configurationValue;\n                this.configuration.interfaces.forEach(iface => iface.reset());\n                resolve();\n            })\n            .catch(error => {\n                reject(new Error(`selectConfiguration error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * Claim an interface on the device\n     * @param interfaceNumber The interface number to claim\n     * @returns Promise containing any error\n     */\n    public claimInterface(interfaceNumber: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"claimInterface error: device not found\"));\n\n            const iface = this.configuration.interfaces.find(usbInterface => usbInterface.interfaceNumber === interfaceNumber);\n            if (!iface) return reject(new Error(\"claimInterface error: interface not found\"));\n            if (!this.opened) return reject(new Error(\"claimInterface error: invalid state\"));\n            if (iface.claimed) return resolve();\n\n            iface.claimInterface()\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`claimInterface error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * Release an interface on the device\n     * @param interfaceNumber The interface number to release\n     * @returns Promise containing any error\n     */\n    public releaseInterface(interfaceNumber: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"releaseInterface error: device not found\"));\n\n            const iface = this.configuration.interfaces.find(usbInterface => usbInterface.interfaceNumber === interfaceNumber);\n            if (!iface) return reject(new Error(\"releaseInterface error: interface not found\"));\n            if (!this.opened) return reject(new Error(\"releaseInterface error: invalid state\"));\n            if (!iface.claimed) return resolve();\n\n            iface.releaseInterface()\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`releaseInterface error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * Select an alternate interface on the device\n     * @param interfaceNumber The interface number to change\n     * @param alternateSetting The alternate setting to use\n     * @returns Promise containing any error\n     */\n    public selectAlternateInterface(interfaceNumber: number, alternateSetting: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"selectAlternateInterface error: device not found\"));\n\n            const iface = this.configuration.interfaces.find(usbInterface => usbInterface.interfaceNumber === interfaceNumber);\n            if (!iface) return reject(new Error(\"selectAlternateInterface error: interface not found\"));\n\n            if (!this.opened || !iface.claimed) return reject(new Error(\"selectAlternateInterface error: invalid state\"));\n\n            iface.selectAlternateInterface(alternateSetting)\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`selectAlternateInterface error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * Undertake a control transfer in from the device\n     *\n     * @param setup The USB control transfer parameters\n     * @param length The amount of data to transfer\n     * @returns Promise containing a result\n     */\n    public controlTransferIn(setup: USBControlTransferParameters, length: number): Promise<USBInTransferResult> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"controlTransferIn error: device not found\"));\n            if (!this.opened) return reject(new Error(\"controlTransferIn error: invalid state\"));\n\n            const setupError = this.setupInvalid(setup);\n            if (setupError) return reject(new Error(`controlTransferIn error: ${setupError}`));\n\n            adapter.controlTransferIn(this._handle, setup, length)\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`controlTransferIn error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * Undertake a control transfer out to the device\n     *\n     * __Note:__ The bytesWritten always set to the length of the data\n     *\n     * @param setup The USB control transfer parameters\n     * @param data The data to transfer\n     * @returns Promise containing a result\n     */\n    public controlTransferOut(setup: USBControlTransferParameters, data?: BufferSource): Promise<USBOutTransferResult> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"controlTransferOut error: device not found\"));\n            if (!this.opened) return reject(new Error(\"controlTransferOut error: invalid state\"));\n\n            const setupError = this.setupInvalid(setup);\n            if (setupError) return reject(new Error(`controlTransferOut error: ${setupError}`));\n\n            adapter.controlTransferOut(this._handle, setup, data)\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`controlTransferOut error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * Clear a halt condition on an endpoint\n     *\n     * @param direction The direction of the endpoint to clear\n     * @param endpointNumber The endpoint number of the endpoint to clear\n     * @returns Promise containing any error\n     */\n    public clearHalt(direction: USBDirection, endpointNumber: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"clearHalt error: device not found\"));\n\n            const result = this.getEndpoint(direction, endpointNumber);\n            if (!result.endpoint) return reject(new Error(\"clearHalt error: endpoint not found\"));\n            if (!this.opened || !result.iface.claimed) return reject(new Error(\"clearHalt error: invalid state\"));\n\n            adapter.clearHalt(this._handle, direction, endpointNumber)\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`clearHalt error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * Undertake a transfer in from the device\n     *\n     * @param endpointNumber The number of the endpoint to transfer from\n     * @param length The amount of data to transfer\n     * @returns Promise containing a result\n     */\n    public transferIn(endpointNumber: number, length: number): Promise<USBInTransferResult> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"transferIn error: device not found\"));\n\n            const result = this.getEndpoint(\"in\", endpointNumber);\n            if (!result.endpoint) return reject(new Error(\"transferIn error: endpoint not found\"));\n            if (result.endpoint.type !== \"interrupt\" && result.endpoint.type !== \"bulk\") return reject(new Error(\"transferIn error: invalid access\"));\n            if (!this.opened || !result.iface.claimed) return reject(new Error(\"transferIn error: invalid state\"));\n\n            adapter.transferIn(this._handle, endpointNumber, length)\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`transferIn error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * Undertake a transfer out to the device\n     *\n     * __Note:__ The bytesWritten always set to the length of the data\n     *\n     * @param endpointNumber The number of the endpoint to transfer to\n     * @param data The data to transfer\n     * @returns Promise containing a result\n     */\n    public transferOut(endpointNumber: number, data: BufferSource): Promise<USBOutTransferResult> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"transferOut error: device not found\"));\n\n            const result = this.getEndpoint(\"out\", endpointNumber);\n            if (!result.endpoint) return reject(new Error(\"transferOut error: endpoint not found\"));\n            if (result.endpoint.type !== \"interrupt\" && result.endpoint.type !== \"bulk\") return reject(new Error(\"transferOut error: invalid access\"));\n            if (!this.opened || !result.iface.claimed) return reject(new Error(\"transferOut error: invalid state\"));\n\n            adapter.transferOut(this._handle, endpointNumber, data)\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`transferOut error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * @hidden\n     * Undertake an isochronous transfer in from the device\n     * @param endpointNumber The number of the endpoint to transfer from\n     * @param packetLengths An array of packet lengths outlining the amount to transfer\n     * @returns Promise containing a result\n     */\n    public isochronousTransferIn(endpointNumber: number, packetLengths: Array<number>): Promise<USBIsochronousInTransferResult> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"isochronousTransferIn error: device not found\"));\n\n            const result = this.getEndpoint(\"in\", endpointNumber);\n            if (!result.endpoint) return reject(new Error(\"isochronousTransferIn error: endpoint not found\"));\n            if (result.endpoint.type !== \"isochronous\") return reject(new Error(\"isochronousTransferIn error: invalid access\"));\n            if (!this.opened || !result.iface.claimed) return reject(new Error(\"isochronousTransferIn error: invalid state\"));\n\n            adapter.isochronousTransferIn(this._handle, endpointNumber, packetLengths)\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`isochronousTransferIn error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * @hidden\n     * Undertake an isochronous transfer out to the device\n     * @param endpointNumber The number of the endpoint to transfer to\n     * @param data The data to transfer\n     * @param packetLengths An array of packet lengths outlining the amount to transfer\n     * @returns Promise containing a result\n     */\n    public isochronousTransferOut(endpointNumber: number, data: BufferSource, packetLengths: Array<number>): Promise<USBIsochronousOutTransferResult> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"isochronousTransferOut error: device not found\"));\n\n            const result = this.getEndpoint(\"out\", endpointNumber);\n            if (!result.endpoint) return reject(new Error(\"isochronousTransferOut error: endpoint not found\"));\n            if (result.endpoint.type !== \"isochronous\") return reject(new Error(\"isochronousTransferOut error: invalid access\"));\n            if (!this.opened || !result.iface.claimed) return reject(new Error(\"isochronousTransferOut error: invalid state\"));\n\n            adapter.isochronousTransferOut(this._handle, endpointNumber, data, packetLengths)\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`isochronousTransferOut error: ${error}`));\n            });\n        });\n    }\n\n    /**\n     * Soft reset the device\n     * @returns Promise containing any error\n     */\n    public reset(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.connected) return reject(new Error(\"reset error: device not found\"));\n            if (!this.opened) return reject(new Error(\"reset error: invalid state\"));\n\n            adapter.reset(this._handle)\n            .then(resolve)\n            .catch(error => {\n                reject(new Error(`reset error: ${error}`));\n            });\n        });\n    }\n}\n","/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { EventEmitter } from \"events\";\nimport {\n    getDeviceList,\n    Device,\n    Endpoint,\n    InEndpoint,\n    OutEndpoint,\n    ConfigDescriptor,\n    InterfaceDescriptor,\n    on,\n    removeListener,\n    LIBUSB_ENDPOINT_IN,\n    LIBUSB_ENDPOINT_OUT,\n    LIBUSB_TRANSFER_OVERFLOW,\n    LIBUSB_TRANSFER_STALL,\n    LIBUSB_TRANSFER_TYPE_INTERRUPT,\n    LIBUSB_TRANSFER_TYPE_BULK,\n    LIBUSB_RECIPIENT_DEVICE,\n    LIBUSB_RECIPIENT_INTERFACE,\n    LIBUSB_RECIPIENT_ENDPOINT,\n    LIBUSB_RECIPIENT_OTHER,\n    LIBUSB_REQUEST_TYPE_STANDARD,\n    LIBUSB_REQUEST_TYPE_CLASS,\n    LIBUSB_REQUEST_TYPE_VENDOR,\n    EndpointDescriptor,\n    DeviceDescriptor,\n    Capability\n} from \"usb\";\nimport { USBConfiguration } from \"./configuration\";\nimport { USBInterface } from \"./interface\";\nimport { USBAlternateInterface } from \"./alternate\";\nimport { USBEndpoint } from \"./endpoint\";\nimport { USBDevice } from \"./device\";\n\n/**\n * @hidden\n */\nconst DEFAULT_DELAY_TIMEOUT = 200;\n/**\n * @hidden\n */\nconst DEFAULT_RETRY_COUNT = 10;\n\n/**\n * @hidden\n */\nconst CONSTANTS = {\n    WEB_UUID: \"3408b638-09a9-47a0-8bfd-a0768815b665\",\n    LIBUSB_DT_BOS: 0x0f,\n    LIBUSB_DT_BOS_SIZE: 0x05,\n    LIBUSB_TRANSFER_TYPE_MASK: 0x03,\n    USB_VERSION: 0x201,\n    CAPABILITY_VERSION: 0x0100,\n    URL_REQUEST_TYPE: 0xC0,\n    URL_REQUEST_INDEX: 0x02,\n    CLEAR_FEATURE: 0x01,\n    ENDPOINT_HALT: 0x00\n};\n\n/**\n * @hidden\n */\nexport interface Adapter {\n    getConnected(handle: string): boolean;\n    getOpened(handle: string): boolean;\n\n    listUSBDevices(preFilters?: Array<USBDeviceFilter>): Promise<Array<USBDevice>>;\n    open(handle: string): Promise<void>;\n    close(handle: string): Promise<void>;\n    selectConfiguration(handle: string, id: number): Promise<void>;\n    claimInterface(handle: string, address: number): Promise<void>;\n    releaseInterface(handle: string, address: number): Promise<void>;\n    selectAlternateInterface(handle: string, interfaceNumber: number, alternateSetting: number): Promise<void>;\n    controlTransferIn(handle: string, setup: USBControlTransferParameters, length: number): Promise<USBInTransferResult>;\n    controlTransferOut(handle: string, setup: USBControlTransferParameters, data: ArrayBuffer | ArrayBufferView): Promise<USBOutTransferResult>;\n    clearHalt(handle: string, direction: USBDirection, endpointNumber: number): Promise<void>;\n    transferIn(handle: string, endpointNumber: number, length: number): Promise<USBInTransferResult>;\n    transferOut(handle: string, endpointNumber: number, data: BufferSource): Promise<USBOutTransferResult>;\n    isochronousTransferIn(_handle: string, _endpointNumber: number, _packetLengths: Array<number>): Promise<USBIsochronousInTransferResult>;\n    isochronousTransferOut(_handle: string, _endpointNumber: number, _data: BufferSource, _packetLengths: Array<number>): Promise<USBIsochronousOutTransferResult>;\n    reset(handle: string): Promise<void>;\n}\n\n/**\n * @hidden\n */\nexport class USBAdapter extends EventEmitter implements Adapter {\n\n    public static EVENT_DEVICE_CONNECT: string = \"connect\";\n    public static EVENT_DEVICE_DISCONNECT: string = \"disconnect\";\n\n    // Maintains a live list of connected Web USB devices\n    private devices: { [key: string]: { device: Device, url: string }} = {};\n\n    constructor() {\n        super();\n\n        const attachCallback = device => {\n            this.loadDevice(device, DEFAULT_RETRY_COUNT)\n            .then(loadedDevice => {\n                if (loadedDevice) {\n                    const handle = this.getDeviceHandle(loadedDevice);\n                    this.devicetoUSBDevice(handle)\n                    .then(usbDevice => {\n                        if (usbDevice) {\n                            this.emit(USBAdapter.EVENT_DEVICE_CONNECT, usbDevice);\n                        }\n                    });\n                }\n            });\n        };\n\n        const detachCallback = device => {\n            const handle = this.getDeviceHandle(device);\n\n            if (handle && this.devices[handle]) {\n                delete this.devices[handle];\n                this.emit(USBAdapter.EVENT_DEVICE_DISCONNECT, handle);\n            }\n        };\n\n        this.on(\"newListener\", event => {\n            const listenerCount = this.listenerCount(event);\n\n            if (listenerCount !== 0) {\n                return;\n            }\n\n            if (event === USBAdapter.EVENT_DEVICE_CONNECT) {\n                on(\"attach\", attachCallback);\n            } else if (event === USBAdapter.EVENT_DEVICE_DISCONNECT) {\n                on(\"detach\", detachCallback);\n            }\n        });\n\n        this.on(\"removeListener\", event => {\n            const listenerCount = this.listenerCount(event);\n\n            if (listenerCount !== 0) {\n                return;\n            }\n\n            if (event === USBAdapter.EVENT_DEVICE_CONNECT) {\n                removeListener(\"attach\", attachCallback);\n            } else if (event === USBAdapter.EVENT_DEVICE_DISCONNECT) {\n                removeListener(\"detach\", detachCallback);\n            }\n        });\n    }\n\n    private getDeviceHandle(device: Device): string {\n        if (device.busNumber === null || device.deviceAddress === null) {\n            return null;\n        }\n\n        return `${device.busNumber}.${device.deviceAddress}`;\n    }\n\n    private serialPromises<T>(task: (param: any) => Promise<T>, params: Array<any>): Promise<Array<T>> {\n        function reducer(chain, param) {\n            return chain\n            .then(results => {\n                return task.call(this, param)\n                .then(result => {\n                    if (result) {\n                        results.push(result);\n                    }\n                    return results;\n                });\n            });\n        }\n        return params.reduce(reducer.bind(this), Promise.resolve([]));\n    }\n\n    private serialDevicePromises<T>(task: (device: Device, descriptor: any) => Promise<T>, device: Device, descriptors: Array<any>): Promise<Array<T>> {\n        function reducer(chain, descriptor) {\n            return chain\n            .then(results => {\n                return task.call(this, device, descriptor)\n                .then(result => {\n                    results.push(result);\n                    return results;\n                });\n            });\n        }\n        return descriptors.reduce(reducer.bind(this), Promise.resolve([]));\n    }\n\n    private delay(timeout: number = DEFAULT_DELAY_TIMEOUT): Promise<void> {\n        return new Promise((resolve, _reject) => {\n            setTimeout(resolve, timeout);\n        });\n    }\n\n    private retryPromise(fn: () => Promise<any>, retries: number = 0, timeout: number = DEFAULT_DELAY_TIMEOUT): Promise<void> {\n        return new Promise((resolve, reject) => {\n            fn()\n            .then(resolve)\n            .catch(error => {\n                if (retries === 0) {\n                    return reject(error);\n                }\n\n                return this.delay(timeout)\n                .then(() => this.retryPromise(fn, --retries, timeout))\n                .then(resolve)\n                .catch(retryError => reject(retryError));\n            });\n        });\n    }\n\n    private loadDevices(preFilters?: Array<USBDeviceFilter>): Promise<Array<Device>> {\n        // Reset device cache\n        this.devices = {};\n        let devices = getDeviceList();\n\n        if (preFilters) {\n            // Pre-filter devices\n            devices = this.preFilterDevices(devices, preFilters);\n        }\n\n        return this.serialPromises(this.loadDevice, devices);\n    }\n\n    private preFilterDevices(devices: Array<Device>, preFilters: Array<USBDeviceFilter>): Array<Device> {\n        // Just pre-filter on vid/pid\n        return devices.filter(device => preFilters.some(filter => {\n            // Vendor\n            if (filter.vendorId && filter.vendorId !== device.deviceDescriptor.idVendor) return false;\n\n            // Product\n            if (filter.productId && filter.productId !== device.deviceDescriptor.idProduct) return false;\n\n            // Ignore serial number for node-usb as it requires device connection\n            return true;\n        }));\n    }\n\n    private loadDevice(device: Device, retries: number = 0): Promise<Device> {\n\n        // Early guard against unsupported USB devices\n        try {\n            // tslint:disable-next-line:no-unused-expression\n            device.configDescriptor;\n            // tslint:disable-next-line:no-unused-expression\n            device.allConfigDescriptors;\n            // tslint:disable-next-line:no-unused-expression\n            device.deviceDescriptor;\n        } catch (_error) {\n            return Promise.resolve(null);\n        }\n\n        return this.getCapabilities(device, retries)\n        .then(capabilities => this.getWebCapability(capabilities))\n        .then(capability => {\n            return this.getWebUrl(device, capability)\n            .then(url => {\n                const handle = this.getDeviceHandle(device);\n                this.devices[handle] = {\n                    device: device,\n                    url: url\n                };\n                return device;\n            });\n        });\n    }\n\n    private getCapabilities(device: Device, retries: number): Promise<Array<Capability>> {\n        return new Promise((resolve, _reject) => {\n\n            this.openDevice(device, retries)\n            .then(() => {\n                device.getCapabilities((error, capabilities) => {\n                    try {\n                        // Older macs (<10.12) can error with some host devices during a close at this point\n                        device.close();\n                    // tslint:disable-next-line:no-empty\n                    } catch (_error) {}\n                    if (error) return resolve([]);\n                    resolve(capabilities);\n                });\n            })\n            .catch(_error => {\n                resolve([]);\n            });\n        });\n    }\n\n    private getWebCapability(capabilities: Array<Capability>): Capability {\n        const platformCapabilities = capabilities.filter(capability => {\n            return capability.type === 5;\n        });\n\n        const webCapability = platformCapabilities.find(capability => {\n            const uuid = this.decodeUUID(capability.data.slice(1, 17));\n            const version = capability.data.readUInt16LE(17);\n            return uuid === CONSTANTS.WEB_UUID && version === CONSTANTS.CAPABILITY_VERSION;\n        });\n\n        return webCapability;\n    }\n\n    private decodeUUID(buffer: Buffer): string {\n        const data1 = `00000000${buffer.readUInt32LE(0).toString(16)}`.slice(-8);\n        const data2 = `0000${buffer.readUInt16LE(4).toString(16)}`.slice(-4);\n        const data3 = `0000${buffer.readUInt16LE(6).toString(16)}`.slice(-4);\n\n        const data4 = [];\n        for (let i = 8; i < 10; i ++) {\n            data4.push(`00${buffer.readUInt8(i).toString(16)}`.slice(-2));\n        }\n\n        const data5 = [];\n        for (let i = 10; i < 16; i ++) {\n            data5.push(`00${buffer.readUInt8(i).toString(16)}`.slice(-2));\n        }\n\n        return `${data1}-${data2}-${data3}-${data4.join(\"\")}-${data5.join(\"\")}`;\n    }\n\n    private getWebUrl(device: Device, capability: Capability, suppressErrors: boolean = true): Promise<string> {\n        return new Promise((resolve, reject) => {\n            if (!capability || !capability.data || capability.data.byteLength < 20) return resolve(null);\n\n            const vendor = capability.data.readUInt8(19);\n            const page = capability.data.readUInt8(20);\n\n            this.openDevice(device)\n            .then(() => {\n                device.controlTransfer(CONSTANTS.URL_REQUEST_TYPE, vendor, page, CONSTANTS.URL_REQUEST_INDEX, 64, (error, buffer) => {\n                    device.close();\n\n                    if (error) {\n                        // An error may be due to the URL not existing\n                        if (suppressErrors) return resolve(null);\n                        else return reject(error);\n                    }\n\n                    // const length = buffer.readUInt8(0);\n                    // const type = buffer.readUInt8(1);\n                    let url = buffer.toString(\"utf8\", 3);\n\n                    const scheme = buffer.readUInt8(2); // 0 - http, 1 - https, 255 - in url\n                    if (scheme === 0) url = \"http://\" + url;\n                    if (scheme === 1) url = \"https://\" + url;\n\n                    resolve(url);\n                });\n            })\n            .catch(_error => {\n                resolve(\"\");\n            });\n        });\n    }\n\n    private devicetoUSBDevice(handle: string): Promise<USBDevice> {\n        return new Promise((resolve, _reject) => {\n            const device = this.devices[handle].device;\n            const url = this.devices[handle].url;\n\n            let configs: Array<ConfigDescriptor> = null;\n            let configDescriptor: ConfigDescriptor = null;\n            let deviceDescriptor: DeviceDescriptor = null;\n\n            try {\n                configDescriptor = device.configDescriptor;\n                configs = device.allConfigDescriptors;\n                deviceDescriptor = device.deviceDescriptor;\n            } catch (_error) {\n                return resolve(null);\n            }\n\n            if (!configs) return resolve(null);\n\n            return this.serialDevicePromises(this.configToUSBConfiguration, device, configs)\n            .then(configurations => {\n\n                if (!deviceDescriptor) {\n                    return resolve(new USBDevice({\n                        _handle: this.getDeviceHandle(device),\n                        url: url,\n                        configurations: configurations\n                    }));\n                }\n\n                const deviceVersion = this.decodeVersion(deviceDescriptor.bcdDevice);\n                const usbVersion = this.decodeVersion(deviceDescriptor.bcdUSB);\n                let manufacturerName = null;\n                let productName = null;\n\n                return this.getStringDescriptor(device, deviceDescriptor.iManufacturer)\n                .then(name => {\n                    manufacturerName = name;\n                    return this.getStringDescriptor(device, deviceDescriptor.iProduct);\n                })\n                .then(name => {\n                    productName = name;\n                    return this.getStringDescriptor(device, deviceDescriptor.iSerialNumber);\n                })\n                .then(serialNumber => {\n                    const props: Partial<USBDevice> = {\n                        _handle: this.getDeviceHandle(device),\n                        _maxPacketSize: deviceDescriptor.bMaxPacketSize0,\n                        url: url,\n                        deviceClass: deviceDescriptor.bDeviceClass,\n                        deviceSubclass: deviceDescriptor.bDeviceSubClass,\n                        deviceProtocol: deviceDescriptor.bDeviceProtocol,\n                        productId: deviceDescriptor.idProduct,\n                        vendorId: deviceDescriptor.idVendor,\n                        deviceVersionMajor: deviceVersion.major,\n                        deviceVersionMinor: deviceVersion.minor,\n                        deviceVersionSubminor: deviceVersion.sub,\n                        usbVersionMajor: usbVersion.major,\n                        usbVersionMinor: usbVersion.minor,\n                        usbVersionSubminor: usbVersion.sub,\n                        manufacturerName: manufacturerName,\n                        productName: productName,\n                        serialNumber: serialNumber,\n                        configurations: configurations,\n                        _currentConfiguration: configDescriptor.bConfigurationValue\n                    };\n                    return resolve(new USBDevice(props));\n                });\n            }).catch(_error => {\n                resolve(null);\n            });\n        });\n    }\n\n    private decodeVersion(version: number): { [key: string]: number } {\n        const hex = `0000${version.toString(16)}`.slice(-4);\n        return {\n            major: parseInt(hex.substr(0, 2), null),\n            minor: parseInt(hex.substr(2, 1), null),\n            sub: parseInt(hex.substr(3, 1), null),\n        };\n    }\n\n    private getStringDescriptor(device: Device, index: number): Promise<string> {\n        return new Promise(resolve => {\n            this.openDevice(device)\n            .then(() => {\n                device.getStringDescriptor(index, (error, buffer) => {\n                    device.close();\n                    resolve(error ? \"\" : buffer.toString());\n                });\n            })\n            .catch(_error => {\n                resolve(\"\");\n            });\n        });\n    }\n\n    private bufferToDataView(buffer: Buffer): DataView {\n        const arrayBuffer = new Uint8Array(buffer).buffer;\n        return new DataView(arrayBuffer);\n    }\n\n    private bufferSourceToBuffer(bufferSource: ArrayBuffer | ArrayBufferView): Buffer {\n        const arrayBuffer = ArrayBuffer.isView(bufferSource)\n            ? bufferSource.buffer.slice(bufferSource.byteOffset, bufferSource.byteOffset + bufferSource.byteLength)\n            : bufferSource;\n\n        return Buffer.from(arrayBuffer);\n    }\n\n    private getEndpoint(device: Device, direction: USBDirection, endpointNumber: number): Endpoint {\n        let endpoint: Endpoint = null;\n        const address = endpointNumber | (direction === \"in\" ? LIBUSB_ENDPOINT_IN : LIBUSB_ENDPOINT_OUT);\n\n        device.interfaces.some(iface => {\n            const epoint = iface.endpoint(address);\n\n            if (epoint) {\n                endpoint = epoint;\n                return true;\n            }\n            return false;\n        });\n\n        return endpoint;\n    }\n\n    private getInEndpoint(device: Device, endpointNumber: number): InEndpoint {\n        const endpoint = this.getEndpoint(device, \"in\", endpointNumber);\n        if (endpoint && endpoint.direction === \"in\") return (endpoint as InEndpoint);\n    }\n\n    private getOutEndpoint(device: Device, endpointNumber: number): OutEndpoint {\n        const endpoint = this.getEndpoint(device, \"out\", endpointNumber);\n        if (endpoint && endpoint.direction === \"out\") return (endpoint as OutEndpoint);\n    }\n\n    private endpointToUSBEndpoint(descriptor: EndpointDescriptor): USBEndpoint {\n        const direction = descriptor.bEndpointAddress & LIBUSB_ENDPOINT_IN ? \"in\" : \"out\";\n        return new USBEndpoint({\n            endpointNumber: descriptor.bEndpointAddress ^ (direction === \"in\" ? LIBUSB_ENDPOINT_IN : LIBUSB_ENDPOINT_OUT),\n            direction: direction,\n            type: (descriptor.bmAttributes & CONSTANTS.LIBUSB_TRANSFER_TYPE_MASK) === LIBUSB_TRANSFER_TYPE_BULK ? \"bulk\"\n                : (descriptor.bmAttributes & CONSTANTS.LIBUSB_TRANSFER_TYPE_MASK) === LIBUSB_TRANSFER_TYPE_INTERRUPT ? \"interrupt\"\n                : \"isochronous\",\n            packetSize: descriptor.wMaxPacketSize\n        });\n    }\n\n    private interfaceToUSBAlternateInterface(device: Device, descriptor: InterfaceDescriptor): Promise<USBAlternateInterface> {\n        return this.getStringDescriptor(device, descriptor.iInterface)\n        .then(name => {\n            return new USBAlternateInterface({\n                alternateSetting: descriptor.bAlternateSetting,\n                interfaceClass: descriptor.bInterfaceClass,\n                interfaceSubclass: descriptor.bInterfaceSubClass,\n                interfaceProtocol: descriptor.bInterfaceProtocol,\n                interfaceName: name,\n                endpoints: descriptor.endpoints.map(this.endpointToUSBEndpoint)\n            });\n        });\n    }\n\n    private interfacesToUSBInterface(device: Device, descriptors: Array<InterfaceDescriptor>): Promise<USBInterface> {\n        return this.serialDevicePromises(this.interfaceToUSBAlternateInterface, device, descriptors)\n        .then(alternates => {\n            return new USBInterface({\n                _handle: this.getDeviceHandle(device),\n                interfaceNumber: descriptors[0].bInterfaceNumber,\n                alternates: alternates\n            });\n        });\n    }\n\n    private configToUSBConfiguration(device: Device, descriptor: ConfigDescriptor): Promise<USBConfiguration> {\n        return this.getStringDescriptor(device, descriptor.iConfiguration)\n        .then(name => {\n            const allInterfaces = descriptor.interfaces || [];\n\n            return this.serialDevicePromises(this.interfacesToUSBInterface, device, allInterfaces)\n            .then(interfaces => {\n                return new USBConfiguration({\n                    configurationValue: descriptor.bConfigurationValue,\n                    configurationName: name,\n                    interfaces: interfaces\n                });\n            });\n        });\n    }\n\n    private getDevice(handle: string): Device {\n        if (!this.devices[handle]) return null;\n        return this.devices[handle].device;\n    }\n\n    private controlTransferParamsToType(setup: USBControlTransferParameters, direction: number): number {\n        const recipient = setup.recipient === \"device\" ? LIBUSB_RECIPIENT_DEVICE\n                        : setup.recipient === \"interface\" ? LIBUSB_RECIPIENT_INTERFACE\n                        : setup.recipient === \"endpoint\" ? LIBUSB_RECIPIENT_ENDPOINT\n                        : LIBUSB_RECIPIENT_OTHER;\n\n        const requestType = setup.requestType === \"standard\" ? LIBUSB_REQUEST_TYPE_STANDARD\n                          : setup.requestType === \"class\" ? LIBUSB_REQUEST_TYPE_CLASS\n                          : LIBUSB_REQUEST_TYPE_VENDOR;\n\n        return recipient | requestType | direction;\n    }\n\n    private openDevice(device: Device, retries: number = 0): Promise<void> {\n        return this.retryPromise(() => {\n            return new Promise<void>((resolve, reject) => {\n                try {\n                    device.open();\n                } catch (error) {\n                    return reject(error);\n                }\n                resolve();\n            });\n        }, retries);\n    }\n\n    public getConnected(handle: string): boolean {\n        return this.getDevice(handle) !== null;\n    }\n\n    public getOpened(handle: string): boolean {\n        const device = this.getDevice(handle);\n        if (!device) return false;\n        return (device.interfaces !== null);\n    }\n\n    public listUSBDevices(preFilters?: Array<USBDeviceFilter>): Promise<Array<USBDevice>> {\n        return this.loadDevices(preFilters)\n        .then(() => {\n            return this.serialPromises(this.devicetoUSBDevice, Object.keys(this.devices));\n        });\n    }\n\n    public open(handle: string): Promise<void> {\n        const device = this.getDevice(handle);\n        return this.openDevice(device);\n    }\n\n    public close(handle: string): Promise<void> {\n        return new Promise((resolve, _reject) => {\n            const device = this.getDevice(handle);\n            device.close();\n            resolve();\n        });\n    }\n\n    public selectConfiguration(handle: string, id: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n\n            device.setConfiguration(id, error => {\n                if (error) return reject(error);\n                resolve();\n            });\n        });\n    }\n\n    public claimInterface(handle: string, address: number): Promise<void> {\n        return new Promise((resolve, _reject) => {\n            const device = this.getDevice(handle);\n\n            device.interface(address).claim();\n            resolve();\n        });\n    }\n\n    public releaseInterface(handle: string, address: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n\n            device.interface(address).release(true, error => {\n                if (error) return reject(error);\n                resolve();\n            });\n        });\n    }\n\n    public selectAlternateInterface(handle: string, interfaceNumber: number, alternateSetting: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            const iface = device.interface(interfaceNumber);\n\n            iface.setAltSetting(alternateSetting, error => {\n                if (error) return reject(error);\n                resolve();\n            });\n        });\n    }\n\n    public controlTransferIn(handle: string, setup: USBControlTransferParameters, length: number): Promise<USBInTransferResult> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            const type = this.controlTransferParamsToType(setup, LIBUSB_ENDPOINT_IN);\n\n            device.controlTransfer(type, setup.request, setup.value, setup.index, length, (error, buffer) => {\n                if (error) {\n                    if (error.errno === LIBUSB_TRANSFER_STALL) {\n                        return resolve({\n                            status: \"stall\"\n                        });\n                    } else if (error.errno === LIBUSB_TRANSFER_OVERFLOW) {\n                        return resolve({\n                            status: \"babble\"\n                        });\n                    }\n\n                    return reject(error);\n                }\n\n                resolve({\n                    data: this.bufferToDataView(buffer),\n                    status: \"ok\"\n                });\n            });\n        });\n    }\n\n    public controlTransferOut(handle: string, setup: USBControlTransferParameters, data?: ArrayBuffer | ArrayBufferView): Promise<USBOutTransferResult> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            const type = this.controlTransferParamsToType(setup, LIBUSB_ENDPOINT_OUT);\n            const buffer = data ? this.bufferSourceToBuffer(data) : new Buffer(0);\n\n            device.controlTransfer(type, setup.request, setup.value, setup.index, buffer, error => {\n                if (error) {\n                    if (error.errno === LIBUSB_TRANSFER_STALL) {\n                        return resolve({\n                            bytesWritten: 0,\n                            status: \"stall\"\n                        });\n                    }\n\n                    return reject(error);\n                }\n\n                resolve({\n                    bytesWritten: buffer.byteLength, // hack, should be bytes actually written\n                    status: \"ok\" // hack\n                });\n            });\n        });\n    }\n\n    public clearHalt(handle: string, direction: USBDirection, endpointNumber: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            const wIndex = endpointNumber | (direction === \"in\" ? LIBUSB_ENDPOINT_IN : LIBUSB_ENDPOINT_OUT);\n            device.controlTransfer(LIBUSB_RECIPIENT_ENDPOINT, CONSTANTS.CLEAR_FEATURE, CONSTANTS.ENDPOINT_HALT, wIndex, 0, error => {\n                if (error) return reject(error);\n                resolve();\n            });\n        });\n    }\n\n    public transferIn(handle: string, endpointNumber: number, length: number): Promise<USBInTransferResult> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            const endpoint = this.getInEndpoint(device, endpointNumber);\n\n            endpoint.transfer(length, (error, data) => {\n                if (error) {\n                    if (error.errno === LIBUSB_TRANSFER_STALL) {\n                        return resolve({\n                            status: \"stall\"\n                        });\n                    } else if (error.errno === LIBUSB_TRANSFER_OVERFLOW) {\n                        return resolve({\n                            status: \"babble\"\n                        });\n                    }\n\n                    return reject(error);\n                }\n\n                resolve({\n                    data: this.bufferToDataView(data),\n                    status: \"ok\"\n                });\n            });\n        });\n    }\n\n    public transferOut(handle: string, endpointNumber: number, data: BufferSource): Promise<USBOutTransferResult> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            const endpoint = this.getOutEndpoint(device, endpointNumber);\n            const buffer = this.bufferSourceToBuffer(data);\n\n            endpoint.transfer(buffer, error => {\n                if (error) {\n                    if (error.errno === LIBUSB_TRANSFER_STALL) {\n                        return resolve({\n                            bytesWritten: 0,\n                            status: \"stall\"\n                        });\n                    }\n\n                    return reject(error);\n                }\n\n                resolve({\n                    bytesWritten: buffer.byteLength, // hack, should be bytes actually written\n                    status: \"ok\" // hack\n                });\n            });\n        });\n    }\n\n    public isochronousTransferIn(_handle: string, _endpointNumber: number, _packetLengths: Array<number>): Promise<USBIsochronousInTransferResult> {\n        return new Promise((_resolve, reject) => {\n            reject(\"isochronousTransferIn error: method not implemented\");\n        });\n    }\n\n    public isochronousTransferOut(_handle: string, _endpointNumber: number, _data: BufferSource, _packetLengths: Array<number>): Promise<USBIsochronousOutTransferResult> {\n        return new Promise((_resolve, reject) => {\n            reject(\"isochronousTransferOut error: method not implemented\");\n        });\n    }\n\n    public reset(handle: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            device.reset(error => {\n                if (error) return reject(error);\n                resolve();\n            });\n        });\n    }\n}\n\n/**\n * @hidden\n */\nexport const adapter = new USBAdapter();\n","/*\n* Node WebUSB\n* Copyright (c) 2019 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\n// tslint:disable:max-classes-per-file\n\n/**\n * @hidden\n */\nexport class DOMEvent implements Event {\n\n    /**\n     * Type of the event\n     */\n    public type: string;\n\n    /**\n     * @hidden\n     */\n    public target: EventTarget;\n\n    /**\n     * @hidden\n     */\n    public currentTarget: EventTarget;\n\n    /**\n     * @hidden\n     */\n    public srcElement: EventTarget;\n\n    /**\n     * @hidden\n     */\n    public timeStamp: number;\n\n    /**\n     * @hidden\n     */\n    public bubbles = false;\n\n    /**\n     * @hidden\n     */\n    public cancelable = false;\n\n    /**\n     * @hidden\n     */\n    public cancelBubble = false;\n\n    /**\n     * @hidden\n     */\n    public composed = false;\n\n    /**\n     * @hidden\n     */\n    public defaultPrevented = false;\n\n    /**\n     * @hidden\n     */\n    public eventPhase = 0;\n\n    /**\n     * @hidden\n     */\n    public isTrusted = true;\n\n    /**\n     * @hidden\n     */\n    public returnValue = true;\n\n    /**\n     * @hidden\n     */\n    public AT_TARGET: number;\n\n    /**\n     * @hidden\n     */\n    public BUBBLING_PHASE: number;\n\n    /**\n     * @hidden\n     */\n    public CAPTURING_PHASE: number;\n\n    /**\n     * @hidden\n     */\n    public NONE: number;\n\n    /**\n     * @hidden\n     */\n    public composedPath(): Array<EventTarget> {\n        return [];\n    }\n\n    /**\n     * @hidden\n     */\n    public initEvent(type: string, bubbles?: boolean, cancelable?: boolean) {\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n    }\n\n    /**\n     * @hidden\n     */\n    public preventDefault() {\n        this.defaultPrevented = true;\n    }\n\n    /**\n     * @hidden\n     */\n    public stopImmediatePropagation() {\n        return;\n    }\n\n    /**\n     * @hidden\n     */\n    public stopPropagation() {\n        return;\n    }\n}\n\n/**\n * @hidden\n */\nexport class W3CUSBConnectionEvent extends DOMEvent implements USBConnectionEvent {\n\n    /**\n     * Device connected or disconnected\n     */\n    public readonly device: USBDevice;\n\n    /**\n     * Type of the event\n     */\n    public readonly type: \"connect\" | \"disconnect\";\n\n    /**\n     * @hidden\n     */\n    constructor(target: EventTarget, type: \"connect\" | \"disconnect\", eventInitDict: USBConnectionEventInit) {\n        super();\n        this.initEvent(type, eventInitDict.bubbles, eventInitDict.cancelable);\n        this.target = target;\n        this.device = eventInitDict.device;\n    }\n}\n","/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { EventDispatcher, TypedDispatcher } from \"./dispatcher\";\nimport { USBAdapter, adapter } from \"./adapter\";\nimport { W3CUSBConnectionEvent } from \"./events\";\nimport { W3CUSB } from \"./interfaces\";\nimport { USBDevice as Device } from \"./device\";\n\n/**\n * USB Options\n */\nexport interface USBOptions {\n    /**\n     * A `device found` callback function to allow the user to select a device\n     */\n    devicesFound?: (devices: Array<USBDevice>) => Promise<USBDevice | void>;\n}\n\n/**\n * @hidden\n */\nexport interface USBEvents {\n    /**\n     * USBDevice connected event\n     */\n    connect: USBConnectionEvent;\n    /**\n     * USBDevice disconnected event\n     */\n    disconnect: USBConnectionEvent;\n}\n\n/**\n * USB class\n */\nexport class USB extends (EventDispatcher as new() => TypedDispatcher<USBEvents>) implements W3CUSB {\n\n    private allowedDevices: Array<Device> = [];\n    private devicesFound: (devices: Array<USBDevice>) => Promise<USBDevice | void>;\n\n    private _onconnect: (ev: USBConnectionEvent) => void;\n    public set onconnect(fn: (ev: USBConnectionEvent) => void) {\n        if (this._onconnect) {\n            this.removeEventListener(\"connect\", this._onconnect);\n        }\n        this._onconnect = fn;\n        this.addEventListener(\"connect\", this._onconnect);\n    }\n\n    private _ondisconnect: (ev: USBConnectionEvent) => void;\n    public set ondisconnect(fn: (ev: USBConnectionEvent) => void) {\n        if (this._ondisconnect) {\n            this.removeEventListener(\"disconnect\", this._ondisconnect);\n        }\n        this._ondisconnect = fn;\n        this.addEventListener(\"disconnect\", this._ondisconnect);\n    }\n\n    /**\n     * USB constructor\n     * @param options USB initialisation options\n     */\n    constructor(options?: USBOptions) {\n        super();\n\n        options = options || {};\n        this.devicesFound = options.devicesFound;\n\n        const deviceConnectCallback = device => {\n            // When connected, emit an event if it was a known allowed device\n            if (this.replaceAllowedDevice(device)) {\n                const event = new W3CUSBConnectionEvent(this as EventTarget, \"connect\", { device }) as USBConnectionEvent;\n                this.dispatchEvent(event);\n\n                if (this.onconnect) {\n                    this.onconnect(event);\n                }\n            }\n        };\n\n        const deviceDisconnectCallback = handle => {\n            // When disconnected, emit an event if the device was a known allowed device\n            const device = this.allowedDevices.find(allowedDevices => allowedDevices._handle === handle);\n\n            if (device) {\n                const event = new W3CUSBConnectionEvent(this as EventTarget, \"disconnect\", { device }) as USBConnectionEvent;\n                this.dispatchEvent(event);\n\n                if (this.ondisconnect) {\n                    this.ondisconnect(event);\n                }\n            }\n        };\n\n        this.on(\"newListener\", event => {\n            const listenerCount = this.listenerCount(event);\n\n            if (listenerCount !== 0) {\n                return;\n            }\n\n            if (event === \"connect\") {\n                adapter.addListener(USBAdapter.EVENT_DEVICE_CONNECT, deviceConnectCallback);\n            } else if (event === \"disconnect\") {\n                adapter.addListener(USBAdapter.EVENT_DEVICE_DISCONNECT, deviceDisconnectCallback);\n            }\n        });\n\n        this.on(\"removeListener\", event => {\n            const listenerCount = this.listenerCount(event);\n\n            if (listenerCount !== 0) {\n                return;\n            }\n\n            if (event === \"connect\") {\n                adapter.removeListener(USBAdapter.EVENT_DEVICE_CONNECT, deviceConnectCallback);\n            } else if (event === \"disconnect\") {\n                adapter.removeListener(USBAdapter.EVENT_DEVICE_DISCONNECT, deviceDisconnectCallback);\n            }\n        });\n    }\n\n    private replaceAllowedDevice(device: Device): boolean {\n        for (const i in this.allowedDevices) {\n            if (this.isSameDevice(device, this.allowedDevices[i])) {\n                this.allowedDevices[i] = device;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private isSameDevice(device1: USBDevice, device2: USBDevice): boolean {\n        return (device1.productId === device2.productId\n             && device1.vendorId === device2.vendorId\n             && device1.serialNumber === device2.serialNumber);\n    }\n\n    private filterDevice(options: USBDeviceRequestOptions, device: USBDevice): boolean {\n        return options.filters.some(filter => {\n            // Vendor\n            if (filter.vendorId && filter.vendorId !== device.vendorId) return false;\n\n            // Product\n            if (filter.productId && filter.productId !== device.productId) return false;\n\n            // Class\n            if (filter.classCode) {\n\n                // Interface Descriptors\n                const match = device.configuration.interfaces.some(iface => {\n                    // Class\n                    if (filter.classCode && filter.classCode !== iface.alternate.interfaceClass) return false;\n\n                    // Subclass\n                    if (filter.subclassCode && filter.subclassCode !== iface.alternate.interfaceSubclass) return false;\n\n                    // Protocol\n                    if (filter.protocolCode && filter.protocolCode !== iface.alternate.interfaceProtocol) return false;\n\n                    return true;\n                });\n\n                if (match) return true;\n            }\n\n            // Class\n            if (filter.classCode && filter.classCode !== device.deviceClass) return false;\n\n            // Subclass\n            if (filter.subclassCode && filter.subclassCode !== device.deviceSubclass) return false;\n\n            // Protocol\n            if (filter.protocolCode && filter.protocolCode !== device.deviceProtocol) return false;\n\n            // Serial\n            if (filter.serialNumber && filter.serialNumber !== device.serialNumber) return false;\n\n            return true;\n        });\n    }\n\n    /**\n     * Gets all allowed Web USB devices which are connected\n     * @returns Promise containing an array of devices\n     */\n    public getDevices(): Promise<Array<USBDevice>> {\n        // Create pre-filters\n        const preFilters = this.allowedDevices.map(device => ({\n            vendorId: device.vendorId || undefined,\n            productId: device.productId || undefined,\n            classCode: device.deviceClass || undefined,\n            subclassCode: device.deviceSubclass || undefined,\n            protocolCode: device.deviceProtocol || undefined,\n            serialNumber: device.serialNumber || undefined\n        }));\n\n        // Refresh devices and filter for allowed ones\n        return adapter.listUSBDevices(preFilters)\n        .then(devices => {\n            const allowed = devices.filter(device => {\n                if (!device.connected) {\n                    return false;\n                }\n\n                for (const i in this.allowedDevices) {\n                    if (this.isSameDevice(device, this.allowedDevices[i])) {\n                        return true;\n                    }\n                }\n\n                return false;\n            });\n\n            return allowed;\n        });\n    }\n\n    /**\n     * Requests a single Web USB device\n     * @param options The options to use when scanning\n     * @returns Promise containing the selected device\n     */\n    public requestDevice(options: USBDeviceRequestOptions): Promise<USBDevice> {\n        return new Promise((resolve, reject) => {\n            // Must have options\n            if (!options) {\n                return reject(new TypeError(\"requestDevice error: 1 argument required, but only 0 present\"));\n            }\n\n            // Options must be an object\n            if (options.constructor !== {}.constructor) {\n                return reject(new TypeError(\"requestDevice error: parameter 1 (options) is not an object\"));\n            }\n\n            // Must have a filter\n            if (!options.filters) {\n                return reject(new TypeError(\"requestDevice error: required member filters is undefined\"));\n            }\n\n            // Filter must be an array\n            if (options.filters.constructor !== [].constructor) {\n                return reject(new TypeError(\"requestDevice error: the provided value cannot be converted to a sequence\"));\n            }\n\n            // Check filters\n            const check = options.filters.every(filter => {\n\n                // Protocol & Subclass\n                if (filter.protocolCode && !filter.subclassCode) {\n                    reject(new TypeError(\"requestDevice error: subclass code is required\"));\n                    return false;\n                }\n\n                // Subclass & Class\n                if (filter.subclassCode && !filter.classCode) {\n                    reject(new TypeError(\"requestDevice error: class code is required\"));\n                    return false;\n                }\n\n                return true;\n            });\n\n            if (!check) return;\n\n            return adapter.listUSBDevices(options.filters)\n            .then(devices => {\n                devices = devices.filter(device => this.filterDevice(options, device));\n\n                if (devices.length === 0) {\n                    return reject(new Error(\"requestDevice error: no devices found\"));\n                }\n\n                function selectFn(device: USBDevice) {\n                    if (!this.replaceAllowedDevice(device)) this.allowedDevices.push(device);\n                    resolve(device);\n                }\n\n                // If no devicesFound function, select the first device found\n                if (!this.devicesFound) return selectFn.call(this, devices[0]);\n\n                return this.devicesFound(devices)\n                .then(device => {\n                    if (!device) {\n                        reject(new Error(\"selected device not found\"));\n                    }\n\n                    return selectFn.call(this, device);\n                });\n            }).catch(error => {\n                reject(new Error(`requestDevice error: ${error}`));\n            });\n        });\n    }\n}\n","/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { USB, USBOptions } from \"./usb\";\n\n/**\n * Default usb instance synonymous with `navigator.usb`\n */\nexport const usb = new USB();\n\n/**\n * USB class for creating new instances\n */\nexport { USB, USBOptions };\n\n/**\n * Adapter\n */\nexport {\n    adapter,\n    USBAdapter\n} from \"./adapter\";\n","// Service: Common registers and commands\nexport const ANNOUNCE_INTERVAL = 0x1f4\n\nexport enum SystemReadingThreshold { // uint8_t\n    Neutral = 0x1,\n    Inactive = 0x2,\n    Active = 0x3,\n}\n\n\nexport enum SystemStatusCodes { // uint16_t\n    Ready = 0x0,\n    Initializing = 0x1,\n    Calibrating = 0x2,\n    Sleeping = 0x3,\n    WaitingForInput = 0x4,\n    CalibrationNeeded = 0x64,\n}\n\nexport enum SystemCmd {\n    /**\n     * No args. Enumeration data for control service; service-specific advertisement data otherwise.\n     * Control broadcasts it automatically every ``announce_interval``ms, but other service have to be queried to provide it.\n     */\n    Announce = 0x0,\n\n    /**\n     * No args. Registers number `N` is fetched by issuing command `0x1000 | N`.\n     * The report format is the same as the format of the register.\n     */\n    GetRegister = 0x1000,\n\n    /**\n     * No args. Registers number `N` is set by issuing command `0x2000 | N`, with the format\n     * the same as the format of the register.\n     */\n    SetRegister = 0x2000,\n\n    /**\n     * Event from sensor or a broadcast service.\n     *\n     * ```\n     * const [eventId, eventArgument] = jdunpack<[number, number]>(buf, \"u32 u32\")\n     * ```\n     */\n    Event = 0x1,\n\n    /**\n     * No args. Request to calibrate a sensor. The report indicates the calibration is done.\n     */\n    Calibrate = 0x2,\n}\n\nexport enum SystemReg {\n    /**\n     * Read-write uint32_t. This is either binary on/off (0 or non-zero), or can be gradual (eg. brightness of an RGB LED strip).\n     *\n     * ```\n     * const [intensity] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    Intensity = 0x1,\n\n    /**\n     * Read-write int32_t. The primary value of actuator (eg. servo pulse length, or motor duty cycle).\n     *\n     * ```\n     * const [value] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    Value = 0x2,\n\n    /**\n     * Constant int32_t. The lowest value that can be reported for the value register.\n     *\n     * ```\n     * const [minValue] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    MinValue = 0x110,\n\n    /**\n     * Constant int32_t. The highest value that can be reported for the value register.\n     *\n     * ```\n     * const [maxValue] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    MaxValue = 0x111,\n\n    /**\n     * Read-write mA uint16_t. Limit the power drawn by the service, in mA.\n     *\n     * ```\n     * const [maxPower] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    MaxPower = 0x7,\n\n    /**\n     * Read-write # uint8_t. Asks device to stream a given number of samples\n     * (clients will typically write `255` to this register every second or so, while streaming is required).\n     *\n     * ```\n     * const [streamingSamples] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    StreamingSamples = 0x3,\n\n    /**\n     * Read-write ms uint32_t. Period between packets of data when streaming in milliseconds.\n     *\n     * ```\n     * const [streamingInterval] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    StreamingInterval = 0x4,\n\n    /**\n     * Read-only int32_t. Read-only value of the sensor, also reported in streaming.\n     *\n     * ```\n     * const [reading] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    Reading = 0x101,\n\n    /**\n     * Constant int32_t. The lowest value that can be reported by the sensor.\n     *\n     * ```\n     * const [minReading] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    MinReading = 0x104,\n\n    /**\n     * Constant int32_t. The highest value that can be reported by the sensor.\n     *\n     * ```\n     * const [maxReading] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    MaxReading = 0x105,\n\n    /**\n     * Read-only uint32_t. The real value of whatever is measured is between `reading - reading_error` and `reading + reading_error`. It should be computed from the internal state of the sensor. This register is often, but not always `const`. If the register value is modified,\n     * send a report in the same frame of the ``reading`` report.\n     *\n     * ```\n     * const [readingError] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    ReadingError = 0x106,\n\n    /**\n     * Constant uint32_t. Smallest, yet distinguishable change in reading.\n     *\n     * ```\n     * const [readingResolution] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    ReadingResolution = 0x108,\n\n    /**\n     * Read-write int32_t. Threshold when reading data gets inactive and triggers a ``inactive``.\n     *\n     * ```\n     * const [inactiveThreshold] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    InactiveThreshold = 0x5,\n\n    /**\n     * Read-write int32_t. Thresholds when reading data gets active and triggers a ``active`` event.\n     *\n     * ```\n     * const [activeThreshold] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    ActiveThreshold = 0x6,\n\n    /**\n     * Constant ms uint32_t. Preferred default streaming interval for sensor in milliseconds.\n     *\n     * ```\n     * const [streamingPreferredInterval] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    StreamingPreferredInterval = 0x102,\n\n    /**\n     * Constant uint32_t. The hardware variant of the service.\n     * For services which support this, there's an enum defining the meaning.\n     *\n     * ```\n     * const [variant] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    Variant = 0x107,\n\n    /**\n     * Reports the current state or error status of the device. ``code`` is a standardized value from\n     * the Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\n     * state. This report is typically not queried, when a device has an error, it will typically\n     * add this report in frame along with the announce packet.\n     *\n     * ```\n     * const [code, vendorCode] = jdunpack<[SystemStatusCodes, number]>(buf, \"u16 u16\")\n     * ```\n     */\n    StatusCode = 0x103,\n\n    /**\n     * Constant string (bytes). A friendly name that describes the role of this service instance in the device.\n     *\n     * ```\n     * const [instanceName] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    InstanceName = 0x109,\n}\n\nexport enum SystemEvent {\n    /**\n     * Notifies that the service has been activated (eg. button pressed, network connected, etc.)\n     */\n    Active = 0x1,\n\n    /**\n     * Notifies that the service has been dis-activated.\n     */\n    Inactive = 0x2,\n\n    /**\n     * Notifies that the some state of the service changed.\n     */\n    Change = 0x3,\n\n    /**\n     * Notifies that the status code of the service changed.\n     *\n     * ```\n     * const [code, vendorCode] = jdunpack<[SystemStatusCodes, number]>(buf, \"u16 u16\")\n     * ```\n     */\n    StatusCodeChanged = 0x4,\n\n    /**\n     * Notifies that the threshold is back between ``low`` and ``high``.\n     */\n    Neutral = 0x7,\n}\n\n// Service: Base service\nexport enum BaseReg {\n    /**\n     * Constant string (bytes). A friendly name that describes the role of this service instance in the device.\n     * It often corresponds to what's printed on the device:\n     * for example, `A` for button A, or `S0` for servo channel 0.\n     * Words like `left` should be avoided because of localization issues (unless they are printed on the device).\n     *\n     * ```\n     * const [instanceName] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    InstanceName = 0x109,\n\n    /**\n     * Reports the current state or error status of the device. ``code`` is a standardized value from\n     * the Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\n     * state. This report is typically not queried, when a device has an error, it will typically\n     * add this report in frame along with the announce packet. If a service implements this register,\n     * it should also support the ``status_code_changed`` event defined below.\n     *\n     * ```\n     * const [code, vendorCode] = jdunpack<[number, number]>(buf, \"u16 u16\")\n     * ```\n     */\n    StatusCode = 0x103,\n}\n\nexport enum BaseEvent {\n    /**\n     * Notifies that the status code of the service changed.\n     *\n     * ```\n     * const [code, vendorCode] = jdunpack<[number, number]>(buf, \"u16 u16\")\n     * ```\n     */\n    StatusCodeChanged = 0x4,\n}\n\n// Service: Sensor\nexport enum SensorReg {\n    /**\n     * Read-write # uint8_t. Asks device to stream a given number of samples\n     * (clients will typically write `255` to this register every second or so, while streaming is required).\n     *\n     * ```\n     * const [streamingSamples] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    StreamingSamples = 0x3,\n\n    /**\n     * Read-write ms uint32_t. Period between packets of data when streaming in milliseconds.\n     *\n     * ```\n     * const [streamingInterval] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    StreamingInterval = 0x4,\n\n    /**\n     * Constant ms uint32_t. Preferred default streaming interval for sensor in milliseconds.\n     *\n     * ```\n     * const [streamingPreferredInterval] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    StreamingPreferredInterval = 0x102,\n}\n\n// Service: Accelerometer\nexport const SRV_ACCELEROMETER = 0x1f140409\nexport enum AccelerometerReg {\n    /**\n     * Indicates the current forces acting on accelerometer.\n     *\n     * ```\n     * const [x, y, z] = jdunpack<[number, number, number]>(buf, \"i12.20 i12.20 i12.20\")\n     * ```\n     */\n    Forces = 0x101,\n\n    /**\n     * Read-only g i12.20 (int32_t). Error on the reading value.\n     *\n     * ```\n     * const [forcesError] = jdunpack<[number]>(buf, \"i12.20\")\n     * ```\n     */\n    ForcesError = 0x106,\n\n    /**\n     * Read-write g i12.20 (int32_t). Configures the range forces detected.\n     * Read-back after setting to get current value.\n     *\n     * ```\n     * const [maxForce] = jdunpack<[number]>(buf, \"i12.20\")\n     * ```\n     */\n    MaxForce = 0x80,\n}\n\nexport enum AccelerometerEvent {\n    /**\n     * Emitted when accelerometer is tilted in the given direction.\n     */\n    TiltUp = 0x81,\n\n    /**\n     * Emitted when accelerometer is tilted in the given direction.\n     */\n    TiltDown = 0x82,\n\n    /**\n     * Emitted when accelerometer is tilted in the given direction.\n     */\n    TiltLeft = 0x83,\n\n    /**\n     * Emitted when accelerometer is tilted in the given direction.\n     */\n    TiltRight = 0x84,\n\n    /**\n     * Emitted when accelerometer is laying flat in the given direction.\n     */\n    FaceUp = 0x85,\n\n    /**\n     * Emitted when accelerometer is laying flat in the given direction.\n     */\n    FaceDown = 0x86,\n\n    /**\n     * Emitted when total force acting on accelerometer is much less than 1g.\n     */\n    Freefall = 0x87,\n\n    /**\n     * Emitted when forces change violently a few times.\n     */\n    Shake = 0x8b,\n\n    /**\n     * Emitted when force in any direction exceeds given threshold.\n     */\n    Force2g = 0x8c,\n\n    /**\n     * Emitted when force in any direction exceeds given threshold.\n     */\n    Force3g = 0x88,\n\n    /**\n     * Emitted when force in any direction exceeds given threshold.\n     */\n    Force6g = 0x89,\n\n    /**\n     * Emitted when force in any direction exceeds given threshold.\n     */\n    Force8g = 0x8a,\n}\n\n// Service: Arcade Gamepad\nexport const SRV_ARCADE_GAMEPAD = 0x1deaa06e\n\nexport enum ArcadeGamepadButton { // uint8_t\n    Left = 0x1,\n    Up = 0x2,\n    Right = 0x3,\n    Down = 0x4,\n    A = 0x5,\n    B = 0x6,\n    Menu = 0x7,\n    Select = 0x8,\n    Reset = 0x9,\n    Exit = 0xa,\n}\n\nexport enum ArcadeGamepadReg {\n    /**\n     * Indicates which buttons are currently active (pressed).\n     * `pressure` should be `0xff` for digital buttons, and proportional for analog ones.\n     *\n     * ```\n     * const [rest] = jdunpack<[([ArcadeGamepadButton, number])[]]>(buf, \"r: u8 u0.8\")\n     * const [button, pressure] = rest[0]\n     * ```\n     */\n    Buttons = 0x101,\n\n    /**\n     * Constant. Indicates number of players supported and which buttons are present on the controller.\n     *\n     * ```\n     * const [button] = jdunpack<[ArcadeGamepadButton[]]>(buf, \"u8[]\")\n     * ```\n     */\n    AvailableButtons = 0x180,\n}\n\nexport enum ArcadeGamepadEvent {\n    /**\n     * Argument: button Button (uint8_t). Emitted when button goes from inactive to active.\n     *\n     * ```\n     * const [button] = jdunpack<[ArcadeGamepadButton]>(buf, \"u8\")\n     * ```\n     */\n    Down = 0x1,\n\n    /**\n     * Argument: button Button (uint8_t). Emitted when button goes from active to inactive.\n     *\n     * ```\n     * const [button] = jdunpack<[ArcadeGamepadButton]>(buf, \"u8\")\n     * ```\n     */\n    Up = 0x2,\n}\n\n// Service: Arcade sound\nexport const SRV_ARCADE_SOUND = 0x1fc63606\nexport enum ArcadeSoundCmd {\n    /**\n     * Argument: samples bytes. Play samples, which are single channel, signed 16-bit little endian values.\n     *\n     * ```\n     * const [samples] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    Play = 0x80,\n}\n\nexport enum ArcadeSoundReg {\n    /**\n     * Read-write Hz u22.10 (uint32_t). Get or set playback sample rate (in samples per second).\n     * If you set it, read it back, as the value may be rounded up or down.\n     *\n     * ```\n     * const [sampleRate] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    SampleRate = 0x80,\n\n    /**\n     * Constant B uint32_t. The size of the internal audio buffer.\n     *\n     * ```\n     * const [bufferSize] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    BufferSize = 0x180,\n\n    /**\n     * Read-only B uint32_t. How much data is still left in the buffer to play.\n     * Clients should not send more data than `buffer_size - buffer_pending`,\n     * but can keep the `buffer_pending` as low as they want to ensure low latency\n     * of audio playback.\n     *\n     * ```\n     * const [bufferPending] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    BufferPending = 0x181,\n}\n\n// Service: Azure IoT Hub Health\nexport const SRV_AZURE_IOT_HUB_HEALTH = 0x1462eefc\n\nexport enum AzureIotHubHealthConnectionStatus { // uint16_t\n    Connected = 0x1,\n    Disconnected = 0x2,\n    Connecting = 0x3,\n    Disconnecting = 0x4,\n}\n\nexport enum AzureIotHubHealthReg {\n    /**\n     * Read-only string (bytes). Something like `my-iot-hub.azure-devices.net`; empty string when not properly configured\n     *\n     * ```\n     * const [hubName] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    HubName = 0x180,\n\n    /**\n     * Read-only string (bytes). Device identifier in Azure Iot Hub\n     *\n     * ```\n     * const [hubDeviceId] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    HubDeviceId = 0x181,\n\n    /**\n     * Read-only ConnectionStatus (uint16_t). Indicates the status of connection. A message beyond the [0..3] range represents an HTTP error code.\n     *\n     * ```\n     * const [connectionStatus] = jdunpack<[AzureIotHubHealthConnectionStatus]>(buf, \"u16\")\n     * ```\n     */\n    ConnectionStatus = 0x182,\n}\n\nexport enum AzureIotHubHealthCmd {\n    /**\n     * No args. Starts a connection to the IoT hub service\n     */\n    Connect = 0x81,\n\n    /**\n     * No args. Starts disconnecting from the IoT hub service\n     */\n    Disconnect = 0x82,\n\n    /**\n     * Argument: connection_string string (bytes). Restricted command to override the existing connection string to the Azure IoT Hub.\n     *\n     * ```\n     * const [connectionString] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    SetConnectionString = 0x86,\n}\n\nexport enum AzureIotHubHealthEvent {\n    /**\n     * Argument: connection_status ConnectionStatus (uint16_t). Raised when the connection status changes\n     *\n     * ```\n     * const [connectionStatus] = jdunpack<[AzureIotHubHealthConnectionStatus]>(buf, \"u16\")\n     * ```\n     */\n    ConnectionStatusChange = 0x3,\n}\n\n// Service: Barcode reader\nexport const SRV_BARCODE_READER = 0x1c739e6c\n\nexport enum BarcodeReaderFormat { // uint8_t\n    Aztec = 0x1,\n    Code128 = 0x2,\n    Code39 = 0x3,\n    Code93 = 0x4,\n    Codabar = 0x5,\n    DataMatrix = 0x6,\n    Ean13 = 0x8,\n    Ean8 = 0x9,\n    ITF = 0xa,\n    Pdf417 = 0xb,\n    QrCode = 0xc,\n    UpcA = 0xd,\n    UpcE = 0xe,\n}\n\nexport enum BarcodeReaderReg {\n    /**\n     * Read-write bool (uint8_t). Turns on or off the detection of barcodes.\n     *\n     * ```\n     * const [enabled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Enabled = 0x1,\n\n    /**\n     * Constant. Reports the list of supported barcode formats, as documented in https://developer.mozilla.org/en-US/docs/Web/API/Barcode_Detection_API.\n     *\n     * ```\n     * const [format] = jdunpack<[BarcodeReaderFormat[]]>(buf, \"u8[]\")\n     * ```\n     */\n    Formats = 0x180,\n}\n\nexport enum BarcodeReaderEvent {\n    /**\n     * Raised when a bar code is detected and decoded. If the reader detects multiple codes, it will issue multiple events.\n     * In case of numeric barcodes, the `data` field should contain the ASCII (which is the same as UTF8 in that case) representation of the number.\n     *\n     * ```\n     * const [format, data] = jdunpack<[BarcodeReaderFormat, string]>(buf, \"u8 s\")\n     * ```\n     */\n    Detect = 0x1,\n}\n\n// Service: Barometer\nexport const SRV_BAROMETER = 0x1e117cea\nexport enum BarometerReg {\n    /**\n     * Read-only hPa u22.10 (uint32_t). The air pressure.\n     *\n     * ```\n     * const [pressure] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    Pressure = 0x101,\n\n    /**\n     * Read-only hPa u22.10 (uint32_t). The real pressure is between `pressure - pressure_error` and `pressure + pressure_error`.\n     *\n     * ```\n     * const [pressureError] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    PressureError = 0x106,\n}\n\n// Service: bit:radio\nexport const SRV_BIT_RADIO = 0x1ac986cf\nexport enum BitRadioReg {\n    /**\n     * Read-write bool (uint8_t). Turns on/off the radio antenna.\n     *\n     * ```\n     * const [enabled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Enabled = 0x1,\n\n    /**\n     * Read-write uint8_t. Group used to filter packets\n     *\n     * ```\n     * const [group] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Group = 0x80,\n\n    /**\n     * Read-write uint8_t. Antenna power to increase or decrease range.\n     *\n     * ```\n     * const [transmissionPower] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    TransmissionPower = 0x81,\n\n    /**\n     * Read-write uint8_t. Change the transmission and reception band of the radio to the given channel.\n     *\n     * ```\n     * const [frequencyBand] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    FrequencyBand = 0x82,\n}\n\nexport enum BitRadioCmd {\n    /**\n     * Argument: message string (bytes). Sends a string payload as a radio message, maximum 18 characters.\n     *\n     * ```\n     * const [message] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    SendString = 0x80,\n\n    /**\n     * Argument: value f64 (uint64_t). Sends a double precision number payload as a radio message\n     *\n     * ```\n     * const [value] = jdunpack<[number]>(buf, \"f64\")\n     * ```\n     */\n    SendNumber = 0x81,\n\n    /**\n     * Sends a double precision number and a name payload as a radio message\n     *\n     * ```\n     * const [value, name] = jdunpack<[number, string]>(buf, \"f64 s\")\n     * ```\n     */\n    SendValue = 0x82,\n\n    /**\n     * Argument: data bytes. Sends a payload of bytes as a radio message\n     *\n     * ```\n     * const [data] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    SendBuffer = 0x83,\n\n    /**\n     * Raised when a string packet is received\n     *\n     * ```\n     * const [time, deviceSerialNumber, rssi, message] = jdunpack<[number, number, number, string]>(buf, \"u32 u32 i8 x[1] s\")\n     * ```\n     */\n    StringReceived = 0x90,\n\n    /**\n     * Raised when a number packet is received\n     *\n     * ```\n     * const [time, deviceSerialNumber, rssi, value, name] = jdunpack<[number, number, number, number, string]>(buf, \"u32 u32 i8 x[3] f64 s\")\n     * ```\n     */\n    NumberReceived = 0x91,\n\n    /**\n     * Raised when a buffer packet is received\n     *\n     * ```\n     * const [time, deviceSerialNumber, rssi, data] = jdunpack<[number, number, number, Uint8Array]>(buf, \"u32 u32 i8 x[1] b\")\n     * ```\n     */\n    BufferReceived = 0x92,\n}\n\n// Service: Bootloader\nexport const SRV_BOOTLOADER = 0x1ffa9948\n\nexport enum BootloaderError { // uint32_t\n    NoError = 0x0,\n    PacketTooSmall = 0x1,\n    OutOfFlashableRange = 0x2,\n    InvalidPageOffset = 0x3,\n    NotPageAligned = 0x4,\n}\n\nexport enum BootloaderCmd {\n    /**\n     * No args. The `service_class` is always `0x1ffa9948`. The `product_identifer` identifies the kind of firmware\n     * that \"fits\" this device.\n     */\n    Info = 0x0,\n\n    /**\n     * report Info\n     * ```\n     * const [serviceClass, pageSize, flashableSize, productIdentifer] = jdunpack<[number, number, number, number]>(buf, \"u32 u32 u32 u32\")\n     * ```\n     */\n\n    /**\n     * Argument: session_id uint32_t. The flashing server should generate a random id, and use this command to set it.\n     *\n     * ```\n     * const [sessionId] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    SetSession = 0x81,\n\n    /**\n     * report SetSession\n     * ```\n     * const [sessionId] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n\n    /**\n     * Use to send flashing data. A physical page is split into `chunk_max + 1` chunks, where `chunk_no = 0 ... chunk_max`.\n     * Each chunk is stored at `page_address + page_offset`. `page_address` has to be equal in all chunks,\n     * and is included in response.\n     * Only the last chunk causes writing to flash and elicits response.\n     *\n     * ```\n     * const [pageAddress, pageOffset, chunkNo, chunkMax, sessionId, pageData] = jdunpack<[number, number, number, number, number, Uint8Array]>(buf, \"u32 u16 u8 u8 u32 x[4] x[4] x[4] x[4] b[208]\")\n     * ```\n     */\n    PageData = 0x80,\n\n    /**\n     * report PageData\n     * ```\n     * const [sessionId, pageError, pageAddress] = jdunpack<[number, BootloaderError, number]>(buf, \"u32 u32 u32\")\n     * ```\n     */\n}\n\n// Service: Button\nexport const SRV_BUTTON = 0x1473a263\nexport enum ButtonReg {\n    /**\n     * Read-only ratio u0.16 (uint16_t). Indicates the pressure state of the button, where ``0`` is open.\n     *\n     * ```\n     * const [pressure] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    Pressure = 0x101,\n\n    /**\n     * Constant bool (uint8_t). Indicates if the button provides analog ``pressure`` readings.\n     *\n     * ```\n     * const [analog] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Analog = 0x180,\n\n    /**\n     * Read-only bool (uint8_t). Determines if the button is pressed currently.\n     */\n    Pressed = 0x181,\n}\n\nexport enum ButtonEvent {\n    /**\n     * Emitted when button goes from inactive to active.\n     */\n    Down = 0x1,\n\n    /**\n     * Argument: time ms uint32_t. Emitted when button goes from active to inactive. The 'time' parameter\n     * records the amount of time between the down and up events.\n     *\n     * ```\n     * const [time] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    Up = 0x2,\n\n    /**\n     * Argument: time ms uint32_t. Emitted when the press time is greater than 500ms, and then at least every 500ms\n     * as long as the button remains pressed. The 'time' parameter records the the amount of time\n     * that the button has been held (since the down event).\n     *\n     * ```\n     * const [time] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    Hold = 0x81,\n}\n\n// Service: Buzzer\nexport const SRV_BUZZER = 0x1b57b1d7\nexport enum BuzzerReg {\n    /**\n     * Read-write ratio u0.8 (uint8_t). The volume (duty cycle) of the buzzer.\n     *\n     * ```\n     * const [volume] = jdunpack<[number]>(buf, \"u0.8\")\n     * ```\n     */\n    Volume = 0x1,\n}\n\nexport enum BuzzerCmd {\n    /**\n     * Play a PWM tone with given period and duty for given duration.\n     * The duty is scaled down with `volume` register.\n     * To play tone at frequency `F` Hz and volume `V` (in `0..1`) you will want\n     * to send `P = 1000000 / F` and `D = P * V / 2`.\n     *\n     * ```\n     * const [period, duty, duration] = jdunpack<[number, number, number]>(buf, \"u16 u16 u16\")\n     * ```\n     */\n    PlayTone = 0x80,\n\n    /**\n     * Play a note at the given frequency and volume.\n     */\n    PlayNote = 0x81,\n}\n\n// Service: Capacitive Button\nexport const SRV_CAPACITIVE_BUTTON = 0x2865adc9\nexport enum CapacitiveButtonReg {\n    /**\n     * Read-write ratio u0.16 (uint16_t). Indicates the threshold for ``up`` events.\n     *\n     * ```\n     * const [threshold] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    Threshold = 0x6,\n}\n\nexport enum CapacitiveButtonCmd {\n    /**\n     * No args. Request to calibrate the capactive. When calibration is requested, the device expects that no object is touching the button.\n     * The report indicates the calibration is done.\n     */\n    Calibrate = 0x2,\n}\n\n// Service: Character Screen\nexport const SRV_CHARACTER_SCREEN = 0x1f37c56a\n\nexport enum CharacterScreenVariant { // uint8_t\n    LCD = 0x1,\n    OLED = 0x2,\n    Braille = 0x3,\n}\n\n\nexport enum CharacterScreenTextDirection { // uint8_t\n    LeftToRight = 0x1,\n    RightToLeft = 0x2,\n}\n\nexport enum CharacterScreenReg {\n    /**\n     * Read-write string (bytes). Text to show. Use `\\n` to break lines.\n     *\n     * ```\n     * const [message] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    Message = 0x2,\n\n    /**\n     * Read-write ratio u0.8 (uint8_t). Brightness of the screen. `0` means off.\n     *\n     * ```\n     * const [brightness] = jdunpack<[number]>(buf, \"u0.8\")\n     * ```\n     */\n    Brightness = 0x1,\n\n    /**\n     * Constant Variant (uint8_t). Describes the type of character LED screen.\n     *\n     * ```\n     * const [variant] = jdunpack<[CharacterScreenVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n\n    /**\n     * Read-write TextDirection (uint8_t). Specifies the RTL or LTR direction of the text.\n     *\n     * ```\n     * const [textDirection] = jdunpack<[CharacterScreenTextDirection]>(buf, \"u8\")\n     * ```\n     */\n    TextDirection = 0x82,\n\n    /**\n     * Constant # uint8_t. Gets the number of rows.\n     *\n     * ```\n     * const [rows] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Rows = 0x180,\n\n    /**\n     * Constant # uint8_t. Gets the number of columns.\n     *\n     * ```\n     * const [columns] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Columns = 0x181,\n}\n\nexport enum CharacterScreenCmd {\n    /**\n     * Overrides the content of a single line at a 0-based index.\n     *\n     * ```\n     * const [index, message] = jdunpack<[number, string]>(buf, \"u16 s\")\n     * ```\n     */\n    SetLine = 0x80,\n\n    /**\n     * No args. Clears all text from the display.\n     */\n    Clear = 0x81,\n}\n\n// Service: Color\nexport const SRV_COLOR = 0x1630d567\nexport enum ColorReg {\n    /**\n     * Detected color in the RGB color space.\n     *\n     * ```\n     * const [red, green, blue] = jdunpack<[number, number, number]>(buf, \"u0.16 u0.16 u0.16\")\n     * ```\n     */\n    Color = 0x101,\n}\n\n// Service: Compass\nexport const SRV_COMPASS = 0x15b7b9bf\nexport enum CompassReg {\n    /**\n     * Read-only ° u16.16 (uint32_t). The heading with respect to the magnetic north.\n     *\n     * ```\n     * const [heading] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    Heading = 0x101,\n\n    /**\n     * Read-write bool (uint8_t). Turn on or off the sensor. Turning on the sensor may start a calibration sequence.\n     *\n     * ```\n     * const [enabled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Enabled = 0x1,\n\n    /**\n     * Read-only ° u16.16 (uint32_t). Error on the heading reading\n     *\n     * ```\n     * const [headingError] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    HeadingError = 0x106,\n}\n\nexport enum CompassCmd {\n    /**\n     * No args. Starts a calibration sequence for the compass.\n     */\n    Calibrate = 0x2,\n}\n\n// Service: Control\nexport const SRV_CONTROL = 0x0\n\nexport enum ControlAnnounceFlags { // uint16_t\n    RestartCounterSteady = 0xf,\n    RestartCounter1 = 0x1,\n    RestartCounter2 = 0x2,\n    RestartCounter4 = 0x4,\n    RestartCounter8 = 0x8,\n    StatusLightNone = 0x0,\n    StatusLightMono = 0x10,\n    StatusLightRgbNoFade = 0x20,\n    StatusLightRgbFade = 0x30,\n    SupportsACK = 0x100,\n    SupportsBroadcast = 0x200,\n    SupportsFrames = 0x400,\n    IsClient = 0x800,\n}\n\nexport enum ControlCmd {\n    /**\n     * No args. The `restart_counter` is computed from the `flags & RestartCounterSteady`, starts at `0x1` and increments by one until it reaches `0xf`, then it stays at `0xf`.\n     * If this number ever goes down, it indicates that the device restarted.\n     * `service_class` indicates class identifier for each service index (service index `0` is always control, so it's\n     * skipped in this enumeration).\n     * `packet_count` indicates the number of packets sent by the current device since last announce,\n     * including the current announce packet (it is always 0 if this feature is not supported).\n     * The command form can be used to induce report, which is otherwise broadcast every 500ms.\n     */\n    Services = 0x0,\n\n    /**\n     * report Services\n     * ```\n     * const [flags, packetCount, serviceClass] = jdunpack<[ControlAnnounceFlags, number, number[]]>(buf, \"u16 u8 x[1] u32[]\")\n     * ```\n     */\n\n    /**\n     * No args. Do nothing. Always ignored. Can be used to test ACKs.\n     */\n    Noop = 0x80,\n\n    /**\n     * No args. Blink the status LED (262ms on, 262ms off, four times, with the blue LED) or otherwise draw user's attention to device with no status light.\n     * For devices with status light (this can be discovered in the announce flags), the client should\n     * send the sequence of status light command to generate the identify animation.\n     */\n    Identify = 0x81,\n\n    /**\n     * No args. Reset device. ACK may or may not be sent.\n     */\n    Reset = 0x82,\n\n    /**\n     * The device will respond `num_responses` times, as fast as it can, setting the `counter` field in the report\n     * to `start_counter`, then `start_counter + 1`, ..., and finally `start_counter + num_responses - 1`.\n     * The `dummy_payload` is `size` bytes long and contains bytes `0, 1, 2, ...`.\n     *\n     * ```\n     * const [numResponses, startCounter, size] = jdunpack<[number, number, number]>(buf, \"u32 u32 u8\")\n     * ```\n     */\n    FloodPing = 0x83,\n\n    /**\n     * report FloodPing\n     * ```\n     * const [counter, dummyPayload] = jdunpack<[number, Uint8Array]>(buf, \"u32 b\")\n     * ```\n     */\n\n    /**\n     * Initiates a color transition of the status light from its current color to the one specified.\n     * The transition will complete in about `512 / speed` frames\n     * (each frame is currently 100ms, so speed of `51` is about 1 second and `26` 0.5 second).\n     * As a special case, if speed is `0` the transition is immediate.\n     * If MCU is not capable of executing transitions, it can consider `speed` to be always `0`.\n     * If a monochrome LEDs is fitted, the average value of ``red``, ``green``, ``blue`` is used.\n     * If intensity of a monochrome LED cannot be controlled, any value larger than `0` should be considered\n     * on, and `0` (for all three channels) should be considered off.\n     *\n     * ```\n     * const [toRed, toGreen, toBlue, speed] = jdunpack<[number, number, number, number]>(buf, \"u8 u8 u8 u8\")\n     * ```\n     */\n    SetStatusLight = 0x84,\n\n    /**\n     * No args. Force client device into proxy mode.\n     */\n    Proxy = 0x85,\n}\n\nexport enum ControlReg {\n    /**\n     * Read-write μs uint32_t. When set to value other than `0`, it asks the device to reset after specified number of microseconds.\n     * This is typically used to implement watchdog functionality, where a brain device sets `reset_in` to\n     * say 1.6s every 0.5s.\n     *\n     * ```\n     * const [resetIn] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    ResetIn = 0x80,\n\n    /**\n     * Constant string (bytes). Identifies the type of hardware (eg., ACME Corp. Servo X-42 Rev C)\n     *\n     * ```\n     * const [deviceDescription] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    DeviceDescription = 0x180,\n\n    /**\n     * Constant uint32_t. A numeric code for the string above; used to identify firmware images and devices.\n     *\n     * ```\n     * const [productIdentifier] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    ProductIdentifier = 0x181,\n\n    /**\n     * Constant uint32_t. Typically the same as `product_identifier` unless device was flashed by hand; the bootloader will respond to that code.\n     *\n     * ```\n     * const [bootloaderProductIdentifier] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    BootloaderProductIdentifier = 0x184,\n\n    /**\n     * Constant string (bytes). A string describing firmware version; typically semver.\n     *\n     * ```\n     * const [firmwareVersion] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    FirmwareVersion = 0x185,\n\n    /**\n     * Read-only °C int16_t. MCU temperature in degrees Celsius (approximate).\n     *\n     * ```\n     * const [mcuTemperature] = jdunpack<[number]>(buf, \"i16\")\n     * ```\n     */\n    McuTemperature = 0x182,\n\n    /**\n     * Read-only μs uint64_t. Number of microseconds since boot.\n     *\n     * ```\n     * const [uptime] = jdunpack<[number]>(buf, \"u64\")\n     * ```\n     */\n    Uptime = 0x186,\n}\n\n// Service: Dimmer\nexport const SRV_DIMMER = 0x1fb02645\n\nexport enum DimmerVariant { // uint8_t\n    Light = 0x1,\n    Fan = 0x2,\n    Pump = 0x3,\n}\n\nexport enum DimmerReg {\n    /**\n     * Read-write ratio u0.16 (uint16_t). The intensity of the current. Set to ``0`` to turn off completely the current.\n     *\n     * ```\n     * const [intensity] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    Intensity = 0x1,\n\n    /**\n     * Constant Variant (uint8_t). The type of physical device\n     *\n     * ```\n     * const [variant] = jdunpack<[DimmerVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Distance\nexport const SRV_DISTANCE = 0x141a6b8a\n\nexport enum DistanceVariant { // uint8_t\n    Ultrasonic = 0x1,\n    Infrared = 0x2,\n    LiDAR = 0x3,\n    Laser = 0x4,\n}\n\nexport enum DistanceReg {\n    /**\n     * Read-only m u16.16 (uint32_t). Current distance from the object\n     *\n     * ```\n     * const [distance] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    Distance = 0x101,\n\n    /**\n     * Constant m u16.16 (uint32_t). Minimum measurable distance\n     *\n     * ```\n     * const [minRange] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    MinRange = 0x104,\n\n    /**\n     * Constant m u16.16 (uint32_t). Maximum measurable distance\n     *\n     * ```\n     * const [maxRange] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    MaxRange = 0x105,\n\n    /**\n     * Constant Variant (uint8_t). Determines the type of sensor used.\n     *\n     * ```\n     * const [variant] = jdunpack<[DistanceVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: DMX\nexport const SRV_DMX = 0x11cf8c05\nexport enum DmxReg {\n    /**\n     * Read-write bool (uint8_t). Determines if the DMX bridge is active\n     *\n     * ```\n     * const [enabled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Enabled = 0x1,\n}\n\nexport enum DmxCmd {\n    /**\n     * Argument: channels bytes. Send a DMX packet, up to 236bytes long, including the start code.\n     *\n     * ```\n     * const [channels] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    Send = 0x80,\n}\n\n// Service: Dot Matrix\nexport const SRV_DOT_MATRIX = 0x110d154b\n\nexport enum DotMatrixVariant { // uint8_t\n    LED = 0x1,\n    Braille = 0x2,\n}\n\nexport enum DotMatrixReg {\n    /**\n     * Read-write bytes. The state of the screen where dot on/off state is\n     * stored as a bit, column by column. The column should be byte aligned.\n     *\n     * ```\n     * const [dots] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    Dots = 0x2,\n\n    /**\n     * Read-write ratio u0.8 (uint8_t). Reads the general brightness of the display, brightness for LEDs. `0` when the screen is off.\n     *\n     * ```\n     * const [brightness] = jdunpack<[number]>(buf, \"u0.8\")\n     * ```\n     */\n    Brightness = 0x1,\n\n    /**\n     * Constant # uint16_t. Number of rows on the screen\n     *\n     * ```\n     * const [rows] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    Rows = 0x181,\n\n    /**\n     * Constant # uint16_t. Number of columns on the screen\n     *\n     * ```\n     * const [columns] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    Columns = 0x182,\n\n    /**\n     * Constant Variant (uint8_t). Describes the type of matrix used.\n     *\n     * ```\n     * const [variant] = jdunpack<[DotMatrixVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Equivalent CO₂\nexport const SRV_E_CO2 = 0x169c9dc6\n\nexport enum ECO2Variant { // uint8_t\n    VOC = 0x1,\n    NDIR = 0x2,\n}\n\nexport enum ECO2Reg {\n    /**\n     * Read-only ppm u22.10 (uint32_t). Equivalent CO₂ (eCO₂) readings.\n     *\n     * ```\n     * const [eCO2] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    ECO2 = 0x101,\n\n    /**\n     * Read-only ppm u22.10 (uint32_t). Error on the reading value.\n     *\n     * ```\n     * const [eCO2Error] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    ECO2Error = 0x106,\n\n    /**\n     * Constant ppm u22.10 (uint32_t). Minimum measurable value\n     *\n     * ```\n     * const [minECO2] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    MinECO2 = 0x104,\n\n    /**\n     * Constant ppm u22.10 (uint32_t). Minimum measurable value\n     *\n     * ```\n     * const [maxECO2] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    MaxECO2 = 0x105,\n\n    /**\n     * Constant s uint32_t. Time required to achieve good sensor stability before measuring after long idle period.\n     *\n     * ```\n     * const [conditioningPeriod] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    ConditioningPeriod = 0x180,\n\n    /**\n     * Constant Variant (uint8_t). Type of physical sensor and capabilities.\n     *\n     * ```\n     * const [variant] = jdunpack<[ECO2Variant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Flex\nexport const SRV_FLEX = 0x1f47c6c6\n\nexport enum FlexVariant { // uint8_t\n    Linear22Inch = 0x1,\n    Linear45Inch = 0x2,\n}\n\nexport enum FlexReg {\n    /**\n     * Read-only ratio u0.16 (uint16_t). The relative position of the slider.\n     *\n     * ```\n     * const [bending] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    Bending = 0x101,\n\n    /**\n     * Constant Variant (uint8_t). Specifies the physical layout of the flex sensor.\n     *\n     * ```\n     * const [variant] = jdunpack<[FlexVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Gyroscope\nexport const SRV_GYROSCOPE = 0x1e1b06f2\nexport enum GyroscopeReg {\n    /**\n     * Indicates the current forces acting on accelerometer.\n     *\n     * ```\n     * const [x, y, z] = jdunpack<[number, number, number]>(buf, \"i12.20 i12.20 i12.20\")\n     * ```\n     */\n    RotationRates = 0x101,\n\n    /**\n     * Read-only °/s i12.20 (int32_t). Error on the reading value.\n     *\n     * ```\n     * const [rotationRatesError] = jdunpack<[number]>(buf, \"i12.20\")\n     * ```\n     */\n    RotationRatesError = 0x106,\n\n    /**\n     * Read-write °/s i12.20 (int32_t). Configures the range of range of rotation rates.\n     *\n     * ```\n     * const [maxRate] = jdunpack<[number]>(buf, \"i12.20\")\n     * ```\n     */\n    MaxRate = 0x80,\n}\n\n// Service: Heart Rate\nexport const SRV_HEART_RATE = 0x166c6dc4\n\nexport enum HeartRateVariant { // uint8_t\n    Finger = 0x1,\n    Chest = 0x2,\n    Wrist = 0x3,\n    Pump = 0x4,\n    WebCam = 0x5,\n}\n\nexport enum HeartRateReg {\n    /**\n     * Read-only bpm u16.16 (uint32_t). The estimated heart rate.\n     *\n     * ```\n     * const [heartRate] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    HeartRate = 0x101,\n\n    /**\n     * Read-only bpm u16.16 (uint32_t). The estimated error on the reported sensor data.\n     *\n     * ```\n     * const [heartRateError] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    HeartRateError = 0x106,\n\n    /**\n     * Constant Variant (uint8_t). The type of physical sensor\n     *\n     * ```\n     * const [variant] = jdunpack<[HeartRateVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: HID Adapter\nexport const SRV_HID_ADAPTER = 0x1e5758b5\nexport enum HidAdapterReg {\n    /**\n     * Read-write uint8_t. The number of configurations stored on the server.\n     *\n     * ```\n     * const [numConfigurations] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    NumConfigurations = 0x80,\n\n    /**\n     * Read-write uint8_t. The current configuration the server is using.\n     *\n     * ```\n     * const [currentConfiguration] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    CurrentConfiguration = 0x81,\n}\n\nexport enum HidAdapterCmd {\n    /**\n     * Retrieves a configuration stored on the server. If the configuration does not exist, an empty report will be returned\n     *\n     * ```\n     * const [results, configurationNumber] = jdunpack<[Uint8Array, number]>(buf, \"b[12] u8\")\n     * ```\n     */\n    GetConfiguration = 0x80,\n\n    /**\n     * Stores the given binding on the server. If a binding exists at this index, the new binding will replace it.\n     *\n     * ```\n     * const [configurationNumber, bindingIndex, deviceId, serviceClass, triggerValue, triggerContext, serviceIndex, selector, modifiers] = jdunpack<[number, number, number, number, number, number, number, number, number]>(buf, \"u8 u8 x[2] u64 u32 u32 u8 u8 u16 u16\")\n     * ```\n     */\n    SetBinding = 0x82,\n\n    /**\n     * Clears a specific binding stored on the device.\n     *\n     * ```\n     * const [configurationNumber, bindingIndex] = jdunpack<[number, number]>(buf, \"u8 u8\")\n     * ```\n     */\n    ClearBinding = 0x83,\n\n    /**\n     * Argument: configuration_number uint8_t. Clears a specific configuration stored on the device.\n     *\n     * ```\n     * const [configurationNumber] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    ClearConfiguration = 0x84,\n\n    /**\n     * No args. Clears all configurations and bindings stored on the device.\n     */\n    Clear = 0x85,\n}\n\n\n/**\n * pipe_report Configuration\n * ```\n * const [configurationNumber, bindingIndex, deviceId, serviceClass, triggerValue, triggerContext, serviceIndex, selector, modifiers] = jdunpack<[number, number, number, number, number, number, number, number, number]>(buf, \"u8 u8 x[2] u64 u32 u32 u8 u8 u16 u16\")\n * ```\n */\n\n\nexport enum HidAdapterEvent {\n    /**\n     * Event that notifies clients that the server has swapped to a new configuration or changed key bindings.\n     */\n    Changed = 0x3,\n}\n\n// Service: HID Keyboard\nexport const SRV_HID_KEYBOARD = 0x18b05b6a\n\nexport enum HidKeyboardModifiers { // uint8_t\n    None = 0x0,\n    LeftControl = 0x1,\n    LeftShift = 0x2,\n    LeftAlt = 0x4,\n    LeftGUI = 0x8,\n    RightControl = 0x10,\n    RightShift = 0x20,\n    RightAlt = 0x40,\n    RightGUI = 0x80,\n}\n\n\nexport enum HidKeyboardAction { // uint8_t\n    Press = 0x0,\n    Up = 0x1,\n    Down = 0x2,\n}\n\nexport enum HidKeyboardCmd {\n    /**\n     * Presses a key or a sequence of keys down.\n     *\n     * ```\n     * const [rest] = jdunpack<[([number, HidKeyboardModifiers, HidKeyboardAction])[]]>(buf, \"r: u16 u8 u8\")\n     * const [selector, modifiers, action] = rest[0]\n     * ```\n     */\n    Key = 0x80,\n\n    /**\n     * No args. Clears all pressed keys.\n     */\n    Clear = 0x81,\n}\n\n// Service: HID Mouse\nexport const SRV_HID_MOUSE = 0x1885dc1c\n\nexport enum HidMouseButton { // uint16_t\n    Left = 0x1,\n    Right = 0x2,\n    Middle = 0x4,\n}\n\n\nexport enum HidMouseButtonEvent { // uint8_t\n    Up = 0x1,\n    Down = 0x2,\n    Click = 0x3,\n    DoubleClick = 0x4,\n}\n\nexport enum HidMouseCmd {\n    /**\n     * Sets the up/down state of one or more buttons.\n     * A ``Click`` is the same as ``Down`` followed by ``Up`` after 100ms.\n     * A ``DoubleClick`` is two clicks with ``150ms`` gap between them (that is, ``100ms`` first click, ``150ms`` gap, ``100ms`` second click).\n     *\n     * ```\n     * const [buttons, event] = jdunpack<[HidMouseButton, HidMouseButtonEvent]>(buf, \"u16 u8\")\n     * ```\n     */\n    SetButton = 0x80,\n\n    /**\n     * Moves the mouse by the distance specified.\n     * If the time is positive, it specifies how long to make the move.\n     *\n     * ```\n     * const [dx, dy, time] = jdunpack<[number, number, number]>(buf, \"i16 i16 u16\")\n     * ```\n     */\n    Move = 0x81,\n\n    /**\n     * Turns the wheel up or down. Positive if scrolling up.\n     * If the time is positive, it specifies how long to make the move.\n     *\n     * ```\n     * const [dy, time] = jdunpack<[number, number]>(buf, \"i16 u16\")\n     * ```\n     */\n    Wheel = 0x82,\n}\n\n// Service: Humidity\nexport const SRV_HUMIDITY = 0x16c810b8\nexport enum HumidityReg {\n    /**\n     * Read-only %RH u22.10 (uint32_t). The relative humidity in percentage of full water saturation.\n     *\n     * ```\n     * const [humidity] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    Humidity = 0x101,\n\n    /**\n     * Read-only %RH u22.10 (uint32_t). The real humidity is between `humidity - humidity_error` and `humidity + humidity_error`.\n     *\n     * ```\n     * const [humidityError] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    HumidityError = 0x106,\n\n    /**\n     * Constant %RH u22.10 (uint32_t). Lowest humidity that can be reported.\n     *\n     * ```\n     * const [minHumidity] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    MinHumidity = 0x104,\n\n    /**\n     * Constant %RH u22.10 (uint32_t). Highest humidity that can be reported.\n     *\n     * ```\n     * const [maxHumidity] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    MaxHumidity = 0x105,\n}\n\n// Service: Illuminance\nexport const SRV_ILLUMINANCE = 0x1e6ecaf2\nexport enum IlluminanceReg {\n    /**\n     * Read-only lux u22.10 (uint32_t). The amount of illuminance, as lumens per square metre.\n     *\n     * ```\n     * const [light] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    Light = 0x101,\n\n    /**\n     * Read-only lux u22.10 (uint32_t). Error on the reported sensor value.\n     *\n     * ```\n     * const [lightError] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    LightError = 0x106,\n}\n\n// Service: Indexed screen\nexport const SRV_INDEXED_SCREEN = 0x16fa36e5\nexport enum IndexedScreenCmd {\n    /**\n     * Sets the update window for subsequent `set_pixels` commands.\n     *\n     * ```\n     * const [x, y, width, height] = jdunpack<[number, number, number, number]>(buf, \"u16 u16 u16 u16\")\n     * ```\n     */\n    StartUpdate = 0x81,\n\n    /**\n     * Argument: pixels bytes. Set pixels in current window, according to current palette.\n     * Each \"line\" of data is aligned to a byte.\n     *\n     * ```\n     * const [pixels] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    SetPixels = 0x83,\n}\n\nexport enum IndexedScreenReg {\n    /**\n     * Read-write ratio u0.8 (uint8_t). Set backlight brightness.\n     * If set to `0` the display may go to sleep.\n     *\n     * ```\n     * const [brightness] = jdunpack<[number]>(buf, \"u0.8\")\n     * ```\n     */\n    Brightness = 0x1,\n\n    /**\n     * The current palette.\n     * The color entry repeats `1 << bits_per_pixel` times.\n     * This register may be write-only.\n     *\n     * ```\n     * const [rest] = jdunpack<[([number, number, number])[]]>(buf, \"r: u8 u8 u8 x[1]\")\n     * const [blue, green, red] = rest[0]\n     * ```\n     */\n    Palette = 0x80,\n\n    /**\n     * Constant bit uint8_t. Determines the number of palette entries.\n     * Typical values are 1, 2, 4, or 8.\n     *\n     * ```\n     * const [bitsPerPixel] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    BitsPerPixel = 0x180,\n\n    /**\n     * Constant px uint16_t. Screen width in \"natural\" orientation.\n     *\n     * ```\n     * const [width] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    Width = 0x181,\n\n    /**\n     * Constant px uint16_t. Screen height in \"natural\" orientation.\n     *\n     * ```\n     * const [height] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    Height = 0x182,\n\n    /**\n     * Read-write bool (uint8_t). If true, consecutive pixels in the \"width\" direction are sent next to each other (this is typical for graphics cards).\n     * If false, consecutive pixels in the \"height\" direction are sent next to each other.\n     * For embedded screen controllers, this is typically true iff `width < height`\n     * (in other words, it's only true for portrait orientation screens).\n     * Some controllers may allow the user to change this (though the refresh order may not be optimal then).\n     * This is independent of the `rotation` register.\n     *\n     * ```\n     * const [widthMajor] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    WidthMajor = 0x81,\n\n    /**\n     * Read-write px uint8_t. Every pixel sent over wire is represented by `up_sampling x up_sampling` square of physical pixels.\n     * Some displays may allow changing this (which will also result in changes to `width` and `height`).\n     * Typical values are 1 and 2.\n     *\n     * ```\n     * const [upSampling] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    UpSampling = 0x82,\n\n    /**\n     * Read-write ° uint16_t. Possible values are 0, 90, 180 and 270 only.\n     * Write to this register do not affect `width` and `height` registers,\n     * and may be ignored by some screens.\n     *\n     * ```\n     * const [rotation] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    Rotation = 0x83,\n}\n\n// Service: Infrastructure\nexport const SRV_INFRASTRUCTURE = 0x1e1589eb\n// Service: Joystick\nexport const SRV_JOYSTICK = 0x108f7456\n\nexport enum JoystickButtons { // uint32_t\n    Left = 0x1,\n    Up = 0x2,\n    Right = 0x4,\n    Down = 0x8,\n    A = 0x10,\n    B = 0x20,\n    Menu = 0x40,\n    Select = 0x80,\n    Reset = 0x100,\n    Exit = 0x200,\n    X = 0x400,\n    Y = 0x800,\n}\n\n\nexport enum JoystickVariant { // uint8_t\n    Thumb = 0x1,\n    ArcadeBall = 0x2,\n    ArcadeStick = 0x3,\n    Gamepad = 0x4,\n}\n\nexport enum JoystickReg {\n    /**\n     * If the joystick is analog, the directional buttons should be \"simulated\", based on joystick position\n     * (`Left` is `{ x = -1, y = 0 }`, `Up` is `{ x = 0, y = -1}`).\n     * If the joystick is digital, then each direction will read as either `-1`, `0`, or `1` (in fixed representation).\n     * The primary button on the joystick is `A`.\n     *\n     * ```\n     * const [buttons, x, y] = jdunpack<[JoystickButtons, number, number]>(buf, \"u32 i1.15 i1.15\")\n     * ```\n     */\n    Direction = 0x101,\n\n    /**\n     * Constant Variant (uint8_t). The type of physical joystick.\n     *\n     * ```\n     * const [variant] = jdunpack<[JoystickVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n\n    /**\n     * Constant Buttons (uint32_t). Indicates a bitmask of the buttons that are mounted on the joystick.\n     * If the `Left`/`Up`/`Right`/`Down` buttons are marked as available here, the joystick is digital.\n     * Even when marked as not available, they will still be simulated based on the analog joystick.\n     *\n     * ```\n     * const [buttonsAvailable] = jdunpack<[JoystickButtons]>(buf, \"u32\")\n     * ```\n     */\n    ButtonsAvailable = 0x180,\n}\n\nexport enum JoystickEvent {\n    /**\n     * Argument: buttons Buttons (uint32_t). Emitted whenever the state of buttons changes.\n     *\n     * ```\n     * const [buttons] = jdunpack<[JoystickButtons]>(buf, \"u32\")\n     * ```\n     */\n    ButtonsChanged = 0x3,\n}\n\n// Service: LED\nexport const SRV_LED = 0x1e3048f8\n\nexport enum LedVariant { // uint8_t\n    ThroughHole = 0x1,\n    SMD = 0x2,\n    Power = 0x3,\n    Bead = 0x4,\n}\n\nexport enum LedCmd {\n    /**\n     * This has the same semantics as `set_status_light` in the control service.\n     *\n     * ```\n     * const [toRed, toGreen, toBlue, speed] = jdunpack<[number, number, number, number]>(buf, \"u8 u8 u8 u8\")\n     * ```\n     */\n    Animate = 0x80,\n}\n\nexport enum LedReg {\n    /**\n     * The current color of the LED.\n     *\n     * ```\n     * const [red, green, blue] = jdunpack<[number, number, number]>(buf, \"u8 u8 u8\")\n     * ```\n     */\n    Color = 0x180,\n\n    /**\n     * Read-write mA uint16_t. Limit the power drawn by the light-strip (and controller).\n     *\n     * ```\n     * const [maxPower] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    MaxPower = 0x7,\n\n    /**\n     * Constant uint16_t. If known, specifies the number of LEDs in parallel on this device.\n     *\n     * ```\n     * const [ledCount] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    LedCount = 0x183,\n\n    /**\n     * Constant nm uint16_t. If monochrome LED, specifies the wave length of the LED.\n     *\n     * ```\n     * const [waveLength] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    WaveLength = 0x181,\n\n    /**\n     * Constant mcd uint16_t. The luminous intensity of the LED, at full value, in micro candella.\n     *\n     * ```\n     * const [luminousIntensity] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    LuminousIntensity = 0x182,\n\n    /**\n     * Constant Variant (uint8_t). The physical type of LED.\n     *\n     * ```\n     * const [variant] = jdunpack<[LedVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: LED Pixel\nexport const SRV_LED_PIXEL = 0x126f00e0\n\nexport enum LedPixelLightType { // uint8_t\n    WS2812B_GRB = 0x0,\n    APA102 = 0x10,\n    SK9822 = 0x11,\n}\n\n\nexport enum LedPixelVariant { // uint8_t\n    Strip = 0x1,\n    Ring = 0x2,\n    Stick = 0x3,\n    Jewel = 0x4,\n    Matrix = 0x5,\n}\n\nexport enum LedPixelReg {\n    /**\n     * Read-write ratio u0.8 (uint8_t). Set the luminosity of the strip.\n     * At `0` the power to the strip is completely shut down.\n     *\n     * ```\n     * const [brightness] = jdunpack<[number]>(buf, \"u0.8\")\n     * ```\n     */\n    Brightness = 0x1,\n\n    /**\n     * Read-only ratio u0.8 (uint8_t). This is the luminosity actually applied to the strip.\n     * May be lower than `brightness` if power-limited by the `max_power` register.\n     * It will rise slowly (few seconds) back to `brightness` is limits are no longer required.\n     *\n     * ```\n     * const [actualBrightness] = jdunpack<[number]>(buf, \"u0.8\")\n     * ```\n     */\n    ActualBrightness = 0x180,\n\n    /**\n     * Read-write LightType (uint8_t). Specifies the type of light strip connected to controller.\n     * Controllers which are sold with lights should default to the correct type\n     * and could not allow change.\n     *\n     * ```\n     * const [lightType] = jdunpack<[LedPixelLightType]>(buf, \"u8\")\n     * ```\n     */\n    LightType = 0x80,\n\n    /**\n     * Read-write # uint16_t. Specifies the number of pixels in the strip.\n     * Controllers which are sold with lights should default to the correct length\n     * and could not allow change. Increasing length at runtime leads to ineffective use of memory and may lead to controller reboot.\n     *\n     * ```\n     * const [numPixels] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    NumPixels = 0x81,\n\n    /**\n     * Read-write # uint16_t. If the LED pixel strip is a matrix, specifies the number of columns. Otherwise, a square shape is assumed. Controllers which are sold with lights should default to the correct length\n     * and could not allow change. Increasing length at runtime leads to ineffective use of memory and may lead to controller reboot.\n     *\n     * ```\n     * const [numColumns] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    NumColumns = 0x83,\n\n    /**\n     * Read-write mA uint16_t. Limit the power drawn by the light-strip (and controller).\n     *\n     * ```\n     * const [maxPower] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    MaxPower = 0x7,\n\n    /**\n     * Constant # uint16_t. The maximum supported number of pixels.\n     * All writes to `num_pixels` are clamped to `max_pixels`.\n     *\n     * ```\n     * const [maxPixels] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    MaxPixels = 0x181,\n\n    /**\n     * Read-write # uint16_t. How many times to repeat the program passed in `run` command.\n     * Should be set before the `run` command.\n     * Setting to `0` means to repeat forever.\n     *\n     * ```\n     * const [numRepeats] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    NumRepeats = 0x82,\n\n    /**\n     * Constant Variant (uint8_t). Specifies the shape of the light strip.\n     *\n     * ```\n     * const [variant] = jdunpack<[LedPixelVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\nexport enum LedPixelCmd {\n    /**\n     * Argument: program bytes. Run the given light \"program\". See service description for details.\n     *\n     * ```\n     * const [program] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    Run = 0x81,\n}\n\n// Service: Light level\nexport const SRV_LIGHT_LEVEL = 0x17dc9a1c\n\nexport enum LightLevelVariant { // uint8_t\n    PhotoResistor = 0x1,\n    LEDMatrix = 0x2,\n    Ambient = 0x3,\n}\n\nexport enum LightLevelReg {\n    /**\n     * Read-only ratio u0.16 (uint16_t). Detect light level\n     *\n     * ```\n     * const [lightLevel] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    LightLevel = 0x101,\n\n    /**\n     * Constant Variant (uint8_t). The type of physical sensor.\n     *\n     * ```\n     * const [variant] = jdunpack<[LightLevelVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Logger\nexport const SRV_LOGGER = 0x12dc1fca\n\nexport enum LoggerPriority { // uint8_t\n    Debug = 0x0,\n    Log = 0x1,\n    Warning = 0x2,\n    Error = 0x3,\n    Silent = 0x4,\n}\n\nexport enum LoggerReg {\n    /**\n     * Read-write Priority (uint8_t). Messages with level lower than this won't be emitted. The default setting may vary.\n     * Loggers should revert this to their default setting if the register has not been\n     * updated in 3000ms, and also keep the lowest setting they have seen in the last 1500ms.\n     * Thus, clients should write this register every 1000ms and ignore messages which are\n     * too verbose for them.\n     *\n     * ```\n     * const [minPriority] = jdunpack<[LoggerPriority]>(buf, \"u8\")\n     * ```\n     */\n    MinPriority = 0x80,\n}\n\nexport enum LoggerCmd {\n    /**\n     * Argument: message string (bytes). Report a message.\n     *\n     * ```\n     * const [message] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    Debug = 0x80,\n\n    /**\n     * Argument: message string (bytes). Report a message.\n     *\n     * ```\n     * const [message] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    Log = 0x81,\n\n    /**\n     * Argument: message string (bytes). Report a message.\n     *\n     * ```\n     * const [message] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    Warn = 0x82,\n\n    /**\n     * Argument: message string (bytes). Report a message.\n     *\n     * ```\n     * const [message] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    Error = 0x83,\n}\n\n// Service: Magnetometer\nexport const SRV_MAGNETOMETER = 0x13029088\nexport enum MagnetometerReg {\n    /**\n     * Indicates the current magnetic field on magnetometer.\n     * For reference: `1 mgauss` is `100 nT` (and `1 gauss` is `100 000 nT`).\n     *\n     * ```\n     * const [x, y, z] = jdunpack<[number, number, number]>(buf, \"i32 i32 i32\")\n     * ```\n     */\n    Forces = 0x101,\n\n    /**\n     * Read-only nT int32_t. Error on the readings.\n     *\n     * ```\n     * const [forcesError] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    ForcesError = 0x106,\n}\n\nexport enum MagnetometerCmd {\n    /**\n     * No args. Forces a calibration sequence where the user/device\n     * might have to rotate to be calibrated.\n     */\n    Calibrate = 0x2,\n}\n\n// Service: Matrix Keypad\nexport const SRV_MATRIX_KEYPAD = 0x13062dc8\n\nexport enum MatrixKeypadVariant { // uint8_t\n    Membrane = 0x1,\n    Keyboard = 0x2,\n    Elastomer = 0x3,\n    ElastomerLEDPixel = 0x4,\n}\n\nexport enum MatrixKeypadReg {\n    /**\n     * Read-only. The coordinate of the button currently pressed. Keys are zero-indexed from left to right, top to bottom:\n     * ``row = index / columns``, ``column = index % columns``.\n     *\n     * ```\n     * const [index] = jdunpack<[number[]]>(buf, \"u8[]\")\n     * ```\n     */\n    Pressed = 0x101,\n\n    /**\n     * Constant # uint8_t. Number of rows in the matrix\n     *\n     * ```\n     * const [rows] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Rows = 0x180,\n\n    /**\n     * Constant # uint8_t. Number of columns in the matrix\n     *\n     * ```\n     * const [columns] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Columns = 0x181,\n\n    /**\n     * Constant. The characters printed on the keys if any, in indexing sequence.\n     *\n     * ```\n     * const [label] = jdunpack<[string[]]>(buf, \"z[]\")\n     * ```\n     */\n    Labels = 0x182,\n\n    /**\n     * Constant Variant (uint8_t). The type of physical keypad. If the variant is ``ElastomerLEDPixel``\n     * and the next service on the device is a ``LEDPixel`` service, it is considered\n     * as the service controlling the LED pixel on the keypad.\n     *\n     * ```\n     * const [variant] = jdunpack<[MatrixKeypadVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\nexport enum MatrixKeypadEvent {\n    /**\n     * Argument: uint8_t. Emitted when a key, at the given index, goes from inactive (`pressed == 0`) to active.\n     *\n     * ```\n     * const [down] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Down = 0x1,\n\n    /**\n     * Argument: uint8_t. Emitted when a key, at the given index, goes from active (`pressed == 1`) to inactive.\n     *\n     * ```\n     * const [up] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Up = 0x2,\n\n    /**\n     * Argument: uint8_t. Emitted together with `up` when the press time was not longer than 500ms.\n     *\n     * ```\n     * const [click] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Click = 0x80,\n\n    /**\n     * Argument: uint8_t. Emitted together with `up` when the press time was more than 500ms.\n     *\n     * ```\n     * const [longClick] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    LongClick = 0x81,\n}\n\n// Service: Microphone\nexport const SRV_MICROPHONE = 0x113dac86\nexport enum MicrophoneCmd {\n    /**\n     * The samples will be streamed back over the `samples` pipe.\n     * If `num_samples` is `0`, streaming will only stop when the pipe is closed.\n     * Otherwise the specified number of samples is streamed.\n     * Samples are sent as `i16`.\n     *\n     * ```\n     * const [samples, numSamples] = jdunpack<[Uint8Array, number]>(buf, \"b[12] u32\")\n     * ```\n     */\n    Sample = 0x81,\n}\n\nexport enum MicrophoneReg {\n    /**\n     * Read-write μs uint32_t. Get or set microphone sampling period.\n     * Sampling rate is `1_000_000 / sampling_period Hz`.\n     *\n     * ```\n     * const [samplingPeriod] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    SamplingPeriod = 0x80,\n}\n\n// Service: MIDI output\nexport const SRV_MIDI_OUTPUT = 0x1a848cd7\nexport enum MidiOutputReg {\n    /**\n     * Read-write bool (uint8_t). Opens or closes the port to the MIDI device\n     *\n     * ```\n     * const [enabled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Enabled = 0x1,\n}\n\nexport enum MidiOutputCmd {\n    /**\n     * No args. Clears any pending send data that has not yet been sent from the MIDIOutput's queue.\n     */\n    Clear = 0x80,\n\n    /**\n     * Argument: data bytes. Enqueues the message to be sent to the corresponding MIDI port\n     *\n     * ```\n     * const [data] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    Send = 0x81,\n}\n\n// Service: Model Runner\nexport const SRV_MODEL_RUNNER = 0x140f9a78\n\nexport enum ModelRunnerModelFormat { // uint32_t\n    TFLite = 0x334c4654,\n    ML4F = 0x30470f62,\n    EdgeImpulseCompiled = 0x30564945,\n}\n\nexport enum ModelRunnerCmd {\n    /**\n     * Argument: model_size B uint32_t. Open pipe for streaming in the model. The size of the model has to be declared upfront.\n     * The model is streamed over regular pipe data packets.\n     * The format supported by this instance of the service is specified in `format` register.\n     * When the pipe is closed, the model is written all into flash, and the device running the service may reset.\n     *\n     * ```\n     * const [modelSize] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    SetModel = 0x80,\n\n    /**\n     * report SetModel\n     * ```\n     * const [modelPort] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n\n    /**\n     * Argument: outputs pipe (bytes). Open channel that can be used to manually invoke the model. When enough data is sent over the `inputs` pipe, the model is invoked,\n     * and results are send over the `outputs` pipe.\n     *\n     * ```\n     * const [outputs] = jdunpack<[Uint8Array]>(buf, \"b[12]\")\n     * ```\n     */\n    Predict = 0x81,\n\n    /**\n     * report Predict\n     * ```\n     * const [inputs] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n}\n\nexport enum ModelRunnerReg {\n    /**\n     * Read-write uint16_t. When register contains `N > 0`, run the model automatically every time new `N` samples are collected.\n     * Model may be run less often if it takes longer to run than `N * sampling_interval`.\n     * The `outputs` register will stream its value after each run.\n     * This register is not stored in flash.\n     *\n     * ```\n     * const [autoInvokeEvery] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    AutoInvokeEvery = 0x80,\n\n    /**\n     * Read-only. Results of last model invocation as `float32` array.\n     *\n     * ```\n     * const [output] = jdunpack<[number[]]>(buf, \"f32[]\")\n     * ```\n     */\n    Outputs = 0x101,\n\n    /**\n     * Read-only. The shape of the input tensor.\n     *\n     * ```\n     * const [dimension] = jdunpack<[number[]]>(buf, \"u16[]\")\n     * ```\n     */\n    InputShape = 0x180,\n\n    /**\n     * Read-only. The shape of the output tensor.\n     *\n     * ```\n     * const [dimension] = jdunpack<[number[]]>(buf, \"u16[]\")\n     * ```\n     */\n    OutputShape = 0x181,\n\n    /**\n     * Read-only μs uint32_t. The time consumed in last model execution.\n     *\n     * ```\n     * const [lastRunTime] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    LastRunTime = 0x182,\n\n    /**\n     * Read-only B uint32_t. Number of RAM bytes allocated for model execution.\n     *\n     * ```\n     * const [allocatedArenaSize] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    AllocatedArenaSize = 0x183,\n\n    /**\n     * Read-only B uint32_t. The size of the model in bytes.\n     *\n     * ```\n     * const [modelSize] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    ModelSize = 0x184,\n\n    /**\n     * Read-only string (bytes). Textual description of last error when running or loading model (if any).\n     *\n     * ```\n     * const [lastError] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    LastError = 0x185,\n\n    /**\n     * Constant ModelFormat (uint32_t). The type of ML models supported by this service.\n     * `TFLite` is flatbuffer `.tflite` file.\n     * `ML4F` is compiled machine code model for Cortex-M4F.\n     * The format is typically present as first or second little endian word of model file.\n     *\n     * ```\n     * const [format] = jdunpack<[ModelRunnerModelFormat]>(buf, \"u32\")\n     * ```\n     */\n    Format = 0x186,\n\n    /**\n     * Constant uint32_t. A version number for the format.\n     *\n     * ```\n     * const [formatVersion] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    FormatVersion = 0x187,\n\n    /**\n     * Constant bool (uint8_t). If present and true this service can run models independently of other\n     * instances of this service on the device.\n     *\n     * ```\n     * const [parallel] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Parallel = 0x188,\n}\n\n// Service: Motion\nexport const SRV_MOTION = 0x1179a749\n\nexport enum MotionVariant { // uint8_t\n    PIR = 0x1,\n}\n\nexport enum MotionReg {\n    /**\n     * Read-only bool (uint8_t). Reports is movement is currently detected by the sensor.\n     *\n     * ```\n     * const [moving] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Moving = 0x101,\n\n    /**\n     * Constant m u16.16 (uint32_t). Maximum distance where objects can be detected.\n     *\n     * ```\n     * const [maxDistance] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    MaxDistance = 0x180,\n\n    /**\n     * Constant ° uint16_t. Opening of the field of view\n     *\n     * ```\n     * const [angle] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    Angle = 0x181,\n\n    /**\n     * Constant Variant (uint8_t). Type of physical sensor\n     *\n     * ```\n     * const [variant] = jdunpack<[MotionVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\nexport enum MotionEvent {\n    /**\n     * A movement was detected.\n     */\n    Movement = 0x1,\n}\n\n// Service: Motor\nexport const SRV_MOTOR = 0x17004cd8\nexport enum MotorReg {\n    /**\n     * Read-write ratio i1.15 (int16_t). PWM duty cycle of the motor. Use negative/positive values to run the motor forwards and backwards.\n     * Positive is recommended to be clockwise rotation and negative counterclockwise. A duty of ``0``\n     * while ``enabled`` acts as brake.\n     *\n     * ```\n     * const [duty] = jdunpack<[number]>(buf, \"i1.15\")\n     * ```\n     */\n    Duty = 0x2,\n\n    /**\n     * Read-write bool (uint8_t). Turn the power to the motor on/off.\n     *\n     * ```\n     * const [enabled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Enabled = 0x1,\n\n    /**\n     * Constant kg/cm u16.16 (uint32_t). Torque required to produce the rated power of an electrical motor at load speed.\n     *\n     * ```\n     * const [loadTorque] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    LoadTorque = 0x180,\n\n    /**\n     * Constant rpm u16.16 (uint32_t). Revolutions per minute of the motor under full load.\n     *\n     * ```\n     * const [loadSpeed] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    LoadSpeed = 0x181,\n}\n\n// Service: Multitouch\nexport const SRV_MULTITOUCH = 0x18d55e2b\nexport enum MultitouchReg {\n    /**\n     * Read-only. Capacitance of channels. The capacitance is continuously calibrated, and a value of `0` indicates\n     * no touch, wheres a value of around `100` or more indicates touch.\n     * It's best to ignore this (unless debugging), and use events.\n     *\n     * ```\n     * const [capacitance] = jdunpack<[number[]]>(buf, \"i32[]\")\n     * ```\n     */\n    Capacity = 0x101,\n}\n\nexport enum MultitouchEvent {\n    /**\n     * Argument: channel uint32_t. Emitted when an input is touched.\n     *\n     * ```\n     * const [channel] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    Touch = 0x1,\n\n    /**\n     * Argument: channel uint32_t. Emitted when an input is no longer touched.\n     *\n     * ```\n     * const [channel] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    Release = 0x2,\n\n    /**\n     * Argument: channel uint32_t. Emitted when an input is briefly touched. TODO Not implemented.\n     *\n     * ```\n     * const [channel] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    Tap = 0x80,\n\n    /**\n     * Argument: channel uint32_t. Emitted when an input is touched for longer than 500ms. TODO Not implemented.\n     *\n     * ```\n     * const [channel] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    LongPress = 0x81,\n\n    /**\n     * Emitted when input channels are successively touched in order of increasing channel numbers.\n     */\n    SwipePos = 0x90,\n\n    /**\n     * Emitted when input channels are successively touched in order of decreasing channel numbers.\n     */\n    SwipeNeg = 0x91,\n}\n\n// Service: Potentiometer\nexport const SRV_POTENTIOMETER = 0x1f274746\n\nexport enum PotentiometerVariant { // uint8_t\n    Slider = 0x1,\n    Rotary = 0x2,\n}\n\nexport enum PotentiometerReg {\n    /**\n     * Read-only ratio u0.16 (uint16_t). The relative position of the slider.\n     *\n     * ```\n     * const [position] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    Position = 0x101,\n\n    /**\n     * Constant Variant (uint8_t). Specifies the physical layout of the potentiometer.\n     *\n     * ```\n     * const [variant] = jdunpack<[PotentiometerVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Power\nexport const SRV_POWER = 0x1fa4c95a\n\nexport enum PowerPowerStatus { // uint8_t\n    Disallowed = 0x0,\n    Powering = 0x1,\n    Overload = 0x2,\n    Overprovision = 0x3,\n}\n\nexport enum PowerReg {\n    /**\n     * Read-write bool (uint8_t). Can be used to completely disable the service.\n     * When allowed, the service may still not be providing power, see\n     * `power_status` for the actual current state.\n     *\n     * ```\n     * const [allowed] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Allowed = 0x1,\n\n    /**\n     * Read-write mA uint16_t. Limit the power provided by the service. The actual maximum limit will depend on hardware.\n     * This field may be read-only in some implementations - you should read it back after setting.\n     *\n     * ```\n     * const [maxPower] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    MaxPower = 0x7,\n\n    /**\n     * Read-only PowerStatus (uint8_t). Indicates whether the power provider is currently providing power (`Powering` state), and if not, why not.\n     * `Overprovision` means there was another power provider, and we stopped not to overprovision the bus.\n     *\n     * ```\n     * const [powerStatus] = jdunpack<[PowerPowerStatus]>(buf, \"u8\")\n     * ```\n     */\n    PowerStatus = 0x181,\n\n    /**\n     * Read-only mA uint16_t. Present current draw from the bus.\n     *\n     * ```\n     * const [currentDraw] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    CurrentDraw = 0x101,\n\n    /**\n     * Read-only mV uint16_t. Voltage on input.\n     *\n     * ```\n     * const [batteryVoltage] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    BatteryVoltage = 0x180,\n\n    /**\n     * Read-only ratio u0.16 (uint16_t). Fraction of charge in the battery.\n     *\n     * ```\n     * const [batteryCharge] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    BatteryCharge = 0x182,\n\n    /**\n     * Constant mWh uint32_t. Energy that can be delivered to the bus when battery is fully charged.\n     * This excludes conversion overheads if any.\n     *\n     * ```\n     * const [batteryCapacity] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    BatteryCapacity = 0x183,\n\n    /**\n     * Read-write ms uint16_t. Many USB power packs need current to be drawn from time to time to prevent shutdown.\n     * This regulates how often and for how long such current is drawn.\n     * Typically a 1/8W 22 ohm resistor is used as load. This limits the duty cycle to 10%.\n     *\n     * ```\n     * const [keepOnPulseDuration] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    KeepOnPulseDuration = 0x80,\n\n    /**\n     * Read-write ms uint16_t. Many USB power packs need current to be drawn from time to time to prevent shutdown.\n     * This regulates how often and for how long such current is drawn.\n     * Typically a 1/8W 22 ohm resistor is used as load. This limits the duty cycle to 10%.\n     *\n     * ```\n     * const [keepOnPulsePeriod] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    KeepOnPulsePeriod = 0x81,\n}\n\nexport enum PowerCmd {\n    /**\n     * No args. Sent by the power service periodically, as broadcast.\n     */\n    Shutdown = 0x80,\n}\n\nexport enum PowerEvent {\n    /**\n     * Argument: power_status PowerStatus (uint8_t). Emitted whenever `power_status` changes.\n     *\n     * ```\n     * const [powerStatus] = jdunpack<[PowerPowerStatus]>(buf, \"u8\")\n     * ```\n     */\n    PowerStatusChanged = 0x3,\n}\n\n// Service: Pressure Button\nexport const SRV_PRESSURE_BUTTON = 0x281740c3\nexport enum PressureButtonReg {\n    /**\n     * Read-write ratio u0.16 (uint16_t). Indicates the threshold for ``up`` events.\n     *\n     * ```\n     * const [threshold] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    Threshold = 0x6,\n}\n\n// Service: Protocol Test\nexport const SRV_PROTO_TEST = 0x16c7466a\nexport enum ProtoTestReg {\n    /**\n     * Read-write bool (uint8_t). A read write bool register.\n     *\n     * ```\n     * const [rwBool] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    RwBool = 0x81,\n\n    /**\n     * Read-only bool (uint8_t). A read only bool register. Mirrors rw_bool.\n     *\n     * ```\n     * const [roBool] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    RoBool = 0x181,\n\n    /**\n     * Read-write uint32_t. A read write u32 register.\n     *\n     * ```\n     * const [rwU32] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    RwU32 = 0x82,\n\n    /**\n     * Read-only uint32_t. A read only u32 register.. Mirrors rw_u32.\n     *\n     * ```\n     * const [roU32] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    RoU32 = 0x182,\n\n    /**\n     * Read-write int32_t. A read write i32 register.\n     *\n     * ```\n     * const [rwI32] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    RwI32 = 0x83,\n\n    /**\n     * Read-only int32_t. A read only i32 register.. Mirrors rw_i32.\n     *\n     * ```\n     * const [roI32] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    RoI32 = 0x183,\n\n    /**\n     * Read-write string (bytes). A read write string register.\n     *\n     * ```\n     * const [rwString] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    RwString = 0x84,\n\n    /**\n     * Read-only string (bytes). A read only string register. Mirrors rw_string.\n     *\n     * ```\n     * const [roString] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    RoString = 0x184,\n\n    /**\n     * Read-write bytes. A read write string register.\n     *\n     * ```\n     * const [rwBytes] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    RwBytes = 0x85,\n\n    /**\n     * Read-only bytes. A read only string register. Mirrors ro_bytes.\n     *\n     * ```\n     * const [roBytes] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    RoBytes = 0x185,\n\n    /**\n     * A read write i8, u8, u16, i32 register.\n     *\n     * ```\n     * const [i8, u8, u16, i32] = jdunpack<[number, number, number, number]>(buf, \"i8 u8 u16 i32\")\n     * ```\n     */\n    RwI8U8U16I32 = 0x86,\n\n    /**\n     * A read only i8, u8, u16, i32 register.. Mirrors rw_i8_u8_u16_i32.\n     *\n     * ```\n     * const [i8, u8, u16, i32] = jdunpack<[number, number, number, number]>(buf, \"i8 u8 u16 i32\")\n     * ```\n     */\n    RoI8U8U16I32 = 0x186,\n\n    /**\n     * A read write u8, string register.\n     *\n     * ```\n     * const [u8, string] = jdunpack<[number, string]>(buf, \"u8 s\")\n     * ```\n     */\n    RwU8String = 0x87,\n\n    /**\n     * A read only u8, string register.. Mirrors rw_u8_string.\n     *\n     * ```\n     * const [u8, string] = jdunpack<[number, string]>(buf, \"u8 s\")\n     * ```\n     */\n    RoU8String = 0x187,\n}\n\nexport enum ProtoTestEvent {\n    /**\n     * Argument: bool bool (uint8_t). An event raised when rw_bool is modified\n     *\n     * ```\n     * const [bool] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    EBool = 0x81,\n\n    /**\n     * Argument: u32 uint32_t. An event raised when rw_u32 is modified\n     *\n     * ```\n     * const [u32] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    EU32 = 0x82,\n\n    /**\n     * Argument: i32 int32_t. An event raised when rw_i32 is modified\n     *\n     * ```\n     * const [i32] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    EI32 = 0x83,\n\n    /**\n     * Argument: string string (bytes). An event raised when rw_string is modified\n     *\n     * ```\n     * const [string] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    EString = 0x84,\n\n    /**\n     * Argument: bytes bytes. An event raised when rw_bytes is modified\n     *\n     * ```\n     * const [bytes] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    EBytes = 0x85,\n\n    /**\n     * An event raised when rw_i8_u8_u16_i32 is modified\n     *\n     * ```\n     * const [i8, u8, u16, i32] = jdunpack<[number, number, number, number]>(buf, \"i8 u8 u16 i32\")\n     * ```\n     */\n    EI8U8U16I32 = 0x86,\n\n    /**\n     * An event raised when rw_u8_string is modified\n     *\n     * ```\n     * const [u8, string] = jdunpack<[number, string]>(buf, \"u8 s\")\n     * ```\n     */\n    EU8String = 0x87,\n}\n\nexport enum ProtoTestCmd {\n    /**\n     * Argument: bool bool (uint8_t). A command to set rw_bool.\n     *\n     * ```\n     * const [bool] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    CBool = 0x81,\n\n    /**\n     * Argument: u32 uint32_t. A command to set rw_u32.\n     *\n     * ```\n     * const [u32] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    CU32 = 0x82,\n\n    /**\n     * Argument: i32 int32_t. A command to set rw_i32.\n     *\n     * ```\n     * const [i32] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    CI32 = 0x83,\n\n    /**\n     * Argument: string string (bytes). A command to set rw_string.\n     *\n     * ```\n     * const [string] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    CString = 0x84,\n\n    /**\n     * Argument: bytes bytes. A command to set rw_string.\n     *\n     * ```\n     * const [bytes] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    CBytes = 0x85,\n\n    /**\n     * A command to set rw_bytes.\n     *\n     * ```\n     * const [i8, u8, u16, i32] = jdunpack<[number, number, number, number]>(buf, \"i8 u8 u16 i32\")\n     * ```\n     */\n    CI8U8U16I32 = 0x86,\n\n    /**\n     * A command to set rw_u8_string.\n     *\n     * ```\n     * const [u8, string] = jdunpack<[number, string]>(buf, \"u8 s\")\n     * ```\n     */\n    CU8String = 0x87,\n\n    /**\n     * Argument: p_bytes pipe (bytes). A command to read the content of rw_bytes, byte per byte, as a pipe.\n     *\n     * ```\n     * const [pBytes] = jdunpack<[Uint8Array]>(buf, \"b[12]\")\n     * ```\n     */\n    CReportPipe = 0x90,\n}\n\n\n/**\n * pipe_report PBytes\n * ```\n * const [byte] = jdunpack<[number]>(buf, \"u8\")\n * ```\n */\n\n\n// Service: Pulse Oximeter\nexport const SRV_PULSE_OXIMETER = 0x10bb4eb6\nexport enum PulseOximeterReg {\n    /**\n     * Read-only % u8.8 (uint16_t). The estimated oxygen level in blood.\n     *\n     * ```\n     * const [oxygen] = jdunpack<[number]>(buf, \"u8.8\")\n     * ```\n     */\n    Oxygen = 0x101,\n\n    /**\n     * Read-only % u8.8 (uint16_t). The estimated error on the reported sensor data.\n     *\n     * ```\n     * const [oxygenError] = jdunpack<[number]>(buf, \"u8.8\")\n     * ```\n     */\n    OxygenError = 0x106,\n}\n\n// Service: Rain gauge\nexport const SRV_RAIN_GAUGE = 0x13734c95\nexport enum RainGaugeReg {\n    /**\n     * Read-only mm u16.16 (uint32_t). Total precipitation recorded so far.\n     *\n     * ```\n     * const [precipitation] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    Precipitation = 0x101,\n\n    /**\n     * Constant mm u16.16 (uint32_t). Typically the amount of rain needed for tipping the bucket.\n     *\n     * ```\n     * const [precipitationPrecision] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    PrecipitationPrecision = 0x108,\n}\n\n// Service: Real time clock\nexport const SRV_REAL_TIME_CLOCK = 0x1a8b1a28\n\nexport enum RealTimeClockVariant { // uint8_t\n    Computer = 0x1,\n    Crystal = 0x2,\n    Cuckoo = 0x3,\n}\n\nexport enum RealTimeClockReg {\n    /**\n     * Current time in 24h representation.\n     * * ``day_of_month`` is day of the month, starting at ``1``\n     * * ``day_of_week`` is day of the week, starting at ``1`` as monday\n     * Default streaming period is 1 second.\n     *\n     * ```\n     * const [year, month, dayOfMonth, dayOfWeek, hour, min, sec] = jdunpack<[number, number, number, number, number, number, number]>(buf, \"u16 u8 u8 u8 u8 u8 u8\")\n     * ```\n     */\n    LocalTime = 0x101,\n\n    /**\n     * Read-only s u16.16 (uint32_t). Time drift since the last call to the ``set_time`` command.\n     *\n     * ```\n     * const [error] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    Error = 0x180,\n\n    /**\n     * Constant ppm u16.16 (uint32_t). Error on the clock, in parts per million of seconds.\n     *\n     * ```\n     * const [precision] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    Precision = 0x181,\n\n    /**\n     * Constant Variant (uint8_t). The type of physical clock used by the sensor.\n     *\n     * ```\n     * const [variant] = jdunpack<[RealTimeClockVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\nexport enum RealTimeClockCmd {\n    /**\n     * Sets the current time and resets the error.\n     *\n     * ```\n     * const [year, month, dayOfMonth, dayOfWeek, hour, min, sec] = jdunpack<[number, number, number, number, number, number, number]>(buf, \"u16 u8 u8 u8 u8 u8 u8\")\n     * ```\n     */\n    SetTime = 0x80,\n}\n\n// Service: Reflected light\nexport const SRV_REFLECTED_LIGHT = 0x126c4cb2\n\nexport enum ReflectedLightVariant { // uint8_t\n    InfraredDigital = 0x1,\n    InfraredAnalog = 0x2,\n}\n\nexport enum ReflectedLightReg {\n    /**\n     * Read-only ratio u0.16 (uint16_t). Reports the reflected brightness. It may be a digital value or, for some sensor, analog value.\n     *\n     * ```\n     * const [brightness] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    Brightness = 0x101,\n\n    /**\n     * Constant Variant (uint8_t). Type of physical sensor used\n     *\n     * ```\n     * const [variant] = jdunpack<[ReflectedLightVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\nexport enum ReflectedLightEvent {\n    /**\n     * The sensor detected a transition from light to dark\n     */\n    Dark = 0x2,\n\n    /**\n     * The sensor detected a transition from dark to light\n     */\n    Light = 0x1,\n}\n\n// Service: Relay\nexport const SRV_RELAY = 0x183fe656\n\nexport enum RelayVariant { // uint8_t\n    Electromechanical = 0x1,\n    SolidState = 0x2,\n    Reed = 0x3,\n}\n\nexport enum RelayReg {\n    /**\n     * Read-write bool (uint8_t). Indicates whether the relay circuit is currently energized (closed) or not.\n     *\n     * ```\n     * const [closed] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Closed = 0x1,\n\n    /**\n     * Constant Variant (uint8_t). Describes the type of relay used.\n     *\n     * ```\n     * const [variant] = jdunpack<[RelayVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n\n    /**\n     * Constant mA uint32_t. Maximum switching current for a resistive load.\n     *\n     * ```\n     * const [maxSwitchingCurrent] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    MaxSwitchingCurrent = 0x180,\n}\n\nexport enum RelayEvent {\n    /**\n     * Emitted when relay goes from `inactive` to `active` state.\n     * Normally open (NO) relays close the circuit when activated.\n     */\n    Active = 0x1,\n\n    /**\n     * Emitted when relay goes from `active` to `inactive` state.\n     * Normally closed (NC) relays open the circuit when activated.\n     */\n    Inactive = 0x2,\n}\n\n// Service: Random Number Generator\nexport const SRV_RNG = 0x1789f0a2\n\nexport enum RngVariant { // uint8_t\n    Quantum = 0x1,\n    ADCNoise = 0x2,\n    WebCrypto = 0x3,\n}\n\nexport enum RngReg {\n    /**\n     * Read-only bytes. A register that returns a 64 bytes random buffer on every request.\n     * This never blocks for a long time. If you need additional random bytes, keep querying the register.\n     *\n     * ```\n     * const [random] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    Random = 0x180,\n\n    /**\n     * Constant Variant (uint8_t). The type of algorithm/technique used to generate the number.\n     * `Quantum` refers to dedicated hardware device generating random noise due to quantum effects.\n     * `ADCNoise` is the noise from quick readings of analog-digital converter, which reads temperature of the MCU or some floating pin.\n     * `WebCrypto` refers is used in simulators, where the source of randomness comes from an advanced operating system.\n     *\n     * ```\n     * const [variant] = jdunpack<[RngVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Role Manager\nexport const SRV_ROLE_MANAGER = 0x1e4b7e66\nexport enum RoleManagerReg {\n    /**\n     * Read-write bool (uint8_t). Normally, if some roles are unfilled, and there are idle services that can fulfill them,\n     * the brain device will assign roles (bind) automatically.\n     * Such automatic assignment happens every second or so, and is trying to be smart about\n     * co-locating roles that share \"host\" (part before first slash),\n     * as well as reasonably stable assignments.\n     * Once user start assigning roles manually using this service, auto-binding should be disabled to avoid confusion.\n     *\n     * ```\n     * const [autoBind] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    AutoBind = 0x80,\n\n    /**\n     * Read-only bool (uint8_t). Indicates if all required roles have been allocated to devices.\n     *\n     * ```\n     * const [allRolesAllocated] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    AllRolesAllocated = 0x181,\n}\n\nexport enum RoleManagerCmd {\n    /**\n     * Get the role corresponding to given device identifer. Returns empty string if unset.\n     *\n     * ```\n     * const [deviceId, serviceIdx] = jdunpack<[Uint8Array, number]>(buf, \"b[8] u8\")\n     * ```\n     */\n    GetRole = 0x80,\n\n    /**\n     * report GetRole\n     * ```\n     * const [deviceId, serviceIdx, role] = jdunpack<[Uint8Array, number, string]>(buf, \"b[8] u8 s\")\n     * ```\n     */\n\n    /**\n     * Set role. Can set to empty to remove role binding.\n     *\n     * ```\n     * const [deviceId, serviceIdx, role] = jdunpack<[Uint8Array, number, string]>(buf, \"b[8] u8 s\")\n     * ```\n     */\n    SetRole = 0x81,\n\n    /**\n     * No args. Remove all role bindings.\n     */\n    ClearAllRoles = 0x84,\n\n    /**\n     * Argument: stored_roles pipe (bytes). Return all roles stored internally.\n     *\n     * ```\n     * const [storedRoles] = jdunpack<[Uint8Array]>(buf, \"b[12]\")\n     * ```\n     */\n    ListStoredRoles = 0x82,\n\n    /**\n     * Argument: required_roles pipe (bytes). List all roles required by the current program. `device_id` and `service_idx` are `0` if role is unbound.\n     *\n     * ```\n     * const [requiredRoles] = jdunpack<[Uint8Array]>(buf, \"b[12]\")\n     * ```\n     */\n    ListRequiredRoles = 0x83,\n}\n\n\n/**\n * pipe_report StoredRoles\n * ```\n * const [deviceId, serviceIdx, role] = jdunpack<[Uint8Array, number, string]>(buf, \"b[8] u8 s\")\n * ```\n */\n\n/**\n * pipe_report RequiredRoles\n * ```\n * const [deviceId, serviceClass, serviceIdx, role] = jdunpack<[Uint8Array, number, number, string]>(buf, \"b[8] u32 u8 s\")\n * ```\n */\n\n\nexport enum RoleManagerEvent {\n    /**\n     * Notifies that role bindings have changed.\n     */\n    Change = 0x3,\n}\n\n// Service: Rotary encoder\nexport const SRV_ROTARY_ENCODER = 0x10fa29c9\nexport enum RotaryEncoderReg {\n    /**\n     * Read-only # int32_t. Upon device reset starts at `0` (regardless of the shaft position).\n     * Increases by `1` for a clockwise \"click\", by `-1` for counter-clockwise.\n     *\n     * ```\n     * const [position] = jdunpack<[number]>(buf, \"i32\")\n     * ```\n     */\n    Position = 0x101,\n\n    /**\n     * Constant # uint16_t. This specifies by how much `position` changes when the crank does 360 degree turn. Typically 12 or 24.\n     *\n     * ```\n     * const [clicksPerTurn] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    ClicksPerTurn = 0x180,\n}\n\n// Service: Rover\nexport const SRV_ROVER = 0x19f4d06b\nexport enum RoverReg {\n    /**\n     * The current position and orientation of the robot.\n     *\n     * ```\n     * const [x, y, vx, vy, heading] = jdunpack<[number, number, number, number, number]>(buf, \"i16.16 i16.16 i16.16 i16.16 i16.16\")\n     * ```\n     */\n    Kinematics = 0x101,\n}\n\n// Service: Sensor Aggregator\nexport const SRV_SENSOR_AGGREGATOR = 0x1d90e1c5\n\nexport enum SensorAggregatorSampleType { // uint8_t\n    U8 = 0x8,\n    I8 = 0x88,\n    U16 = 0x10,\n    I16 = 0x90,\n    U32 = 0x20,\n    I32 = 0xa0,\n}\n\nexport enum SensorAggregatorReg {\n    /**\n     * Set automatic input collection.\n     * These settings are stored in flash.\n     *\n     * ```\n     * const [samplingInterval, samplesInWindow, rest] = jdunpack<[number, number, ([Uint8Array, number, number, number, SensorAggregatorSampleType, number])[]]>(buf, \"u16 u16 x[4] r: b[8] u32 u8 u8 u8 i8\")\n     * const [deviceId, serviceClass, serviceNum, sampleSize, sampleType, sampleShift] = rest[0]\n     * ```\n     */\n    Inputs = 0x80,\n\n    /**\n     * Read-only uint32_t. Number of input samples collected so far.\n     *\n     * ```\n     * const [numSamples] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    NumSamples = 0x180,\n\n    /**\n     * Read-only B uint8_t. Size of a single sample.\n     *\n     * ```\n     * const [sampleSize] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    SampleSize = 0x181,\n\n    /**\n     * Read-write # uint32_t. When set to `N`, will stream `N` samples as `current_sample` reading.\n     *\n     * ```\n     * const [streamingSamples] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    StreamingSamples = 0x81,\n\n    /**\n     * Read-only bytes. Last collected sample.\n     *\n     * ```\n     * const [currentSample] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    CurrentSample = 0x101,\n}\n\n// Service: Servo\nexport const SRV_SERVO = 0x12fc9103\nexport enum ServoReg {\n    /**\n     * Read-write ° i16.16 (int32_t). Specifies the angle of the arm (request).\n     *\n     * ```\n     * const [angle] = jdunpack<[number]>(buf, \"i16.16\")\n     * ```\n     */\n    Angle = 0x2,\n\n    /**\n     * Read-write bool (uint8_t). Turn the power to the servo on/off.\n     *\n     * ```\n     * const [enabled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Enabled = 0x1,\n\n    /**\n     * Read-write ° i16.16 (int32_t). Correction applied to the angle to account for the servo arm drift.\n     *\n     * ```\n     * const [offset] = jdunpack<[number]>(buf, \"i16.16\")\n     * ```\n     */\n    Offset = 0x81,\n\n    /**\n     * Constant ° i16.16 (int32_t). Lowest angle that can be set.\n     *\n     * ```\n     * const [minAngle] = jdunpack<[number]>(buf, \"i16.16\")\n     * ```\n     */\n    MinAngle = 0x110,\n\n    /**\n     * Read-write μs uint16_t. The length of pulse corresponding to lowest angle.\n     *\n     * ```\n     * const [minPulse] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    MinPulse = 0x83,\n\n    /**\n     * Constant ° i16.16 (int32_t). Highest angle that can be set.\n     *\n     * ```\n     * const [maxAngle] = jdunpack<[number]>(buf, \"i16.16\")\n     * ```\n     */\n    MaxAngle = 0x111,\n\n    /**\n     * Read-write μs uint16_t. The length of pulse corresponding to highest angle.\n     *\n     * ```\n     * const [maxPulse] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    MaxPulse = 0x85,\n\n    /**\n     * Constant kg/cm u16.16 (uint32_t). The servo motor will stop rotating when it is trying to move a ``stall_torque`` weight at a radial distance of ``1.0`` cm.\n     *\n     * ```\n     * const [stallTorque] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    StallTorque = 0x180,\n\n    /**\n     * Constant s/60° u16.16 (uint32_t). Time to move 60°.\n     *\n     * ```\n     * const [responseSpeed] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    ResponseSpeed = 0x181,\n\n    /**\n     * Read-only ° i16.16 (int32_t). The current physical position of the arm.\n     *\n     * ```\n     * const [currentAngle] = jdunpack<[number]>(buf, \"i16.16\")\n     * ```\n     */\n    CurrentAngle = 0x101,\n}\n\n// Service: Settings\nexport const SRV_SETTINGS = 0x1107dc4a\nexport enum SettingsCmd {\n    /**\n     * Argument: key string (bytes). Get the value of given setting. If no such entry exists, the value returned is empty.\n     *\n     * ```\n     * const [key] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    Get = 0x80,\n\n    /**\n     * report Get\n     * ```\n     * const [key, value] = jdunpack<[string, Uint8Array]>(buf, \"z b\")\n     * ```\n     */\n\n    /**\n     * Set the value of a given setting.\n     *\n     * ```\n     * const [key, value] = jdunpack<[string, Uint8Array]>(buf, \"z b\")\n     * ```\n     */\n    Set = 0x81,\n\n    /**\n     * Argument: key string (bytes). Delete a given setting.\n     *\n     * ```\n     * const [key] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    Delete = 0x84,\n\n    /**\n     * Argument: results pipe (bytes). Return keys of all settings.\n     *\n     * ```\n     * const [results] = jdunpack<[Uint8Array]>(buf, \"b[12]\")\n     * ```\n     */\n    ListKeys = 0x82,\n\n    /**\n     * Argument: results pipe (bytes). Return keys and values of all settings.\n     *\n     * ```\n     * const [results] = jdunpack<[Uint8Array]>(buf, \"b[12]\")\n     * ```\n     */\n    List = 0x83,\n\n    /**\n     * No args. Clears all keys.\n     */\n    Clear = 0x85,\n}\n\n\n/**\n * pipe_report ListedKey\n * ```\n * const [key] = jdunpack<[string]>(buf, \"s\")\n * ```\n */\n\n/**\n * pipe_report ListedEntry\n * ```\n * const [key, value] = jdunpack<[string, Uint8Array]>(buf, \"z b\")\n * ```\n */\n\n\nexport enum SettingsEvent {\n    /**\n     * Notifies that some setting have been modified.\n     */\n    Change = 0x3,\n}\n\n// Service: 7-segment display\nexport const SRV_SEVEN_SEGMENT_DISPLAY = 0x196158f7\nexport enum SevenSegmentDisplayReg {\n    /**\n     * Read-write bytes. Each byte encodes the display status of a digit using,\n     * where bit 0 encodes segment `A`, bit 1 encodes segments `B`, ..., bit 6 encodes segments `G`, and bit 7 encodes the decimal point (if present).\n     * If incoming ``digits`` data is smaller than `digit_count`, the remaining digits will be cleared.\n     * Thus, sending an empty ``digits`` payload clears the screen.\n     *\n     * ```\n     * const [digits] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    Digits = 0x2,\n\n    /**\n     * Read-write ratio u0.16 (uint16_t). Controls the brightness of the LEDs. ``0`` means off.\n     *\n     * ```\n     * const [brightness] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    Brightness = 0x1,\n\n    /**\n     * Read-write bool (uint8_t). Turn on or off the column LEDs (separating minutes from hours, etc.) in of the segment.\n     * If the column LEDs is not supported, the value remains false.\n     *\n     * ```\n     * const [doubleDots] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    DoubleDots = 0x80,\n\n    /**\n     * Constant uint8_t. The number of digits available on the display.\n     *\n     * ```\n     * const [digitCount] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    DigitCount = 0x180,\n\n    /**\n     * Constant bool (uint8_t). True if decimal points are available (on all digits).\n     *\n     * ```\n     * const [decimalPoint] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    DecimalPoint = 0x181,\n}\n\nexport enum SevenSegmentDisplayCmd {\n    /**\n     * Argument: value f64 (uint64_t). Shows the number on the screen using the decimal dot if available.\n     */\n    SetNumber = 0x80,\n\n    /**\n     * Argument: text string (bytes). Shows the text on the screen. The client may decide to scroll the text if too long.\n     */\n    SetText = 0x81,\n}\n\n// Service: Soil moisture\nexport const SRV_SOIL_MOISTURE = 0x1d4aa3b3\n\nexport enum SoilMoistureVariant { // uint8_t\n    Resistive = 0x1,\n    Capacitive = 0x2,\n}\n\nexport enum SoilMoistureReg {\n    /**\n     * Read-only ratio u0.16 (uint16_t). Indicates the wetness of the soil, from ``dry`` to ``wet``.\n     *\n     * ```\n     * const [moisture] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    Moisture = 0x101,\n\n    /**\n     * Constant Variant (uint8_t). Describe the type of physical sensor.\n     *\n     * ```\n     * const [variant] = jdunpack<[SoilMoistureVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Solenoid\nexport const SRV_SOLENOID = 0x171723ca\n\nexport enum SolenoidVariant { // uint8_t\n    PushPull = 0x1,\n    Valve = 0x2,\n    Latch = 0x3,\n}\n\nexport enum SolenoidReg {\n    /**\n     * Read-write bool (uint8_t). Indicates whether the solenoid is energized and pulled (on) or pushed (off).\n     *\n     * ```\n     * const [pulled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Pulled = 0x1,\n\n    /**\n     * Constant Variant (uint8_t). Describes the type of solenoid used.\n     *\n     * ```\n     * const [variant] = jdunpack<[SolenoidVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Sound level\nexport const SRV_SOUND_LEVEL = 0x14ad1a5d\nexport enum SoundLevelReg {\n    /**\n     * Read-only ratio u0.16 (uint16_t). The sound level detected by the microphone\n     *\n     * ```\n     * const [soundLevel] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    SoundLevel = 0x101,\n\n    /**\n     * Read-write bool (uint8_t). Turn on or off the microphone.\n     *\n     * ```\n     * const [enabled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Enabled = 0x1,\n\n    /**\n     * Read-write dB int16_t. The minimum power value considered by the sensor.\n     * If both ``min_decibels`` and ``max_decibels`` are supported,\n     * the volume in deciment can be linearly interpolated between\n     * ``[min_decibels, max_decibels]``.\n     *\n     * ```\n     * const [minDecibels] = jdunpack<[number]>(buf, \"i16\")\n     * ```\n     */\n    MinDecibels = 0x81,\n\n    /**\n     * Read-write dB int16_t. The maximum power value considered by the sensor.\n     * If both ``min_decibels`` and ``max_decibels`` are supported,\n     * the volume in deciment can be linearly interpolated between\n     * ``[min_decibels, max_decibels]``.\n     *\n     * ```\n     * const [maxDecibels] = jdunpack<[number]>(buf, \"i16\")\n     * ```\n     */\n    MaxDecibels = 0x82,\n\n    /**\n     * Read-write ratio u0.16 (uint16_t). The sound level to trigger a loud event.\n     *\n     * ```\n     * const [loudThreshold] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    LoudThreshold = 0x6,\n\n    /**\n     * Read-write ratio u0.16 (uint16_t). The sound level to trigger a quiet event.\n     *\n     * ```\n     * const [quietThreshold] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    QuietThreshold = 0x5,\n}\n\nexport enum SoundLevelEvent {\n    /**\n     * Raised when a loud sound is detected\n     */\n    Loud = 0x1,\n\n    /**\n     * Raised when a period of quietness is detected\n     */\n    Quiet = 0x2,\n}\n\n// Service: Sound player\nexport const SRV_SOUND_PLAYER = 0x1403d338\nexport enum SoundPlayerReg {\n    /**\n     * Read-write ratio u0.16 (uint16_t). Global volume of the output. ``0`` means completely off. This volume is mixed with each play volumes.\n     *\n     * ```\n     * const [volume] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    Volume = 0x1,\n}\n\nexport enum SoundPlayerCmd {\n    /**\n     * Argument: name string (bytes). Starts playing a sound.\n     *\n     * ```\n     * const [name] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    Play = 0x80,\n\n    /**\n     * Argument: sounds_port pipe (bytes). Returns the list of sounds available to play.\n     *\n     * ```\n     * const [soundsPort] = jdunpack<[Uint8Array]>(buf, \"b[12]\")\n     * ```\n     */\n    ListSounds = 0x81,\n}\n\n\n/**\n * pipe_report ListSoundsPipe\n * ```\n * const [duration, name] = jdunpack<[number, string]>(buf, \"u32 s\")\n * ```\n */\n\n\n// Service: Sound Spectrum\nexport const SRV_SOUND_SPECTRUM = 0x157abc1e\nexport enum SoundSpectrumReg {\n    /**\n     * Read-only bytes. The computed frequency data.\n     *\n     * ```\n     * const [frequencyBins] = jdunpack<[Uint8Array]>(buf, \"b\")\n     * ```\n     */\n    FrequencyBins = 0x101,\n\n    /**\n     * Read-write bool (uint8_t). Turns on/off the micropohone.\n     *\n     * ```\n     * const [enabled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Enabled = 0x1,\n\n    /**\n     * Read-write uint8_t. The power of 2 used as the size of the FFT to be used to determine the frequency domain.\n     *\n     * ```\n     * const [fftPow2Size] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    FftPow2Size = 0x80,\n\n    /**\n     * Read-write dB int16_t. The minimum power value in the scaling range for the FFT analysis data\n     *\n     * ```\n     * const [minDecibels] = jdunpack<[number]>(buf, \"i16\")\n     * ```\n     */\n    MinDecibels = 0x81,\n\n    /**\n     * Read-write dB int16_t. The maximum power value in the scaling range for the FFT analysis data\n     *\n     * ```\n     * const [maxDecibels] = jdunpack<[number]>(buf, \"i16\")\n     * ```\n     */\n    MaxDecibels = 0x82,\n\n    /**\n     * Read-write ratio u0.8 (uint8_t). The averaging constant with the last analysis frame.\n     * If ``0`` is set, there is no averaging done, whereas a value of ``1`` means \"overlap the previous and current buffer quite a lot while computing the value\".\n     *\n     * ```\n     * const [smoothingTimeConstant] = jdunpack<[number]>(buf, \"u0.8\")\n     * ```\n     */\n    SmoothingTimeConstant = 0x83,\n}\n\n// Service: Speech synthesis\nexport const SRV_SPEECH_SYNTHESIS = 0x1204d995\nexport enum SpeechSynthesisReg {\n    /**\n     * Read-write bool (uint8_t). Determines if the speech engine is in a non-paused state.\n     *\n     * ```\n     * const [enabled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Enabled = 0x1,\n\n    /**\n     * Read-write string (bytes). Language used for utterances as defined in https://www.ietf.org/rfc/bcp/bcp47.txt.\n     *\n     * ```\n     * const [lang] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    Lang = 0x80,\n\n    /**\n     * Read-write ratio u0.8 (uint8_t). Volume for utterances.\n     *\n     * ```\n     * const [volume] = jdunpack<[number]>(buf, \"u0.8\")\n     * ```\n     */\n    Volume = 0x81,\n\n    /**\n     * Read-write u16.16 (uint32_t). Pitch for utterances\n     *\n     * ```\n     * const [pitch] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    Pitch = 0x82,\n\n    /**\n     * Read-write u16.16 (uint32_t). Rate for utterances\n     *\n     * ```\n     * const [rate] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    Rate = 0x83,\n}\n\nexport enum SpeechSynthesisCmd {\n    /**\n     * Argument: text string (bytes). Adds an utterance to the utterance queue; it will be spoken when any other utterances queued before it have been spoken.\n     *\n     * ```\n     * const [text] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    Speak = 0x80,\n\n    /**\n     * No args. Cancels current utterance and all utterances from the utterance queue.\n     */\n    Cancel = 0x81,\n}\n\n// Service: Switch\nexport const SRV_SWITCH = 0x1ad29402\n\nexport enum SwitchVariant { // uint8_t\n    Slide = 0x1,\n    Tilt = 0x2,\n    PushButton = 0x3,\n    Tactile = 0x4,\n    Toggle = 0x5,\n    Proximity = 0x6,\n    Magnetic = 0x7,\n    FootPedal = 0x8,\n}\n\nexport enum SwitchReg {\n    /**\n     * Read-only bool (uint8_t). Indicates whether the switch is currently active (on).\n     *\n     * ```\n     * const [active] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Active = 0x101,\n\n    /**\n     * Constant Variant (uint8_t). Describes the type of switch used.\n     *\n     * ```\n     * const [variant] = jdunpack<[SwitchVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n\n    /**\n     * Constant s u16.16 (uint32_t). Specifies the delay without activity to automatically turn off after turning on.\n     * For example, some light switches in staircases have such a capability.\n     *\n     * ```\n     * const [autoOffDelay] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    AutoOffDelay = 0x180,\n}\n\nexport enum SwitchEvent {\n    /**\n     * Emitted when switch goes from ``off`` to ``on``.\n     */\n    On = 0x1,\n\n    /**\n     * Emitted when switch goes from ``on`` to ``off``.\n     */\n    Off = 0x2,\n}\n\n// Service: TCP\nexport const SRV_TCP = 0x1b43b70b\n\nexport enum TcpTcpError { // int32_t\n    InvalidCommand = 0x1,\n    InvalidCommandPayload = 0x2,\n}\n\nexport enum TcpCmd {\n    /**\n     * Argument: inbound pipe (bytes). Open pair of pipes between network peripheral and a controlling device. In/outbound refers to direction from/to internet.\n     *\n     * ```\n     * const [inbound] = jdunpack<[Uint8Array]>(buf, \"b[12]\")\n     * ```\n     */\n    Open = 0x80,\n\n    /**\n     * report Open\n     * ```\n     * const [outboundPort] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n}\n\nexport enum TcpPipeCmd {\n    /**\n     * Open an SSL connection to a given host:port pair. Can be issued only once on given pipe.\n     * After the connection is established, an empty data report is sent.\n     * Connection is closed by closing the pipe.\n     *\n     * ```\n     * const [tcpPort, hostname] = jdunpack<[number, string]>(buf, \"u16 s\")\n     * ```\n     */\n    OpenSsl = 0x1,\n\n    /**\n     * Argument: error TcpError (int32_t). Reported when an error is encountered. Negative error codes come directly from the SSL implementation.\n     *\n     * ```\n     * const [error] = jdunpack<[TcpTcpError]>(buf, \"i32\")\n     * ```\n     */\n    Error = 0x0,\n}\n\n\n/**\n * pipe_command Outdata\n * ```\n * const [data] = jdunpack<[Uint8Array]>(buf, \"b\")\n * ```\n */\n\n/**\n * pipe_report Indata\n * ```\n * const [data] = jdunpack<[Uint8Array]>(buf, \"b\")\n * ```\n */\n\n\n// Service: Thermocouple\nexport const SRV_THERMOCOUPLE = 0x143ac061\n\nexport enum ThermocoupleVariant { // uint8_t\n    TypeK = 0x1,\n    TypeJ = 0x2,\n    TypeT = 0x3,\n    TypeE = 0x4,\n    TypeN = 0x5,\n    TypeS = 0x6,\n    TypeR = 0x7,\n    TypeB = 0x8,\n}\n\nexport enum ThermocoupleReg {\n    /**\n     * Read-only °C i22.10 (int32_t). The temperature.\n     *\n     * ```\n     * const [temperature] = jdunpack<[number]>(buf, \"i22.10\")\n     * ```\n     */\n    Temperature = 0x101,\n\n    /**\n     * Constant °C i22.10 (int32_t). Lowest temperature that can be reported.\n     *\n     * ```\n     * const [minTemperature] = jdunpack<[number]>(buf, \"i22.10\")\n     * ```\n     */\n    MinTemperature = 0x104,\n\n    /**\n     * Constant °C i22.10 (int32_t). Highest temperature that can be reported.\n     *\n     * ```\n     * const [maxTemperature] = jdunpack<[number]>(buf, \"i22.10\")\n     * ```\n     */\n    MaxTemperature = 0x105,\n\n    /**\n     * Read-only °C u22.10 (uint32_t). The real temperature is between `temperature - temperature_error` and `temperature + temperature_error`.\n     *\n     * ```\n     * const [temperatureError] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    TemperatureError = 0x106,\n\n    /**\n     * Constant Variant (uint8_t). Specifies the type of thermometer.\n     *\n     * ```\n     * const [variant] = jdunpack<[ThermocoupleVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Thermometer\nexport const SRV_THERMOMETER = 0x1421bac7\n\nexport enum ThermometerVariant { // uint8_t\n    Outdoor = 0x1,\n    Indoor = 0x2,\n    Body = 0x3,\n}\n\nexport enum ThermometerReg {\n    /**\n     * Read-only °C i22.10 (int32_t). The temperature.\n     *\n     * ```\n     * const [temperature] = jdunpack<[number]>(buf, \"i22.10\")\n     * ```\n     */\n    Temperature = 0x101,\n\n    /**\n     * Constant °C i22.10 (int32_t). Lowest temperature that can be reported.\n     *\n     * ```\n     * const [minTemperature] = jdunpack<[number]>(buf, \"i22.10\")\n     * ```\n     */\n    MinTemperature = 0x104,\n\n    /**\n     * Constant °C i22.10 (int32_t). Highest temperature that can be reported.\n     *\n     * ```\n     * const [maxTemperature] = jdunpack<[number]>(buf, \"i22.10\")\n     * ```\n     */\n    MaxTemperature = 0x105,\n\n    /**\n     * Read-only °C u22.10 (uint32_t). The real temperature is between `temperature - temperature_error` and `temperature + temperature_error`.\n     *\n     * ```\n     * const [temperatureError] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    TemperatureError = 0x106,\n\n    /**\n     * Constant Variant (uint8_t). Specifies the type of thermometer.\n     *\n     * ```\n     * const [variant] = jdunpack<[ThermometerVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Traffic Light\nexport const SRV_TRAFFIC_LIGHT = 0x15c38d9b\nexport enum TrafficLightReg {\n    /**\n     * Read-write bool (uint8_t). The on/off state of the red light.\n     *\n     * ```\n     * const [red] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Red = 0x80,\n\n    /**\n     * Read-write bool (uint8_t). The on/off state of the red light.\n     *\n     * ```\n     * const [orange] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Orange = 0x81,\n\n    /**\n     * Read-write bool (uint8_t). The on/off state of the red light.\n     *\n     * ```\n     * const [green] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Green = 0x82,\n}\n\n// Service: Total Volatile organic compound\nexport const SRV_TVOC = 0x12a5b597\nexport enum TvocReg {\n    /**\n     * Read-only ppb u22.10 (uint32_t). Total volatile organic compound readings in parts per billion.\n     *\n     * ```\n     * const [tVOC] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    TVOC = 0x101,\n\n    /**\n     * Read-only ppb u22.10 (uint32_t). Error on the reading data\n     *\n     * ```\n     * const [tVOCError] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    TVOCError = 0x106,\n\n    /**\n     * Constant ppb u22.10 (uint32_t). Minimum measurable value\n     *\n     * ```\n     * const [minTVOC] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    MinTVOC = 0x104,\n\n    /**\n     * Constant ppb u22.10 (uint32_t). Minimum measurable value\n     *\n     * ```\n     * const [maxTVOC] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    MaxTVOC = 0x105,\n\n    /**\n     * Constant s uint32_t. Time required to achieve good sensor stability before measuring after long idle period.\n     *\n     * ```\n     * const [conditioningPeriod] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    ConditioningPeriod = 0x180,\n}\n\n// Service: UV index\nexport const SRV_UV_INDEX = 0x1f6e0d90\n\nexport enum UvIndexVariant { // uint8_t\n    UVA_UVB = 0x1,\n    Visible_IR = 0x2,\n}\n\nexport enum UvIndexReg {\n    /**\n     * Read-only uv u16.16 (uint32_t). Ultraviolet index, typically refreshed every second.\n     *\n     * ```\n     * const [uvIndex] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    UvIndex = 0x101,\n\n    /**\n     * Read-only uv u16.16 (uint32_t). Error on the UV measure.\n     *\n     * ```\n     * const [uvIndexError] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    UvIndexError = 0x106,\n\n    /**\n     * Constant Variant (uint8_t). The type of physical sensor and capabilities.\n     *\n     * ```\n     * const [variant] = jdunpack<[UvIndexVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Verified Telemetry\nexport const SRV_VERIFIED_TELEMETRY = 0x2194841f\n\nexport enum VerifiedTelemetryStatus { // uint8_t\n    Unknown = 0x0,\n    Working = 0x1,\n    Faulty = 0x2,\n}\n\n\nexport enum VerifiedTelemetryFingerprintType { // uint8_t\n    FallCurve = 0x1,\n    CurrentSense = 0x2,\n    Custom = 0x3,\n}\n\nexport enum VerifiedTelemetryReg {\n    /**\n     * Read-only Status (uint8_t). Reads the telemetry working status, where ``true`` is working and ``false`` is faulty.\n     *\n     * ```\n     * const [telemetryStatus] = jdunpack<[VerifiedTelemetryStatus]>(buf, \"u8\")\n     * ```\n     */\n    TelemetryStatus = 0x180,\n\n    /**\n     * Read-write ms uint32_t. Specifies the interval between computing the fingerprint information.\n     *\n     * ```\n     * const [telemetryStatusInterval] = jdunpack<[number]>(buf, \"u32\")\n     * ```\n     */\n    TelemetryStatusInterval = 0x80,\n\n    /**\n     * Constant FingerprintType (uint8_t). Type of the fingerprint.\n     *\n     * ```\n     * const [fingerprintType] = jdunpack<[VerifiedTelemetryFingerprintType]>(buf, \"u8\")\n     * ```\n     */\n    FingerprintType = 0x181,\n\n    /**\n     * Template Fingerprint information of a working sensor.\n     *\n     * ```\n     * const [confidence, template] = jdunpack<[number, Uint8Array]>(buf, \"u16 b\")\n     * ```\n     */\n    FingerprintTemplate = 0x182,\n}\n\nexport enum VerifiedTelemetryCmd {\n    /**\n     * No args. This command will clear the template fingerprint of a sensor and collect a new template fingerprint of the attached sensor.\n     */\n    ResetFingerprintTemplate = 0x80,\n\n    /**\n     * No args. This command will append a new template fingerprint to the `fingerprintTemplate`. Appending more fingerprints will increase the accuracy in detecting the telemetry status.\n     */\n    RetrainFingerprintTemplate = 0x81,\n}\n\nexport enum VerifiedTelemetryEvent {\n    /**\n     * Argument: telemetry_status Status (uint8_t). The telemetry status of the device was updated.\n     *\n     * ```\n     * const [telemetryStatus] = jdunpack<[VerifiedTelemetryStatus]>(buf, \"u8\")\n     * ```\n     */\n    TelemetryStatusChange = 0x3,\n\n    /**\n     * The fingerprint template was updated\n     */\n    FingerprintTemplateChange = 0x80,\n}\n\n// Service: Vibration motor\nexport const SRV_VIBRATION_MOTOR = 0x183fc4a2\nexport enum VibrationMotorReg {\n    /**\n     * Read-write bool (uint8_t). Determines if the vibration motor responds to vibrate commands.\n     *\n     * ```\n     * const [enabled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Enabled = 0x1,\n}\n\nexport enum VibrationMotorCmd {\n    /**\n     * Starts a sequence of vibration and pauses. To stop any existing vibration, send an empty payload.\n     *\n     * ```\n     * const [rest] = jdunpack<[([number, number])[]]>(buf, \"r: u8 u0.8\")\n     * const [duration, speed] = rest[0]\n     * ```\n     */\n    Vibrate = 0x80,\n}\n\n// Service: Water level\nexport const SRV_WATER_LEVEL = 0x147b62ed\n\nexport enum WaterLevelVariant { // uint8_t\n    Resistive = 0x1,\n    ContactPhotoElectric = 0x2,\n    NonContactPhotoElectric = 0x3,\n}\n\nexport enum WaterLevelReg {\n    /**\n     * Read-only ratio u0.16 (uint16_t). The reported water level.\n     *\n     * ```\n     * const [level] = jdunpack<[number]>(buf, \"u0.16\")\n     * ```\n     */\n    Level = 0x101,\n\n    /**\n     * Constant Variant (uint8_t). The type of physical sensor.\n     *\n     * ```\n     * const [variant] = jdunpack<[WaterLevelVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\n// Service: Weight Scale\nexport const SRV_WEIGHT_SCALE = 0x1f4d5040\n\nexport enum WeightScaleVariant { // uint8_t\n    Body = 0x1,\n    Food = 0x2,\n    Jewelry = 0x3,\n}\n\nexport enum WeightScaleReg {\n    /**\n     * Read-only kg u16.16 (uint32_t). The reported weight.\n     *\n     * ```\n     * const [weight] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    Weight = 0x101,\n\n    /**\n     * Read-only kg u16.16 (uint32_t). The estimate error on the reported reading.\n     *\n     * ```\n     * const [weightError] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    WeightError = 0x106,\n\n    /**\n     * Read-write kg u16.16 (uint32_t). Calibrated zero offset error on the scale, i.e. the measured weight when nothing is on the scale.\n     * You do not need to subtract that from the reading, it has already been done.\n     *\n     * ```\n     * const [zeroOffset] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    ZeroOffset = 0x80,\n\n    /**\n     * Read-write u16.16 (uint32_t). Calibrated gain on the weight scale error.\n     *\n     * ```\n     * const [gain] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    Gain = 0x81,\n\n    /**\n     * Constant kg u16.16 (uint32_t). Maximum supported weight on the scale.\n     *\n     * ```\n     * const [maxWeight] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    MaxWeight = 0x105,\n\n    /**\n     * Constant kg u16.16 (uint32_t). Minimum recommend weight on the scale.\n     *\n     * ```\n     * const [minWeight] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    MinWeight = 0x104,\n\n    /**\n     * Constant kg u16.16 (uint32_t). Smallest, yet distinguishable change in reading.\n     *\n     * ```\n     * const [weightResolution] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    WeightResolution = 0x108,\n\n    /**\n     * Constant Variant (uint8_t). The type of physical scale\n     *\n     * ```\n     * const [variant] = jdunpack<[WeightScaleVariant]>(buf, \"u8\")\n     * ```\n     */\n    Variant = 0x107,\n}\n\nexport enum WeightScaleCmd {\n    /**\n     * No args. Call this command when there is nothing on the scale. If supported, the module should save the calibration data.\n     */\n    CalibrateZeroOffset = 0x80,\n\n    /**\n     * Argument: weight g u22.10 (uint32_t). Call this command with the weight of the thing on the scale.\n     *\n     * ```\n     * const [weight] = jdunpack<[number]>(buf, \"u22.10\")\n     * ```\n     */\n    CalibrateGain = 0x81,\n}\n\n// Service: WIFI\nexport const SRV_WIFI = 0x18aae1fa\n\nexport enum WifiAPFlags { // uint32_t\n    HasPassword = 0x1,\n    WPS = 0x2,\n    HasSecondaryChannelAbove = 0x4,\n    HasSecondaryChannelBelow = 0x8,\n    IEEE_802_11B = 0x100,\n    IEEE_802_11A = 0x200,\n    IEEE_802_11G = 0x400,\n    IEEE_802_11N = 0x800,\n    IEEE_802_11AC = 0x1000,\n    IEEE_802_11AX = 0x2000,\n    IEEE_802_LongRange = 0x8000,\n}\n\nexport enum WifiCmd {\n    /**\n     * Argument: results pipe (bytes). Return list of WiFi network from the last scan.\n     * Scans are performed periodically while not connected (in particular, on startup and after current connection drops),\n     * as well as upon `reconnect` and `scan` commands.\n     *\n     * ```\n     * const [results] = jdunpack<[Uint8Array]>(buf, \"b[12]\")\n     * ```\n     */\n    LastScanResults = 0x80,\n\n    /**\n     * Automatically connect to named network if available. Also set password if network is not open.\n     *\n     * ```\n     * const [ssid, password] = jdunpack<[string, string]>(buf, \"z z\")\n     * ```\n     */\n    AddNetwork = 0x81,\n\n    /**\n     * No args. Initiate a scan, wait for results, disconnect from current WiFi network if any,\n     * and then reconnect (using regular algorithm, see `set_network_priority`).\n     */\n    Reconnect = 0x82,\n\n    /**\n     * Argument: ssid string (bytes). Prevent from automatically connecting to named network in future.\n     * Forgetting a network resets its priority to `0`.\n     *\n     * ```\n     * const [ssid] = jdunpack<[string]>(buf, \"s\")\n     * ```\n     */\n    ForgetNetwork = 0x83,\n\n    /**\n     * No args. Clear the list of known networks.\n     */\n    ForgetAllNetworks = 0x84,\n\n    /**\n     * Set connection priority for a network.\n     * By default, all known networks have priority of `0`.\n     *\n     * ```\n     * const [priority, ssid] = jdunpack<[number, string]>(buf, \"i16 s\")\n     * ```\n     */\n    SetNetworkPriority = 0x85,\n\n    /**\n     * No args. Initiate search for WiFi networks. Generates `scan_complete` event.\n     */\n    Scan = 0x86,\n\n    /**\n     * Argument: results pipe (bytes). Return list of known WiFi networks.\n     * `flags` is currently always 0.\n     *\n     * ```\n     * const [results] = jdunpack<[Uint8Array]>(buf, \"b[12]\")\n     * ```\n     */\n    ListKnownNetworks = 0x87,\n}\n\n\n/**\n * pipe_report Results\n * ```\n * const [flags, rssi, channel, bssid, ssid] = jdunpack<[WifiAPFlags, number, number, Uint8Array, string]>(buf, \"u32 x[4] i8 u8 b[6] s[33]\")\n * ```\n */\n\n/**\n * pipe_report NetworkResults\n * ```\n * const [priority, flags, ssid] = jdunpack<[number, number, string]>(buf, \"i16 i16 s\")\n * ```\n */\n\n\nexport enum WifiReg {\n    /**\n     * Read-write bool (uint8_t). Determines whether the WiFi radio is enabled. It starts enabled upon reset.\n     *\n     * ```\n     * const [enabled] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Enabled = 0x1,\n\n    /**\n     * Read-only bool (uint8_t). Indicates whether or not we currently have an IP address assigned.\n     *\n     * ```\n     * const [connected] = jdunpack<[number]>(buf, \"u8\")\n     * ```\n     */\n    Connected = 0x180,\n\n    /**\n     * Read-only bytes. 0, 4 or 16 byte buffer with the IPv4 or IPv6 address assigned to device if any.\n     *\n     * ```\n     * const [ipAddress] = jdunpack<[Uint8Array]>(buf, \"b[16]\")\n     * ```\n     */\n    IpAddress = 0x181,\n\n    /**\n     * Constant bytes. The 6-byte MAC address of the device. If a device does MAC address randomization it will have to \"restart\".\n     *\n     * ```\n     * const [eui48] = jdunpack<[Uint8Array]>(buf, \"b[6]\")\n     * ```\n     */\n    Eui48 = 0x182,\n\n    /**\n     * Read-only string (bytes). SSID of the access-point to which device is currently connected.\n     * Empty string if not connected.\n     *\n     * ```\n     * const [ssid] = jdunpack<[string]>(buf, \"s[32]\")\n     * ```\n     */\n    Ssid = 0x183,\n\n    /**\n     * Read-only dB int8_t. Current signal strength. Returns -128 when not connected.\n     *\n     * ```\n     * const [rssi] = jdunpack<[number]>(buf, \"i8\")\n     * ```\n     */\n    Rssi = 0x184,\n}\n\nexport enum WifiEvent {\n    /**\n     * Emitted upon successful join and IP address assignment.\n     */\n    GotIp = 0x1,\n\n    /**\n     * Emitted when disconnected from network.\n     */\n    LostIp = 0x2,\n\n    /**\n     * A WiFi network scan has completed. Results can be read with the `last_scan_results` command.\n     * The event indicates how many networks where found, and how many are considered\n     * as candidates for connection.\n     *\n     * ```\n     * const [numNetworks, numKnownNetworks] = jdunpack<[number, number]>(buf, \"u16 u16\")\n     * ```\n     */\n    ScanComplete = 0x80,\n\n    /**\n     * Emitted whenever the list of known networks is updated.\n     */\n    NetworksChanged = 0x81,\n}\n\n// Service: Wind direction\nexport const SRV_WIND_DIRECTION = 0x186be92b\nexport enum WindDirectionReg {\n    /**\n     * Read-only ° uint16_t. The direction of the wind.\n     *\n     * ```\n     * const [windDirection] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    WindDirection = 0x101,\n\n    /**\n     * Read-only ° uint16_t. Error on the wind direction reading\n     *\n     * ```\n     * const [windDirectionError] = jdunpack<[number]>(buf, \"u16\")\n     * ```\n     */\n    WindDirectionError = 0x106,\n}\n\n// Service: Wind speed\nexport const SRV_WIND_SPEED = 0x1b591bbf\nexport enum WindSpeedReg {\n    /**\n     * Read-only m/s u16.16 (uint32_t). The velocity of the wind.\n     *\n     * ```\n     * const [windSpeed] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    WindSpeed = 0x101,\n\n    /**\n     * Read-only m/s u16.16 (uint32_t). Error on the reading\n     *\n     * ```\n     * const [windSpeedError] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    WindSpeedError = 0x106,\n\n    /**\n     * Constant m/s u16.16 (uint32_t). Maximum speed that can be measured by the sensor.\n     *\n     * ```\n     * const [maxWindSpeed] = jdunpack<[number]>(buf, \"u16.16\")\n     * ```\n     */\n    MaxWindSpeed = 0x105,\n}\n\n","// Registers 0x001-0x07f - r/w common to all services\n// Registers 0x080-0x0ff - r/w defined per-service\n// Registers 0x100-0x17f - r/o common to all services\n// Registers 0x180-0x1ff - r/o defined per-service\n// Registers 0x200-0xeff - custom, defined per-service\n// Registers 0xf00-0xfff - reserved for implementation, should not be on the wire\n\nexport const CMD_GET_REG = 0x1000\nexport const CMD_SET_REG = 0x2000\n\nexport const CMD_EVENT_MASK = 0x8000\nexport const CMD_EVENT_CODE_MASK = 0x00ff\nexport const CMD_EVENT_COUNTER_POS = 8\nexport const CMD_EVENT_COUNTER_MASK = 0x7f\n\nexport const CMD_TOP_MASK = 0xf000\nexport const CMD_REG_MASK = 0x0fff\n\nexport const ACK_MIN_DELAY = 90\nexport const ACK_MAX_DELAY = 120\n\n// Commands 0x000-0x07f - common to all services\n// Commands 0x080-0xeff - defined per-service\n// Commands 0xf00-0xfff - reserved for implementation\n// enumeration data for CTRL, ad-data for other services\nexport const CMD_ADVERTISEMENT_DATA = 0x00\n\nexport const PIPE_PORT_SHIFT = 7\nexport const PIPE_COUNTER_MASK = 0x001f\nexport const PIPE_CLOSE_MASK = 0x0020\nexport const PIPE_METADATA_MASK = 0x0040\n\nexport const JD_SERIAL_HEADER_SIZE = 16\nexport const JD_SERIAL_MAX_PAYLOAD_SIZE = 236\nexport const JD_SERVICE_INDEX_MASK = 0x3f\nexport const JD_SERVICE_INDEX_INV_MASK = 0xc0\nexport const JD_SERVICE_INDEX_CRC_ACK = 0x3f\nexport const JD_SERVICE_INDEX_PIPE = 0x3e\nexport const JD_SERVICE_INDEX_MAX_NORMAL = 0x30\nexport const JD_SERVICE_INDEX_CTRL = 0x00\n\n// the COMMAND flag signifies that the device_identifier is the recipent\n// (i.e., it's a command for the peripheral); the bit clear means device_identifier is the source\n// (i.e., it's a report from peripheral or a broadcast message)\nexport const JD_FRAME_FLAG_COMMAND = 0x01\n// an ACK should be issued with CRC of this package upon reception\nexport const JD_FRAME_FLAG_ACK_REQUESTED = 0x02\n// the device_identifier contains target service class number\nexport const JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS = 0x04\n\nexport const JD_ADVERTISEMENT_0_COUNTER_MASK = 0x0000000f\nexport const JD_ADVERTISEMENT_0_ACK_SUPPORTED = 0x00000100\n\n// time withouth seeing a package to be considered \"lost\", 2x announce interval\nexport const JD_DEVICE_LOST_DELAY = 1500\n// time without seeing a packet to be considered \"disconnected\"\nexport const JD_DEVICE_DISCONNECTED_DELAY = 5000\n\nexport const RESET_IN_TIME_US = 2000000\n\nexport const MAX_SERVICES_LENGTH = 59\n\nexport const NEW_LISTENER = \"newListener\"\nexport const REMOVE_LISTENER = \"removeListener\"\n\nexport const CONNECTION_STATE = \"connectionState\"\nexport const CONNECT = \"connect\"\nexport const LOST = \"lost\"\nexport const FOUND = \"found\"\nexport const CONNECTING = \"connecting\"\nexport const DISCONNECT = \"disconnect\"\nexport const DISCONNECTING = \"disconnecting\"\nexport const ANNOUNCE = \"announce\"\nexport const START = \"start\"\nexport const RESTART = \"restart\"\nexport const STOP = \"stop\"\nexport const CHANGE = \"change\"\nexport const EVENT = \"event\"\nexport const RENDER = \"render\"\nexport const REFRESH = \"refresh\"\nexport const MESSAGE = \"message\"\nexport const FIRMWARE_BLOBS_CHANGE = \"firmwareBlobsChange\"\nexport const LATE = \"late\"\nexport const GET_ATTEMPT = \"getAttempt\"\nexport const SERVICE_CLIENT_ADDED = `serviceClientAdded`\nexport const SERVICE_CLIENT_REMOVED = `serviceClientRemoved`\nexport const READING_SENT = \"readingSent\"\nexport const ROLE_CHANGE = \"roleChange\"\nexport const ROLE_MANAGER_CHANGE = \"roleManagerChange\"\n\nexport const SERVICE_PROVIDER_ADDED = `serviceProviderAdded`\nexport const SERVICE_PROVIDER_REMOVED = `serviceProviderRemoved`\n\nexport const IDENTIFY = \"identify\"\nexport const IDENTIFY_DURATION = 2000\nexport const RESET = \"reset\"\n\nexport const DATA = \"data\"\nexport const CLOSE = \"close\"\n\nexport const DEVICE_CONNECT = \"deviceConnect\"\nexport const DEVICE_LOST = \"deviceLost\"\nexport const DEVICE_FOUND = \"deviceFound\"\nexport const DEVICE_DISCONNECT = \"deviceDisconnect\"\nexport const DEVICE_ANNOUNCE = \"deviceAnnounce\"\nexport const DEVICE_PACKET_ANNOUNCE = \"devicePacketAnnounce\"\nexport const DEVICE_RESTART = \"deviceRestart\"\nexport const DEVICE_CHANGE = \"deviceChange\"\nexport const DEVICE_FIRMWARE_INFO = \"firmwareInfo\"\nexport const DEVICE_CLEAN = \"deviceClean\"\nexport const SELF_ANNOUNCE = \"selfAnnounce\"\n\nexport const PACKET_SEND = \"packetSend\"\nexport const PACKET_SEND_DISCONNECT = \"packetSendDisconnect\"\n\nexport const PACKET_PRE_PROCESS = \"packetPreProcess\"\nexport const PACKET_PROCESS = \"packetProcess\"\nexport const PACKET_RECEIVE = \"packetReceive\"\nexport const PACKET_RECEIVE_ANNOUNCE = \"packetReceiveAnnounce\"\nexport const PACKET_EVENT = \"packetEvent\"\nexport const PACKET_REPORT = \"packetReport\"\nexport const PACKET_ANNOUNCE = \"packetAnnounce\"\nexport const PACKET_INVALID_CRC = \"packetInvalidCrc\"\nexport const PACKET_INVALID_DATA = \"packetInvalidData\"\nexport const PACKET_DATA_NORMALIZE = \"packetDataNormalize\"\n\nexport const REPORT_RECEIVE = \"reportReceive\"\nexport const REPORT_UPDATE = \"reportUpdate\"\nexport const COMMAND_RECEIVE = \"commandReceive\"\n\nexport const ERROR = \"error\"\nexport const TRACE = \"trace\"\nexport const TIMEOUT = \"timeout\"\nexport const TIMEOUT_DISCONNECT = \"timeoutDisconnect\"\n\nexport const PROGRESS = \"progress\"\n\nexport const PACKET_KIND_RW = \"rw\"\nexport const PACKET_KIND_RO = \"ro\"\nexport const PACKET_KIND_EVENT = \"event\"\nexport const PACKET_KIND_ANNOUNCE = \"announce\"\n\nexport const REGISTER_NODE_NAME = \"register\"\nexport const REPORT_NODE_NAME = \"report\"\nexport const CONST_NODE_NAME = \"const\"\nexport const EVENT_NODE_NAME = \"event\"\nexport const SERVICE_NODE_NAME = \"service\"\nexport const SERVICE_MIXIN_NODE_NAME = \"serviceMixin\"\nexport const DEVICE_NODE_NAME = \"device\"\nexport const VIRTUAL_DEVICE_NODE_NAME = \"virtualdevice\"\nexport const BUS_NODE_NAME = \"bus\"\nexport const COMMAND_NODE_NAME = \"command\"\nexport const FIELD_NODE_NAME = \"field\"\nexport const PIPE_NODE_NAME = \"pipe\"\nexport const PIPE_REPORT_NODE_NAME = \"pipe_report\"\nexport const CRC_ACK_NODE_NAME = \"crcAck\"\nexport const SERVICE_TEST_NODE_NAME = \"serviceTest\"\n\nexport const REGISTER_REFRESH_TIMEOUT = 150\nexport const REGISTER_REFRESH_RETRY_0 = 30\nexport const REGISTER_REFRESH_RETRY_1 = 80\nexport const REGISTER_POLL_STREAMING_INTERVAL = 5000\nexport const REGISTER_POLL_FIRST_REPORT_INTERVAL = 400\nexport const REGISTER_POLL_REPORT_INTERVAL = 5001\nexport const REGISTER_POLL_REPORT_MAX_INTERVAL = 60000\nexport const REGISTER_POLL_REPORT_VOLATILE_INTERVAL = 1000\nexport const REGISTER_POLL_REPORT_VOLATILE_MAX_INTERVAL = 5000\nexport const REGISTER_OPTIONAL_POLL_COUNT = 3\nexport const STREAMING_DEFAULT_INTERVAL = 50\n\nexport const FLASH_MAX_DEVICES = 6\n\nexport const PING_LOGGERS_POLL = 2400\nexport const ROLE_MANAGER_POLL = 1500\nexport const REFRESH_REGISTER_POLL = 50\n\nexport const USB_TRANSPORT = \"usb\"\nexport const BLUETOOTH_TRANSPORT = \"bluetooth\"\nexport const SERIAL_TRANSPORT = \"serial\"\nexport const PACKETIO_TRANSPORT = \"packetio\"\nexport const WEBSOCKET_TRANSPORT = \"web\"\n\nexport const META_ACK = \"ACK\"\nexport const META_ACK_FAILED = \"ACK_FAILED\"\nexport const META_PIPE = \"PIPE\"\nexport const META_GET = \"GET\"\nexport const META_TRACE = \"TRACE\"\n\nexport const REGISTER_PRE_GET = \"registerPreGet\"\n\nexport const TRACE_FILTER_HORIZON = 100\nexport const EMBED_MIN_ASPECT_RATIO = 1.22\n\nexport const BLUETOOTH_JACDAC_SERVICE = \"f8530001-a97f-49f5-a554-3e373fbea2d5\"\nexport const BLUETOOTH_JACDAC_RX_CHARACTERISTIC =\n    \"f8530002-a97f-49f5-a554-3e373fbea2d5\"\nexport const BLUETOOTH_JACDAC_TX_CHARACTERISTIC =\n    \"f8530003-a97f-49f5-a554-3e373fbea2d5\"\nexport const BLUETOOTH_JACDAC_DIAG_CHARACTERISTIC =\n    \"f8530004-a97f-49f5-a554-3e373fbea2d5\"\n\nexport const TRANSPORT_CONNECT_RETRY_DELAY = 500\nexport const TRANSPORT_PULSE_TIMEOUT = 60000 // don't interfere with manual flashing of devices\n\nexport const ERROR_MICROBIT_V1 = \"microbit/v1-not-supported\"\nexport const ERROR_MICROBIT_UNKNOWN = \"microbit/unknown-hardware-revision\"\nexport const ERROR_MICROBIT_JACDAC_MISSING = \"microbit/jacdac-missing\"\nexport const ERROR_MICROBIT_INVALID_MEMORY = \"microbit/invalid-memory\"\n\nexport const ROLE_BOUND = \"roleBound\"\nexport const ROLE_UNBOUND = \"roleUnbound\"\nexport const ROLE_HAS_NO_SERVICE = \"roleHasNoService\"\nexport const BOUND = \"bound\"\nexport const UNBOUND = \"unbound\"\n\nexport const JACDAC_ERROR = \"JacdacError\"\n\nexport * from \"../../jacdac-spec/dist/specconstants\"\n","export function isMixinService(serviceClass: number) {\n    return (serviceClass & 0x2000_0000) === 0x2000_0000\n}\n\nfunction isRegister(pkt: jdspec.PacketInfo): boolean {\n    return (\n        pkt && (pkt.kind === \"const\" || pkt.kind === \"ro\" || pkt.kind === \"rw\")\n    )\n}\nexport function packetsToRegisters(packets: jdspec.PacketInfo[]) {\n    return packets.filter(pkt => !pkt.derived && isRegister(pkt))\n}\n\nexport function parseIntFloat(\n    spec: jdspec.ServiceSpec,\n    w: string,\n    allowFloat = false\n): number {\n    if (/^-?0x[a-f\\d_]+$/i.test(w) || /^-?[\\d_]+$/.test(w)) {\n        const v = parseInt(w.replace(/_/g, \"\")) // allow for 0x3fff_ffff syntax\n        if (isNaN(v)) throw new Error(\"can't parse int: \" + w)\n        return v\n    }\n\n    if (allowFloat && /^-?\\d*(\\.\\d*)?(e(-?)\\d+)?$/.test(w)) {\n        const v = parseFloat(w)\n        if (isNaN(v)) throw new Error(\"can't parse float: \" + w)\n        return v\n    }\n\n    const ww = w.split(/\\./)\n    if (ww.length != 2) {\n        throw new Error(`expecting int or enum member here`)\n    }\n    const en = spec.enums[ww[0]]\n    if (!en) {\n        throw new Error(`${ww[0]} is not an enum type`)\n    }\n    // eslint-disable-next-line no-prototype-builtins\n    if (!en.members.hasOwnProperty(ww[1]))\n        throw new Error(`${ww[1]} is not a member of ${ww[0]}`)\n    return en.members[ww[1]] || 0\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"jdspec.d.ts\" />\nimport { parseIntFloat } from \"./jdutils\"\n\nexport const DEVICE_IMAGE_WIDTH = 1024\nexport const DEVICE_IMAGE_HEIGHT = 768\n\n// modified subset of SenML\nexport const unitDescription: jdspec.SMap<string> = {\n    \"°\": \"angle\",\n    \"°/s\": \"rotation rate\",\n    \"°/s2\": \"rotation acceleration\",\n    m: \"meter\",\n    kg: \"kilogram\",\n    s: \"second\",\n    A: \"ampere\",\n    K: \"kelvin\",\n    cd: \"candela\",\n    mol: \"mole\",\n    Hz: \"hertz\",\n    rad: \"radian\",\n    sr: \"steradian\",\n    N: \"newton\",\n    Pa: \"pascal\",\n    J: \"joule\",\n    W: \"watt\",\n    C: \"coulomb\",\n    V: \"volt\",\n    F: \"farad\",\n    Ohm: \"ohm\",\n    S: \"siemens\",\n    Wb: \"weber\",\n    T: \"tesla\",\n    H: \"henry\",\n    \"°C\": \"degrees Celsius\",\n    lm: \"lumen\",\n    lx: \"lux\",\n    Bq: \"becquerel\",\n    Gy: \"gray\",\n    Sv: \"sievert\",\n    kat: \"katal\",\n    m2: \"square meter (area)\",\n    m3: \"cubic meter (volume)\",\n    \"m/s\": \"meter per second (velocity)\",\n    \"m/s2\": \"meter per square second (acceleration)\",\n    \"m3/s\": \"cubic meter per second (flow rate)\",\n    \"W/m2\": \"watt per square meter (irradiance)\",\n    \"cd/m2\": \"candela per square meter (luminance)\",\n    bit: \"bit (information content)\",\n    \"bit/s\": \"bit per second (data rate)\",\n    lat: \"degrees latitude\",\n    lon: \"degrees longitude\",\n    pH: \"pH value (acidity; logarithmic quantity)\",\n    dB: \"decibel (logarithmic quantity)\",\n    dBW: \"decibel relative to 1 W (power level)\",\n    count: \"1 (counter value)\",\n    \"/\": \"1 (ratio e.g., value of a switch)\",\n    \"%RH\": \"Percentage (Relative Humidity)\",\n    \"%EL\": \"Percentage (remaining battery energy level)\",\n    EL: \"seconds (remaining battery energy level)\",\n    \"1/s\": \"1 per second (event rate)\",\n    \"S/m\": \"Siemens per meter (conductivity)\",\n    B: \"Byte (information content)\",\n    VA: \"volt-ampere (Apparent Power)\",\n    VAs: \"volt-ampere second (Apparent Energy)\",\n    var: \"volt-ampere reactive (Reactive Power)\",\n    vars: \"volt-ampere-reactive second (Reactive Energy)\",\n    \"J/m\": \"joule per meter (Energy per distance)\",\n    \"kg/m3\": \"kilogram per cubic meter (mass density, mass concentration)\",\n    \"s/60°\": \"servo speed (time to travel 60°)\",\n    \"kg/cm\": \"torque\",\n    hsv: \"bit HSV color\",\n    rgb: \"RGB color\",\n    rpm: \"revolutions per minute\",\n    uv: \"UV index\",\n    lux: \"illuminance\",\n    bpm: \"beats per minute\",\n    mcd: \"micro candella\",\n    px: \"pixel\",\n}\n\nexport const secondaryUnitConverters: jdspec.SMap<{\n    name: string\n    unit: senml.Unit | \"#\"\n    scale: number\n    offset: number\n}> = {\n    ms: { name: \"millisecond\", unit: \"s\", scale: 1 / 1000, offset: 0 },\n    min: { name: \"minute\", unit: \"s\", scale: 60, offset: 0 },\n    h: { name: \"hour\", unit: \"s\", scale: 3600, offset: 0 },\n    MHz: { name: \"megahertz\", unit: \"Hz\", scale: 1000000, offset: 0 },\n    kW: { name: \"kilowatt\", unit: \"W\", scale: 1000, offset: 0 },\n    kVA: { name: \"kilovolt-ampere\", unit: \"VA\", scale: 1000, offset: 0 },\n    kvar: { name: \"kilovar\", unit: \"var\", scale: 1000, offset: 0 },\n    Ah: { name: \"ampere-hour\", unit: \"C\", scale: 3600, offset: 0 },\n    Wh: { name: \"watt-hour\", unit: \"J\", scale: 3600, offset: 0 },\n    kWh: { name: \"kilowatt-hour\", unit: \"J\", scale: 3600000, offset: 0 },\n    varh: { name: \"var-hour\", unit: \"vars\", scale: 3600, offset: 0 },\n    kvarh: { name: \"kilovar-hour\", unit: \"vars\", scale: 3600000, offset: 0 },\n    kVAh: {\n        name: \"kilovolt-ampere-hour\",\n        unit: \"VAs\",\n        scale: 3600000,\n        offset: 0,\n    },\n    \"Wh/km\": {\n        name: \"watt-hour per kilometer\",\n        unit: \"J/m\",\n        scale: 3.6,\n        offset: 0,\n    },\n    KiB: { name: \"kibibyte\", unit: \"B\", scale: 1024, offset: 0 },\n    GB: { name: \"gigabyte\", unit: \"B\", scale: 1.0e9, offset: 0 },\n    \"Mbit/s\": {\n        name: \"megabit per second\",\n        unit: \"bit/s\",\n        scale: 1000000,\n        offset: 0,\n    },\n    \"B/s\": { name: \"byte per second\", unit: \"bit/s\", scale: 8, offset: 0 },\n    \"MB/s\": {\n        name: \"megabyte per second\",\n        unit: \"bit/s\",\n        scale: 8000000,\n        offset: 0,\n    },\n    mV: { name: \"millivolt\", unit: \"V\", scale: 1 / 1000, offset: 0 },\n    mA: { name: \"milliampere\", unit: \"A\", scale: 1 / 1000, offset: 0 },\n    dBm: { name: \"decibel (milliwatt)\", unit: \"dBW\", scale: 1, offset: -30 },\n    \"ug/m3\": {\n        name: \"microgram per cubic meter\",\n        unit: \"kg/m3\",\n        scale: 1.0e-9,\n        offset: 0,\n    },\n    \"mm/h\": {\n        name: \"millimeter per hour\",\n        unit: \"m/s\",\n        scale: 1 / 3600000,\n        offset: 0,\n    },\n    \"m/h\": { name: \"meter per hour\", unit: \"m/s\", scale: 1 / 3600, offset: 0 },\n    \"cm/s\": {\n        name: \"centimeter per seconds\",\n        unit: \"m/s\",\n        scale: 1 / 100,\n        offset: 0,\n    },\n    ppm: { name: \"parts per million\", unit: \"/\", scale: 1.0e-6, offset: 0 },\n    ppb: { name: \"parts per billion\", unit: \"/\", scale: 1.0e-9, offset: 0 },\n    \"/100\": { name: \"percent\", unit: \"/\", scale: 1 / 100, offset: 0 },\n    \"%\": { name: \"percent\", unit: \"/\", scale: 1 / 100, offset: 0 },\n    \"/1000\": { name: \"permille\", unit: \"/\", scale: 1 / 1000, offset: 0 },\n    hPa: { name: \"hectopascal\", unit: \"Pa\", scale: 100, offset: 0 },\n    mm: { name: \"millimeter\", unit: \"m\", scale: 1 / 1000, offset: 0 },\n    cm: { name: \"centimeter\", unit: \"m\", scale: 1 / 100, offset: 0 },\n    km: { name: \"kilometer\", unit: \"m\", scale: 1000, offset: 0 },\n    \"km/h\": {\n        name: \"kilometer per hour\",\n        unit: \"m/s\",\n        scale: 1 / 3.6,\n        offset: 0,\n    },\n    \"8ms\": { name: \"8 milliseconds\", unit: \"s\", scale: 8 / 1000, offset: 0 },\n    nm: { name: \"nanometer\", unit: \"m\", scale: 1e-9, offset: 0 },\n    nT: { name: \"nano Tesla\", unit: \"T\", scale: 1e9, offset: 0 },\n\n    // compat with previous Jacdac versions\n    frac: { name: \"ratio\", unit: \"/\", scale: 1, offset: 0 },\n    us: { name: \"micro seconds\", unit: \"s\", scale: 1e-6, offset: 0 },\n    mWh: { name: \"micro watt-hour\", unit: \"J\", scale: 3.6e-3, offset: 0 },\n    g: { name: \"earth gravity\", unit: \"m/s2\", scale: 9.80665, offset: 0 },\n    \"#\": { name: \"count\", unit: \"#\", scale: 1, offset: 0 },\n}\n\nexport const encodings: jdspec.SMap<jdspec.Encoding> = {\n    json: \"JSON\",\n    bitset: \"bitset\",\n}\n\nexport function resolveUnit(unit: string) {\n    if (!unit) return { name: \"\", scale: 1, offset: 1 } // indentifier\n\n    // seconary unit?\n    const su = secondaryUnitConverters[unit]\n    if (su) return su\n\n    const name = unitDescription[unit]\n    if (name) return { name, unit, scale: 1, offset: 0 }\n\n    return undefined\n}\n\nexport function units(): { name: string; description: string }[] {\n    const r: { name: string; description: string }[] = []\n    Object.keys(unitDescription).forEach(k => {\n        r.push({ name: k, description: unitDescription[k] })\n        Object.keys(secondaryUnitConverters)\n            .filter(scd => secondaryUnitConverters[scd].unit === k)\n            .forEach(scd =>\n                r.push({\n                    name: scd,\n                    description: secondaryUnitConverters[scd].name,\n                })\n            )\n    })\n    r.sort((l, r) => l.name.localeCompare(r.name))\n    return r\n}\n\n/* check ranges, see system.md\nRegisters `0x001-0x07f` - r/w common to all services\nRegisters `0x080-0x0ff` - r/w defined per-service\nRegisters `0x100-0x17f` - r/o common to all services\nRegisters `0x180-0x1ff` - r/o defined per-service\nRegisters `0x200-0xeff` - custom, defined per-service\nRegisters `0xf00-0xfff` - reserved for implementation, should not be seen on the wire\n*/\nconst identifierRanges: { [index: string]: [number, number][] } = {\n    rw: [\n        [0x001, 0x07f],\n        [0x080, 0x0ff],\n        [0x200, 0xeff], // custom\n        [0xf00, 0xfff], // impl\n    ],\n    ro: [\n        [0x100, 0x17f],\n        [0x180, 0x1ff],\n        [0x200, 0xeff], // custom\n        [0xf00, 0xfff], // impl\n    ],\n    const: [\n        [0x100, 0x17f],\n        [0x180, 0x1ff],\n        [0x200, 0xeff], // custom\n        [0xf00, 0xfff], // impl\n    ],\n    command: [\n        [0x000, 0x07f],\n        [0x080, 0xeff],\n        [0xf00, 0xfff],\n    ],\n    report: [\n        [0x000, 0x07f],\n        [0x080, 0xeff],\n        [0xf00, 0xfff],\n    ],\n    event: [\n        [0x00, 0x7f], // system\n        [0x80, 0xff],\n    ],\n}\n\nexport function parseServiceSpecificationMarkdownToJSON(\n    filecontent: string,\n    includes?: jdspec.SMap<jdspec.ServiceSpec>,\n    filename = \"\"\n): jdspec.ServiceSpec {\n    filecontent = (filecontent || \"\").replace(/\\r/g, \"\")\n    const info: jdspec.ServiceSpec = {\n        name: \"\",\n        status: \"experimental\",\n        shortId: filename.replace(/\\.md$/, \"\").replace(/.*\\//, \"\"),\n        camelName: \"\",\n        shortName: \"\",\n        extends: [],\n        notes: {},\n        classIdentifier: 0,\n        enums: {},\n        constants: {},\n        packets: [],\n        tags: [],\n    }\n\n    let backticksType = \"\"\n    let enumInfo: jdspec.EnumInfo = null\n    let packetInfo: jdspec.PacketInfo = null\n    let pipePacket: jdspec.PacketInfo = null\n    let errors: jdspec.Diagnostic[] = []\n    let lineNo = 0\n    let noteId = \"short\"\n    let lastCmd: jdspec.PacketInfo\n    let packetsToDescribe: jdspec.PacketInfo[]\n    let nextModifier: \"\" | \"segmented\" | \"multi-segmented\" | \"repeats\" = \"\"\n\n    const systemInfo = includes?.[\"_system\"]\n    const usedIds: jdspec.SMap<string> = {}\n    for (const prev of values(includes || {})) {\n        if (prev.classIdentifier) usedIds[prev.classIdentifier + \"\"] = prev.name\n    }\n\n    try {\n        if (includes[\"_system\"] && includes[\"_base\"]) processInclude(\"_base\")\n        for (const line of filecontent.split(/\\n/)) {\n            lineNo++\n            processLine(line)\n        }\n    } catch (e) {\n        error(\"exception: \" + e.message)\n    }\n\n    if (errors.length) info.errors = errors\n\n    for (const k of Object.keys(info.notes))\n        info.notes[k] = normalizeMD(info.notes[k])\n    for (const v of info.packets) v.description = normalizeMD(v.description)\n\n    if (!info.camelName)\n        info.camelName = camelize(\n            info.name\n                .replace(/\\s+/g, \" \")\n                .replace(/[ -](.)/g, (f, l) => l.toUpperCase())\n                .replace(/[^\\w]+/g, \"_\")\n        )\n    if (!info.shortName) info.shortName = info.camelName\n\n    if (info.camelName == \"system\") info.classIdentifier = 0x1fff_fff1\n    else if (info.camelName == \"base\") info.classIdentifier = 0x1fff_fff3\n    else if (info.camelName == \"sensor\") info.classIdentifier = 0x1fff_fff2\n\n    if (info.shortName != \"control\" && !info.classIdentifier)\n        error(\"identifier: not specified\")\n\n    info.packets.forEach(pkt => (pkt.packFormat = packFormat(info, pkt)))\n\n    return info\n\n    function processLine(line: string) {\n        if (backticksType) {\n            if (line.trim() == \"```\") {\n                backticksType = null\n                if (backticksType == \"default\") return\n            }\n        } else {\n            const m = /^```(.*)/.exec(line)\n            if (m) {\n                backticksType = m[1] || \"default\"\n                if (backticksType == \"default\") return\n            }\n        }\n\n        const interpret =\n            backticksType == \"default\" || line.slice(0, 4) == \"    \"\n\n        if (!interpret) {\n            const m = /^(#+)\\s*(.*)/.exec(line)\n            if (m) {\n                const [, hd, cont] = m\n                packetsToDescribe = null\n                const newNoteId = cont.trim().toLowerCase()\n                if (hd == \"#\" && !info.name) {\n                    info.name = cont.trim()\n                    line = \"\"\n                } else if (\n                    newNoteId == \"registers\" ||\n                    newNoteId == \"commands\" ||\n                    newNoteId == \"events\" ||\n                    newNoteId == \"examples\"\n                ) {\n                    noteId = newNoteId\n                    line = \"\"\n                } else {\n                    if (noteId == \"short\") noteId = \"long\"\n                    // keep line\n                }\n            }\n\n            if (packetsToDescribe) {\n                for (const iface of packetsToDescribe)\n                    iface.description += line + \"\\n\"\n            } else {\n                if (line || info.notes[noteId]) {\n                    if (!info.notes[noteId]) info.notes[noteId] = \"\"\n                    info.notes[noteId] += line + \"\\n\"\n                }\n            }\n        } else {\n            if (packetsToDescribe && packetsToDescribe[0].description)\n                packetsToDescribe = null\n            const expanded = line\n                .replace(/\\/\\/.*/, \"\")\n                .replace(/[?@:=,{};]/g, s => \" \" + s + \" \")\n                .trim()\n            if (!expanded) return\n            const words = expanded.split(/\\s+/)\n            if (/^[;,]/.test(words[words.length - 1])) words.pop()\n            let cmd = words[0]\n            // allow for `command = Foo.Bar` etc (ie. command is not a keyword there)\n            if (words[1] == \":\" || words[1] == \"=\") cmd = \":\"\n            switch (cmd) {\n                case \"enum\":\n                case \"flags\":\n                    startEnum(words)\n                    break\n                case \"define\":\n                    constant(words)\n                    break\n                case \"meta\":\n                case \"pipe\":\n                case \"report\":\n                case \"command\":\n                case \"const\":\n                case \"ro\":\n                case \"rw\":\n                case \"event\":\n                case \"client\":\n                case \"volatile\":\n                case \"lowlevel\":\n                case \"restricted\":\n                    startPacket(words)\n                    break\n                case \"}\":\n                    if (packetInfo) {\n                        finishPacket()\n                    } else if (enumInfo) {\n                        enumInfo = null\n                    } else {\n                        error(\"nothing to end here\")\n                    }\n                    break\n                default:\n                    if (packetInfo) packetField(words)\n                    else if (enumInfo) enumMember(words)\n                    else metadataMember(words)\n            }\n        }\n    }\n\n    function finishPacket() {\n        const paderr = paddingError(packetInfo)\n\n        if (paderr) {\n            packetInfo.packed = true\n            error(`${paderr} in ${packetInfo.kind} ${packetInfo.name}`)\n        }\n\n        let repeats = false\n        let hadzero = false\n        for (const p of packetInfo.fields) {\n            if (hadzero) {\n                error(\n                    `field ${p.name} in ${packetInfo.kind} ${packetInfo.name} follows a variable-sized field`\n                )\n                break\n            }\n            if (p.startRepeats) {\n                if (repeats)\n                    error(\n                        `repeats: can only be specified once; in ${packetInfo.kind} ${packetInfo.name}`\n                    )\n                repeats = true\n            }\n            if (p.storage == 0 && p.type != \"string0\") {\n                if (repeats) {\n                    error(\n                        `variable-sized field ${p.name} in ${packetInfo.kind} ${packetInfo.name} cannot repeat`\n                    )\n                    break\n                }\n                hadzero = true\n            }\n        }\n\n        const pid = packetInfo.identifier\n        const ranges = identifierRanges[packetInfo.kind]\n        if (\n            packetInfo.name != \"set_register\" &&\n            packetInfo.name != \"get_register\" &&\n            ranges &&\n            !ranges.some(range => range[0] <= pid && pid <= range[1])\n        )\n            error(\n                `${packetInfo.name} identifier 0x${pid.toString(\n                    16\n                )} out of range, expected in ${ranges\n                    .map(\n                        range =>\n                            `[${range\n                                .map(r => `0x${r.toString(16)}`)\n                                .join(\", \")}]`\n                    )\n                    .join(\", \")}`\n            )\n\n        // additional checks for specific packets\n        if (\n            [\n                \"reading_error\",\n                \"min_reading\",\n                \"max_reading\",\n                \"reading_resolution\",\n            ].indexOf(packetInfo.identifierName) > -1\n        ) {\n            const regid = packetInfo.identifierName\n            if (packetInfo.fields.length > 1) error(`${regid} must be a number`)\n            const reading = info.packets.find(\n                pkt => pkt.kind === \"ro\" && pkt.identifierName === \"reading\"\n            )\n            if (!reading) error(`${regid} register without a reading register`)\n            else if (packetInfo.fields[0].unit !== reading.fields[0].unit)\n                error(\n                    `${regid} unit (${packetInfo.fields[0].unit}) and reading unit (${reading.fields[0].unit}) must match`\n                )\n        }\n\n        packetInfo = null\n    }\n\n    function normalizeMD(md: string) {\n        return md.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\")\n    }\n\n    function checkBraces(words: string[]) {\n        if (enumInfo || packetInfo) error(\"already in braces\")\n        if (words) {\n            if (words[2] != \"{\") error(`expecting: ${words[0]} NAME {`)\n        }\n\n        enumInfo = null\n        packetInfo = null\n    }\n\n    function forceSection(sectionId: string) {\n        if (noteId != sectionId) {\n            error(`this is only allowed in ## ${sectionId} not in ## ${noteId}`)\n        }\n    }\n\n    function generalKind(k: jdspec.PacketKind): jdspec.PacketKind {\n        switch (k) {\n            case \"const\":\n            case \"ro\":\n            case \"rw\":\n                return \"rw\"\n            default:\n                return k\n        }\n    }\n\n    function startPacket(words: string[]) {\n        checkBraces(null)\n\n        let client: boolean = undefined\n        let lowLevel: boolean = undefined\n        let restricted: boolean = undefined\n        if (words[0] === \"restricted\") {\n            restricted = true\n            words.shift()\n        } else if (words[0] === \"client\") {\n            client = true\n            words.shift()\n        } else if (words[0] === \"lowlevel\") {\n            lowLevel = true\n            words.shift()\n        }\n\n        const kindSt = words.shift()\n        let kind: jdspec.PacketKind = \"command\"\n        if (kindSt == \"meta\") {\n            forceSection(\"commands\")\n            let w2 = words.shift()\n            if (w2 == \"pipe\") w2 = words.shift()\n            if (w2 == \"report\" || w2 == \"command\")\n                kind = (\"meta_pipe_\" + w2) as any\n            else error(\"invalid token after meta\")\n        } else if (kindSt == \"pipe\") {\n            forceSection(\"commands\")\n            const w2 = words.shift()\n            if (w2 == \"report\" || w2 == \"command\") kind = (\"pipe_\" + w2) as any\n            else error(\"invalid token after pipe\")\n        } else {\n            kind = kindSt as any\n        }\n\n        if (restricted && kind !== \"command\")\n            error(\"restricted only applies to commands\")\n\n        let internal: boolean = undefined\n        if (words[0] === \"internal\") {\n            internal = true\n            words.shift()\n        }\n\n        let volatile: boolean = undefined\n        if (words[0] === \"volatile\") {\n            if (kind != \"ro\" && kind != \"rw\")\n                error(\"volatile can only modify ro or rw\")\n            volatile = true\n            words.shift()\n        }\n\n        let name = words.shift()\n        const isReport = kind == \"report\"\n        if (isReport && lastCmd && !/^\\w+$/.test(name)) {\n            words.unshift(name)\n            name = lastCmd.name\n        }\n\n        packetInfo = {\n            kind,\n            name: normalizeName(name),\n            identifier: undefined,\n            description: \"\",\n            fields: [],\n            internal,\n            client,\n            lowLevel,\n            volatile,\n            restricted,\n        }\n        if (isReport && lastCmd && name == lastCmd.name) {\n            packetInfo.secondary = true\n            lastCmd.hasReport = true\n        }\n        if (!packetsToDescribe) packetsToDescribe = []\n        packetsToDescribe.push(packetInfo)\n        if (words[0] == \"?\") {\n            words.shift()\n            packetInfo.optional = true\n        }\n\n        const prev = info.packets.filter(p => p.name == packetInfo.name)\n        if (prev.length == 0) {\n            // OK\n        } else if (\n            prev.length == 1 &&\n            prev[0].kind == \"command\" &&\n            packetInfo.kind == \"report\"\n        ) {\n            // OK\n        } else {\n            error(`packet redefinition ${prev.map(p => p.name).join(\", \")} `)\n        }\n\n        if (/pipe/.test(kind)) {\n            if (!pipePacket)\n                error(\n                    \"pipe definitions can only occur after the pipe-open packet\"\n                )\n            else packetInfo.pipeType = pipePacket.pipeType\n        }\n\n        const atat = words.indexOf(\"@\")\n        if (kind == \"pipe_command\" || kind == \"pipe_report\") {\n            // no identifier\n            packetInfo.identifier = 0\n        } else if (atat >= 0) {\n            const w = words[atat + 1]\n            let v = parseInt(w)\n            let isSet = true\n            if (isNaN(v)) {\n                v = 0\n                isSet = false\n                if (systemInfo) {\n                    const systemPacket = systemInfo.packets.find(\n                        p => p.name == w\n                    )\n                    if (systemPacket) {\n                        v = systemPacket.identifier\n                        packetInfo.identifierName = w\n                        if (systemPacket.kind != kind)\n                            error(\n                                `kind mismatch on ${w}: ${systemPacket.kind} vs ${kind}`\n                            )\n                        else isSet = true\n                    } else error(`${w} not found in _system`)\n                } else {\n                    error(`${w} cannot be resolved, since _system is missing`)\n                }\n            }\n\n            // if we are accessing the reading or reading_error register, mark it volatile\n            if (kind === \"ro\" && (v === 0x101 || v === 0x106))\n                packetInfo.volatile = true\n\n            let isUser = false\n            let isSystem = false\n            let isHigh = 0x200 <= v && v <= 0xeff\n            switch (kind) {\n                case \"const\":\n                case \"ro\":\n                    forceSection(\"registers\")\n                    isSystem = 0x100 <= v && v <= 0x17f\n                    isUser = 0x180 <= v && v <= 0x1ff\n                    break\n                case \"rw\":\n                    forceSection(\"registers\")\n                    isSystem = 0x00 <= v && v <= 0x7f\n                    isUser = 0x80 <= v && v <= 0xff\n                    break\n                case \"report\":\n                case \"command\":\n                    forceSection(\"commands\")\n                    isSystem = 0x00 <= v && v <= 0x7f\n                    isUser = 0x80 <= v && v <= 0xff\n                    isHigh = 0x100 <= v && v <= 0xeff\n                    break\n                case \"event\":\n                    forceSection(\"events\")\n                    isSystem = 0x00 <= v && v <= 0x7f\n                    isUser = 0x80 <= v && v <= 0xff\n                    break\n            }\n\n            if (isUser) {\n                // ok\n            } else if (isSystem) {\n                if (!packetInfo.identifierName)\n                    warn(\n                        `${kind} @ ${toHex(\n                            v\n                        )} should be expressed with a name from _system.md`\n                    )\n            } else if (isHigh) {\n                if (!info.highCommands)\n                    warn(\n                        `${kind} @ ${toHex(\n                            v\n                        )} is from the extended range but 'high: 1' missing`\n                    )\n            }\n\n            packetInfo.identifier = v\n            words.splice(atat, 2)\n        } else {\n            if (isReport && lastCmd) packetInfo.identifier = lastCmd.identifier\n            else error(`@ not found at ${packetInfo.name}`)\n        }\n\n        if (\n            info.packets.some(\n                p =>\n                    generalKind(p.kind) == generalKind(packetInfo.kind) &&\n                    (!/pipe/.test(p.kind) ||\n                        p.pipeType == packetInfo.pipeType) &&\n                    p.identifier == packetInfo.identifier\n            )\n        ) {\n            error(\"packet identifier already used\")\n        }\n\n        info.packets.push(packetInfo)\n\n        if (kind == \"command\") lastCmd = packetInfo\n        else lastCmd = null\n\n        if (words[0] == \"=\" || words[0] == \":\") {\n            words.unshift(\"_\")\n            packetField(words)\n            finishPacket()\n        } else {\n            const last = words.shift()\n            if (last == \"{\") {\n                if (words[0] == \"...\") words.shift()\n                if (words[0] == \"}\") {\n                    words.shift()\n                    finishPacket()\n                }\n                if (words.length) error(`excessive tokens: ${words[0]}...`)\n            } else {\n                if (last === undefined && kind == \"event\") {\n                    finishPacket()\n                } else {\n                    error(\"expecting '{'\")\n                }\n            }\n        }\n    }\n\n    function rangeCheck(tp: string, v: number) {\n        const [storage, type, typeShift] = normalizeStorageType(tp)\n\n        if (isNaN(v)) return v // error already reported\n\n        if (storage == 0) {\n            error(`numeric values like ${v} not allowed for ${tp}`)\n            return v\n        }\n\n        if (v < 0 && storage > 0) {\n            error(`negative values like ${v} not allowed for ${tp}`)\n            return v\n        }\n\n        if (Math.floor(v) != v && typeShift == 0) {\n            error(`only integer values allowed for ${tp}; got ${v}`)\n            return v\n        }\n\n        let bits = storage < 0 ? -storage * 8 - 1 : storage * 8\n        bits -= typeShift || 0\n        // don't use bitshift to allow for more than 32 bits\n        let max = 1\n        while (bits--) max *= 2\n        if (-v == max) {\n            // OK - min_int\n        } else if (max == 1 && v == 1) {\n            // we make an exception for u0.8 being set to 1\n        } else {\n            if (Math.abs(v) >= max) {\n                error(`value ${v} is out of range for ${tp}`)\n                return v\n            }\n        }\n\n        return v\n    }\n\n    function parseVal(words: string[]) {\n        const eq = words.shift()\n        if (eq != \"=\" && eq != \":\") error(\"expecting '='\")\n        const val = words.shift()\n        return parseIntCheck(val, true)\n    }\n\n    function constant(words: string[]) {\n        if (words.length != 3) {\n            error(`define syntax is \"define name value\" (${words.join(\" \")}}`)\n            return\n        }\n\n        const name = words[1]\n        const svalue = words[2]\n\n        const hex = /^0x/.test(svalue)\n        const value = hex ? parseInt(svalue, 16) : parseInt(svalue)\n        if (isNaN(value)) {\n            error(\"invalid numeric value for constant\")\n            return\n        }\n        info.constants[name] = { value, hex }\n    }\n\n    function packetField(words: string[]) {\n        if (\n            words.length == 2 &&\n            (words[0] == \"repeats\" ||\n                words[0] == \"segmented\" ||\n                words[0] == \"multi-segmented\")\n        ) {\n            nextModifier = words[0]\n            return\n        }\n        const name = normalizeName(words.shift())\n        let defaultValue: number = undefined\n        let isOptional: boolean = undefined\n        let op = words.shift()\n        if (op == \"?\") {\n            isOptional = true\n            op = words.shift()\n        }\n        if (op == \"=\") {\n            defaultValue = parseIntCheck(words.shift(), true)\n            op = words.shift()\n        }\n\n        if (op != \":\") error(\"expecting ':'\")\n\n        const tp = words.shift()\n        const [storage, type, typeShift] = normalizeStorageType(tp)\n        const isFloat = typeShift === null || undefined\n\n        let tok = words.shift()\n        let unit: jdspec.Unit\n        let encoding: jdspec.Encoding\n        if (tok != \"{\") {\n            if (type === \"string\" || type === \"bytes\")\n                encoding = normalizeEncoding(tok)\n            else unit = normalizeUnit(tok)\n            tok = words.shift()\n        }\n\n        if (defaultValue !== undefined) rangeCheck(tp, defaultValue)\n\n        let shift = typeShift || undefined\n        if (unit == \"/\") {\n            // / units should be used with ui0. data\n            if (!/^(u0|i1)\\.\\d+$/.test(tp))\n                error(\n                    `fraction unit must be used with u0.yyy or i1.yyy data types (got ${tp})`\n                )\n\n            shift = Math.abs(storage) * 8\n            if (storage < 0) shift -= 1\n        }\n\n        const field: jdspec.PacketMember = {\n            name,\n            unit,\n            encoding,\n            shift,\n            isFloat,\n            type,\n            storage,\n            isSimpleType: canonicalType(storage) == type || undefined,\n            defaultValue,\n            isOptional,\n            multiSegmented: nextModifier == \"multi-segmented\" || undefined,\n            segmented:\n                nextModifier == \"segmented\" ||\n                nextModifier == \"multi-segmented\" ||\n                undefined,\n            startRepeats: nextModifier == \"repeats\" || undefined,\n        }\n\n        if (!unit) delete field.unit\n        if (!encoding) delete field.encoding\n\n        if (tok == \"{\") {\n            while (words.length) {\n                tok = words.shift()\n                if (tok == \"}\") break\n                tok = camelize(tok)\n                switch (tok) {\n                    case \"maxBytes\": {\n                        // eslint-disable-next-line @typescript-eslint/no-extra-semi,@typescript-eslint/no-explicit-any\n                        ;(field as any)[tok] = rangeCheck(\"u8\", parseVal(words))\n                        break\n                    }\n                    case \"typicalMin\":\n                    case \"typicalMax\":\n                    case \"absoluteMin\":\n                    case \"absoluteMax\": {\n                        // eslint-disable-next-line @typescript-eslint/no-extra-semi,@typescript-eslint/no-explicit-any\n                        ;(field as any)[tok] = rangeCheck(tp, parseVal(words))\n                        break\n                    }\n                    case \"preferredInterval\": {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        if ((packetInfo as any)[tok] !== undefined)\n                            error(`field ${tok} already set`)\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        ;(packetInfo as any)[tok] = rangeCheck(\n                            \"u32\",\n                            parseVal(words)\n                        )\n                        break\n                    }\n                    default:\n                        error(\"unknown constraint: \" + tok)\n                        break\n                }\n                if (words[0] == \",\") words.shift()\n            }\n            if (tok == \"}\") tok = null\n        }\n\n        if (tok) error(`excessive tokens at the end of member: ${tok}...`)\n\n        if (\n            field.typicalMin === undefined &&\n            field.typicalMax !== undefined &&\n            storage > 0\n        )\n            field.typicalMin = 0\n\n        if (\n            field.absoluteMin === undefined &&\n            field.absoluteMax !== undefined &&\n            storage > 0\n        )\n            field.absoluteMin = 0\n\n        if (!field.storage && field.maxBytes) field.storage = field.maxBytes\n\n        if (/pipe/.test(type)) {\n            packetInfo.pipeType = packetInfo.name\n            if (\n                pipePacket &&\n                pipePacket.name == packetInfo.name &&\n                packetInfo.kind == \"report\"\n            ) {\n                // keep old pipePacket\n            } else {\n                pipePacket = packetInfo\n            }\n        }\n\n        if (\n            !field.isOptional &&\n            packetInfo.fields[packetInfo.fields.length - 1]?.isOptional\n        ) {\n            error(`all fields after an optional field have to optional`)\n        }\n\n        packetInfo.fields.push(field)\n        nextModifier = undefined\n    }\n\n    function startEnum(words: string[]) {\n        checkBraces(null)\n        if (words[2] != \":\" || words[4] != \"{\")\n            error(\"expecting: enum NAME : TYPE {\")\n        enumInfo = {\n            name: normalizeName(words[1]),\n            storage: normalizeStorageType(words[3])[0],\n            isFlags: words[0] == \"flags\" || undefined,\n            members: {},\n        }\n        if (info.enums[enumInfo.name]) error(\"enum redefinition\")\n        info.enums[enumInfo.name] = enumInfo\n    }\n\n    function enumMember(words: string[]) {\n        if (words[1] != \"=\" || words.length != 3)\n            error(`expecting: FIELD_NAME = INTEGER`)\n        enumInfo.members[normalizeName(words[0])] = rangeCheck(\n            canonicalType(enumInfo.storage),\n            parseIntCheck(words[2])\n        )\n    }\n\n    function parseIntCheck(w: string, allowFloat = false) {\n        try {\n            return parseIntFloat(info, w, allowFloat)\n        } catch (e) {\n            error(e.message)\n            return 0\n        }\n    }\n\n    function looksRandom(n: number) {\n        const s = n.toString(16)\n        const h = \"0123456789abcdef\"\n        for (let i = 0; i < h.length; ++i) {\n            const hh = h[i]\n            if (s.indexOf(hh + hh + hh) >= 0) return false\n        }\n        if (/f00d|dead|deaf|beef/.test(s)) return false\n        return true\n    }\n\n    function genRandom() {\n        for (;;) {\n            const m = (Math.random() * 0xfff_ffff) | 0x1000_0000\n            if (looksRandom(m)) return m\n        }\n    }\n\n    function metadataMember(words: string[]) {\n        if (\n            !(\n                (words[1] == \"=\" || words[1] == \":\") &&\n                (words[0] == \"tags\" || words.length == 3)\n            )\n        )\n            error(`expecting: FIELD_NAME = VALUE or FIELD_NAME : VALUE`)\n        switch (words[0]) {\n            case \"extends\":\n                processInclude(words[2])\n                break\n            case \"class\":\n            case \"identifier\": {\n                info.classIdentifier = parseIntCheck(words[2])\n                if (info.name != \"Control\" && info.classIdentifier == 0)\n                    info.classIdentifier = 1\n                const gen = `how about ${toHex(genRandom())}`\n                if (\n                    !(\n                        info.classIdentifier == 0 ||\n                        (0x1000_0001 <= info.classIdentifier &&\n                            info.classIdentifier <= 0x1fff_ff00) ||\n                        (0x2000_0001 <= info.classIdentifier &&\n                            info.classIdentifier <= 0x2ffff_ff00)\n                    )\n                )\n                    error(`class identifier out of range; ${gen}`)\n                if (!looksRandom(info.classIdentifier))\n                    error(`class identifier doesn't look random; ${gen}`)\n                if (usedIds[info.classIdentifier + \"\"])\n                    error(\n                        `class identifier ${toHex(\n                            info.classIdentifier\n                        )} already used in ${\n                            usedIds[info.classIdentifier + \"\"]\n                        }; ${gen}`\n                    )\n                break\n            }\n            case \"camel\":\n                info.camelName = words[2]\n                break\n            case \"short\":\n                info.shortName = words[2]\n                break\n            case \"high\":\n                info.highCommands = !!parseIntCheck(words[2])\n                break\n            case \"status\":\n                if (\n                    [\"stable\", \"experimental\", \"deprecated\"].indexOf(words[2]) >\n                    -1\n                )\n                    info.status = <any>words[2]\n                else error(\"unknown status\")\n                break\n            case \"group\":\n                info.group = capitalize(words.slice(2).join(\" \"))\n                break\n            case \"tags\": {\n                const tags = words.slice(2).filter(w => w != \",\" && w != \";\")\n                info.tags = info.tags.concat(tags)\n                break\n            }\n            default:\n                error(\"unknown metadata field: \" + words[0])\n                break\n        }\n    }\n\n    function processInclude(name: string) {\n        if (name == \"_system\") return\n        const inner = includes[name]\n        if (!inner) return error(\"include file not found: \" + name)\n        if (\n            info.packets.some(pkt => !pkt.derived) ||\n            values(info.enums).some(e => !e.derived)\n        )\n            error(\"extends: only allowed on top of the .md file\")\n        if (inner.errors) errors = errors.concat(inner.errors)\n        const innerEnums = clone(inner.enums)\n        Object.keys(innerEnums)\n            .filter(k => !info.enums[k])\n            .forEach(k => {\n                const ie = innerEnums[k]\n                ie.derived = name\n                info.enums[k] = ie\n            })\n        const innerPackets = clone(\n            inner.packets.filter(\n                pkt =>\n                    !info.packets.find(\n                        ipkt =>\n                            ipkt.kind === pkt.kind &&\n                            ipkt.identifier === pkt.identifier\n                    )\n            )\n        )\n        innerPackets.forEach(pkt => (pkt.derived = name))\n        info.packets = [...info.packets, ...innerPackets]\n        if (inner.highCommands) info.highCommands = true\n        info.extends = inner.extends.concat([name])\n    }\n\n    function clone<T>(v: T): T {\n        return JSON.parse(JSON.stringify(v))\n    }\n\n    function error(msg: string) {\n        if (!msg) msg = \"syntax error\"\n        if (errors.some(e => e.line == lineNo && e.message == msg)) return\n        errors.push({ file: filename, line: lineNo, message: msg })\n    }\n\n    function warn(msg: string) {\n        if (info.camelName == \"system\") return // no warnings in _system\n        if (errors.some(e => e.line == lineNo && e.message == msg)) return\n        errors.push({ file: filename, line: lineNo, message: msg })\n    }\n\n    function normalizeName(n: string) {\n        if (!/^\\w+$/.test(n)) error(\"expecting name here\")\n        if (n.length > 31) error(`name '${n}' too long`)\n        return n\n    }\n\n    function normalizeStorageType(\n        tp: string\n    ): [jdspec.StorageType, string, number] {\n        if (info.enums[tp]) return [info.enums[tp].storage, tp, 0]\n        if (!tp) error(\"expecting type here\")\n        const tp2 = tp.replace(/_t$/, \"\").toLowerCase()\n        const m = /^([ui])(\\d+)\\.(\\d+)$/.exec(tp2)\n        if (m) {\n            const a = parseIntCheck(m[2])\n            const b = parseIntCheck(m[3])\n            const len = a + b\n            if (!(len == 8 || len == 16 || len == 32 || len == 64))\n                error(`fixed point ${tp} can't be ${len} bits`)\n            if (a == 0 && m[1] == \"i\")\n                error(\n                    `fixed point ${tp} can't be i0.X; has to be at least i1.X`\n                )\n            return [(m[1] == \"i\" ? -1 : 1) * (len >> 3), tp2, b]\n        }\n\n        switch (tp2) {\n            case \"bool\":\n                return [1, tp2, 0]\n            case \"i8\":\n            case \"u8\":\n            case \"i16\":\n            case \"u16\":\n            case \"i32\":\n            case \"u32\":\n            case \"i64\":\n            case \"u64\": {\n                let sz = parseIntCheck(tp2.replace(/^./, \"\")) >> 3\n                if (tp2[0] == \"i\") sz = -sz\n                return [sz, tp2, 0]\n            }\n            case \"f16\":\n                return [2, tp2, null]\n            case \"f32\":\n                return [4, tp2, null]\n            case \"f64\":\n                return [8, tp2, null]\n            case \"pipe\":\n                return [12, tp2, 0]\n            case \"pipe_port\":\n                return [2, tp2, 0]\n            case \"devid\":\n                return [8, tp2, 0]\n            case \"bytes\":\n            case \"string\":\n            case \"string0\":\n                return [0, tp2, 0]\n            default: {\n                const m = /^u8\\[(\\d+)\\]$/.exec(tp2)\n                if (m) return [parseIntCheck(m[1]), tp2, 0]\n                error(\"unknown type: \" + tp + \" \" + tp2)\n                return [4, tp2, 0]\n            }\n        }\n    }\n\n    function normalizeEncoding(unit: string): jdspec.Encoding {\n        return (unit && encodings[unit.toLowerCase()]) || undefined\n    }\n\n    function normalizeUnit(unit: string): jdspec.Unit {\n        if (unit === undefined || unit === null) return undefined\n\n        if (unitDescription[unit] || secondaryUnitConverters[unit])\n            return unit as jdspec.Unit\n        error(`expecting unit, got '${unit}'`)\n        return undefined\n    }\n\n    function paddingError(iface: jdspec.PacketInfo): string {\n        let byteOffset = 0\n\n        for (const m of iface.fields) {\n            const sz = memberSize(m)\n            if (sz == 0) continue\n            const pad = sz > 4 ? 4 : sz\n            if (!/^u8\\[/.test(m.type) && byteOffset % pad != 0)\n                return `need padding of ${\n                    pad - (byteOffset % pad)\n                } byte(s) before ${m.name}`\n            byteOffset += sz\n        }\n\n        return null\n    }\n}\n\nfunction values<T>(o: jdspec.SMap<T>): T[] {\n    const r: T[] = []\n    for (const k of Object.keys(o)) r.push(o[k])\n    return r\n}\n\nfunction fail(msg: string) {\n    throw new Error(msg)\n}\n\nfunction toUpper(name: string) {\n    return name\n        ?.replace(/([a-z])([A-Z])/g, (x, a, b) => a + \"_\" + b)\n        .toUpperCase()\n}\n\nfunction toLower(name: string) {\n    return name\n        ?.replace(/([a-z])([A-Z])/g, (x, a, b) => a + \"_\" + b)\n        .toLowerCase()\n}\n\nfunction packed(iface: jdspec.PacketInfo) {\n    if (!iface.packed) return \"\"\n    else return \" __attribute__((packed))\"\n}\n\nfunction cStorage(tp: jdspec.StorageType) {\n    if (tp == 0 || [1, 2, 4, 8].indexOf(Math.abs(tp)) < 0) return \"bytes\"\n    if (tp < 0) return `int${-tp * 8}_t`\n    else return `uint${tp * 8}_t`\n}\n\nfunction cSharpStorage(tp: jdspec.StorageType) {\n    if (tp == 0 || [1, 2, 4, 8].indexOf(Math.abs(tp)) < 0) return \"bytes\"\n    switch (tp) {\n        case -1:\n            return \"sbyte\"\n        case 1:\n            return \"byte\"\n        case -2:\n            return \"short\"\n        case 2:\n            return \"ushort\"\n        case -4:\n            return \"int\"\n        case 4:\n            return \"uint\"\n    }\n    return `unknown({${tp})`\n}\n\nfunction canonicalType(tp: jdspec.StorageType): string {\n    if (tp == 0) return \"bytes\"\n    if (tp < 0) return `i${-tp * 8}`\n    else return `u${tp * 8}`\n}\n\nfunction isRegister(k: jdspec.PacketKind) {\n    return k == \"ro\" || k == \"rw\" || k == \"const\"\n}\n\nfunction toHex(n: number): string {\n    if (n === undefined) return \"\"\n    if (n < 0) return \"-\" + toHex(n)\n    return \"0x\" + n.toString(16)\n}\n\nfunction unitPref(f: jdspec.PacketMember) {\n    if (!f.unit) return \"\"\n    else return prettyUnit(f.unit) + \" \"\n}\n\nfunction prettyUnit(u: jdspec.Unit): string {\n    switch (u) {\n        case \"us\":\n            return \"μs\"\n        case \"C\":\n            return \"°C\"\n        case \"/\":\n            return \"ratio\"\n        default:\n            return u\n    }\n}\n\nfunction toPython(info: jdspec.ServiceSpec) {\n    const r = [\n        \"# Autogenerated file for \" + info.name,\n        `# Add missing from ... import const`,\n    ]\n\n    let pref = \"JD_\" + toUpper(info.shortName) + \"_\"\n\n    if (info.shortId[0] == \"_\") pref = \"JD_\"\n\n    if (info.shortId[0] != \"_\")\n        r.push(\n            `_JD_SERVICE_CLASS_${toUpper(info.shortName)} = const(${toHex(\n                info.classIdentifier\n            )})`\n        )\n    for (const cst in info.constants) {\n        const { value, hex } = info.constants[cst]\n        r.push(\n            `_JD_${toUpper(cst)} = const(${\n                hex ? value.toString() : toHex(value)\n            })\\n`\n        )\n    }\n    for (const en of values(info.enums).filter(en => !en.derived)) {\n        const enPref = pref + toUpper(en.name)\n        for (const k of Object.keys(en.members))\n            r.push(`_${enPref}_${toUpper(k)} = const(${toHex(en.members[k])})`)\n    }\n    for (const pkt of info.packets) {\n        if (pkt.derived) continue\n        if (\n            !pkt.secondary &&\n            pkt.kind != \"pipe_command\" &&\n            pkt.kind != \"pipe_report\"\n        ) {\n            let inner = \"CMD\"\n            if (isRegister(pkt.kind)) inner = \"REG\"\n            else if (pkt.kind == \"event\") inner = \"EV\"\n            else if (\n                pkt.kind == \"meta_pipe_command\" ||\n                pkt.kind == \"meta_pipe_report\"\n            )\n                inner = \"PIPE\"\n            let val = toHex(pkt.identifier)\n            if (pkt.identifierName) {\n                // TODO find identifier and inline it\n                val = \"JD_\" + inner + \"_\" + toUpper(pkt.identifierName)\n            }\n            const name = pref + inner + \"_\" + toUpper(pkt.name)\n            if (name != val) r.push(`_${name} = const(${val})`)\n        }\n    }\n    return r.join(\"\\n\")\n}\n\nfunction toH(info: jdspec.ServiceSpec) {\n    let r = \"// Autogenerated C header file for \" + info.name + \"\\n\"\n    const hdDef = `_JACDAC_SPEC_${toUpper(info.camelName)}_H`\n    r += `#ifndef ${hdDef}\\n`\n    r += `#define ${hdDef} 1\\n`\n\n    let pref = \"JD_\" + toUpper(info.shortName) + \"_\"\n\n    if (info.shortId[0] == \"_\") pref = \"JD_\"\n\n    if (info.shortId[0] != \"_\")\n        r += `\\n#define JD_SERVICE_CLASS_${toUpper(info.shortName)}  ${toHex(\n            info.classIdentifier\n        )}\\n`\n\n    for (const cst in info.constants) {\n        const { value, hex } = info.constants[cst]\n        r += `#define ${pref}${toUpper(cst)} ${\n            hex ? toHex(value) : value.toString()\n        }\\n`\n    }\n    for (const en of values(info.enums).filter(en => !en.derived)) {\n        const enPref = pref + toUpper(en.name)\n        r += `\\n// enum ${en.name} (${cStorage(en.storage)})\\n`\n        for (const k of Object.keys(en.members))\n            r +=\n                \"#define \" +\n                enPref +\n                \"_\" +\n                toUpper(k) +\n                \" \" +\n                toHex(en.members[k]) +\n                \"\\n\"\n    }\n    for (const pkt of info.packets) {\n        if (pkt.derived) continue\n\n        const cmt = addComment(pkt)\n        r += wrapComment(cmt.comment)\n\n        if (\n            !pkt.secondary &&\n            pkt.kind != \"pipe_command\" &&\n            pkt.kind != \"pipe_report\"\n        ) {\n            let inner = \"CMD\"\n            if (isRegister(pkt.kind)) inner = \"REG\"\n            else if (pkt.kind == \"event\") inner = \"EV\"\n            else if (\n                pkt.kind == \"meta_pipe_command\" ||\n                pkt.kind == \"meta_pipe_report\"\n            )\n                inner = \"PIPE\"\n            let val = toHex(pkt.identifier)\n            if (pkt.identifierName)\n                val = \"JD_\" + inner + \"_\" + toUpper(pkt.identifierName)\n            const name = pref + inner + \"_\" + toUpper(pkt.name)\n            if (name != val) r += `#define ${name} ${val}\\n`\n        }\n\n        const isMetaPipe =\n            pkt.kind == \"meta_pipe_report\" || pkt.kind == \"meta_pipe_command\"\n\n        if (cmt.needsStruct || isMetaPipe) {\n            let tname =\n                \"jd_\" + toLower(info.camelName) + \"_\" + toLower(pkt.name)\n            if (pkt.kind == \"report\") tname += \"_report\"\n            r += `typedef struct ${tname} {\\n`\n            if (isMetaPipe) {\n                r += `    uint32_t identifier; // ${toHex(pkt.identifier)}\\n`\n            }\n            let unaligned = \"\"\n            for (let i = 0; i < pkt.fields.length; ++i) {\n                const f = pkt.fields[i]\n                let def = \"\"\n                const cst = cStorage(f.storage)\n                const sz = memberSize(f)\n                if (f.type == \"string\" || f.type == \"string0\")\n                    def = `char ${f.name}[${sz}]`\n                else if (cst == \"bytes\") def = `uint8_t ${f.name}[${sz}]`\n                else def = `${cst} ${f.name}`\n                // if it's the last field and it start repeats, treat it as an array\n                if (f.startRepeats && i == pkt.fields.length - 1) def += \"[0]\"\n                def += \";\"\n                if (!f.isSimpleType && f.type != \"devid\")\n                    def += \"  // \" + unitPref(f) + f.type\n                else if (f.unit) def += \" // \" + prettyUnit(f.unit)\n                r += \"    \" + unaligned + def + \"\\n\"\n                if (f.type == \"string0\") unaligned = \"// \"\n            }\n            r += `}${packed(pkt)} ${tname}_t;\\n\\n`\n        }\n    }\n    r += \"\\n#endif\\n\"\n    return r\n}\n\nexport function camelize(name: string) {\n    if (!name) return name\n    return (\n        name[0].toLowerCase() +\n        name.slice(1).replace(/_([a-z0-9])/gi, (_, l) => l.toUpperCase())\n    )\n}\n\nexport function capitalize(name: string) {\n    if (!name) return name\n    return name[0].toUpperCase() + name.slice(1)\n}\n\nfunction upperCamel(name: string) {\n    name = camelize(name)\n    if (!name?.length) return name\n    return name[0].toUpperCase() + name.slice(1)\n}\n\nexport function snakify(name: string) {\n    return name?.replace(/([a-z])([A-Z])/g, (_, a, b) => a + \"_\" + b)\n}\n\nexport function dashify(name: string) {\n    if (!name) return name\n    return snakify(name.replace(/^_+/, \"\"))\n        .replace(/(_|\\s)+/g, \"-\")\n        .toLowerCase()\n}\n\nexport function humanify(name: string) {\n    return name\n        ?.replace(/([a-z])([A-Z])/g, (_, a, b) => a + \" \" + b)\n        .replace(/(-|_)/g, \" \")\n}\n\nfunction addComment(pkt: jdspec.PacketInfo) {\n    let comment = \"\"\n\n    let typeInfo = \"\"\n    let needsStruct = false\n    if (pkt.fields.length == 0) {\n        if (pkt.kind != \"event\") typeInfo = \"No args\"\n    } else if (pkt.fields.length == 1 && !pkt.fields[0].startRepeats) {\n        const f0 = pkt.fields[0]\n        typeInfo = cStorage(f0.storage)\n        if (!f0.isSimpleType) typeInfo = f0.type + \" (\" + typeInfo + \")\"\n        typeInfo = unitPref(f0) + typeInfo\n        if (f0.name != \"_\") typeInfo = f0.name + \" \" + typeInfo\n    } else {\n        needsStruct = true\n    }\n\n    if (pkt.fields.length == 1) {\n        if (isRegister(pkt.kind)) {\n            let info = \"\"\n            if (pkt.kind == \"ro\") info = \"Read-only\"\n            else if (pkt.kind == \"const\") info = \"Constant\"\n            else info = \"Read-write\"\n            if (typeInfo) typeInfo = info + \" \" + typeInfo\n            else typeInfo = info\n        } else if (typeInfo) {\n            typeInfo = \"Argument: \" + typeInfo\n        }\n    }\n\n    if (pkt.kind == \"report\" && pkt.secondary) {\n        comment += \"Report: \" + typeInfo + \"\\n\"\n    } else {\n        if (pkt.description) {\n            let desc = pkt.description.replace(/\\n\\n[^]*/, \"\")\n            if (typeInfo) desc = typeInfo + \". \" + desc\n            comment = desc + \"\\n\" + comment\n        }\n    }\n\n    return {\n        comment,\n        needsStruct,\n    }\n}\n\nfunction wrapComment(comment: string) {\n    return (\n        \"\\n/**\\n * \" +\n        comment.replace(/\\n+$/, \"\").replace(/\\n/g, \"\\n * \") +\n        \"\\n */\\n\"\n    )\n}\n\nfunction wrapSnippet(code: string) {\n    if (!code) return code\n    return `\n\\`\\`\\`\n${code.replace(/^\\n+/, \"\").replace(/\\n+$/, \"\")}\n\\`\\`\\`\n`\n}\n\nexport const TYPESCRIPT_STATIC_NAMESPACE = \"jacdac\"\nfunction packFormatForField(\n    info: jdspec.ServiceSpec,\n    fld: jdspec.PacketMember,\n    isStatic?: boolean,\n    useBooleans?: boolean\n) {\n    const sz = memberSize(fld)\n    const szSuff = sz ? `[${sz}]` : ``\n    let tsType = \"number\"\n    let fmt = \"\"\n    if (/^[fiu]\\d+(\\.\\d+)?$/.test(fld.type) && 1 <= sz && sz <= 8) {\n        fmt = fld.type\n    } else if (/^u8\\[\\d*\\]$/.exec(fld.type)) {\n        fmt = \"b\" + szSuff\n    } else if (info.enums[fld.type]) {\n        fmt = canonicalType(info.enums[fld.type].storage)\n        tsType = upperCamel(info.camelName) + upperCamel(fld.type)\n        if (isStatic) tsType = TYPESCRIPT_STATIC_NAMESPACE + \".\" + tsType\n    } else {\n        switch (fld.type) {\n            case \"string\":\n                fmt = \"s\" + szSuff\n                tsType = \"string\"\n                break\n            case \"bytes\":\n                fmt = \"b\" + szSuff\n                break\n            case \"string0\":\n                fmt = \"z\"\n                tsType = \"string\"\n                break\n            case \"devid\":\n                fmt = \"b[8]\"\n                break\n            case \"pipe_port\":\n                fmt = \"u16\"\n                break\n            case \"pipe\":\n                fmt = \"b[12]\"\n                break\n            case \"bool\":\n                // TODO native bool support\n                fmt = \"u8\"\n                if (useBooleans) tsType = \"boolean\"\n                break\n            default:\n                return null\n        }\n    }\n\n    if (tsType == \"number\" && fmt && fmt[0] == \"b\") tsType = \"Buffer\"\n    return { fmt, tsType }\n}\n\n/**\n * Generates the format to pack/unpack a data payload for this packet\n * @param pkt\n * TODO fix this\n */\nexport function packFormat(\n    sinfo: jdspec.ServiceSpec,\n    pkt: jdspec.PacketInfo,\n    useBooleans?: boolean\n): string {\n    if (pkt.packed || !pkt.fields?.length) return undefined\n\n    const fmt: string[] = []\n    for (const fld of pkt.fields) {\n        if (fld.startRepeats) fmt.push(\"r:\")\n        const ff = packFormatForField(sinfo, fld, false, useBooleans)\n        if (!ff) return undefined\n        fmt.push(ff.fmt)\n    }\n\n    return fmt.join(\" \")\n}\n\nexport function packInfo(\n    info: jdspec.ServiceSpec,\n    pkt: jdspec.PacketInfo,\n    options?: {\n        isStatic?: boolean\n        useBooleans?: boolean\n        useJDOM?: boolean\n    }\n) {\n    const {\n        isStatic = false,\n        useBooleans = false,\n        useJDOM = false,\n    } = options || {}\n    const { kind } = pkt\n    const vars: string[] = []\n    const vartp: string[] = []\n    let fmt = \"\"\n    let repeats: string[]\n    let reptp: string[]\n\n    for (let i = 0; i < pkt.fields.length; ++i) {\n        const fld = pkt.fields[i]\n        let isArray = \"\"\n        if (fld.startRepeats) {\n            if (i == pkt.fields.length - 1) {\n                isArray = \"[]\"\n            } else {\n                fmt += \"r: \"\n                repeats = []\n                reptp = []\n                vars.push(\"rest\")\n            }\n        }\n        const varname = camelize(fld.name == \"_\" ? pkt.name : fld.name)\n        const f0 = packFormatForField(info, fld, isStatic, useBooleans)\n        if (!f0 || /(reserved|padding)/.test(fld.name)) {\n            if (!f0)\n                console.log(\n                    `${pkt.name}/${fld.name} - can't get format for '${fld.type}'`\n                )\n            fmt += `x[${memberSize(fld)}] `\n        } else {\n            fmt += f0.fmt + isArray + \" \"\n            let tp = f0.tsType\n            if (tp == \"Buffer\" && !isStatic) tp = \"Uint8Array\"\n            tp += isArray\n            if (repeats) {\n                repeats.push(varname)\n                reptp.push(tp)\n            } else {\n                vars.push(varname)\n                vartp.push(tp)\n            }\n        }\n    }\n\n    fmt = fmt.replace(/ *$/, \"\")\n\n    if (reptp) vartp.push(\"([\" + reptp.join(\", \") + \"])[]\")\n\n    const pktName = camelize(pkt.name)\n    let buffers = \"\"\n    if (useJDOM) {\n        if (kind === \"command\") {\n            for (let i = 0; i < vars.length; ++i)\n                buffers += `const ${vars[i]}: ${vartp[i]} = ...\\n`\n            buffers += `await service.sendCmdPackedAsync(${capitalize(\n                info.camelName\n            )}Reg.${capitalize(pktName)}, [${vars.join(\", \")}])\\n`\n        } else if (isRegister(kind)) {\n            buffers +=\n                \"// get (register to REPORT_UPDATE event to enable background refresh)\\n\"\n            buffers += `const ${pktName}Reg = service.register(${capitalize(\n                info.camelName\n            )}Reg.${capitalize(pktName)})\\n`\n            buffers += `const [${vars.join(\", \")}] : [${vartp.join(\n                \", \"\n            )}] = ${pktName}Reg.unpackedValue\\n`\n            if (kind === \"rw\") {\n                buffers += \"// set\\n\"\n                buffers += `await ${pktName}Reg.sendSetPackedAsync([${vars.join(\n                    \", \"\n                )}])\\n`\n            }\n        }\n    } else {\n        buffers += `const [${vars.join(\", \")}] = jdunpack<[${vartp.join(\n            \", \"\n        )}]>(buf, \"${fmt}\")\\n`\n    }\n    if (repeats) buffers += `const [${repeats.join(\", \")}] = rest[0]\\n`\n\n    buffers = buffers.replace(/\\n*$/, \"\")\n\n    return {\n        buffers,\n        names: vars,\n        types: vartp,\n    }\n}\n\nfunction memberSize(fld: jdspec.PacketMember) {\n    return Math.abs(fld.storage)\n}\n\nfunction toTypescript(info: jdspec.ServiceSpec, language: \"ts\" | \"sts\" | \"c#\") {\n    const sts = language === \"sts\"\n    const csharp = language === \"c#\"\n    const useNamespace = sts || csharp\n\n    const indent = useNamespace ? \"    \" : \"\"\n    const indent2 = indent + \"    \"\n    const numberkw = csharp ? \"uint \" : \"\"\n    const hexkw = csharp ? \"byte[]\" : \"\"\n    const enumkw = csharp\n        ? indent + \"public enum\"\n        : sts\n        ? indent + \"export const enum\"\n        : \"export enum\"\n    const exportkw = csharp ? \"public\" : \"export\"\n    const cskw = csharp ? \";\" : \"\"\n    let r = useNamespace\n        ? `namespace ${\n              csharp\n                  ? capitalize(TYPESCRIPT_STATIC_NAMESPACE)\n                  : TYPESCRIPT_STATIC_NAMESPACE\n          } {\\n`\n        : \"\"\n\n    r += indent + \"// Service: \" + info.name + \"\\n\"\n    if (csharp) {\n        r += `${indent}public static class ${capitalize(\n            info.camelName\n        )}Constants\\n${indent}{\\n`\n    }\n    if (info.shortId[0] != \"_\") {\n        const name = csharp\n            ? \"ServiceClass\"\n            : `SRV_${snakify(info.camelName).toLocaleUpperCase()}`\n        r +=\n            indent +\n            (csharp ? indent : \"\") +\n            `${exportkw} const ${numberkw}${name} = ${toHex(\n                info.classIdentifier\n            )}${cskw}\\n`\n    }\n    const pref = upperCamel(info.camelName)\n    for (const cst in info.constants) {\n        const { value, hex } = info.constants[cst]\n        r +=\n            indent +\n            (csharp ? indent : \"\") +\n            `${exportkw} const ${hex ? hexkw : numberkw}${\n                csharp ? capitalize(camelize(cst)) : toUpper(cst)\n            } = ${hex ? value.toString() : toHex(value)}${cskw}\\n`\n    }\n\n    if (csharp) {\n        r += indent + `}\\n`\n    }\n\n    for (const en of values(info.enums)) {\n        const enPref = pref + upperCamel(en.name)\n        r += `\\n${enumkw} ${enPref}${\n            csharp ? `: ${cSharpStorage(en.storage)}` : \"\"\n        } { // ${cStorage(en.storage)}\\n`\n        for (const k of Object.keys(en.members)) {\n            if (sts) r += indent2 + `//% block=\"${humanify(k).toLowerCase()}\"\\n`\n            r += indent2 + k + \" = \" + toHex(en.members[k]) + \",\\n\"\n        }\n        r += indent + \"}\\n\\n\"\n    }\n    const tsEnums: jdspec.SMap<string> = {}\n\n    for (const pkt of info.packets) {\n        if (pkt.derived) continue\n\n        const cmt = addComment(pkt)\n        const pack = pkt.fields.length\n            ? packInfo(info, pkt, {\n                  isStatic: sts,\n                  useBooleans: false,\n              }).buffers\n            : \"\"\n\n        let inner = \"Cmd\"\n        if (isRegister(pkt.kind)) inner = \"Reg\"\n        else if (pkt.kind == \"event\") inner = \"Event\"\n        else if (\n            pkt.kind == \"meta_pipe_command\" ||\n            pkt.kind == \"meta_pipe_report\"\n        )\n            inner = \"PipeCmd\"\n        else if (pkt.kind == \"pipe_command\" || pkt.kind == \"pipe_report\")\n            inner = \"info\"\n\n        let text = \"\"\n        let meta = \"\"\n        if (pkt.secondary || inner == \"info\") {\n            if (pack)\n                text = wrapComment(\n                    `${pkt.kind} ${upperCamel(pkt.name)}${\n                        pkt.client ? \"\" : wrapSnippet(pack)\n                    }`\n                )\n        } else {\n            const val = toHex(pkt.identifier)\n            if (sts && pkt.kind === \"event\") {\n                meta = `//% block=\"${snakify(pkt.name).replace(/_/g, \" \")}\"\\n`\n            }\n            text = `${\n                wrapComment(\n                    cmt.comment + (pkt.client ? \"\" : wrapSnippet(pack))\n                ) + meta\n            }${upperCamel(pkt.name)} = ${val},\\n`\n        }\n\n        if (text) tsEnums[inner] = (tsEnums[inner] || \"\") + text\n\n        // don't line const strings in makecode,\n        // they don't get dropped efficiently\n    }\n\n    for (const k of Object.keys(tsEnums)) {\n        if (k == \"info\") r += tsEnums[k].replace(/^/gm, indent) + \"\\n\\n\"\n        else {\n            const inner = tsEnums[k]\n                .replace(/^\\n+/, \"\")\n                .replace(/\\n$/, \"\")\n                .replace(/\\n/g, \"\\n    \" + indent)\n            r += `${enumkw} ${pref}${k} {\\n    ${indent}${inner}\\n${indent}}\\n\\n`\n        }\n    }\n\n    if (useNamespace) r += \"}\\n\"\n\n    return r.replace(/ *$/gm, \"\")\n}\n\nexport function generateDeviceSpecificationId(dev: jdspec.DeviceSpec) {\n    return (\n        escapeDeviceIdentifier(dev.company) +\n        \"-\" +\n        escapeDeviceNameIdentifier(dev.name) +\n        (dev.designIdentifier || \"\") +\n        (dev.version\n            ? `v${dev.version\n                  .toLowerCase()\n                  .replace(/^v/, \"\")\n                  .replace(/\\./g, \"\")}`\n            : \"\"\n        ).toLowerCase()\n    )\n}\n\nexport function normalizeDeviceSpecification(dev: jdspec.DeviceSpec) {\n    // reorder fields\n    const clone: jdspec.DeviceSpec = {\n        id: generateDeviceSpecificationId(dev),\n        name: dev.name,\n        company: dev.company,\n        description: dev.description,\n        repo: dev.repo,\n        link: dev.link,\n        services: dev.services,\n        productIdentifiers: dev.productIdentifiers,\n        transport: dev.transport?.toLowerCase(),\n        tags: dev.tags,\n        firmwares: dev.firmwares,\n        version: dev.version ? dev.version.replace(/^v/, \"\") : undefined,\n        designIdentifier: dev.designIdentifier,\n    }\n    if (dev.status !== undefined) clone.status = dev.status\n    return clone\n}\n\nexport function escapeDeviceIdentifier(text: string) {\n    if (!text) text = \"\"\n    const escaped = text\n        .trim()\n        .toLowerCase()\n        .replace(/([^a-z0-9_-])+/gi, \"-\")\n        .replace(/\\./g, \"\") // routing does not like dots\n        .replace(/^-+/, \"\")\n        .replace(/-+$/, \"\")\n    const id = snakify(escaped)\n    return id\n}\n\nexport function escapeDeviceNameIdentifier(text: string) {\n    return escapeDeviceIdentifier(text).replace(/-/g, \"\")\n}\n\nexport function converters(): jdspec.SMap<(s: jdspec.ServiceSpec) => string> {\n    return {\n        json: (j: jdspec.ServiceSpec) => JSON.stringify(j, null, 2),\n        c: toH,\n        ts: j => toTypescript(j, \"ts\"),\n        sts: j => toTypescript(j, \"sts\"),\n        cs: j => toTypescript(j, \"c#\"),\n        py: j => toPython(j),\n        /*\n        \"cpp\": toHPP,\n        */\n    }\n}\n\nexport function isNumericType(field: jdspec.PacketMember) {\n    const tp = field.type\n    return (\n        !field.startRepeats &&\n        /^[uif]\\d+(\\.\\d+)?$/.test(tp) &&\n        tp != \"pipe_port\" &&\n        tp != \"bool\"\n    )\n}\n","/**\n * Various flags to control the runtime environment\n * @category Runtime\n */\nexport class Flags {\n    /**\n     * Enables additional logging and diagnostics\n     */\n    static diagnostics = false\n    /**\n     * Trace who and what generates packets\n     */\n    static trace = false\n    /**\n     * Enables/disabled WebUSB\n     */\n    static webUSB = true\n    /**\n     * Enables/disabled WebSerial\n     */\n    static webSerial = true\n\n    /**\n     * Enables/disables WebBLE\n     */\n    static webBluetooth = false\n}\nexport default Flags\n","import Flags from \"./flags\"\n\nexport function throwError(msg: string, cancel?: boolean) {\n    const e = new Error(msg)\n    if (cancel)\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (e as any).__cancel = true\n    throw e\n}\n\nexport function isCancelError(e: Error) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return !!(e as any)?.__cancel\n}\n\nexport function setAckError(e: Error) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (e) (e as any).__ack = true\n}\n\nexport function isAckError(e: Error) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return !!(e as any)?.__ack\n}\n\nexport function delay<T>(millis: number, value?: T): Promise<T | undefined> {\n    return new Promise(resolve => setTimeout(() => resolve(value), millis))\n}\n\nexport function memcpy(\n    trg: Uint8Array,\n    trgOff: number,\n    src: ArrayLike<number>,\n    srcOff?: number,\n    len?: number\n) {\n    if (srcOff === void 0) srcOff = 0\n    if (len === void 0) len = src.length - srcOff\n    for (let i = 0; i < len; ++i) trg[trgOff + i] = src[srcOff + i]\n}\n\nexport function strcmp(a: string, b: string) {\n    if (a == b) return 0\n    if (a < b) return -1\n    else return 1\n}\n\nexport function bufferEq(a: Uint8Array, b: ArrayLike<number>, offset = 0) {\n    if (a == b) return true\n    if (!a || !b || a.length != b.length) return false\n    for (let i = offset; i < a.length; ++i) {\n        if (a[i] != b[i]) return false\n    }\n    return true\n}\n\nexport function hash(buf: Uint8Array, bits: number) {\n    bits |= 0\n    if (bits < 1) return 0\n    const h = fnv1(buf)\n    if (bits >= 32) return h >>> 0\n    else return ((h ^ (h >>> bits)) & ((1 << bits) - 1)) >>> 0\n}\n\nexport function idiv(a: number, b: number) {\n    return ((a | 0) / (b | 0)) | 0\n}\nexport function fnv1(data: Uint8Array) {\n    let h = 0x811c9dc5\n    for (let i = 0; i < data.length; ++i) {\n        h = Math.imul(h, 0x1000193) ^ data[i]\n    }\n    return h\n}\n\nexport function crc(p: Uint8Array) {\n    let crc = 0xffff\n    for (let i = 0; i < p.length; ++i) {\n        const data = p[i]\n        let x = (crc >> 8) ^ data\n        x ^= x >> 4\n        crc = (crc << 8) ^ (x << 12) ^ (x << 5) ^ x\n        crc &= 0xffff\n    }\n    return crc\n}\n\nexport function ALIGN(n: number) {\n    return (n + 3) & ~3\n}\n\n// this will take lower 8 bits from each character\nexport function stringToUint8Array(input: string) {\n    const len = input.length\n    const res = new Uint8Array(len)\n    for (let i = 0; i < len; ++i) res[i] = input.charCodeAt(i) & 0xff\n    return res\n}\n\nexport function uint8ArrayToString(input: ArrayLike<number>) {\n    const len = input.length\n    let res = \"\"\n    for (let i = 0; i < len; ++i) res += String.fromCharCode(input[i])\n    return res\n}\n\nexport function fromUTF8(binstr: string) {\n    if (!binstr) return \"\"\n\n    // escape function is deprecated\n    let escaped = \"\"\n    for (let i = 0; i < binstr.length; ++i) {\n        const k = binstr.charCodeAt(i) & 0xff\n        if (k == 37 || k > 0x7f) {\n            escaped += \"%\" + k.toString(16)\n        } else {\n            escaped += binstr.charAt(i)\n        }\n    }\n\n    // decodeURIComponent does the actual UTF8 decoding\n    return decodeURIComponent(escaped)\n}\n\nexport function toUTF8(str: string, cesu8?: boolean) {\n    let res = \"\"\n    if (!str) return res\n    for (let i = 0; i < str.length; ++i) {\n        let code = str.charCodeAt(i)\n        if (code <= 0x7f) res += str.charAt(i)\n        else if (code <= 0x7ff) {\n            res += String.fromCharCode(0xc0 | (code >> 6), 0x80 | (code & 0x3f))\n        } else {\n            if (!cesu8 && 0xd800 <= code && code <= 0xdbff) {\n                const next = str.charCodeAt(++i)\n                if (!isNaN(next))\n                    code = 0x10000 + ((code - 0xd800) << 10) + (next - 0xdc00)\n            }\n\n            if (code <= 0xffff)\n                res += String.fromCharCode(\n                    0xe0 | (code >> 12),\n                    0x80 | ((code >> 6) & 0x3f),\n                    0x80 | (code & 0x3f)\n                )\n            else\n                res += String.fromCharCode(\n                    0xf0 | (code >> 18),\n                    0x80 | ((code >> 12) & 0x3f),\n                    0x80 | ((code >> 6) & 0x3f),\n                    0x80 | (code & 0x3f)\n                )\n        }\n    }\n    return res\n}\n\nexport interface SMap<T> {\n    [index: string]: T\n}\n\n/** @internal */\nexport class PromiseBuffer<T> {\n    private waiting: ((v: T | Error) => void)[] = []\n    private available: (T | Error)[] = []\n\n    drain() {\n        for (const f of this.waiting) {\n            f(new Error(\"Promise Buffer Reset\"))\n        }\n        this.waiting = []\n        this.available = []\n    }\n\n    pushError(v: Error) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.push(v as any)\n    }\n\n    push(v: T) {\n        const f = this.waiting.shift()\n        if (f) f(v)\n        else this.available.push(v)\n    }\n\n    shiftAsync(timeout = 0) {\n        if (this.available.length > 0) {\n            const v = this.available.shift()\n            if (v instanceof Error) return Promise.reject<T>(v)\n            else return Promise.resolve<T | undefined>(v)\n        } else\n            return new Promise<T>((resolve, reject) => {\n                const f = (v: T | Error) => {\n                    if (v instanceof Error) reject(v)\n                    else resolve(v)\n                }\n                this.waiting.push(f)\n                if (timeout > 0) {\n                    delay(timeout).then(() => {\n                        const idx = this.waiting.indexOf(f)\n                        if (idx >= 0) {\n                            this.waiting.splice(idx, 1)\n                            reject(new Error(\"Timeout\"))\n                        }\n                    })\n                }\n            })\n    }\n}\n\n/** @internal */\nexport class PromiseQueue {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private readonly promises: SMap<(() => Promise<any>)[]> = {}\n\n    enqueue<T>(id: string, f: () => Promise<T>): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            let arr = this.promises[id]\n            if (!arr) {\n                arr = this.promises[id] = []\n            }\n            const cleanup = () => {\n                arr.shift()\n                if (arr.length == 0) delete this.promises[id]\n                else arr[0]()\n            }\n            arr.push(() =>\n                f().then(\n                    v => {\n                        cleanup()\n                        resolve(v)\n                    },\n                    err => {\n                        cleanup()\n                        reject(err)\n                    }\n                )\n            )\n            if (arr.length == 1) arr[0]()\n        })\n    }\n}\n\nexport function rgbToHtmlColor(rgb: number) {\n    return `#${(\"000000\" + rgb.toString(16)).slice(-6)}`\n}\n\nexport function toFullHex(n: number[]) {\n    return (\n        \"0x\" + n.map(id => (\"000000000\" + id.toString(16)).slice(-8)).join(\"\")\n    )\n}\n\nexport function toHex(bytes: ArrayLike<number>) {\n    if (!bytes) return undefined\n    let r = \"\"\n    for (let i = 0; i < bytes.length; ++i)\n        r += (\"0\" + bytes[i].toString(16)).slice(-2)\n    return r\n}\n\nexport function fromHex(hex: string) {\n    const r = new Uint8Array(hex.length >> 1)\n    for (let i = 0; i < hex.length; i += 2)\n        r[i >> 1] = parseInt(hex.slice(i, i + 2), 16)\n    return r\n}\n\nexport function isSet(v: unknown) {\n    return v !== null && v !== undefined\n}\n\nexport function toArray<T>(a: ArrayLike<T>): T[] {\n    const r: T[] = new Array(a.length)\n    for (let i = 0; i < a.length; ++i) r[i] = a[i]\n    return r\n}\n\nexport interface MutableArrayLike<T> {\n    readonly length: number\n    [n: number]: T\n}\n\nexport function hexNum(n: number): string {\n    if (isNaN(n)) return undefined\n    if (n < 0) return \"-\" + hexNum(-n)\n    return \"0x\" + n.toString(16)\n}\n\nexport function write32(buf: MutableArrayLike<number>, pos: number, v: number) {\n    buf[pos + 0] = (v >> 0) & 0xff\n    buf[pos + 1] = (v >> 8) & 0xff\n    buf[pos + 2] = (v >> 16) & 0xff\n    buf[pos + 3] = (v >> 24) & 0xff\n}\n\nexport function write16(buf: MutableArrayLike<number>, pos: number, v: number) {\n    buf[pos + 0] = (v >> 0) & 0xff\n    buf[pos + 1] = (v >> 8) & 0xff\n}\n\nexport function read32(buf: ArrayLike<number>, pos: number) {\n    return (\n        (buf[pos] |\n            (buf[pos + 1] << 8) |\n            (buf[pos + 2] << 16) |\n            (buf[pos + 3] << 24)) >>>\n        0\n    )\n}\n\nexport function read16(buf: ArrayLike<number>, pos: number) {\n    return buf[pos] | (buf[pos + 1] << 8)\n}\n\nexport function encodeU32LE(words: number[]) {\n    const r = new Uint8Array(words.length * 4)\n    for (let i = 0; i < words.length; ++i) write32(r, i * 4, words[i])\n    return r\n}\n\nexport function decodeU32LE(buf: Uint8Array) {\n    const res: number[] = []\n    for (let i = 0; i < buf.length; i += 4) res.push(read32(buf, i))\n    return res\n}\n\nexport function isBufferEmpty(data: Uint8Array): boolean {\n    if (!data) return true\n    const n = data.length\n    for (let i = 0; i < n; ++i) {\n        if (data[i]) return false\n    }\n    return true\n}\n\nexport function bufferToString(buf: Uint8Array) {\n    return fromUTF8(uint8ArrayToString(buf))\n}\n\nexport function stringToBuffer(str: string) {\n    return stringToUint8Array(toUTF8(str))\n}\n\nexport function bufferConcat(a: Uint8Array, b: Uint8Array) {\n    const r = new Uint8Array(a.length + b.length)\n    r.set(a, 0)\n    r.set(b, a.length)\n    return r\n}\n\nexport function bufferConcatMany(bufs: Uint8Array[]) {\n    let sz = 0\n    for (const buf of bufs) sz += buf.length\n    const r = new Uint8Array(sz)\n    sz = 0\n    for (const buf of bufs) {\n        r.set(buf, sz)\n        sz += buf.length\n    }\n    return r\n}\n\nexport function arrayConcatMany<T>(arrs: T[][]): T[] {\n    if (!arrs) return undefined\n\n    // weed out empty array\n    arrs = arrs.filter(a => !!a?.length)\n\n    let sz = 0\n    for (const buf of arrs) sz += buf.length\n    const r: T[] = new Array(sz)\n    sz = 0\n    for (const arr of arrs) {\n        for (let i = 0; i < arr.length; ++i) r[i + sz] = arr[i]\n        sz += arr.length\n    }\n    return r\n}\n\nexport function jsonCopyFrom<T>(trg: T, src: T) {\n    const v = clone(src)\n    for (const k of Object.keys(src)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-extra-semi\n        ;(trg as any)[k] = (v as any)[k]\n    }\n}\nexport function assert(\n    cond: boolean,\n    msg = \"Assertion failed\",\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    debugData?: any\n) {\n    if (!cond) {\n        if (debugData) console.debug(`assertion filed ${msg}`, debugData)\n        if (Flags.diagnostics)\n            // eslint-disable-next-line no-debugger\n            debugger\n        throw new Error(msg)\n    }\n}\n\nexport function flatClone<T extends unknown>(obj: T | null): T {\n    if (obj == null) return null\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const r: any = {}\n    Object.keys(obj).forEach(k => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        r[k] = (obj as any)[k]\n    })\n    return r\n}\n\nexport function clone<T>(v: T): T {\n    if (v == null) return null\n    return JSON.parse(JSON.stringify(v))\n}\n\nexport function throttle(handler: () => void, delay: number): () => void {\n    let enableCall = true\n    return function () {\n        if (!enableCall) return\n        enableCall = false\n        handler()\n        setTimeout(() => (enableCall = true), delay)\n    }\n}\n\nexport interface Signal {\n    signalled: Promise<boolean>\n    signal: () => void\n}\nexport function signal(): Signal {\n    let resolve: (v: boolean) => void\n    return {\n        signalled: new Promise(r => {\n            resolve = r\n        }),\n        signal: () => resolve(true),\n    }\n}\n\nexport function readBlobToUint8Array(blob: Blob): Promise<Uint8Array> {\n    if (blob.arrayBuffer) {\n        return blob.arrayBuffer().then(data => new Uint8Array(data))\n    }\n\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader()\n        fileReader.onload = () => {\n            resolve(new Uint8Array(fileReader.result as ArrayBuffer))\n        }\n        fileReader.onerror = e => {\n            console.log(e)\n            reject(e)\n        }\n        try {\n            fileReader.readAsArrayBuffer(blob)\n        } catch (e) {\n            reject(e)\n        }\n    })\n}\n\nexport function readBlobToText(blob: Blob): Promise<string> {\n    if (blob.text) {\n        return blob.text()\n    }\n\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader()\n        fileReader.onload = () => resolve(fileReader.result as string)\n        fileReader.onerror = e => {\n            console.log(e)\n            reject(e)\n        }\n        try {\n            fileReader.readAsText(blob)\n        } catch (e) {\n            reject(e)\n        }\n    })\n}\n\nexport function debounce(handler: () => void, delay: number): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let timeOutId: any\n    return function () {\n        if (timeOutId) {\n            clearTimeout(timeOutId)\n        }\n        timeOutId = setTimeout(async () => {\n            handler()\n        }, delay)\n    }\n}\n\nexport function debounceAsync(\n    handler: () => Promise<void>,\n    delay: number\n): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let timeOutId: any\n    return function () {\n        if (timeOutId) {\n            clearTimeout(timeOutId)\n        }\n        timeOutId = setTimeout(async () => {\n            await handler()\n        }, delay)\n    }\n}\n\nexport function JSONTryParse(src: string) {\n    if (src === undefined || src === null) return src\n\n    try {\n        return JSON.parse(src)\n    } catch (e) {\n        return undefined\n    }\n}\n\nexport function roundWithPrecision(x: number, digits: number): number {\n    digits = digits | 0\n    // invalid digits input\n    if (digits <= 0) return Math.round(x)\n    if (x == 0) return 0\n    let r = 0\n    while (r == 0 && digits < 21) {\n        const d = Math.pow(10, digits++)\n        r = Math.round(x * d + Number.EPSILON) / d\n    }\n    return r\n}\n\nexport function randomRange(min: number, max: number) {\n    return Math.round(Math.random() * (max - min) + min)\n}\n\nexport function unique(values: string[]): string[] {\n    return Array.from(new Set(values).keys())\n}\n\nexport function uniqueMap<T, U>(\n    values: T[],\n    id: (value: T) => string,\n    converter: (value: T) => U\n) {\n    const r: SMap<T> = {}\n    for (let i = 0; i < values.length; ++i) {\n        const value = values[i]\n        const idv = id(value)\n        if (!r[idv]) {\n            r[idv] = value\n        }\n    }\n    return Object.values(r).map(converter)\n}\n\nexport function toMap<T, V>(\n    a: T[],\n    keyConverter: (value: T, index: number) => string,\n    valueConverter: (value: T, index: number) => V\n): SMap<V> {\n    const m: SMap<V> = {}\n    if (a)\n        for (let i = 0; i < a.length; ++i) {\n            const key = keyConverter(a[i], i)\n            if (key === undefined || key === null) continue\n            m[key] = valueConverter(a[i], i)\n        }\n    return m\n}\n\nexport function ellipseJoin(\n    values: string[],\n    maxChars: number,\n    ellipse = \"...\"\n) {\n    let r = \"\"\n    for (let i = 0; i < values.length && r.length < maxChars; ++i) {\n        if (r) r += \", \"\n        r += values[i]\n    }\n    if (r.length > maxChars) return r.slice(0, maxChars) + ellipse\n    else return r\n}\n\nexport function arrayShuffle<T>(a: T[]): T[] {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1))\n        ;[a[i], a[j]] = [a[j], a[i]]\n    }\n    return a\n}\n\nexport function uniqueName(\n    names: string[],\n    name: string,\n    separator = \"\"\n): string {\n    if (names.indexOf(name) < 0) return name\n    // allocate names\n    let count = 2\n    while (names.indexOf(`${name}${separator}${count}`) > -1) count++\n    return `${name}${separator}${count}`\n}\n\nexport function groupBy<T>(list: T[], key: (value: T) => string): SMap<T[]> {\n    if (!list) return {}\n\n    const r: SMap<T[]> = {}\n    list.forEach(item => {\n        const k = key(item)\n        const a = r[k] || (r[k] = [])\n        a.push(item)\n    })\n    return r\n}\n\nexport function pick(...values: number[]) {\n    return values?.find(x => x !== undefined)\n}\n\n/**\n * Applies filters and returns array of [yays, nays]\n * @param values\n * @param condition\n */\nexport function splitFilter<T>(\n    values: ArrayLike<T>,\n    condition: (t: T) => boolean\n): [T[], T[]] {\n    const yays: T[] = []\n    const nays: T[] = []\n    const n = values.length\n    for (let i = 0; i < n; ++i) {\n        const v = values[i]\n        if (condition(v)) yays.push(v)\n        else nays.push(v)\n    }\n    return [yays, nays]\n}\n\nexport function range(end: number): number[] {\n    return Array(end)\n        .fill(0)\n        .map((_, i) => i)\n}\n\nexport function toggleBit(data: Uint8Array, bitindex: number) {\n    // find bit to flip\n    let byte = data[bitindex >> 3]\n    const bit = bitindex % 8\n    const on = 1 === ((byte >> bit) & 1)\n    // flip bit\n    if (on) {\n        byte &= ~(1 << bit)\n    } else {\n        byte |= 1 << bit\n    }\n    // save\n    data[bitindex >> 3] = byte\n}\n","import { read16, read32 } from \"./utils\"\n\n/** @internal */\nexport enum NumberFormat {\n    Int8LE = 1,\n    UInt8LE = 2,\n    Int16LE = 3,\n    UInt16LE = 4,\n    Int32LE = 5,\n    Int8BE = 6,\n    UInt8BE = 7,\n    Int16BE = 8,\n    UInt16BE = 9,\n    Int32BE = 10,\n    UInt32LE = 11,\n    UInt32BE = 12,\n    Float32LE = 13,\n    Float64LE = 14,\n    Float32BE = 15,\n    Float64BE = 16,\n    UInt64LE = 17,\n    UInt64BE = 18,\n    Int64LE = 19,\n    Int64BE = 20,\n}\n\nfunction fmtInfoCore(fmt: NumberFormat) {\n    switch (fmt) {\n        case NumberFormat.Int8LE:\n            return -1\n        case NumberFormat.UInt8LE:\n            return 1\n        case NumberFormat.Int16LE:\n            return -2\n        case NumberFormat.UInt16LE:\n            return 2\n        case NumberFormat.Int32LE:\n            return -4\n        case NumberFormat.UInt32LE:\n            return 4\n        case NumberFormat.Int64LE:\n            return -8\n        case NumberFormat.UInt64LE:\n            return 8\n        case NumberFormat.Int8BE:\n            return -10\n        case NumberFormat.UInt8BE:\n            return 10\n        case NumberFormat.Int16BE:\n            return -20\n        case NumberFormat.UInt16BE:\n            return 20\n        case NumberFormat.Int32BE:\n            return -40\n        case NumberFormat.UInt32BE:\n            return 40\n        case NumberFormat.Int64BE:\n            return -80\n        case NumberFormat.UInt64BE:\n            return 80\n\n        case NumberFormat.Float32LE:\n            return 4\n        case NumberFormat.Float32BE:\n            return 40\n        case NumberFormat.Float64LE:\n            return 8\n        case NumberFormat.Float64BE:\n            return 80\n        default:\n            throw new Error(\"unknown format\")\n    }\n}\n\nfunction fmtInfo(fmt: NumberFormat) {\n    let size = fmtInfoCore(fmt)\n    let signed = false\n    if (size < 0) {\n        signed = true\n        size = -size\n    }\n    let swap = false\n    if (size >= 10) {\n        swap = true\n        size /= 10\n    }\n    let isFloat = false\n    switch (fmt) {\n        case NumberFormat.Float32LE:\n        case NumberFormat.Float32BE:\n        case NumberFormat.Float64LE:\n        case NumberFormat.Float64BE:\n            isFloat = true\n            break\n    }\n    return { size, signed, swap, isFloat }\n}\n\n/**\n * Get the size in bytes of specified number format.\n */\nexport function sizeOfNumberFormat(format: NumberFormat) {\n    switch (format) {\n        case NumberFormat.Int8LE:\n        case NumberFormat.UInt8LE:\n        case NumberFormat.Int8BE:\n        case NumberFormat.UInt8BE:\n            return 1\n        case NumberFormat.Int16LE:\n        case NumberFormat.UInt16LE:\n        case NumberFormat.Int16BE:\n        case NumberFormat.UInt16BE:\n            return 2\n        case NumberFormat.Int32LE:\n        case NumberFormat.Int32BE:\n        case NumberFormat.UInt32BE:\n        case NumberFormat.UInt32LE:\n        case NumberFormat.Float32BE:\n        case NumberFormat.Float32LE:\n            return 4\n        case NumberFormat.UInt64BE:\n        case NumberFormat.Int64BE:\n        case NumberFormat.UInt64LE:\n        case NumberFormat.Int64LE:\n        case NumberFormat.Float64BE:\n        case NumberFormat.Float64LE:\n            return 8\n    }\n    return 0\n}\n\nexport function getNumber(\n    buf: ArrayLike<number>,\n    fmt: NumberFormat,\n    offset: number\n) {\n    switch (fmt) {\n        case NumberFormat.UInt8BE:\n        case NumberFormat.UInt8LE:\n            return buf[offset]\n        case NumberFormat.Int8BE:\n        case NumberFormat.Int8LE:\n            return (buf[offset] << 24) >> 24\n        case NumberFormat.UInt16LE:\n            return read16(buf, offset)\n        case NumberFormat.Int16LE:\n            return (read16(buf, offset) << 16) >> 16\n        case NumberFormat.UInt32LE:\n            return read32(buf, offset)\n        case NumberFormat.Int32LE:\n            return read32(buf, offset) >> 0\n        case NumberFormat.UInt64LE:\n            return read32(buf, offset) + read32(buf, offset + 4) * 0x100000000\n        case NumberFormat.Int64LE:\n            return (\n                read32(buf, offset) +\n                (read32(buf, offset + 4) >> 0) * 0x100000000\n            )\n        default: {\n            const inf = fmtInfo(fmt)\n            if (inf.isFloat) {\n                const arr = new Uint8Array(inf.size)\n                for (let i = 0; i < inf.size; ++i) {\n                    arr[i] = buf[offset + i]\n                }\n                if (inf.swap) arr.reverse()\n                if (inf.size == 4) return new Float32Array(arr.buffer)[0]\n                else return new Float64Array(arr.buffer)[0]\n            }\n            throw new Error(\"unsupported fmt:\" + fmt)\n        }\n    }\n}\n\nexport function setNumber(\n    buf: Uint8Array,\n    fmt: NumberFormat,\n    offset: number,\n    r: number\n) {\n    const inf = fmtInfo(fmt)\n    if (inf.isFloat) {\n        const arr = new Uint8Array(inf.size)\n        if (inf.size == 4) new Float32Array(arr.buffer)[0] = r\n        else new Float64Array(arr.buffer)[0] = r\n        if (inf.swap) arr.reverse()\n        for (let i = 0; i < inf.size; ++i) {\n            buf[offset + i] = arr[i]\n        }\n        return\n    }\n\n    for (let i = 0; i < inf.size; ++i) {\n        const off = !inf.swap ? offset + i : offset + inf.size - i - 1\n        buf[off] = r & 0xff\n        r >>= 8\n    }\n}\n\nexport function uintOfBuffer(data: Uint8Array) {\n    let fmt: NumberFormat\n    switch (data.length) {\n        case 0:\n        case 1:\n            fmt = NumberFormat.UInt8LE\n            break\n        case 2:\n        case 3:\n            fmt = NumberFormat.UInt16LE\n            break\n        default:\n            fmt = NumberFormat.UInt32LE\n            break\n    }\n    return getNumber(data, fmt, 0)\n}\n\nexport function intOfBuffer(data: Uint8Array) {\n    let fmt: NumberFormat\n    switch (data.length) {\n        case 0:\n        case 1:\n            fmt = NumberFormat.Int8LE\n            break\n        case 2:\n        case 3:\n            fmt = NumberFormat.Int16LE\n            break\n        default:\n            fmt = NumberFormat.Int32LE\n            break\n    }\n    return getNumber(data, fmt, 0)\n}\n\nexport function bufferToArray(data: Uint8Array, fmt: NumberFormat) {\n    const res: number[] = []\n    const sz = sizeOfNumberFormat(fmt)\n    for (let off = 0; off <= data.length - sz; off += sz)\n        res.push(getNumber(data, fmt, off))\n    return res\n}\n\nexport function concatBufferArray(chunks: Uint8Array[]) {\n    let sz = 0\n    for (const ch of chunks) sz += ch.length\n    const r = new Uint8Array(sz)\n    sz = 0\n    for (const ch of chunks) {\n        r.set(ch, sz)\n        sz += ch.length\n    }\n    return r\n}\n","// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../../jacdac-spec/spectool/jdspec.d.ts\" />\n\nimport { NumberFormat } from \"./buffer\"\nimport serviceSpecificationData from \"../../jacdac-spec/dist/services.json\"\nimport deviceRegistryData from \"../../jacdac-spec/dist/devices.json\"\nimport { fromHex, toHex } from \"./utils\"\nimport {\n    SystemEvent,\n    SystemReg,\n    SensorReg,\n    SRV_CONTROL,\n    SRV_ROLE_MANAGER,\n    SRV_SETTINGS,\n    SRV_BOOTLOADER,\n    SRV_LOGGER,\n    SRV_INFRASTRUCTURE,\n    SRV_PROTO_TEST,\n} from \"./constants\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet _serviceSpecifications: jdspec.ServiceSpec[] =\n    serviceSpecificationData as any\nlet _serviceSpecificationMap: Record<number, jdspec.ServiceSpec> = undefined\nlet _customServiceSpecifications: Record<string, jdspec.ServiceSpec> = {}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst _deviceRegistry: jdspec.DeviceSpec[] = deviceRegistryData as any\n\n/**\n * Override built-in service specifications\n * @param specs\n * @category Specification\n */\nexport function loadServiceSpecifications(specs: jdspec.ServiceSpec[]) {\n    _serviceSpecifications = specs?.slice(0) || []\n    _serviceSpecificationMap = undefined\n}\n\n/**\n * Adds a custom service specification\n * @param service\n * @category Specification\n */\nexport function addCustomServiceSpecification(service: jdspec.ServiceSpec) {\n    if (service && service.classIdentifier) {\n        _customServiceSpecifications[service.classIdentifier] = service\n        _serviceSpecificationMap = undefined\n    }\n}\n\n/**\n * Clears any custom service specification\n * @category Specification\n */\nexport function clearCustomServiceSpecifications() {\n    _customServiceSpecifications = {}\n    _serviceSpecificationMap = undefined\n}\n\n/**\n * Returns a map from service short ids to service specifications\n * @category Specification\n */\nexport function serviceMap(): Record<string, jdspec.ServiceSpec> {\n    const m: Record<string, jdspec.ServiceSpec> = {}\n    _serviceSpecifications.forEach(spec => (m[spec.shortId] = spec))\n    return m\n}\n\n/**\n * Returns the list of service specifications\n * @category Specification\n */\nexport function serviceSpecifications() {\n    return _serviceSpecifications.slice(0)\n}\n\n/**\n * Resolve the device specification from the product identiier\n * @category Specification\n */\nexport function deviceSpecificationFromProductIdentifier(\n    productIdentifier: number\n): jdspec.DeviceSpec {\n    if (isNaN(productIdentifier)) return undefined\n\n    const spec = _deviceRegistry.find(\n        spec => spec.productIdentifiers?.indexOf(productIdentifier) > -1\n    )\n    return spec\n}\n\n/**\n * @internal\n */\nexport function deviceSpecificationFromIdentifier(\n    id: string\n): jdspec.DeviceSpec {\n    if (id === undefined) return undefined\n\n    const spec = _deviceRegistry.find(spec => spec.id === id)\n    return spec\n}\n\n/**\n * Gets the list of devices that use this service class\n * @param serviceClass\n * @category Specification\n */\nexport function deviceSpecificationsForService(\n    serviceClass: number\n): jdspec.DeviceSpec[] {\n    if (isNaN(serviceClass)) return undefined\n    return _deviceRegistry.filter(\n        spec => spec.services?.indexOf(serviceClass) > -1\n    )\n}\n\n/**\n * Gets the list of device specifications\n * @returns\n * @category Specification\n */\nexport function deviceSpecifications(options?: {\n    includeDeprecated?: boolean\n    includeExperimental?: boolean\n}): jdspec.DeviceSpec[] {\n    const { includeDeprecated, includeExperimental } = options || {}\n    let r = _deviceRegistry.slice(0)\n    if (!includeDeprecated) r = r.filter(d => d.status !== \"deprecated\")\n    if (!includeExperimental) r = r.filter(d => d.status !== \"experimental\")\n    return r\n}\n\n/**\n * @internal\n */\nexport function identifierToUrlPath(id: string) {\n    // compiled web site does not like . in path\n    return id?.replace(/-/g, \"/\").replace(/\\./g, \"\").toLowerCase()\n}\n\n/**\n * Checks if classIdentifier is compatible with requiredClassIdentifier\n * @category Specification\n */\nexport function isInstanceOf(\n    classIdentifier: number,\n    requiredClassIdentifier: number\n): boolean {\n    // garbage data\n    if (isNaN(classIdentifier)) return false\n\n    // direct hit\n    if (classIdentifier === requiredClassIdentifier) return true\n\n    // lookup inheritance chain\n    const classSpec = serviceSpecificationFromClassIdentifier(classIdentifier)\n    return !!classSpec?.extends?.some(extend => {\n        const extendSpec = serviceSpecificationFromName(extend)\n        return (\n            !!extendSpec &&\n            isInstanceOf(extendSpec.classIdentifier, requiredClassIdentifier)\n        )\n    })\n}\n\n/**\n * Checks if the service supports the Jacdac infrastructure\n * @param spec\n * @returns\n * @category Specification\n */\nexport function isInfrastructure(spec: jdspec.ServiceSpec) {\n    return (\n        spec &&\n        ([\n            SRV_CONTROL,\n            SRV_ROLE_MANAGER,\n            SRV_LOGGER,\n            SRV_SETTINGS,\n            SRV_BOOTLOADER,\n            SRV_PROTO_TEST,\n            SRV_INFRASTRUCTURE,\n        ].indexOf(spec.classIdentifier) > -1 ||\n            spec.shortId[0] === \"_\")\n    )\n}\n\n/**\n * Looks up a service specification by name\n * @param shortId\n * @category Specification\n */\nexport function serviceSpecificationFromName(\n    shortId: string\n): jdspec.ServiceSpec {\n    if (!shortId) return undefined\n    return (\n        _serviceSpecifications.find(s => s.shortId === shortId) ||\n        Object.values(_customServiceSpecifications).find(\n            ser => ser.shortId === shortId\n        )\n    )\n}\n\n/**\n * Looks up a service specification by class\n * @param classIdentifier\n * @category Specification\n */\nexport function serviceSpecificationFromClassIdentifier(\n    classIdentifier: number\n): jdspec.ServiceSpec {\n    if (isNaN(classIdentifier)) return undefined\n    // try lookup cache\n    let srv = _serviceSpecificationMap?.[classIdentifier]\n    if (srv) return srv\n\n    // resolve\n    srv =\n        _serviceSpecifications.find(\n            s => s.classIdentifier === classIdentifier\n        ) || _customServiceSpecifications[classIdentifier]\n    if (srv) {\n        if (!_serviceSpecificationMap) _serviceSpecificationMap = {}\n        _serviceSpecificationMap[classIdentifier] = srv\n    }\n    return srv\n}\n\n/**\n * Indicates if the specified service is a sensor\n * @param spec\n * @returns\n * @category Specification\n */\nexport function isSensor(spec: jdspec.ServiceSpec): boolean {\n    return (\n        spec &&\n        spec.packets.some(pkt => isReading(pkt)) &&\n        spec.packets.some(\n            pkt => pkt.identifier == SensorReg.StreamingSamples\n        ) &&\n        spec.packets.some(pkt => pkt.identifier == SensorReg.StreamingInterval)\n    )\n}\n\n/**\n * Indicates if the specified service is an actuator\n * @param spec\n * @returns\n * @category Specification\n */\nexport function isActuator(spec: jdspec.ServiceSpec): boolean {\n    return (\n        spec &&\n        spec.packets.some(pkt => pkt.identifier === SystemReg.Value) &&\n        spec.packets.some(pkt => pkt.identifier === SystemReg.Intensity)\n    )\n}\n\n/**\n * Indicates if the packet information is a register\n * @param spec\n * @returns\n * @category Specification\n */\nexport function isRegister(pkt: jdspec.PacketInfo) {\n    return pkt && (pkt.kind == \"const\" || pkt.kind == \"ro\" || pkt.kind == \"rw\")\n}\n\n/**\n * Indicates if the packet information is a ``reading`` register\n * @param spec\n * @returns\n * @category Specification\n */\nexport function isReading(pkt: jdspec.PacketInfo) {\n    return pkt && pkt.kind == \"ro\" && pkt.identifier == SystemReg.Reading\n}\n\nconst ignoredRegister = [\n    SystemReg.StatusCode,\n    SystemReg.InstanceName,\n    SystemReg.StreamingInterval,\n    SystemReg.StreamingPreferredInterval,\n    SystemReg.StreamingSamples,\n    SystemReg.ReadingError,\n    SystemReg.ReadingResolution,\n    SystemReg.MinReading,\n    SystemReg.MaxReading,\n    SystemReg.MinValue,\n    SystemReg.MaxValue,\n    SystemReg.MaxPower,\n]\n/**\n * Indicates if the register is usable from a high-level programming environment.\n * @category Specification\n */\nexport function isHighLevelRegister(pkt: jdspec.PacketInfo) {\n    return (\n        isRegister(pkt) &&\n        !pkt.lowLevel &&\n        !pkt.internal &&\n        ignoredRegister.indexOf(pkt.identifier) < 0\n    )\n}\n\nconst ignoredEvents = [SystemEvent.StatusCodeChanged]\n/**\n * Indicates if the event is usable from a high-level programming environment.\n * @category Specification\n */\nexport function isHighLevelEvent(pkt: jdspec.PacketInfo) {\n    return (\n        isEvent(pkt) &&\n        !pkt.lowLevel &&\n        !pkt.internal &&\n        ignoredEvents.indexOf(pkt.identifier) < 0\n    )\n}\n\n/**\n * Indicate if the register code is an auxilliary register to support streaming.\n * @param code\n * @returns\n * @category Specification\n */\nexport function isOptionalReadingRegisterCode(code: number) {\n    const regs = [\n        SystemReg.MinReading,\n        SystemReg.MaxReading,\n        SystemReg.ReadingError,\n        SystemReg.ReadingResolution,\n        SystemReg.StreamingPreferredInterval,\n    ]\n    return regs.indexOf(code) > -1\n}\n\n/**\n * Indicates if the packet info represents an ``intensity`` register\n * @category Specification\n */\nexport function isIntensity(pkt: jdspec.PacketInfo) {\n    return pkt && pkt.kind == \"rw\" && pkt.identifier == SystemReg.Intensity\n}\n\n/**\n * Indicates if the packet info represents a ``value`` register\n * @category Specification\n */\nexport function isValue(pkt: jdspec.PacketInfo) {\n    return pkt && pkt.kind == \"rw\" && pkt.identifier == SystemReg.Value\n}\n\n/**\n * Indicates if the packet info represents a ``intensity`` or a ``value`` register\n * @category Specification\n */\nexport function isValueOrIntensity(pkt: jdspec.PacketInfo) {\n    return (\n        pkt &&\n        pkt.kind == \"rw\" &&\n        (pkt.identifier == SystemReg.Value ||\n            pkt.identifier == SystemReg.Intensity)\n    )\n}\n\n/**\n * Indicates if the packet info represents an ``const`` register\n * @category Specification\n */\nexport function isConstRegister(pkt: jdspec.PacketInfo) {\n    return pkt?.kind == \"const\"\n}\n\n/**\n * Indicates if the packet info represents an ``event``\n * @category Specification\n */\nexport function isEvent(pkt: jdspec.PacketInfo) {\n    return pkt.kind == \"event\"\n}\n\n/**\n * Indicates if the packet info represents a ``command``\n * @category Specification\n */\nexport function isCommand(pkt: jdspec.PacketInfo) {\n    return pkt.kind == \"command\"\n}\n\n/**\n * Indicates if the packet info represents a ``pipe_report``\n * @category Specification\n */\nexport function isPipeReport(pkt: jdspec.PacketInfo) {\n    return pkt.kind == \"pipe_report\"\n}\n\n/**\n * Indicates if the `report` packet is the report specication of the `cmd` command.\n * @category Specification\n */\nexport function isReportOf(cmd: jdspec.PacketInfo, report: jdspec.PacketInfo) {\n    return (\n        report.secondary &&\n        report.kind == \"report\" &&\n        cmd.kind == \"command\" &&\n        cmd.name == report.name\n    )\n}\n\n/**\n * Indicates if the `report` packet is the *pipe* report specication of the `cmd` command.\n * @category Specification\n */\nexport function isPipeReportOf(\n    cmd: jdspec.PacketInfo,\n    pipeReport: jdspec.PacketInfo\n) {\n    return (\n        pipeReport.kind == \"pipe_report\" &&\n        cmd.kind == \"command\" &&\n        cmd.pipeType &&\n        cmd.pipeType === pipeReport.pipeType\n    )\n}\n\n/**\n * @internal\n */\nexport function isIntegerType(tp: string) {\n    return /^[ui]\\d+(\\.|$)/.test(tp) || tp == \"pipe_port\" || tp == \"bool\"\n}\n\n/**\n * @internal\n */\nexport function numberFormatFromStorageType(tp: jdspec.StorageType) {\n    switch (tp) {\n        case -1:\n            return NumberFormat.Int8LE\n        case 1:\n            return NumberFormat.UInt8LE\n        case -2:\n            return NumberFormat.Int16LE\n        case 2:\n            return NumberFormat.UInt16LE\n        case -4:\n            return NumberFormat.Int32LE\n        case 4:\n            return NumberFormat.UInt32LE\n        case -8:\n            return NumberFormat.Int64LE\n        case 8:\n            return NumberFormat.UInt64LE\n        case 0:\n            return null\n        default:\n            return null\n    }\n}\n\n/**\n * @internal\n */\nexport function numberFormatToStorageType(nf: NumberFormat) {\n    switch (nf) {\n        case NumberFormat.Int8LE:\n            return -1\n        case NumberFormat.UInt8LE:\n            return 1\n        case NumberFormat.Int16LE:\n            return -2\n        case NumberFormat.UInt16LE:\n            return 2\n        case NumberFormat.Int32LE:\n            return -4\n        case NumberFormat.UInt32LE:\n            return 4\n        case NumberFormat.Int64LE:\n            return -8\n        case NumberFormat.UInt64LE:\n            return 8\n        default:\n            return null\n    }\n}\n\n/**\n * @internal\n */\nexport function scaleIntToFloat(v: number, info: jdspec.PacketMember) {\n    if (!info.shift) return v\n    if (info.shift < 0) return v * (1 << -info.shift)\n    else return v / (1 << info.shift)\n}\n\n/**\n * @internal\n */\nexport function scaleFloatToInt(v: number, info: jdspec.PacketMember) {\n    if (!info.shift) return v\n    if (info.shift < 0) return Math.round(v / (1 << -info.shift))\n    else return Math.round(v * (1 << info.shift))\n}\n\n/**\n * @internal\n */\nexport function storageTypeRange(tp: jdspec.StorageType): [number, number] {\n    if (tp == 0) throw new Error(\"no range for 0\")\n    if (tp < 0) {\n        const v = Math.pow(2, -tp * 8 - 1)\n        return [-v, v - 1]\n    } else {\n        const v = Math.pow(2, tp * 8)\n        return [0, v - 1]\n    }\n}\n\n/**\n * @internal\n */\nexport function clampToStorage(v: number, tp: jdspec.StorageType) {\n    const [min, max] = storageTypeRange(tp)\n    if (isNaN(v)) return 0\n    if (v < min) return min\n    if (v > max) return max\n    return v\n}\n\n/**\n * @internal\n */\nexport function memberValueToString(\n    value: any,\n    info: jdspec.PacketMember\n): string {\n    if (value === undefined || value === null) return \"\"\n    switch (info.type) {\n        case \"bytes\":\n            return toHex(value)\n        case \"string\":\n            return value\n        default:\n            return \"\" + value\n    }\n}\n\n/**\n * @internal\n */\nexport function tryParseMemberValue(\n    text: string,\n    info: jdspec.PacketMember\n): { value?: any; error?: string } {\n    if (!text) return {}\n\n    if (info.type === \"string\") return { value: text }\n    else if (info.type === \"pipe\") return {}\n    // not supported\n    else if (info.type === \"bytes\") {\n        try {\n            return { value: fromHex(text) }\n        } catch (e) {\n            return {\n                error: \"invalid hexadecimal format\",\n            }\n        }\n    } else {\n        const n = isIntegerType(info.type) ? parseInt(text) : parseFloat(text)\n        if (isNaN(n)) return { error: \"invalid format\" }\n        else return { value: n }\n    }\n}\n\n/**\n * Parses a device identifier into a buffer, returns undefined if invalid\n * @param id\n * @returns\n * @category Specification\n */\nexport function parseDeviceId(id: string): Uint8Array {\n    if (!id) return undefined\n    id = id.replace(/\\s/g, \"\")\n    if (id.length != 16 || !/^[a-f0-9]+$/i.test(id)) return undefined\n    return fromHex(id)\n}\n","import {\n    getNumber,\n    NumberFormat,\n    setNumber,\n    sizeOfNumberFormat,\n} from \"./buffer\"\nimport { clampToStorage, numberFormatToStorageType } from \"./spec\"\nimport { bufferEq, bufferToString, stringToBuffer } from \"./utils\"\n\n/**\n * @category Data Packing\n */\nexport type PackedSimpleValue = number | boolean | string | Uint8Array\n\n/**\n * @category Data Packing\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PackedValues = any[]\n\n// ASCII codes of characters\nconst ch_b = 98\nconst ch_i = 105\nconst ch_r = 114\nconst ch_s = 115\nconst ch_u = 117\nconst ch_x = 120\nconst ch_z = 122\n//const ch_0 = 48\n//const ch_9 = 57\nconst ch_colon = 58\nconst ch_sq_open = 91\nconst ch_sq_close = 93\n\nfunction numberFormatOfType(tp: string): NumberFormat {\n    switch (tp) {\n        case \"u8\":\n            return NumberFormat.UInt8LE\n        case \"u16\":\n            return NumberFormat.UInt16LE\n        case \"u32\":\n            return NumberFormat.UInt32LE\n        case \"i8\":\n            return NumberFormat.Int8LE\n        case \"i16\":\n            return NumberFormat.Int16LE\n        case \"i32\":\n            return NumberFormat.Int32LE\n        case \"f32\":\n            return NumberFormat.Float32LE\n        case \"f64\":\n            return NumberFormat.Float64LE\n        case \"i64\":\n            return NumberFormat.Int64LE\n        case \"u64\":\n            return NumberFormat.UInt64LE\n        default:\n            return null\n    }\n}\n\nfunction bufferSlice(buf: Uint8Array, start: number, end: number) {\n    return buf.slice(start, end)\n}\n\nclass TokenParser {\n    c0: number\n    size: number\n    div: number\n    fp = 0\n    nfmt: NumberFormat\n    word: string\n    isArray: boolean\n\n    constructor(public fmt: string) {}\n\n    parse() {\n        this.div = 1\n        this.isArray = false\n\n        const fmt = this.fmt\n        while (this.fp < fmt.length) {\n            let endp = this.fp\n            while (endp < fmt.length && fmt.charCodeAt(endp) != 32) endp++\n            let word = fmt.slice(this.fp, endp)\n            this.fp = endp + 1\n            if (!word) continue\n\n            const dotIdx = word.indexOf(\".\")\n            let c0 = word.charCodeAt(0)\n            // \"u10.6\" -> \"u16\", div = 1 << 6\n            if ((c0 == ch_i || c0 == ch_u) && dotIdx >= 0) {\n                const sz0 = parseInt(word.slice(1, dotIdx))\n                const sz1 = parseInt(word.slice(dotIdx + 1))\n                word = word[0] + (sz0 + sz1)\n                this.div = 1 << sz1\n            }\n\n            const c1 = word.charCodeAt(1)\n            if (c1 == ch_sq_open) {\n                this.size = parseInt(word.slice(2))\n            } else {\n                this.size = -1\n            }\n\n            if (\n                word.charCodeAt(word.length - 1) == ch_sq_close &&\n                word.charCodeAt(word.length - 2) == ch_sq_open\n            ) {\n                word = word.slice(0, -2)\n                this.isArray = true\n            }\n\n            this.nfmt = numberFormatOfType(word)\n            this.word = word\n\n            if (this.nfmt == null) {\n                if (c0 == ch_r) {\n                    if (c1 != ch_colon) c0 = 0\n                } else if (c0 == ch_s || c0 == ch_b || c0 == ch_x) {\n                    if (word.length != 1 && this.size == -1) c0 = 0\n                } else if (c0 == ch_z) {\n                    if (word.length != 1) c0 = 0\n                } else {\n                    c0 = 0\n                }\n                if (c0 == 0) throw new Error(`invalid format: ${word}`)\n                this.c0 = c0\n            } else {\n                this.size = sizeOfNumberFormat(this.nfmt)\n                this.c0 = -1\n            }\n\n            return true\n        }\n        return false\n    }\n}\n\nfunction jdunpackCore(buf: Uint8Array, fmt: string, repeat: number) {\n    const repeatRes: any[][] = repeat ? [] : null\n    let res: any[] = []\n    let off = 0\n    let fp0 = 0\n    const parser = new TokenParser(fmt)\n    if (repeat && buf.length == 0) return []\n    while (parser.parse()) {\n        if (parser.isArray && !repeat) {\n            res.push(\n                jdunpackCore(\n                    bufferSlice(buf, off, buf.length),\n                    fmt.slice(fp0),\n                    1\n                )\n            )\n            return res\n        }\n\n        fp0 = parser.fp\n        let sz = parser.size\n        const c0 = parser.c0\n        if (c0 == ch_z) {\n            let endoff = off\n            while (endoff < buf.length && buf[endoff] != 0) endoff++\n            sz = endoff - off\n        } else if (sz < 0) {\n            sz = buf.length - off\n        }\n\n        if (parser.nfmt !== null) {\n            let v = getNumber(buf, parser.nfmt, off)\n            if (parser.div != 1) v /= parser.div\n            res.push(v)\n            off += parser.size\n        } else {\n            const subbuf = bufferSlice(buf, off, off + sz)\n            if (c0 == ch_z || c0 == ch_s) {\n                let zerop = 0\n                while (zerop < subbuf.length && subbuf[zerop] != 0) zerop++\n                res.push(bufferToString(bufferSlice(subbuf, 0, zerop)))\n            } else if (c0 == ch_b) {\n                res.push(subbuf)\n            } else if (c0 == ch_x) {\n                // skip padding\n            } else if (c0 == ch_r) {\n                res.push(jdunpackCore(subbuf, fmt.slice(fp0), 2))\n                break\n            } else {\n                throw new Error(`whoops`)\n            }\n            off += subbuf.length\n            if (c0 == ch_z) off++\n        }\n\n        if (repeat && parser.fp >= fmt.length) {\n            parser.fp = 0\n            if (repeat == 2) {\n                repeatRes.push(res)\n                res = []\n            }\n            if (off >= buf.length) break\n        }\n    }\n\n    if (repeat == 2) {\n        if (res.length) repeatRes.push(res)\n        return repeatRes\n    } else {\n        return res\n    }\n}\n\n/**\n Unpacks a byte buffer into structured data as specified in the format string.\n See jdpack for format string reference.\n @category Data Packing\n*/\nexport function jdunpack<T extends PackedValues>(\n    buf: Uint8Array,\n    fmt: string\n): T {\n    if (!buf || !fmt) return undefined\n\n    // hot path for buffers\n    if (fmt === \"b\") return [buf.slice(0)] as T\n    // hot path\n    const nf = numberFormatOfType(fmt)\n    if (nf !== null) {\n        const sz = sizeOfNumberFormat(nf)\n        if (buf.length < sz)\n            throw new Error(\n                `size mistmatch, expected ${fmt} (${sz} bytes), got ${buf.length}`\n            )\n        return [getNumber(buf, nf, 0)] as T\n    }\n    // slow path\n    return jdunpackCore(buf, fmt, 0) as T\n}\n\nfunction jdpackCore(\n    trg: Uint8Array,\n    fmt: string,\n    data: PackedValues,\n    off: number\n) {\n    //console.log({ fmt, data })\n    let idx = 0\n    const parser = new TokenParser(fmt)\n    while (parser.parse()) {\n        const c0 = parser.c0\n\n        if (c0 == ch_x) {\n            // skip padding\n            off += parser.size\n            continue\n        }\n\n        const dataItem = data[idx++]\n\n        if (c0 == ch_r && dataItem) {\n            const fmt0 = fmt.slice(parser.fp)\n            for (const velt of dataItem as any[][]) {\n                off = jdpackCore(trg, fmt0, velt, off)\n            }\n            break\n        }\n\n        // use temporary variable to avoid a Gatsby build bug\n        let arr: any[]\n        if (parser.isArray) arr = dataItem\n        else arr = [dataItem]\n\n        for (const v of arr) {\n            if (parser.nfmt !== null) {\n                if (typeof v != \"number\")\n                    throw new Error(`expecting number, got ` + typeof v)\n                if (trg) {\n                    const st: jdspec.StorageType = numberFormatToStorageType(\n                        parser.nfmt\n                    )\n                    setNumber(\n                        trg,\n                        parser.nfmt,\n                        off,\n                        clampToStorage(Math.round(v * parser.div), st)\n                    )\n                }\n                off += parser.size\n            } else {\n                let buf: Uint8Array\n                if (typeof v === \"string\") {\n                    if (c0 == ch_z) buf = stringToBuffer(v + \"\\u0000\")\n                    else if (c0 == ch_s) buf = stringToBuffer(v)\n                    else throw new Error(`unexpected string`)\n                } else if (v && typeof v === \"object\" && v.length != null) {\n                    // assume buffer\n                    if (c0 == ch_b) buf = v\n                    else throw new Error(`unexpected buffer`)\n                } else {\n                    console.log({ parser, v })\n                    throw new Error(`expecting string or buffer`)\n                }\n\n                let sz = parser.size\n                if (sz >= 0) {\n                    if (buf.length > sz) buf = bufferSlice(buf, 0, sz)\n                } else {\n                    sz = buf.length\n                }\n\n                if (trg) trg.set(buf, off)\n                off += sz\n            }\n        }\n    }\n\n    if (data.length > idx) throw new Error(`format '${fmt}' too short`)\n\n    return off\n}\n\n/**\n\n* Format strings are space-separated sequences of type descriptions.\n* All numbers are understood to be little endian.\n* The following type descriptions are supported:\n* \n* - `u8`, `u16`, `u32` - unsigned, 1, 2, and 4 bytes long respectively\n* - `i8`, `i16`, `i32` - similar, but signed\n* - `b` - buffer until the end of input (has to be last)\n* - `s` - similar, but utf-8 encoded string\n* - `z` - NUL-terminated utf-8 string\n* - `b[10]` - 10 byte buffer (10 is just an example, here and below)\n* - `s[10]` - 10 byte utf-8 string; trailing NUL bytes (if any) are removed\n* - `x[10]` - 10 bytes of padding\n* \n* There is one more token, `r:`. The type descriptions following it are repeated in order\n* until the input buffer is exhausted.\n* When unpacking, fields after `r:` are repeated as an array of tuples.\n* \n* In case there's only a single field repeating,\n* it's also possible to append `[]` to its type, to get an array of values.\n* \n* @category Data Packing\n*/\nexport function jdpack<T extends PackedValues>(fmt: string, data: T) {\n    if (!fmt || !data) return undefined\n\n    // hot path for buffers\n    if (fmt === \"b\") return (data[0] as Uint8Array)?.slice(0)\n\n    // hot path\n    const nf = numberFormatOfType(fmt)\n    if (nf !== null) {\n        const buf = new Uint8Array(sizeOfNumberFormat(nf))\n        setNumber(buf, nf, 0, data[0])\n        return buf\n    }\n    // slow path\n    const len = jdpackCore(null, fmt, data, 0)\n    const res = new Uint8Array(len)\n    jdpackCore(res, fmt, data, 0)\n    return res\n}\n\n/**\n * Checks if two packed values serialize to the same buffer\n * @param fmt packing format string\n * @param left left data\n * @param right right data\n * @returns true if both data serialize to the same buffer\n * @category Data Packing\n */\nexport function jdpackEqual<T extends PackedValues>(\n    fmt: string,\n    left: T,\n    right: T\n) {\n    if (!left !== !right) return false\n    if (!left) return true\n\n    const leftBuffer = jdpack<T>(fmt, left)\n    const rightBuffer = jdpack<T>(fmt, right)\n    return bufferEq(leftBuffer, rightBuffer)\n}\n","import Packet from \"./packet\"\nimport { NumberFormat } from \"./buffer\"\nimport {\n    roundWithPrecision,\n    idiv,\n    fromHex,\n    hash,\n    fromUTF8,\n    uint8ArrayToString,\n    read16,\n    toHex,\n    toArray,\n    hexNum,\n    isSet,\n} from \"./utils\"\nimport {\n    isIntegerType,\n    numberFormatFromStorageType,\n    scaleIntToFloat,\n    isRegister,\n    serviceSpecificationFromName,\n    serviceSpecificationFromClassIdentifier,\n} from \"./spec\"\nimport {\n    CMD_SET_REG,\n    CMD_GET_REG,\n    CMD_REG_MASK,\n    PIPE_METADATA_MASK,\n    CMD_TOP_MASK,\n    PIPE_PORT_SHIFT,\n    JD_FRAME_FLAG_COMMAND,\n    JD_FRAME_FLAG_ACK_REQUESTED,\n    CMD_ADVERTISEMENT_DATA,\n    JD_SERVICE_INDEX_CTRL,\n} from \"./constants\"\nimport { SystemCmd, SystemReg } from \"../../jacdac-spec/dist/specconstants\"\nimport { jdpack, jdunpack } from \"./pack\"\nimport Flags from \"./flags\"\n\n/** @internal */\nexport enum RegisterType {\n    UInt, // default\n    UIntHex,\n    Int,\n    IntArray,\n    String,\n}\n\n/**\n * @internal\n */\nexport interface DecodedMember {\n    info: jdspec.PacketMember\n    value: any\n    numValue: number\n    scaledValue: number\n    humanValue: string\n    description: string\n    size: number\n}\n\n/**\n * @internal\n */\nexport interface DecodedPacket {\n    service: jdspec.ServiceSpec\n    info: jdspec.PacketInfo\n    decoded: DecodedMember[]\n    description: string\n    error?: string\n}\n\nexport function prettyUnit(u: jdspec.Unit): string {\n    switch (u) {\n        case \"us\":\n            return \"μs\"\n        case \"C\":\n        case \"Cel\":\n            return \"°C\"\n        case \"K\":\n            return \"°K\"\n        case \"/\":\n        case \"#\":\n            return \"\"\n        default:\n            return u\n    }\n}\n\nexport function prettyMemberUnit(\n    specification: jdspec.PacketMember,\n    showDataType?: boolean\n) {\n    const parts: string[] = [\n        prettyUnit(specification.unit),\n        isSet(specification.typicalMin) &&\n            `[${specification.typicalMin}, ${specification.typicalMax}]`,\n        isSet(specification.absoluteMin) &&\n            `absolute [${specification.absoluteMin}, ${specification.absoluteMax}]`,\n    ].filter(f => isSet(f) && f)\n    if (showDataType) parts.unshift(specification.type)\n    const helperText = parts.join(\", \")\n    return helperText\n}\n\nexport function prettySize(b: number) {\n    b = b | 0\n    if (b < 1000) return b + \"b\"\n    else if (b < 1000000) return roundWithPrecision(b / 1e3, 1) + \"kb\"\n    else return roundWithPrecision(b / 1e6, 1) + \"mb\"\n}\n\nexport function prettyDuration(ms: number) {\n    let s = ms / 1000\n    if (s < 1) return `${roundWithPrecision(s, 2)}s`\n    if (s < 10) return `${roundWithPrecision(s, 1)}s`\n    if (s < 60) return `${Math.floor(s)}s`\n\n    let r = \"\"\n    const d = Math.floor(s / (24 * 3600))\n    if (d > 0) {\n        r += d + \":\"\n        s -= d * (24 * 3600)\n    }\n    const h = Math.floor(s / 3600)\n    if (h > 0) {\n        r += h + \":\"\n        s -= h * 3600\n    }\n    const m = Math.floor(s / 60)\n    if (d > 0 || h > 0 || m > 0) {\n        r += m + \":\"\n        s -= m * 60\n    }\n    r += Math.floor(s)\n    return r\n}\n\nexport function prettyMicroDuration(us: number) {\n    if (us < 1000) return `${us}${prettyUnit(\"us\")}`\n    else return prettyDuration(us / 1000)\n}\n\n// 2 letter + 2 digit ID; 1.8%/0.3%/0.07%/0.015% collision probability among 50/20/10/5 devices\nexport function shortDeviceId(devid: string) {\n    const h = hash(fromHex(devid), 30)\n    return (\n        String.fromCharCode(0x41 + (h % 26)) +\n        String.fromCharCode(0x41 + (idiv(h, 26) % 26)) +\n        String.fromCharCode(0x30 + (idiv(h, 26 * 26) % 10)) +\n        String.fromCharCode(0x30 + (idiv(h, 26 * 26 * 10) % 10))\n    )\n}\n\nexport function decodeMember(\n    service: jdspec.ServiceSpec,\n    pktInfo: jdspec.PacketInfo,\n    member: jdspec.PacketMember,\n    pkt: Packet,\n    offset: number\n): DecodedMember {\n    if (!member) return null\n\n    if (pkt.data.length <= offset) return null\n\n    let numValue: number = undefined\n    let scaledValue: number = undefined\n    let value = undefined\n    let humanValue: string = undefined\n    let size = Math.abs(member.storage)\n\n    const enumInfo = service?.enums[member.type]\n    const isInt = isIntegerType(member.type) || !!enumInfo\n\n    if (member.isFloat && (size == 4 || size == 8)) {\n        if (size == 4) numValue = pkt.getNumber(NumberFormat.Float32LE, offset)\n        else numValue = pkt.getNumber(NumberFormat.Float64LE, offset)\n        value = scaledValue = numValue\n\n        if (Math.abs(value) < 10) humanValue = value.toFixed(5)\n        else if (Math.abs(value) < 1000) humanValue = value.toFixed(3)\n        else if (Math.abs(value) < 100000) humanValue = value.toFixed(2)\n        else humanValue = \"\" + value\n        if (member.unit) humanValue += prettyUnit(member.unit)\n    } else if (!isInt) {\n        const buf = size\n            ? pkt.data.slice(offset, offset + size)\n            : pkt.data.slice(offset)\n        if (member.type == \"string\") {\n            try {\n                value = fromUTF8(uint8ArrayToString(buf))\n            } catch {\n                // invalid UTF8\n                value = uint8ArrayToString(buf)\n            }\n            humanValue = JSON.stringify(value).replace(/\\\\u0000/g, \"\\\\0\")\n        } else if (member.type == \"pipe\") {\n            value = buf\n            const devid = toHex(buf.slice(0, 8))\n            const port = read16(buf, 8)\n            humanValue = \"pipe to \" + shortDeviceId(devid) + \" port:\" + port\n            // + \" [\" + toHex(buf.slice(10)) + \"]\"\n            if (pkt?.device?.bus) {\n                const trg = pkt.device.bus.device(devid, true)\n                if (trg)\n                    trg.port(port).pipeType =\n                        service?.shortId + \".\" + pktInfo.pipeType + \".report\"\n            }\n        } else {\n            value = buf\n            humanValue = hexDump(buf)\n        }\n        size = buf.length\n    } else {\n        const fmt = numberFormatFromStorageType(member.storage)\n        numValue = pkt.getNumber(fmt, offset)\n        value = scaledValue = scaleIntToFloat(numValue, member)\n        if (pkt.device && member.type == \"pipe_port\")\n            pkt.device.port(value).pipeType =\n                service?.shortId + \".\" + pktInfo.pipeType + \".command\"\n        if (enumInfo) {\n            if (enumInfo.isFlags) {\n                humanValue = \"\"\n                let curr = numValue\n                for (const key of Object.keys(enumInfo.members)) {\n                    const val = enumInfo.members[key]\n                    if ((curr & val) == val) {\n                        if (humanValue) humanValue += \" | \"\n                        humanValue += key\n                        curr &= ~val\n                    }\n                }\n                if (curr) {\n                    if (humanValue) humanValue += \" | \"\n                    humanValue += hexNum(curr)\n                }\n            } else {\n                humanValue = reverseLookup(enumInfo.members, numValue)\n            }\n        } else if (member.type == \"bool\") {\n            value = !!numValue\n            humanValue = value ? \"true\" : \"false\"\n        } else if (member.unit === \"ms\") humanValue = prettyDuration(value)\n        else if (member.unit === \"us\") humanValue = prettyMicroDuration(value)\n        else if (member.unit || scaledValue != numValue) {\n            // don't show so much digits\n            let v = scaledValue\n            if (member.unit) v = roundWithPrecision(v, 3)\n            humanValue = \"\" + v\n            if (member.unit) humanValue += prettyUnit(member.unit)\n        } else {\n            humanValue = scaledValue + \"\"\n            if (\n                (scaledValue | 0) == scaledValue &&\n                (!member.unit || scaledValue >= 15)\n            ) {\n                if (!member.unit) humanValue = hexNum(scaledValue)\n                else humanValue += \" (\" + hexNum(scaledValue) + \")\"\n            } else if (scaledValue && member.storage == 8) {\n                const did = toHex(pkt.data.slice(offset, offset + 8))\n                humanValue += ` (${did} / ${shortDeviceId(did)})`\n            }\n        }\n    }\n\n    return {\n        value,\n        numValue,\n        scaledValue,\n        humanValue,\n        description:\n            member.name +\n            \":\" +\n            (!humanValue\n                ? \"?\"\n                : humanValue.indexOf(\"\\n\") >= 0\n                ? \"\\n\" + humanValue.replace(/^/gm, \"      \")\n                : \" \" + humanValue),\n        info: member,\n        size,\n    }\n}\n\nexport function valueToFlags(enumInfo: jdspec.EnumInfo, value: number) {\n    const r = []\n    const curr = value\n    for (const key of Object.keys(enumInfo.members)) {\n        const val = enumInfo.members[key]\n        if (curr & val) {\n            r.push(val)\n        }\n    }\n    return r\n}\n\nexport function flagsToValue(values: number[]) {\n    return values.reduce((prev, cur) => prev | cur, 0)\n}\n\nexport function decodeMembers(\n    service: jdspec.ServiceSpec,\n    pktInfo: jdspec.PacketInfo,\n    pkt: Packet,\n    off = 0\n) {\n    const fields = pktInfo.fields.slice(0)\n    let idx = fields.findIndex(f => f.startRepeats)\n    if (idx >= 0) {\n        if (fields.some(f => !f.storage))\n            throw new Error(\"zero-sized field in repeats:\")\n        let sz = 0\n        for (const f of fields) sz += Math.abs(f.storage)\n        // make sure we have enough fields to decode all data\n        while (sz <= pkt.data.length) {\n            const f = fields[idx++]\n            sz += Math.abs(f.storage)\n            fields.push(f)\n        }\n    }\n    return fields\n        .map(mem => {\n            const decoded = decodeMember(service, pktInfo, mem, pkt, off)\n            if (decoded) off += decoded.size\n            return decoded\n        })\n        .filter(info => !!info)\n}\n\nexport function wrapDecodedMembers(decoded: DecodedMember[]) {\n    if (decoded.length == 0) return \" {}\"\n    else if (decoded.length == 1 && decoded[0].description.length < 60)\n        return \" { \" + decoded[0].description + \" }\"\n    else\n        return (\n            \" {\\n\" + decoded.map(d => \"    \" + d.description).join(\"\\n\") + \"\\n}\"\n        )\n}\n\nfunction syntheticPktInfo(\n    kind: jdspec.PacketKind,\n    addr: number\n): jdspec.PacketInfo {\n    return {\n        kind,\n        identifier: addr,\n        name: hexNum(addr),\n        description: \"\",\n        fields: [\n            {\n                name: \"_\",\n                type: \"bytes\",\n                storage: 0,\n            },\n        ],\n    }\n}\n\nfunction decodeRegister(\n    service: jdspec.ServiceSpec,\n    pkt: Packet\n): DecodedPacket {\n    const isSet = pkt.isRegisterSet\n    const isGet = pkt.isRegisterGet\n\n    if (isSet == isGet) return null\n\n    let error = \"\"\n    const addr = pkt.serviceCommand & CMD_REG_MASK\n    let regInfo = service?.packets.find(\n        p => isRegister(p) && p.identifier == addr\n    )\n    if (!regInfo) {\n        regInfo = syntheticPktInfo(\"rw\", addr)\n        error = `unable to decode register`\n    }\n\n    const decoded = decodeMembers(service, regInfo, pkt)\n\n    if (regInfo.packFormat && pkt.data.length) {\n        try {\n            const recoded: string = toHex(\n                jdpack(\n                    regInfo.packFormat,\n                    jdunpack(pkt.data, regInfo.packFormat)\n                )\n            )\n            if (recoded !== undefined && recoded !== toHex(pkt.data)) {\n                error = `invalid data packing, ${toHex(\n                    pkt.data\n                )} recoded to ${recoded}`\n            }\n        } catch (e) {\n            error = `invalid data packing, ${e.message}`\n        }\n    }\n\n    let description = \"\"\n    if (decoded.length == 0) description = regInfo.name\n    else if (decoded.length == 1)\n        description = regInfo.name + \": \" + decoded[0].humanValue\n    else description = wrapDecodedMembers(decoded)\n\n    if (isGet) description = \"GET \" + description\n    else description = \"SET \" + description\n\n    return {\n        service,\n        info: regInfo,\n        decoded,\n        description,\n        error,\n    }\n}\n\nfunction decodeEvent(service: jdspec.ServiceSpec, pkt: Packet): DecodedPacket {\n    if (pkt.isCommand || !pkt.isEvent) return null\n\n    const evCode = pkt.eventCode\n    const evInfo =\n        service?.packets.find(\n            p => p.kind == \"event\" && p.identifier == evCode\n        ) || syntheticPktInfo(\"event\", evCode)\n\n    const decoded = decodeMembers(service, evInfo, pkt)\n    const description =\n        `EVENT[${pkt.eventCounter}] ${evInfo.name}` +\n        wrapDecodedMembers(decoded)\n\n    return {\n        service,\n        info: evInfo,\n        decoded,\n        description,\n    }\n}\n\nfunction decodeCommand(\n    service: jdspec.ServiceSpec,\n    pkt: Packet\n): DecodedPacket {\n    const kind = pkt.isCommand ? \"command\" : \"report\"\n    const cmdInfo =\n        service?.packets.find(\n            p => p.kind == kind && p.identifier == pkt.serviceCommand\n        ) || syntheticPktInfo(kind, pkt.serviceCommand)\n\n    const decoded = decodeMembers(service, cmdInfo, pkt)\n    const description =\n        (pkt.isCommand ? \"CMD \" : \"REPORT \") +\n        cmdInfo.name +\n        wrapDecodedMembers(decoded)\n\n    return {\n        service,\n        info: cmdInfo,\n        decoded,\n        description,\n    }\n}\n\nfunction decodePacket(service: jdspec.ServiceSpec, pkt: Packet): DecodedPacket {\n    const decoded =\n        decodeRegister(service, pkt) ||\n        decodeEvent(service, pkt) ||\n        decodeCommand(service, pkt)\n    return decoded\n}\n\nfunction decodePipe(pkt: Packet): DecodedPacket {\n    const cmd = pkt.serviceCommand\n    const pinfo = pkt.device.port(cmd >> PIPE_PORT_SHIFT)\n    if (!pinfo.pipeType) return null\n\n    const [servId, pipeType, dir] = pinfo.pipeType.split(/\\./)\n    const service = serviceSpecificationFromName(servId)\n    if (!service) return null\n\n    const meta = !!(cmd & PIPE_METADATA_MASK)\n    const candidates = service.packets\n        .filter(\n            p =>\n                p.pipeType == pipeType &&\n                /pipe/.test(p.kind) &&\n                /meta/.test(p.kind) == meta &&\n                /command/.test(p.kind) == (dir == \"command\")\n        )\n        .filter(\n            p =>\n                !meta || pkt.getNumber(NumberFormat.UInt16LE, 0) == p.identifier\n        )\n\n    const cmdInfo = candidates[0]\n    if (cmdInfo) {\n        const decoded = decodeMembers(service, cmdInfo, pkt, meta ? 4 : 0)\n        const description =\n            cmdInfo.kind.toUpperCase() +\n            \" \" +\n            cmdInfo.name +\n            wrapDecodedMembers(decoded)\n        return {\n            service,\n            info: cmdInfo,\n            decoded,\n            description,\n        }\n    }\n\n    return null\n}\n\nexport function decodePacketData(pkt: Packet): DecodedPacket {\n    try {\n        if (pkt.device && pkt.isPipe) {\n            const info = decodePipe(pkt)\n            if (info) return info\n        }\n\n        const serviceClass = pkt.serviceClass\n        const service = serviceSpecificationFromClassIdentifier(serviceClass)\n        return decodePacket(service, pkt)\n    } catch (error) {\n        console.error(error, {\n            error,\n            pkt,\n            data: toHex(pkt.data),\n        })\n        throw error\n    }\n}\n\nfunction reverseLookup(map: Record<string, number>, n: number) {\n    for (const k of Object.keys(map)) {\n        if (map[k] == n) return k\n    }\n    return hexNum(n)\n}\n\nexport function serviceClass(name: string): number {\n    const serv = serviceSpecificationFromName(name)\n    return serv ? serv.classIdentifier : -1\n}\n\nexport function serviceName(serviceClass: number): string {\n    if (!isSet(serviceClass)) return \"?\"\n    const serv = serviceSpecificationFromClassIdentifier(serviceClass)\n    return serv ? serv.name.toUpperCase() : \"?\"\n}\n\nexport function serviceShortIdOrClass(serviceClass: number) {\n    if (!isSet(serviceClass)) return \"?\"\n    const serv = serviceSpecificationFromClassIdentifier(serviceClass)\n    return serv?.shortId || `0x${serviceClass.toString(16)}`\n}\n\nexport function deviceServiceName(pkt: Packet): string {\n    const srv_class = pkt?.device?.serviceClassAt(pkt.serviceIndex)\n    const serv_id = serviceName(srv_class)\n    return `${pkt?.device?.shortId || \"?\"}/${serv_id}:${pkt.serviceIndex}`\n}\n\nexport function commandName(n: number, serviceClass?: number): string {\n    let pref = \"\"\n    if ((n & CMD_TOP_MASK) == CMD_SET_REG) pref = \"SET[\"\n    else if ((n & CMD_TOP_MASK) == CMD_GET_REG) pref = \"GET[\"\n    if (pref) {\n        const reg = n & CMD_REG_MASK\n        let regName = SystemReg[reg]?.toLowerCase() // try reserved registers first, fast path\n        if (regName === undefined) {\n            const serviceSpec =\n                serviceSpecificationFromClassIdentifier(serviceClass)\n            regName = serviceSpec?.packets.find(\n                pkt => isRegister(pkt) && pkt.identifier === reg\n            )?.name\n        }\n        return (\n            pref +\n            (regName !== undefined ? regName : `x${reg.toString(16)}`) +\n            \"]\"\n        )\n    }\n\n    let r = SystemCmd[n]?.toLowerCase()\n    if (r === undefined) {\n        const serviceSpec =\n            serviceSpecificationFromClassIdentifier(serviceClass)\n        r = serviceSpec?.packets.find(\n            pkt => pkt.kind === \"command\" && pkt.identifier === n\n        )?.name\n    }\n    return r\n}\n\nfunction num2str(n: number) {\n    return n + \" (0x\" + n.toString(16) + \")\"\n}\n\nexport interface PrintPacketOptions {\n    showTime?: boolean\n    skipRepeatedAnnounce?: boolean\n}\n\nexport function toAscii(d: ArrayLike<number>) {\n    let r = \"\"\n    for (let i = 0; i < d.length; ++i) {\n        const c = d[i]\n        if (c < 32 || c >= 128) r += \".\"\n        else r += String.fromCharCode(c)\n    }\n    return r\n}\n\nexport function hexDump(d: ArrayLike<number>): string {\n    const chunk = 32\n    if (d.length <= chunk) return toHex(d) + \"\\u00A0|\\u00A0\" + toAscii(d)\n\n    const a = toArray(d)\n    let r = \"\"\n    for (let i = 0; i < d.length; i += chunk) {\n        if (i + chunk >= d.length) {\n            let s = toHex(a.slice(i))\n            while (s.length < chunk * 2) s += \"  \"\n            r += s + \"\\u00A0|\\u00A0\" + toAscii(a.slice(i))\n        } else {\n            r += hexDump(a.slice(i, i + chunk)) + \"\\n\"\n        }\n    }\n    return r\n}\n\nexport function printPacket(\n    pkt: Packet,\n    opts: PrintPacketOptions = {}\n): string {\n    const frame_flags = pkt.frameFlags\n    const devname = pkt.friendlyDeviceName\n    const service_name = pkt.friendlyServiceName\n    const cmdname = pkt.friendlyCommandName\n    const sender = pkt.sender\n\n    let pdesc = `${devname}/${service_name}: ${cmdname}; sz=${pkt.size}`\n\n    if (frame_flags & JD_FRAME_FLAG_COMMAND) pdesc = \"to \" + pdesc\n    else pdesc = \"from \" + pdesc\n    if (frame_flags & JD_FRAME_FLAG_ACK_REQUESTED)\n        pdesc = `[ack:${hexNum(pkt.crc)}] ` + pdesc\n\n    const d = pkt.data\n    if (\n        pkt.device &&\n        pkt.serviceIndex == JD_SERVICE_INDEX_CTRL &&\n        pkt.serviceCommand == CMD_ADVERTISEMENT_DATA\n    ) {\n        if (pkt.device.lastServiceUpdate < pkt.timestamp) {\n            if (opts.skipRepeatedAnnounce) return \"\"\n            else pdesc = \" ====== \" + pdesc\n        } else {\n            const services = []\n            for (const sc of pkt.device.serviceClasses)\n                services.push(serviceName(sc))\n            pdesc += \"; \" + \"Announce services: \" + services.join(\", \")\n        }\n    } else {\n        const decoded = pkt.decoded\n        if (decoded) {\n            pdesc += \"; \" + decoded.description\n        } else if (0 < d.length && d.length <= 4) {\n            const v0 = pkt.uintData,\n                v1 = pkt.intData\n            pdesc += \"; \" + num2str(v0)\n            if (v0 != v1) pdesc += \"; signed: \" + num2str(v1)\n        } else if (d.length) {\n            pdesc += \"; \" + hexDump(d)\n        }\n    }\n\n    if (sender) pdesc += `; ${sender}`\n\n    return (\n        (!isNaN(pkt.timestamp) && opts?.showTime\n            ? Math.round(pkt.timestamp) + \"ms: \"\n            : \"\") + pdesc\n    )\n}\n","import {\n    crc,\n    ALIGN,\n    write16,\n    bufferConcat,\n    toHex,\n    fromHex,\n    throwError,\n    read32,\n    read16,\n    write32,\n    hexNum,\n    bufferToString,\n} from \"./utils\"\nimport {\n    JD_FRAME_FLAG_COMMAND,\n    JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS,\n    CMD_SET_REG,\n    JD_SERIAL_HEADER_SIZE,\n    JD_FRAME_FLAG_ACK_REQUESTED,\n    JD_SERVICE_INDEX_MASK,\n    JD_SERVICE_INDEX_INV_MASK,\n    JD_SERIAL_MAX_PAYLOAD_SIZE,\n    JD_SERVICE_INDEX_CRC_ACK,\n    JD_SERVICE_INDEX_PIPE,\n    PIPE_PORT_SHIFT,\n    PIPE_COUNTER_MASK,\n    PIPE_METADATA_MASK,\n    PIPE_CLOSE_MASK,\n    CMD_GET_REG,\n    JD_SERVICE_INDEX_CTRL,\n    CMD_REG_MASK,\n    CMD_EVENT_CODE_MASK,\n    CMD_EVENT_COUNTER_MASK,\n    CMD_EVENT_MASK,\n    CMD_EVENT_COUNTER_POS,\n    JD_SERVICE_INDEX_MAX_NORMAL,\n} from \"./constants\"\nimport JDDevice from \"./device\"\nimport { NumberFormat, getNumber } from \"./buffer\"\nimport JDBus from \"./bus\"\nimport {\n    commandName,\n    DecodedPacket,\n    decodePacketData,\n    serviceName,\n    shortDeviceId,\n} from \"./pretty\"\nimport { SystemCmd } from \"../../jacdac-spec/dist/specconstants\"\nimport { jdpack, jdunpack, PackedValues } from \"./pack\"\nimport { serviceSpecificationFromClassIdentifier } from \"./spec\"\n\nconst { warn } = console\n\n/**\n * A Jacdac packet\n * @category JDOM\n */\nexport class Packet {\n    private _header: Uint8Array\n    private _data: Uint8Array\n    private _meta: Record<string, unknown> = undefined // accesory data used by clients\n    timestamp: number\n    device: JDDevice\n    private _decoded: DecodedPacket\n    readonly key: number\n    // An optional tracing identity to avoid\n    // resending own packets for bridges\n    public sender: string\n    // Replayed in a trace\n    public replay?: boolean\n\n    private static _nextKey = 1\n    private constructor() {\n        this.key = Packet._nextKey++\n    }\n\n    static fromBinary(data: Uint8Array, timestamp?: number) {\n        if (!data || data.length > 252) return undefined\n        const p = new Packet()\n        p._header = data.slice(0, JD_SERIAL_HEADER_SIZE)\n        p._data = data.slice(\n            JD_SERIAL_HEADER_SIZE,\n            JD_SERIAL_HEADER_SIZE + p.size\n        )\n        if (timestamp !== undefined) p.timestamp = timestamp\n        return p\n    }\n\n    static from(service_command: number, data: Uint8Array) {\n        const p = new Packet()\n        p._header = new Uint8Array(JD_SERIAL_HEADER_SIZE)\n        p.data = data\n        p.serviceCommand = service_command\n        return p\n    }\n\n    static onlyHeader(service_command: number) {\n        return Packet.from(service_command, new Uint8Array(0))\n    }\n\n    toBuffer() {\n        // compute correct framing and CRC\n        const res = bufferConcat(this._header, this._data)\n        res[2] = this._data.length + 4\n        write16(res, 0, crc(res.slice(2)))\n        return res\n    }\n\n    get header() {\n        return this._header.slice(0)\n    }\n\n    get deviceIdentifier() {\n        return toHex(this._header.slice(4, 4 + 8))\n    }\n    set deviceIdentifier(id: string) {\n        const idb = fromHex(id)\n        if (idb.length != 8) throwError(\"Invalid id\")\n        if (this.isMultiCommand) throwError(\"Invalid multicast\")\n        this._header.set(idb, 4)\n        this._decoded = undefined\n    }\n\n    get frameFlags() {\n        return this._header[3]\n    }\n\n    set frameFlags(v: number) {\n        this._header[3] = v\n    }\n\n    get isMultiCommand() {\n        return !!(this.frameFlags & JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS)\n    }\n\n    get size(): number {\n        return this._header[12]\n    }\n\n    get requiresAck(): boolean {\n        return this.frameFlags & JD_FRAME_FLAG_ACK_REQUESTED ? true : false\n    }\n    set requiresAck(ack: boolean) {\n        if (ack != this.requiresAck)\n            this._header[3] ^= JD_FRAME_FLAG_ACK_REQUESTED\n        this._decoded = undefined\n    }\n\n    get serviceIndex(): number {\n        return this._header[13] & JD_SERVICE_INDEX_MASK\n    }\n    set serviceIndex(value: number) {\n        if (value == null) throw new Error(\"service_index not set\")\n        this._header[13] =\n            (this._header[13] & JD_SERVICE_INDEX_INV_MASK) | value\n        this._decoded = undefined\n    }\n\n    get serviceClass(): number {\n        if (this.isMultiCommand) return read32(this._header, 4)\n        return this.device?.serviceClassAt(this.serviceIndex)\n    }\n\n    get crc(): number {\n        return read16(this._header, 0)\n    }\n\n    get serviceCommand(): number {\n        return read16(this._header, 14)\n    }\n    set serviceCommand(cmd: number) {\n        write16(this._header, 14, cmd)\n        this._decoded = undefined\n    }\n\n    get isRegisterSet() {\n        return this.serviceCommand >> 12 == CMD_SET_REG >> 12\n    }\n\n    get isRegisterGet() {\n        return this.serviceCommand >> 12 == CMD_GET_REG >> 12\n    }\n\n    // TODO rename to registerCode\n    get registerIdentifier() {\n        if (!this.isRegisterGet && !this.isRegisterSet) return undefined\n        return this.serviceCommand & CMD_REG_MASK\n    }\n\n    get isEvent() {\n        return (\n            this.serviceIndex <= JD_SERVICE_INDEX_MAX_NORMAL &&\n            (this.serviceCommand & CMD_EVENT_MASK) !== 0\n        )\n    }\n\n    get eventCode() {\n        return this.isEvent\n            ? this.serviceCommand & CMD_EVENT_CODE_MASK\n            : undefined\n    }\n\n    get eventCounter() {\n        return this.isEvent\n            ? (this.serviceCommand >> CMD_EVENT_COUNTER_POS) &\n                  CMD_EVENT_COUNTER_MASK\n            : undefined\n    }\n\n    get isCRCAck() {\n        return this.serviceIndex === JD_SERVICE_INDEX_CRC_ACK\n    }\n\n    get isPipe() {\n        return this.serviceIndex === JD_SERVICE_INDEX_PIPE\n    }\n\n    get pipePort() {\n        return this.isPipe && this.serviceCommand >> PIPE_PORT_SHIFT\n    }\n\n    get pipeCount() {\n        return this.isPipe && this.serviceCommand & PIPE_COUNTER_MASK\n    }\n\n    get data(): Uint8Array {\n        return this._data\n    }\n\n    set data(buf: Uint8Array) {\n        if (buf.length > JD_SERIAL_MAX_PAYLOAD_SIZE)\n            throw Error(\n                `jacdac packet length too large, ${buf.length} > ${JD_SERIAL_MAX_PAYLOAD_SIZE} bytes`\n            )\n        this._header[12] = buf.length\n        this._data = buf\n        this._decoded = undefined\n    }\n\n    jdunpack<T extends PackedValues>(fmt: string): T {\n        return (this._data && fmt && jdunpack<T>(this._data, fmt)) || ([] as T)\n    }\n\n    get uintData() {\n        let buf = this._data\n        if (buf.length == 0) return undefined\n        if (buf.length < 4) buf = bufferConcat(buf, new Uint8Array(4))\n        if (buf.length == 8)\n            return read32(buf, 0) + read32(buf, 4) * 0x100000000\n        return read32(buf, 0)\n    }\n\n    get stringData(): string {\n        return this._data && bufferToString(this._data)\n    }\n\n    get intData() {\n        let fmt: NumberFormat\n        switch (this._data.length) {\n            case 0:\n                return undefined\n            case 1:\n                fmt = NumberFormat.Int8LE\n                break\n            case 2:\n            case 3:\n                fmt = NumberFormat.Int16LE\n                break\n            default:\n                fmt = NumberFormat.Int32LE\n                break\n        }\n        return this.getNumber(fmt, 0)\n    }\n\n    get isAnnounce() {\n        return (\n            this.serviceIndex == JD_SERVICE_INDEX_CTRL &&\n            this.isReport &&\n            this.serviceCommand == SystemCmd.Announce\n        )\n    }\n\n    get isRepeatedAnnounce() {\n        return (\n            this.isAnnounce && this.device?.lastServiceUpdate < this.timestamp\n        )\n    }\n\n    get decoded() {\n        if (!this._decoded) this._decoded = decodePacketData(this)\n        return this._decoded\n    }\n\n    get meta() {\n        if (!this._meta) this._meta = {}\n        return this._meta\n    }\n\n    clone() {\n        const pkt = new Packet()\n        pkt._header = this._header.slice()\n        pkt._data = this._data.slice()\n        pkt.timestamp = this.timestamp\n        return pkt\n    }\n\n    cloneForDevice(deviceId: string, serviceIndex: number) {\n        const idb = fromHex(deviceId)\n        if (idb.length != 8) throwError(\"Invalid id\")\n        if (!this.isMultiCommand) throwError(\"Must be multi command\")\n\n        const pkt = Packet.fromBinary(this.toBuffer(), this.timestamp)\n        pkt.frameFlags &= ~JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS\n        pkt._header.set(idb, 4)\n        pkt._decoded = undefined\n        pkt.serviceIndex = serviceIndex\n        return pkt\n    }\n\n    compress(stripped: Uint8Array[]) {\n        if (stripped.length == 0) return\n        let sz = -4\n        for (const s of stripped) {\n            sz += s.length\n        }\n        const data = new Uint8Array(sz)\n        this._header.set(stripped[0], 12)\n        data.set(stripped[0].slice(4), 0)\n        sz = stripped[0].length - 4\n        for (const s of stripped.slice(1)) {\n            data.set(s, sz)\n            sz += s.length\n        }\n        this._data = data\n        this._decoded = undefined\n    }\n\n    withFrameStripped() {\n        return bufferConcat(this._header.slice(12, 12 + 4), this._data)\n    }\n\n    getNumber(fmt: NumberFormat, offset: number) {\n        return getNumber(this._data, fmt, offset)\n    }\n\n    get isCommand() {\n        return !!(this.frameFlags & JD_FRAME_FLAG_COMMAND)\n    }\n\n    set isCommand(value: boolean) {\n        if (value) this._header[3] |= JD_FRAME_FLAG_COMMAND\n        else this._header[3] &= ~JD_FRAME_FLAG_COMMAND\n        this._decoded = undefined\n    }\n\n    get isReport() {\n        return !this.isCommand\n    }\n\n    toString(): string {\n        let msg = `${shortDeviceId(this.deviceIdentifier)}/${\n            this.serviceIndex\n        }[${this.frameFlags}]: ${this.serviceCommand} sz=${this.size}`\n        if (this.size < 20) msg += \": \" + toHex(this.data)\n        else msg += \": \" + toHex(this.data.slice(0, 20)) + \"...\"\n        return msg\n    }\n\n    sendCoreAsync(bus: JDBus) {\n        const buf = this.toBuffer()\n        // Here we're sending this packet as the only one in a frame, therefore we need to compute CRC (which toBuffer() does)\n        // There's no crc computation function on Packet, since it should be typically only applied to full frames.\n        // The crc field reads the CRC from the frame (which is useful eg for acks).\n        this._header[0] = buf[0]\n        this._header[1] = buf[1]\n        this._header[2] = buf[2]\n        return bus.sendPacketAsync(this)\n    }\n\n    sendReportAsync(dev: JDDevice) {\n        if (!dev) return Promise.resolve()\n        this.deviceIdentifier = dev.deviceId\n        return this.sendCoreAsync(dev.bus)\n    }\n\n    sendCmdAsync(dev: JDDevice) {\n        if (!dev) return Promise.resolve()\n        this.deviceIdentifier = dev.deviceId\n        this.isCommand = true\n        return this.sendCoreAsync(dev.bus)\n    }\n\n    sendAsMultiCommandAsync(bus: JDBus, service_class: number) {\n        this._header[3] |=\n            JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS | JD_FRAME_FLAG_COMMAND\n        write32(this._header, 4, service_class)\n        write32(this._header, 8, 0)\n        return this.sendCoreAsync(bus)\n    }\n\n    static fromFrame(frame: Uint8Array, timestamp: number) {\n        return frameToPackets(frame, timestamp)\n    }\n\n    static jdpacked<T extends PackedValues>(\n        service_command: number,\n        fmt: string,\n        nums: T\n    ) {\n        return Packet.from(service_command, jdpack<T>(fmt, nums))\n    }\n\n    // helpers\n    get friendlyDeviceName(): string {\n        if (this.isMultiCommand) return \"*\"\n        return this.device?.friendlyName || this.deviceIdentifier\n    }\n    get friendlyServiceName(): string {\n        let service_name: string\n        if (this.isCRCAck) {\n            service_name = \"CRC-ACK\"\n        } else if (this.isPipe) {\n            service_name = \"PIPE\"\n        } else {\n            const serv_id = serviceName(this.serviceClass)\n            service_name = `${serv_id} (${this.serviceIndex})`\n        }\n        return service_name\n    }\n    get friendlyCommandName(): string {\n        const cmd = this.serviceCommand\n        let cmdname: string\n        if (this.isCRCAck) {\n            cmdname = hexNum(cmd)\n        } else if (this.isPipe) {\n            cmdname = `port:${cmd >> PIPE_PORT_SHIFT} cnt:${\n                cmd & PIPE_COUNTER_MASK\n            }`\n            if (cmd & PIPE_METADATA_MASK) cmdname += \" meta\"\n            if (cmd & PIPE_CLOSE_MASK) cmdname += \" close\"\n        } else if (this.isEvent) {\n            const spec = serviceSpecificationFromClassIdentifier(\n                this.serviceClass\n            )\n            const code = this.eventCode\n            const pkt = spec?.packets.find(\n                pkt => pkt.kind === \"event\" && pkt.identifier === code\n            )\n            cmdname = pkt?.name\n        } else if (this.isReport) {\n            const spec = serviceSpecificationFromClassIdentifier(\n                this.serviceClass\n            )\n            const code = this.serviceCommand & ~CMD_GET_REG\n            const pkt = spec?.packets.find(\n                pkt => pkt.kind === \"report\" && pkt.identifier === code\n            )\n            cmdname = pkt?.name\n        } else {\n            cmdname = commandName(cmd, this.serviceClass)\n        }\n        return cmdname\n    }\n}\n\nfunction frameToPackets(frame: Uint8Array, timestamp: number) {\n    const size = frame[2] || 0\n    if (frame.length < size + 12) {\n        warn(\n            `${timestamp}ms: got only ${frame.length} bytes; expecting ${\n                size + 12\n            }`\n        )\n    } else if (size < 4) {\n        warn(`${timestamp}ms: empty packet`)\n    } else {\n        const computed = crc(frame.slice(2, size + 12))\n        const actual = read16(frame, 0)\n        if (actual != computed)\n            console.error(\n                `crc mismatch; sz=${size} got:${actual}, exp:${computed}`\n            )\n\n        const res: Packet[] = []\n        if (frame.length != 12 + frame[2])\n            warn(`${timestamp}ms: unexpected packet len: ${frame.length}`)\n        for (let ptr = 12; ptr < 12 + frame[2]; ) {\n            const psz = frame[ptr] + 4\n            const sz = ALIGN(psz)\n            const pkt = bufferConcat(\n                frame.slice(0, 12),\n                frame.slice(ptr, ptr + psz)\n            )\n            if (ptr + psz > 12 + frame[2])\n                warn(\n                    `${timestamp}ms: invalid frame compression, res len=${res.length}`\n                )\n            const p = Packet.fromBinary(pkt)\n            p.timestamp = timestamp\n            res.push(p)\n            // only set req_ack flag on first packet - otherwise we would sent multiple acks\n            if (res.length > 1) p.requiresAck = false\n            ptr += sz\n        }\n\n        return res\n    }\n\n    return []\n}\n\nexport default Packet\n","import { META_TRACE } from \"../constants\"\nimport Packet from \"../packet\"\nimport { printPacket } from \"../pretty\"\nimport { roundWithPrecision, toHex } from \"../utils\"\n\nconst TRACE_OVERSHOOT = 1.1\n\n/**\n * Collect stack trace at the current execution position\n * @returns\n * @internal\n */\nexport function stack() {\n    return new Error().stack\n}\n\n/**\n * @internal\n */\nexport function cleanStack(text: string) {\n    return text\n        ?.split(/\\n/g)\n        .slice(2)\n        .join(\"\\n\") // drop first 2 lines\n        .replace(/webpack-internal:\\/\\/\\//g, \"\")\n        .replace(/https:\\/\\/microsoft\\.github\\.io\\/jacdac-docs/g, \"\")\n}\n\n/**\n * A sequence of packets.\n * @category Trace\n */\nexport class Trace {\n    readonly maxLength: number\n    readonly description: string\n    /**\n     * Constructs a new empty trace or from an existing list of packets\n     * @param packets list of packets\n     * @param description description of the trace\n     */\n    constructor(\n        public packets: Packet[] = [],\n        options?: {\n            description?: string\n            maxLength?: number\n        }\n    ) {\n        this.description = options?.description\n        this.maxLength = options?.maxLength\n    }\n\n    /**\n     * Number of packets in trace\n     */\n    get length() {\n        return this.packets.length\n    }\n\n    /**\n     * Duration in milliseconds between the first and last packet.\n     */\n    get duration() {\n        if (!this.packets.length) return 0\n        return (\n            this.packets[this.packets.length - 1].timestamp -\n            this.packets[0].timestamp\n        )\n    }\n\n    /**\n     * Timestamp of the first packet, defaults to 0 if trace is empty.\n     */\n    get startTimestamp() {\n        return this.packets[0]?.timestamp || 0\n    }\n\n    /**\n     * Timestamp of the last packet, defaults to 0 if trace is empty.\n     */\n    get endTimestamp() {\n        return this.packets[this.packets.length - 1]?.timestamp || 0\n    }\n\n    /**\n     * Appends a packet to the trace\n     * @param packet packet to add\n     * @param maxLength If positive, prunes older packets when the length reaches maxLength\n     */\n    addPacket(packet: Packet) {\n        this.packets.push(packet)\n        if (\n            this.maxLength > 0 &&\n            this.packets.length > this.maxLength * TRACE_OVERSHOOT\n        ) {\n            // 10% overshoot of max\n            this.packets = this.packets.slice(-this.maxLength)\n        }\n    }\n\n    /**\n     * Gets a text-rendered view of the trace\n     * @param length maximum number of elements\n     * @returns text where each line is a packet\n     */\n    serializeToText(length?: number) {\n        const start = this.packets[0]?.timestamp || 0\n        let pkts = this.packets\n        if (length > 0) pkts = pkts.slice(-length)\n        const text = pkts.map(pkt => {\n            let t = `${roundWithPrecision(pkt.timestamp - start, 3)}\\t${toHex(\n                pkt.toBuffer()\n            )}\\t${printPacket(pkt, {}).replace(/\\r?\\n/g, \" \")}`\n            const trace = pkt.meta[META_TRACE] as string\n            if (trace) t += \"\\n\" + cleanStack(trace)\n            return t\n        })\n        if (this.description) {\n            text.unshift(this.description)\n            text.unshift(\"\")\n        }\n        return text.join(\"\\n\")\n    }\n}\nexport default Trace\n","import { NEW_LISTENER, REMOVE_LISTENER, ERROR, CHANGE } from \"./constants\"\nimport { Observable, Observer } from \"./observable\"\nimport Flags from \"./flags\"\nimport { stack } from \"./trace/trace\"\n\n/**\n * @category JDOM\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type EventHandler = (...args: any[]) => void\n\ninterface Listener {\n    handler: EventHandler\n    once: boolean\n    stackTrace?: string\n}\n\nfunction normalizeEventNames(eventNames: string | string[]): string[] {\n    if (!eventNames) eventNames = []\n    if (typeof eventNames === \"string\") eventNames = [eventNames]\n    return eventNames\n}\n\n/**\n * Base interface for evented nodes in Jacdac\n * @category JDOM\n */\nexport interface IEventSource {\n    readonly nodeId: number\n    changeId: number\n\n    /**\n     * Subscribes to an event and returns the unsubscription handler\n     * @param eventName\n     * @param next\n     */\n    subscribe<T>(\n        eventName: string | string[],\n        next: (value: T) => void\n    ): () => void\n}\n\n/**\n * Given a node or set of nodes, generate a stable string that can be used to track dependencies in frameworks like React.\n * @param nodes\n * @returns\n * @category JDOM\n */\nexport function dependencyId(nodes: IEventSource | IEventSource[]) {\n    if (Array.isArray(nodes))\n        return nodes?.map(node => node?.nodeId || \"?\").join(\",\") || \"\"\n    else return nodes?.nodeId || \"\"\n}\n\nlet nextNodeId = 0\n\n/**\n * Base class for evented nodes in Jacdac\n * @category JDOM\n */\nexport class JDEventSource implements IEventSource {\n    /**\n     * Gets an internal unique node identifier, mostly used for debugging.\n     * @category JDOM\n     */\n    public readonly nodeId = nextNodeId++\n\n    private readonly listeners: Record<string, Listener[]> = {}\n\n    /**\n     * Gets a counter of event emit calls.\n     * @category JDOM\n     */\n    readonly eventStats: Record<string, number> = {}\n\n    /**\n     * Gets a counter map from events to new listener counts\n     * @category JDOM\n     */\n    newListenerStats: Record<string, number> = undefined\n\n    /**\n     * @internal\n     */\n    constructor() {}\n\n    /**\n     * Registers a handler for one or more events\n     * @param eventName name or names of the events to subscribe\n     * @param handler handler to register\n     * @returns current object instance\n     * @category JDOM\n     */\n    on(eventName: string | string[], handler: EventHandler) {\n        if (!handler) return this\n        normalizeEventNames(eventName).forEach(eventName =>\n            this.addListenerInternal(eventName, handler, false)\n        )\n        return this\n    }\n\n    /**\n     * Unregisters a handler for one or more events\n     * @param eventName name or names of the events to subscribe\n     * @param handler handler to unregister\n     * @returns current object instance\n     * @category JDOM\n     */\n    off(eventName: string | string[], handler: EventHandler) {\n        normalizeEventNames(eventName).forEach(eventName =>\n            this.removeListenerInternal(eventName, handler)\n        )\n        return this\n    }\n\n    /**\n     * Registers a handler for one or more events to run only once.\n     * @param eventName name or names of the events to subscribe\n     * @param handler handler to execute\n     * @returns current object instance\n     * @category JDOM\n     */\n    once(eventName: string | string[], handler: EventHandler) {\n        normalizeEventNames(eventName).forEach(eventName =>\n            this.addListenerInternal(eventName, handler, true)\n        )\n        return this\n    }\n\n    private addListenerInternal(\n        eventName: string,\n        handler: EventHandler,\n        once: boolean\n    ): void {\n        if (!eventName || !handler) {\n            return\n        }\n\n        const eventListeners =\n            this.listeners[eventName] || (this.listeners[eventName] = [])\n        const listener = eventListeners.find(\n            listener => listener.handler === handler\n        )\n        if (listener) {\n            listener.once = !!once\n            return\n        }\n\n        eventListeners.push({\n            handler,\n            once: !!once,\n            // debug only collection of trace for leak detection\n            stackTrace: Flags.diagnostics && stack(),\n        })\n        this.emit(NEW_LISTENER, eventName, handler)\n        // diagnostics\n        if (Flags.diagnostics) {\n            if (!this.newListenerStats) this.newListenerStats = {}\n            this.newListenerStats[eventName] =\n                (this.newListenerStats[eventName] || 0) + 1\n        }\n    }\n\n    private removeListenerInternal(\n        eventName: string,\n        handler: EventHandler\n    ): void {\n        if (!eventName || !handler) return\n\n        const eventListeners = this.listeners[eventName]\n        if (eventListeners) {\n            for (let i = 0; i < eventListeners.length; ++i) {\n                const listener = eventListeners[i]\n                if (handler === listener.handler) {\n                    eventListeners.splice(i, 1)\n                    this.emit(REMOVE_LISTENER, eventName, handler)\n                    return\n                }\n            }\n        }\n    }\n\n    /**\n     * Synchronously calls each of the listeners registered for the event named eventName,\n     * in the order they were registered, passing the supplied arguments to each.\n     * @param eventName\n     * @param args\n     * @category JDOM\n     */\n    emit(eventName: string, ...args: unknown[]): boolean {\n        if (!eventName) return false\n\n        // track event stats\n        this.eventStats[eventName] = (this.eventStats[eventName] || 0) + 1\n\n        const eventListeners = this.listeners[eventName]\n        if (!eventListeners || eventListeners.length == 0) {\n            // report unhandled errors\n            if (eventName == ERROR) console.error(args[0])\n            return false\n        }\n        for (let i = 0; i < eventListeners.length; ++i) {\n            const listener = eventListeners[i]\n            const handler = listener.handler\n            if (listener.once) {\n                eventListeners.splice(i, 1)\n                --i\n            }\n            try {\n                // eslint-disable-next-line prefer-spread\n                handler.apply(null, args)\n            } catch (e) {\n                // avoid recursive errors in error handler\n                if (eventName !== ERROR) this.emit(ERROR, e)\n            }\n        }\n        return true\n    }\n\n    /**\n     * Gets the number of listeners for a given event\n     * @param eventName name of the event\n     * @returns number of registered handlers\n     * @category JDOM\n     */\n    listenerCount(eventName: string): number {\n        if (!eventName) return 0\n        const listeners = this.listeners[eventName]\n        return listeners?.length || 0\n    }\n\n    /**\n     * Gets the list stack trace where an event was registered. Only enabled if ``Flags.debug`` is true.\n     * @param eventName name of the event\n     * @returns stack traces where a listener was added\n     * @category JDOM\n     */\n    listenerStackTraces(eventName: string): string[] {\n        const listeners = this.listeners[eventName]\n        return listeners?.map(listener => listener.stackTrace)\n    }\n\n    /**\n     * Returns an array listing the events for which the emitter has registered listeners.\n     * @category JDOM\n     */\n    eventNames(): string[] {\n        return Object.keys(this.listeners)\n    }\n\n    /**\n     * Creates an observable from the given event\n     * @param eventName\n     * @category JDOM\n     */\n    observe<T>(eventName: string | string[]): Observable<T> {\n        return new EventObservable<T>(this, normalizeEventNames(eventName))\n    }\n\n    /**\n     * Subscribes to an event and returns the unsubscription handler\n     * @param eventName\n     * @param next\n     * @category JDOM\n     */\n    subscribe<T>(\n        eventName: string | string[],\n        next: (value: T) => void\n    ): () => void {\n        const observer = this.observe<T>(eventName)\n        return observer.subscribe({ next }).unsubscribe\n    }\n\n    /**\n     * Gets a counter for the ``CHANGE`` event.\n     * @category JDOM\n     */\n    get changeId() {\n        return this.eventStats[CHANGE] || 0\n    }\n}\n\nclass EventObservable<T> implements Observable<T> {\n    constructor(\n        public readonly eventEmitter: JDEventSource,\n        public readonly eventNames: string[]\n    ) {\n        //console.log(`obs`, this.eventNames)\n    }\n\n    subscribe(observer: Observer<T>) {\n        //console.log(`on`, this.eventNames, observer)\n        if (observer.next) this.eventEmitter.on(this.eventNames, observer.next)\n        if (observer.error) this.eventEmitter.on(ERROR, observer.error)\n        // never completes\n        return {\n            unsubscribe: () => {\n                //console.log(`off`, this.eventNames, observer)\n                if (observer.next)\n                    this.eventEmitter.off(this.eventNames, observer.next)\n                if (observer.error) this.eventEmitter.off(ERROR, observer.error)\n            },\n        }\n    }\n}\nexport default JDEventSource\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport JDEventSource from \"./eventsource\"\n\n/**\n * Base class for JDOM Node classes.\n * @category JDOM\n */\nexport abstract class JDNode extends JDEventSource {\n    private _nodeData: Record<string, unknown>\n\n    constructor() {\n        super()\n    }\n\n    /**\n     * Globally unique identifier in the tree\n     * @category JDOM\n     */\n    abstract get id(): string\n\n    /**\n     * Gets a kind identifier useful for UI descriptions\n     * @category JDOM\n     */\n    abstract get nodeKind(): string\n\n    /**\n     * Gets the local name\n     * @category JDOM\n     */\n    abstract get name(): string\n\n    /**\n     * A human friendly name\n     * @category JDOM\n     */\n    get friendlyName(): string {\n        return this.name\n    }\n\n    /**\n     * Gets the name including parents\n     * @category JDOM\n     */\n    abstract get qualifiedName(): string\n\n    /**\n     * Gets the parent node in the Jacdac dom\n     * @category JDOM\n     */\n    abstract get parent(): JDNode\n\n    /**\n     * Gets the children of the current node\n     * @category JDOM\n     */\n    abstract get children(): JDNode[]\n\n    /**\n     * Gets a databag to store custom information\n     * @category JDOM\n     */\n    get nodeData() {\n        if (!this._nodeData) this._nodeData = {}\n        return this._nodeData\n    }\n\n    /**\n     * Emit event in current node and parent nodes\n     * @param event event to emit\n     * @param arg event arguments\n     * @category JDOM\n     */\n    emitPropagated(event: string, arg?: any) {\n        let current = this as JDNode\n        while (current) {\n            current.emit(event, arg || this)\n            current = current.parent\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    toString() {\n        return this.friendlyName\n    }\n}\n\nexport default JDNode\n","import JDNode from \"./node\"\nimport JDService from \"./service\"\nimport { DecodedPacket } from \"./pretty\"\n\n/**\n * Base class for JDOM service member classes.\n * @category JDOM\n */\nexport abstract class JDServiceMemberNode extends JDNode {\n    private _specification: jdspec.PacketInfo\n\n    /**\n     * Parent service\n     * @category JDOM\n     */\n    public readonly service: JDService\n    /**\n     * Identifier of the event.\n     * @category Specification\n     */\n    public readonly code: number\n\n    private readonly isPacket: (pkt: jdspec.PacketInfo) => boolean\n\n    /**\n     * @internal\n     */\n    constructor(\n        service: JDService,\n        code: number,\n        isPacket: (pkt: jdspec.PacketInfo) => boolean\n    ) {\n        super()\n        this._specification = null\n        this.service = service\n        this.code = code\n        this.isPacket = isPacket\n    }\n\n    /**\n     * Gets the node identifier in the JDOM tree\n     * @category JDOM\n     */\n    get id() {\n        return `${this.nodeKind}:${\n            this.service.device.deviceId\n        }:${this.service.serviceIndex.toString(16)}:${this.code.toString(16)}`\n    }\n\n    /**\n     * Gets the event name, if specified.\n     * @category JDOM\n     */\n    get name() {\n        return this.specification?.name || this.code.toString(16)\n    }\n\n    /**\n     * Gets the qualitified event name, if specified.\n     * @category JDOM\n     */\n    get qualifiedName() {\n        return `${this.service.qualifiedName}.${this.name}`\n    }\n\n    /**\n     * Gets the event specification if known.\n     * @category Specification\n     */\n    get specification() {\n        if (this._specification === null)\n            // lookup once\n            this._specification = this.service.specification?.packets.find(\n                packet =>\n                    this.isPacket(packet) && packet.identifier === this.code\n            )\n        return this._specification\n    }\n\n    /**\n     * Gets the parent service client instance.\n     * @category JDOM\n     */\n    get parent(): JDNode {\n        return this.service\n    }\n\n    /**\n     * Gets the event friendly name.\n     * @category JDOM\n     */\n    get friendlyName() {\n        const parts = [this.service.friendlyName, this.name]\n        return parts.join(\".\")\n    }\n\n    /**\n     * @internal\n     */\n    abstract get decoded(): DecodedPacket\n}\n\nexport default JDServiceMemberNode\n","import { FIELD_NODE_NAME } from \"./constants\"\nimport JDNode from \"./node\"\nimport { DecodedMember } from \"./pretty\"\nimport JDServiceMemberNode from \"./servicemembernode\"\n\n/**\n * A Jacdac field.\n * @category JDOM\n */\nexport class JDField extends JDNode {\n    /**\n     * Gets the parent JDOM member\n     * @category JDOM\n     */\n    readonly member: JDServiceMemberNode\n    /**\n     * Gets the index in the unpacked data payload\n     * @category Specification\n     */\n    readonly index: number\n    /**\n     * Gets the field specification\n     * @category Specification\n     */\n    readonly specification: jdspec.PacketMember\n\n    /**\n     * @internal\n     */\n    constructor(\n        member: JDServiceMemberNode,\n        index: number,\n        specification: jdspec.PacketMember\n    ) {\n        super()\n        this.member = member\n        this.index = index\n        this.specification = specification\n    }\n\n    /**\n     * Gets the JDOM node identifier\n     * @category JDOM\n     */\n    get id(): string {\n        return `${this.nodeKind}:${\n            this.member.service.device.deviceId\n        }:${this.member.service.serviceIndex.toString(\n            16\n        )}:${this.member.code.toString(16)}:${this.index.toString(16)}`\n    }\n\n    /**\n     * Gets the JDOM name\n     * @category JDOM\n     */\n    get name(): string {\n        return this.specification.name === \"_\"\n            ? this.member.specification.name\n            : this.specification.name\n    }\n\n    /**\n     * @internal\n     */\n    get children(): JDNode[] {\n        return []\n    }\n\n    /**\n     * Gets the JDOM qualified name\n     * @category JDOM\n     */\n    get qualifiedName(): string {\n        return `${this.member.qualifiedName}.${this.name}`\n    }\n\n    /**\n     * Gets the JDOM parent\n     * @category JDOM\n     */\n    get parent(): JDNode {\n        return this.member\n    }\n\n    /**\n     * Gets the JDOM friendly name\n     * @category JDOM\n     */\n    get friendlyName() {\n        const parts = [this.member.friendlyName]\n        if (this.specification.name !== \"_\") parts.push(this.name)\n        return parts.join(\".\")\n    }\n\n    /**\n     * @internal\n     */\n    get dataTypeName(): string {\n        const parts = [this.member.service.specification.shortName, this.name]\n        return parts.join(\".\")\n    }\n\n    /**\n     * Gets the unit of the data stored in the field\n     * @category Data\n     */\n    get unit(): jdspec.Unit {\n        return this.specification.unit\n    }\n\n    /**\n     * Gets ``FIELD_NODE_NAME``\n     * @category JDOM\n     */\n    get nodeKind(): string {\n        return FIELD_NODE_NAME\n    }\n\n    /**\n     * @internal\n     */\n    get decoded(): DecodedMember {\n        const decoded = this.member.decoded\n        return decoded?.decoded[this.index]\n    }\n\n    /**\n     * Gets the decoded field value\n     * @category Data\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get value(): any {\n        return this.decoded?.value\n    }\n}\n\nexport default JDField\n","import { PackedSimpleValue, PackedValues } from \"./pack\"\n\n/**\n * Unpacked data mapped as an object\n * @category Data Packing\n */\nexport interface PackedObject {\n    [index: string]: PackedSimpleValue | PackedObject | PackedObject[]\n}\n\n/**\n * Unrolls an array of packed values into a friendly object structure\n * @param data\n * @param fields\n * @returns\n * @category Data Packing\n */\nexport function unpackedToObject(\n    data: PackedValues,\n    fields: jdspec.PacketMember[],\n    defaultName?: string\n): PackedObject {\n    if (!data || !fields) return undefined\n    const r: PackedObject = {}\n    for (let i = 0; i < data.length; ++i) {\n        const field = fields[i]\n        const value = data[i]\n        const { name, startRepeats } = field\n        const prettyName = name === \"_\" && defaultName ? defaultName : name\n\n        if (startRepeats) {\n            const repeatFields = fields.slice(i)\n            console.log({ value, repeatFields, data })\n            r[\"repeat\"] = value.map((rdata: PackedValues) => {\n                const r: PackedObject = {}\n                for (let i = 0; i < repeatFields.length; ++i) {\n                    const field = fields[i]\n                    const value = rdata[i]\n                    const { name } = field\n                    const prettyName =\n                        name === \"_\" && defaultName ? defaultName : name\n                    r[prettyName] = value\n                }\n                return r\n            })\n            break\n        } else r[prettyName] = value\n    }\n    return r\n}\n\n/**\n * Converts an object structure into a flat packed data array\n * @param pkt\n * @param msg\n * @returns\n * @category Data Packing\n */\nexport function objectToUnpacked(\n    pkt: jdspec.PacketInfo,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    msg: any\n): PackedValues {\n    if (!msg) return []\n\n    if (typeof msg === \"number\" || typeof msg === \"string\")\n        return [msg as number]\n    else if (typeof msg === \"boolean\") return [msg ? 1 : 0]\n    else if (Array.isArray(msg)) {\n        // assume a packaged layout\n        return msg as PackedValues\n    } else {\n        const { fields } = pkt\n        const r: PackedValues = []\n        for (let i = 0; i < fields.length; ++i) {\n            const field = fields[i]\n            const name = field.name === \"_\" ? pkt.name : field.name\n            const value = msg[name]\n            if (field.startRepeats) {\n                const repeatFields = fields.slice(i)\n                r.push(\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    (value as any[]).map(vrow => {\n                        const arow: PackedSimpleValue[] = []\n                        for (let j = 0; j < repeatFields.length; ++j) {\n                            const rfield = repeatFields[j]\n                            const rname = rfield.name\n                            arow.push(vrow[rname])\n                        }\n                        return arow\n                    })\n                )\n                break\n            } else {\n                r.push(value)\n            }\n        }\n\n        return r\n    }\n}\n","import Packet from \"./packet\"\nimport {\n    CMD_SET_REG,\n    REPORT_RECEIVE,\n    REPORT_UPDATE,\n    CHANGE,\n    CMD_GET_REG,\n    REGISTER_NODE_NAME,\n    REGISTER_REFRESH_TIMEOUT,\n    REGISTER_REFRESH_RETRY_1,\n    REGISTER_REFRESH_RETRY_0,\n    GET_ATTEMPT,\n} from \"./constants\"\nimport JDService from \"./service\"\nimport { intOfBuffer, uintOfBuffer } from \"./buffer\"\nimport { bufferEq, toHex, fromUTF8, uint8ArrayToString } from \"./utils\"\nimport { DecodedPacket } from \"./pretty\"\nimport { isRegister } from \"./spec\"\nimport JDField from \"./field\"\nimport JDServiceMemberNode from \"./servicemembernode\"\nimport JDNode from \"./node\"\nimport { jdpack, jdunpack, PackedValues } from \"./pack\"\nimport { PackedObject, unpackedToObject } from \"./packobject\"\n\n/**\n * A Jacdac register client.\n * @category JDOM\n */\nexport class JDRegister extends JDServiceMemberNode {\n    private _lastReportPkt: Packet\n    private _fields: JDField[]\n    private _lastSetTimestamp = -Infinity\n    private _lastGetTimestamp = -Infinity\n    private _lastGetAttempts = 0\n\n    /**\n     * @internal\n     */\n    constructor(service: JDService, code: number) {\n        super(service, code, isRegister)\n    }\n\n    /**\n     * Returns ``REGISTER_NODE_NAME``\n     * @category JDOM\n     */\n    get nodeKind() {\n        return REGISTER_NODE_NAME\n    }\n\n    /**\n     * Gets the list of field, if the specification is known\n     * @category JDOM\n     */\n    get fields() {\n        if (!this._fields)\n            this._fields = this.specification?.fields.map(\n                (field, index) => new JDField(this, index, field)\n            )\n        return this._fields.slice()\n    }\n\n    /**\n     * Gets the list of fields\n     * @category JDOM\n     */\n    get children(): JDNode[] {\n        return this.fields\n    }\n\n    /**\n     * Timestamp of the last ``register set`` packet\n     * @category Packets\n     */\n    get lastSetTimestamp() {\n        return this._lastSetTimestamp\n    }\n\n    /**\n     * Timestamp of the last ``register get`` packet\n     * @category Packets\n     */\n    get lastGetTimestamp() {\n        return this._lastGetTimestamp\n    }\n\n    /**\n     * Clears the get timestamp\n     * @internal\n     * @category Packets\n     */\n    clearGetTimestamp() {\n        this._lastGetTimestamp = -Infinity\n    }\n\n    /**\n     * Number of attempts to send a ``get`` packet without response\n     * @category Packets\n     */\n    get lastGetAttempts() {\n        return this._lastGetAttempts\n    }\n\n    /**\n     * Send a message to set the register value\n     * @param data packed data\n     * @param autoRefresh immediately send a ``get`` packet\n     * @returns\n     * @category Packets\n     */\n    sendSetAsync(data: Uint8Array, autoRefresh?: boolean): Promise<void> {\n        const cmd = CMD_SET_REG | this.code\n        const pkt = Packet.from(cmd, data)\n        this._lastSetTimestamp = this.service.device.bus.timestamp\n        let p = this.service.sendPacketAsync(pkt, this.service.registersUseAcks)\n        if (autoRefresh)\n            p = this.service.device.bus\n                .delay(50)\n                .then(() => this.sendGetAsync())\n        return p\n    }\n\n    /**\n     * Requests the value of the register by sending a ``get`` packet\n     * @returns\n     * @category Packets\n     */\n    sendGetAsync(): Promise<void> {\n        if (this.specification?.kind === \"const\" && this.data !== undefined)\n            return Promise.resolve()\n\n        this._lastGetTimestamp = this.service.device.bus.timestamp\n        this._lastGetAttempts++\n        const cmd = CMD_GET_REG | this.code\n        return this.service\n            .sendCmdAsync(cmd, undefined, this.service.registersUseAcks)\n            .then(() => {\n                this.emit(GET_ATTEMPT)\n            })\n    }\n\n    /**\n     * Send a message to set the register value\n     * @param values message to pack and send\n     * @param autoRefresh immediately send a ``get`` packet\n     * @category Packets\n     */\n    sendSetPackedAsync(\n        values: PackedValues,\n        autoRefresh?: boolean\n    ): Promise<void> {\n        const fmt = this.specification?.packFormat\n        if (!fmt) throw new Error(\"unknown register data format\")\n        return this.sendSetAsync(jdpack(fmt, values), autoRefresh)\n    }\n\n    /**\n     * Sends a message to set the register value as a bpolean\n     * @param value\n     * @param autoRefresh\n     * @param autoRefresh immediately send a ``get`` packet\n     * @category Packets\n     */\n    sendSetBoolAsync(value: boolean, autoRefresh?: boolean): Promise<void> {\n        return this.sendSetPackedAsync([value ? 1 : 0], autoRefresh)\n    }\n\n    /**\n     * Sends a message to set the register value as a string\n     * @param value\n     * @param autoRefresh\n     * @param autoRefresh immediately send a ``get`` packet\n     * @category Packets\n     */\n    sendSetStringAsync(value: string, autoRefresh?: boolean): Promise<void> {\n        return this.sendSetPackedAsync([value || \"\"], autoRefresh)\n    }\n\n    /**\n     * Gets the raw data from the last report packet\n     * @category Data\n     */\n    get data() {\n        return this._lastReportPkt?.data\n    }\n\n    /**\n     * Gets the timestamp when received the last report with data\n     * @category Data\n     */\n    get lastDataTimestamp() {\n        return this._lastReportPkt?.timestamp\n    }\n\n    /**\n     * Get the data from the last report packet, unpacked according to the specification.\n     * @category Data\n     */\n    get unpackedValue(): PackedValues {\n        const d = this.data\n        const fmt = this.specification?.packFormat\n        return d && fmt && jdunpack(this.data, fmt)\n    }\n\n    /**\n     * Gets the data from the last report packet, unpacked and hydrated into an object.\n     * @category Data\n     */\n    get objectValue(): PackedObject {\n        const { specification } = this\n        return unpackedToObject(\n            this.unpackedValue,\n            specification?.fields,\n            specification.name\n        )\n    }\n\n    /**\n     * Gets the data as a signed integer\n     * @category Data\n     */\n    get intValue(): number {\n        const d = this.data\n        return d && intOfBuffer(d)\n    }\n\n    /**\n     * Gets the data as a unsigned integer\n     * @category Data\n     */\n    get uintValue(): number {\n        const d = this.data\n        return d && uintOfBuffer(d)\n    }\n\n    /**\n     * Gets the data as a boolean\n     * @category Data\n     */\n    get boolValue(): boolean {\n        if (this.data === undefined) return undefined\n        return !!this.intValue\n    }\n\n    /**\n     * Gets the data as a string\n     * @category Data\n     */\n    get stringValue(): string {\n        const buf = this.data\n        if (buf === undefined) return undefined\n\n        let value: string\n        try {\n            value = fromUTF8(uint8ArrayToString(buf))\n        } catch {\n            // invalid UTF8\n            value = uint8ArrayToString(buf)\n        }\n        return value\n    }\n\n    /**\n     * Gets a pretty printed represention of the data\n     * @category Data\n     */\n    get humanValue(): string {\n        return this.decoded?.decoded?.map(field => field.humanValue).join(\",\")\n    }\n\n    /**\n     * @internal\n     */\n    toString() {\n        const d = this.data\n        return `${this.id} ${d ? toHex(d) : \"\"}`\n    }\n\n    /**\n     * @internal\n     */\n    get decoded(): DecodedPacket {\n        return this._lastReportPkt?.decoded\n    }\n\n    /**\n     * Refresh the value of the register within a timeout\n     * @param skipIfValue don't refesh if any data if available\n     * @returns\n     * @category Data\n     */\n    refresh(skipIfValue?: boolean): Promise<void> {\n        // don't refetch consts\n        // don't refetch if already data\n        if (\n            !!this.data &&\n            (skipIfValue || this.specification?.kind === \"const\")\n        )\n            return\n\n        const bus = this.service.device.bus\n        return bus.withTimeout(\n            REGISTER_REFRESH_TIMEOUT,\n            new Promise<void>((resolve, reject) => {\n                this.once(REPORT_RECEIVE, () => {\n                    const f = resolve\n                    resolve = null\n                    f()\n                })\n                // re-send get if no answer within 40ms and 90ms\n                this.sendGetAsync()\n                    .then(() => bus.delay(REGISTER_REFRESH_RETRY_0))\n                    .then(() => {\n                        if (resolve)\n                            return this.sendGetAsync().then(() =>\n                                bus.delay(REGISTER_REFRESH_RETRY_1)\n                            )\n                    })\n                    .then(() => {\n                        if (resolve) return this.sendGetAsync()\n                    })\n                    .catch(e => reject(e))\n            })\n        )\n    }\n\n    /**\n     * @internal\n     */\n    processPacket(pkt: Packet) {\n        if (pkt.isRegisterGet) this.processReport(pkt)\n        else if (pkt.isRegisterSet) {\n            // another device sent a set packet to this register\n            // so most likely it's value changed\n            // clear any data caching to force updating the value\n            this.clearGetTimestamp()\n        }\n    }\n\n    private processReport(pkt: Packet) {\n        const updated = !bufferEq(this.data, pkt.data)\n        this._lastReportPkt = pkt\n        this._lastGetAttempts = 0 // reset counter\n        this._lastGetTimestamp = this.service.device.bus.timestamp // reset time counter too\n        this.emit(REPORT_RECEIVE, this)\n        if (updated) {\n            this.emitPropagated(REPORT_UPDATE, this)\n            this.emit(CHANGE)\n        }\n    }\n\n    /**\n     * @internal\n     */\n    compareTo(b: JDRegister) {\n        return this.code - b.code || this.service.compareTo(b.service)\n    }\n}\n\nexport default JDRegister\n","import JDNode from \"./node\"\nimport JDService from \"./service\"\nimport Packet from \"./packet\"\nimport {\n    CHANGE,\n    CMD_EVENT_COUNTER_MASK,\n    EVENT,\n    EVENT_NODE_NAME,\n} from \"./constants\"\nimport { isEvent } from \"./spec\"\nimport JDServiceMemberNode from \"./servicemembernode\"\nimport { DecodedPacket } from \"./pretty\"\nimport JDField from \"./field\"\n\n/**\n * A Jacdac event client.\n * @category JDOM\n */\nexport class JDEvent extends JDServiceMemberNode {\n    private _lastReportPkt: Packet\n    private _fields: JDField[]\n    private _count = 0\n\n    /**\n     * @internal\n     */\n    constructor(service: JDService, code: number) {\n        super(service, code, isEvent)\n    }\n\n    /**\n     * Returns the ``EVENT_NODE_NAME`` identifier\n     * @category JDOM\n     */\n    get nodeKind() {\n        return EVENT_NODE_NAME\n    }\n\n    /**\n     * Gets the field node\n     * @category Service Clients\n     */\n    get fields() {\n        if (!this._fields)\n            this._fields = this.specification?.fields.map(\n                (field, index) => new JDField(this, index, field)\n            )\n        return this._fields.slice()\n    }\n\n    /**\n     * Gets the list of fields\n     * @category JDOM\n     */\n    get children(): JDNode[] {\n        return this.fields\n    }\n\n    /**\n     * Gets the raw data attached to the last event packet\n     * @category Data\n     */\n    get data() {\n        return this._lastReportPkt?.data\n    }\n\n    /**\n     * Gets the unpacked data attached to the last event packet, if the event specification is known.\n     * @category Data\n     */\n    get unpacked() {\n        const { packFormat } = this.specification || {}\n        return packFormat && this._lastReportPkt?.jdunpack(packFormat)\n    }\n\n    /**\n     * Gets a counter of occurences for this event.\n     * @category Data\n     */\n    get count() {\n        return this._count\n    }\n\n    /**\n     * Gets the timestamp of the last packet with data received for this event.\n     * @category Data\n     */\n    get lastDataTimestamp() {\n        return this._lastReportPkt?.timestamp\n    }\n    /**\n     * @internal\n     */\n    get decoded(): DecodedPacket {\n        return this._lastReportPkt?.decoded\n    }\n\n    /**\n     * @internal\n     */\n    processEvent(pkt: Packet) {\n        const { device } = this.service\n        const ec = (device.eventCounter || 0) + 1\n        // how many packets ahead and behind current are we?\n        const ahead = (pkt.eventCounter - ec) & CMD_EVENT_COUNTER_MASK\n        const behind = (ec - pkt.eventCounter) & CMD_EVENT_COUNTER_MASK\n        // ahead == behind == 0 is the usual case, otherwise\n        // behind < 60 means this is an old event (or retransmission of something we already processed)\n        const old = behind < 60\n        const missed5 = ahead < 5\n        const isahead = ahead > 0\n\n        // ahead < 5 means we missed at most 5 events,\n        // so we ignore this one and rely on retransmission\n        // of the missed events, and then eventually the current event\n        if (isahead && (old || missed5)) return\n\n        this._lastReportPkt = pkt\n        this._count++\n        this.emitPropagated(EVENT, this)\n        this.emit(CHANGE)\n\n        // update device counter\n        device.eventCounter = pkt.eventCounter\n    }\n}\n\nexport default JDEvent\n","import JDEventSource from \"./eventsource\"\n\n/**\n * Base class for clients\n * @category Clients\n */\nexport class JDClient extends JDEventSource {\n    private unsubscribers: (() => void)[] = []\n    protected unmounted = false\n    constructor() {\n        super()\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected log(msg: any) {\n        console.log(msg)\n    }\n\n    mount(unsubscribe: () => void): () => void {\n        this.unmounted = false\n        if (unsubscribe && this.unsubscribers.indexOf(unsubscribe) < 0)\n            this.unsubscribers.push(unsubscribe)\n        return unsubscribe\n    }\n\n    unmount() {\n        const us = this.unsubscribers\n        this.unsubscribers = []\n        us.forEach(u => u())\n        this.unmounted = true\n    }\n}\nexport default JDClient\n","import { toHex } from \"./utils\"\n\nexport function cryptoRandomUint32(length: number): Uint32Array {\n    if (typeof window === \"undefined\") return undefined // not supported\n    const vals = new Uint32Array(length)\n    window.crypto.getRandomValues(vals)\n    return vals\n}\n\nexport function anyRandomUint32(length: number): Uint32Array {\n    let r = cryptoRandomUint32(length)\n    if (!r) {\n        r = new Uint32Array(length)\n        for (let i = 0; i < r.length; ++i)\n            r[i] = (Math.random() * 0x1_0000_0000) >>> 0\n    }\n    return r\n}\n\nexport function randomUInt(max: number) {\n    const arr = anyRandomUint32(1)\n    return arr[0] % max\n}\n\nexport function randomBytes(n: number) {\n    const buf = anyRandomUint32(n)\n    const r = new Uint8Array(buf.length)\n    for (let i = 0; i < n; ++i) r[i] = buf[i] & 0xff\n    return r\n}\n\nexport function randomDeviceId() {\n    const devId = anyRandomUint32(8)\n    for (let i = 0; i < 8; ++i) devId[i] &= 0xff\n    return toHex(devId)\n}\n","import JDDevice from \"./device\"\nimport {\n    PIPE_PORT_SHIFT,\n    PIPE_COUNTER_MASK,\n    PIPE_CLOSE_MASK,\n    JD_SERVICE_INDEX_PIPE,\n    PIPE_METADATA_MASK,\n    PACKET_RECEIVE,\n    DATA,\n    CLOSE,\n} from \"./constants\"\nimport Packet from \"./packet\"\nimport JDBus from \"./bus\"\nimport { signal, fromHex, throwError, toHex } from \"./utils\"\nimport { JDClient } from \"./client\"\nimport { jdpack } from \"./pack\"\nimport { randomUInt } from \"./random\"\n\nconst { warn } = console\n\nexport class OutPipe {\n    private _count = 0\n\n    constructor(\n        private device: JDDevice,\n        private port: number,\n        readonly hosted?: boolean\n    ) {}\n\n    static from(bus: JDBus, pkt: Packet, hosted?: boolean) {\n        const [idbuf, port] = pkt.jdunpack<[Buffer, number]>(\"b[8] u16\")\n        const id = toHex(idbuf)\n        const dev = bus.device(id, false, pkt)\n        return new OutPipe(dev, port, hosted)\n    }\n\n    get count() {\n        return this._count\n    }\n\n    get isOpen() {\n        return this.device != null\n    }\n\n    send(buf: Uint8Array) {\n        return this.sendData(buf, 0)\n    }\n\n    sendMeta(buf: Uint8Array) {\n        return this.sendData(buf, PIPE_METADATA_MASK)\n    }\n\n    async respondForEach<T>(\n        items: ArrayLike<T>,\n        converter: (item: T) => Uint8Array\n    ) {\n        try {\n            const n = items.length\n            for (let i = 0; i < n; ++i) {\n                const item = items[i]\n                const data = converter(item)\n                await this.send(data)\n            }\n        } finally {\n            await this.close()\n        }\n    }\n\n    private async sendData(buf: Uint8Array, flags: number) {\n        if (!this.device) {\n            warn(\"sending data over closed pipe\")\n            return\n        }\n        const cmd =\n            (this.port << PIPE_PORT_SHIFT) |\n            flags |\n            (this._count & PIPE_COUNTER_MASK)\n        const pkt = Packet.from(cmd, buf)\n        pkt.serviceIndex = JD_SERVICE_INDEX_PIPE\n        this.device.sendPktWithAck(pkt).then(\n            () => {},\n            err => {\n                console.log(err)\n                this.free()\n            }\n        )\n        if (this.hosted) this.device.bus.processPacket(pkt)\n        this._count++\n    }\n\n    private free() {\n        this.device = null\n        this.port = null\n    }\n\n    async close() {\n        await this.sendData(new Uint8Array(0), PIPE_CLOSE_MASK)\n        this.free()\n    }\n}\n\nexport class InPipe extends JDClient {\n    private _port: number\n    private _count = 0\n\n    constructor(protected readonly bus: JDBus) {\n        super()\n\n        this._handlePacket = this._handlePacket.bind(this)\n        this.allocPort()\n        this.mount(\n            this.bus.selfDevice.subscribe(PACKET_RECEIVE, this._handlePacket)\n        )\n    }\n\n    get port() {\n        return this._port\n    }\n\n    get count() {\n        return this._count\n    }\n\n    get isOpen() {\n        return this._port != null\n    }\n\n    private allocPort() {\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            this._port = 1 + randomUInt(511)\n            const info = this.bus.selfDevice.port(this._port)\n            if (!info.localPipe && !info.pipeType) {\n                info.localPipe = this\n                break\n            }\n        }\n    }\n\n    openCommand(cmd: number) {\n        if (!this.isOpen) throwError(\"trying to access a closed pipe\")\n        const b = jdpack<[Uint8Array, number, number]>(\"b[8] u16 u16\", [\n            fromHex(this.bus.selfDeviceId),\n            this._port,\n            0,\n        ])\n        return Packet.from(cmd, b)\n    }\n\n    private _handlePacket(pkt: Packet) {\n        if (!pkt.isPipe) return\n        if (pkt.pipePort !== this._port) return\n        if (\n            (pkt.serviceCommand & PIPE_COUNTER_MASK) ==\n            (this._count & PIPE_COUNTER_MASK)\n        ) {\n            this._count++\n            this.emit(DATA, pkt)\n            if (pkt.serviceCommand & PIPE_CLOSE_MASK) {\n                this.close()\n            }\n        }\n    }\n\n    close() {\n        if (this._port == null) return\n        this.emit(CLOSE)\n        this._port = null\n        this.bus.selfDevice.port(this._port).localPipe = undefined\n        this.unmount()\n    }\n}\n\nexport class InPipeReader extends InPipe {\n    private done = signal()\n    private meta: Packet[] = []\n    private output: Packet[] = []\n\n    constructor(bus: JDBus) {\n        super(bus)\n        this.mount(\n            this.subscribe(DATA, (pkt: Packet) => {\n                if (pkt.serviceCommand & PIPE_METADATA_MASK) this.meta.push(pkt)\n                else this.output.push(pkt)\n            })\n        )\n        this.mount(this.subscribe(CLOSE, this.done.signal))\n    }\n\n    async readData(timeout = 500): Promise<Uint8Array[]> {\n        const r = await this.readAll(timeout)\n        return r.output.map(p => p.data).filter(b => !!b?.length)\n    }\n\n    async readAll(timeout = 500) {\n        const res = await this.bus.withTimeout(timeout, this.done.signalled)\n        if (!res) throw new Error(\"Timeout reading pipe: \" + timeout + \"ms\")\n        return {\n            meta: this.meta,\n            output: this.output,\n        }\n    }\n}\n","import JDDevice from \"./device\"\nimport Packet from \"./packet\"\nimport { serviceName } from \"./pretty\"\nimport JDRegister from \"./register\"\nimport {\n    PACKET_RECEIVE,\n    PACKET_SEND,\n    SERVICE_NODE_NAME,\n    REPORT_RECEIVE,\n    SERVICE_CLIENT_ADDED,\n    SERVICE_CLIENT_REMOVED,\n    CHANGE,\n    ROLE_CHANGE,\n} from \"./constants\"\nimport JDNode from \"./node\"\nimport {\n    serviceSpecificationFromClassIdentifier,\n    isRegister,\n    isReading,\n    isEvent,\n    isValue,\n    isIntensity,\n    isOptionalReadingRegisterCode,\n    isConstRegister,\n} from \"./spec\"\nimport JDEvent from \"./event\"\nimport { strcmp } from \"./utils\"\nimport {\n    BaseEvent,\n    BaseReg,\n    SystemEvent,\n    SystemReg,\n} from \"../../jacdac-spec/dist/specconstants\"\nimport { JDServiceClient } from \"./serviceclient\"\nimport { InPipeReader } from \"./pipes\"\nimport { jdpack, jdunpack, PackedValues } from \"./pack\"\nimport Flags from \"./flags\"\nimport { isMixinService } from \"../../jacdac-spec/spectool/jdutils\"\nimport JDServiceServer from \"./servers/serviceserver\"\n\n/**\n * A Jacdac service client hosting registers, events.\n * @category JDOM\n */\nexport class JDService extends JDNode {\n    /**\n     * Gets the service class\n     * @category Control\n     */\n    readonly serviceClass: number\n    private _role: string\n    private _registers: JDRegister[]\n    private _events: JDEvent[]\n    private _reports: Packet[] = []\n    private _specification: jdspec.ServiceSpec = null\n    // packets received since last announce\n    public registersUseAcks = false\n    private readonly _clients: JDServiceClient[] = []\n\n    private _twin: JDServiceServer\n\n    /**\n     * Gets the device this service belongs to\n     * @category JDOM\n     */\n    public readonly device: JDDevice\n    /**\n     * Gets the service index in the service list\n     * @category Control\n     */\n    public readonly serviceIndex: number\n\n    /**\n     * @internal\n     */\n    constructor(device: JDDevice, serviceIndex: number) {\n        super()\n        this.device = device\n        this.serviceIndex = serviceIndex\n        this.serviceClass = this.device.serviceClassAt(this.serviceIndex)\n\n        const statusCodeChanged = this.event(BaseEvent.StatusCodeChanged)\n        statusCodeChanged.on(CHANGE, () => {\n            // todo update status code with event payload\n            const { data } = statusCodeChanged\n            console.debug(`${this}: status code changed event`, { data })\n            // schedule data update\n            const statusCode = this.register(BaseReg.StatusCode)\n            statusCode?.clearGetTimestamp()\n        })\n    }\n\n    /**\n     * Gets the node identifier\n     * @category JDOM\n     */\n    get id() {\n        return `${this.nodeKind}:${\n            this.device.deviceId\n        }:${this.serviceIndex.toString(16)}`\n    }\n\n    /**\n     * Gets the ``SERVICE_NODE_NAME`` identifier\n     * @category JDOM\n     */\n    get nodeKind() {\n        return SERVICE_NODE_NAME\n    }\n\n    /**\n     * Gets the service name\n     * @category JDOM\n     */\n    get name() {\n        return serviceName(this.serviceClass)?.toLowerCase()\n    }\n\n    /**\n     * Gets the service name and parent names\n     * @category JDOM\n     */\n    get friendlyName() {\n        const parts = [this.device.friendlyName]\n        if (\n            this.device.services({ serviceClass: this.serviceClass }).length > 1\n        )\n            parts.push(`[${this.serviceIndex.toString(16)}]`)\n        return parts.join(\".\")\n    }\n\n    /**\n     * Gets the service qualified name\n     * @category JDOM\n     */\n    get qualifiedName() {\n        return `${this.device.qualifiedName}[${this.serviceIndex.toString(16)}]`\n    }\n\n    /**\n     * Gets the device holding the service\n     * @category JDOM\n     */\n    get parent(): JDNode {\n        return this.device\n    }\n\n    get role(): string {\n        return this._role\n    }\n\n    set role(value: string) {\n        if (value !== this._role) {\n            this._role = value\n            this.emit(ROLE_CHANGE)\n            this.emit(CHANGE)\n        }\n    }\n\n    report(identifier: number) {\n        return this._reports.find(r => r.registerIdentifier === identifier)\n    }\n\n    get reports() {\n        return this._reports.slice(0)\n    }\n\n    get mixins() {\n        // find all 0x2 services follow this service\n        const r = []\n        const { serviceClasses, serviceLength } = this.device\n        for (\n            let i = this.serviceIndex + 1;\n            i < serviceLength && isMixinService(serviceClasses[i]);\n            ++i\n        ) {\n            r.push(this.device.service(i))\n        }\n        return r\n    }\n\n    get isMixin() {\n        return isMixinService(this.serviceClass)\n    }\n\n    get twin(): JDServiceServer {\n        return this._twin\n    }\n\n    set twin(server: JDServiceServer) {\n        if (this._twin === server) return\n\n        if (this._twin) this._twin.twin = undefined\n        this._twin = server\n        server.twin = this\n        this.emit(CHANGE)\n    }\n\n    private _readingRegister: JDRegister\n    /**\n     * Gets the ``reading`` register associated to this service, if the specification supports it.\n     * @category Registers\n     */\n    get readingRegister(): JDRegister {\n        if (!this._readingRegister) {\n            const pkt = this.specification?.packets.find(pkt => isReading(pkt))\n            this._readingRegister = pkt && this.register(pkt.identifier)\n        }\n        return this._readingRegister\n    }\n\n    private _valueRegister: JDRegister\n    /**\n     * Gets the ``value`` register associated to this service, if the specification supports it.\n     * @category Registers\n     */\n    get valueRegister(): JDRegister {\n        if (!this._valueRegister) {\n            const pkt = this.specification?.packets.find(pkt => isValue(pkt))\n            this._valueRegister = pkt && this.register(pkt.identifier)\n        }\n        return this._valueRegister\n    }\n\n    private _intensityRegister: JDRegister\n    /**\n     * Gets the ``intensity`` register associated to this service, if the specification supports it.\n     * @category Registers\n     */\n    get intensityRegister(): JDRegister {\n        if (!this._intensityRegister) {\n            const pkt = this.specification?.packets.find(pkt =>\n                isIntensity(pkt)\n            )\n            this._intensityRegister = pkt && this.register(pkt.identifier)\n        }\n        return this._intensityRegister\n    }\n\n    private _statusCodeRegister: JDRegister\n    /**\n     * Gets the ``status_code`` register associated to this service, if the specification supports it.\n     * @category Registers\n     */\n    get statusCodeRegister(): JDRegister {\n        if (!this._statusCodeRegister) {\n            const pkt = this.specification?.packets.find(\n                pkt => pkt.identifier === SystemReg.StatusCode\n            )\n            this._statusCodeRegister = pkt && this.register(pkt.identifier)\n        }\n        return this._statusCodeRegister\n    }\n\n    /**\n     * Gets the service instance name, if resolved\n     * @category Control\n     */\n    get instanceName() {\n        const r = this.register(SystemReg.InstanceName)\n        return r?.stringValue\n    }\n\n    /**\n     * Resolves the service instance name, if resolved\n     * @category Control\n     */\n    async resolveInstanceName() {\n        const r = this.register(SystemReg.InstanceName)\n        await r?.refresh()\n        return r?.stringValue\n    }\n\n    /**\n     * Gets the specification of the service. Undefined if unknown\n     * @category Services\n     */\n    get specification() {\n        if (this._specification === null)\n            this._specification = serviceSpecificationFromClassIdentifier(\n                this.serviceClass\n            )\n        return this._specification\n    }\n\n    get events() {\n        return (\n            this.specification?.packets\n                .filter(isEvent)\n                .map(info => this.event(info.identifier)) || []\n        )\n    }\n\n    registers() {\n        if (!this._registers) {\n            const spec = this.specification\n            this._registers = (spec?.packets || [])\n                .filter(isRegister)\n                .map(pkt => new JDRegister(this, pkt.identifier))\n        }\n        return this._registers.slice(0)\n    }\n\n    /**\n     * Gets the registers and events\n     * @category JDOM\n     */\n    get children(): JDNode[] {\n        return [...this.registers(), ...this.events]\n    }\n\n    /**\n     * Gets a register for the given code\n     * @param registerCode register identifier as found in the specification\n     * @returns a register instance (if found in specifiaction)\n     * @category Registers\n     */\n    register(registerCode: number): JDRegister {\n        if (isNaN(registerCode)) return undefined\n        // cache known registers\n        this.registers()\n        let register = this._registers.find(reg => reg.code === registerCode)\n        // we may not have a spec.\n        if (!register) {\n            const spec = this.specification\n            if (\n                spec &&\n                !spec.packets.some(\n                    pkt => isRegister(pkt) && pkt.identifier === registerCode\n                )\n            ) {\n                if (\n                    Flags.diagnostics &&\n                    !isOptionalReadingRegisterCode(registerCode)\n                )\n                    console.debug(\n                        `attempting to access register ${\n                            SystemReg[registerCode] ||\n                            `0x${registerCode.toString(16)}`\n                        }`\n                    )\n                return undefined\n            }\n            this._registers.push(\n                (register = new JDRegister(this, registerCode))\n            )\n        }\n        return register\n    }\n\n    /**\n     * Gets an event for the given code\n     * @param eventCode event identifier as found in the specification\n     * @returns a event instance (if found in specifiaction)\n     * @category Events\n     */\n    event(eventCode: number): JDEvent {\n        if (isNaN(eventCode)) return undefined\n\n        if (!this._events) this._events = []\n        let event = this._events.find(ev => ev.code === eventCode)\n        if (!event) {\n            const spec = this.specification\n            if (\n                spec &&\n                !spec.packets.some(\n                    pkt => isEvent(pkt) && pkt.identifier === eventCode\n                )\n            ) {\n                if (Flags.diagnostics)\n                    console.debug(\n                        `attempting to access event ${\n                            SystemEvent[eventCode] ||\n                            `0x${eventCode.toString(16)}`\n                        }`\n                    )\n                return undefined\n            }\n            this._events.push((event = new JDEvent(this, eventCode)))\n        }\n        return event\n    }\n\n    /**\n     * Send packet to the service server\n     * @param pkt packet to send\n     * @param ack acknolegment required\n     * @category Packets\n     */\n    async sendPacketAsync(pkt: Packet, ack?: boolean) {\n        pkt.device = this.device\n        pkt.serviceIndex = this.serviceIndex\n        if (ack !== undefined) pkt.requiresAck = !!ack\n        if (pkt.requiresAck) await this.device.sendPktWithAck(pkt)\n        else await pkt.sendCmdAsync(this.device)\n        this.emit(PACKET_SEND, pkt)\n\n        // invalid register after a command call to refresh their values asap\n        if (pkt.isCommand && !pkt.isRegisterGet && !pkt.isRegisterSet)\n            this.invalidateRegisterValues(pkt)\n    }\n\n    /**\n     * Send a command to the service server\n     * @param pkt packet to send\n     * @param ack acknolegment required\n     * @category Packets\n     */\n    sendCmdAsync(cmd: number, data?: Uint8Array, ack?: boolean) {\n        const pkt = data ? Packet.from(cmd, data) : Packet.onlyHeader(cmd)\n        return this.sendPacketAsync(pkt, ack)\n    }\n\n    /**\n     * Packs values and sends command to the service server\n     * @param cmd packet to send\n     * @param values unpacked values, layed as specified\n     * @param ack acknolegment required\n     * @category Packets\n     */\n    sendCmdPackedAsync<TValues extends PackedValues>(\n        cmd: number,\n        values?: TValues,\n        ack?: boolean\n    ) {\n        const spec = this.specification.packets.find(\n            pkt => pkt.kind === \"command\" && pkt.identifier === cmd\n        )\n        const packFormat = spec?.packFormat\n        if (!packFormat) throw new Error(\"Unknown packing format\")\n        const data = values ? jdpack(packFormat, values) : undefined\n        return this.sendCmdAsync(cmd, data, ack)\n    }\n\n    /**\n     * Send a command and await response to the service server\n     * @param pkt packet to send\n     * @param ack acknolegment required\n     * @category Packets\n     */\n    sendCmdAwaitResponseAsync(pkt: Packet, timeout = 500) {\n        const { bus } = this.device\n        return new Promise<Packet>((resolve, reject) => {\n            const handleRes = (resp: Packet) => {\n                if (resp.serviceCommand == pkt.serviceCommand) {\n                    this.off(REPORT_RECEIVE, handleRes)\n                    if (resolve) resolve(resp)\n                    resolve = null\n                }\n            }\n            bus.delay(timeout).then(() => {\n                if (!resolve) return\n                resolve = null\n                this.off(REPORT_RECEIVE, handleRes)\n                reject(\n                    new Error(\n                        `timeout (${timeout}ms) waiting for response to ${pkt}`\n                    )\n                )\n            })\n            this.sendPacketAsync(pkt).then(() => {\n                this.on(REPORT_RECEIVE, handleRes)\n            })\n            // the handler remove either upon timeout,\n            // or on first invocation of handleRes()\n        })\n    }\n\n    /**\n     * @internal\n     */\n    processPacket(pkt: Packet) {\n        this.emit(PACKET_RECEIVE, pkt)\n        if (pkt.isReport) {\n            this.emit(REPORT_RECEIVE, pkt)\n            if (pkt.isRegisterGet) {\n                const id = pkt.registerIdentifier\n                const reg = this.register(id)\n                if (reg) reg.processPacket(pkt)\n            } else if (pkt.isEvent) {\n                const ev = this.event(pkt.eventCode)\n                if (ev) ev.processEvent(pkt)\n            } else if (pkt.isCommand) {\n                // this is a report...\n                console.log(\"cmd report\", { pkt })\n            }\n        } else if (pkt.isRegisterSet) {\n            const id = pkt.registerIdentifier\n            const reg = this.register(id)\n            if (reg) reg.processPacket(pkt)\n        } else if (pkt.isCommand) {\n            this.invalidateRegisterValues(pkt)\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private invalidateRegisterValues(pkt: Packet) {\n        //console.log(`clearing register get timestamp`, pkt)\n        this.registers()\n            .filter(r => r.specification && !isConstRegister(r.specification))\n            .forEach(r => r.clearGetTimestamp())\n    }\n\n    /**\n     * @internal\n     */\n    compareTo(b: JDService): number {\n        return (\n            this.serviceClass - b.serviceClass ||\n            strcmp(this.device.deviceId, b.device.deviceId) ||\n            this.serviceIndex - b.serviceIndex\n        )\n    }\n\n    get clients(): JDServiceClient[] {\n        return this._clients?.slice(0) || []\n    }\n\n    addClient(client: JDServiceClient) {\n        if (client && this._clients.indexOf(client) < 0) {\n            this._clients.push(client)\n            this.emit(SERVICE_CLIENT_ADDED, client)\n        }\n    }\n\n    removeClient(client: JDServiceClient) {\n        const i = this._clients.indexOf(client)\n        if (i > -1) {\n            this._clients.splice(i, 1)\n            this.emit(SERVICE_CLIENT_REMOVED, client)\n        }\n    }\n\n    async receiveWithInPipe<TValues extends PackedValues>(\n        cmd: number,\n        packFormat: string,\n        timeout?: number\n    ) {\n        const inp = new InPipeReader(this.device.bus)\n        await this.sendPacketAsync(inp.openCommand(cmd), true)\n        const recv: TValues[] = []\n        for (const buf of await inp.readData(timeout)) {\n            const values = jdunpack<TValues>(buf, packFormat)\n            recv.push(values)\n        }\n        return recv\n    }\n}\n\nexport default JDService\n","import JDEventSource from \"./eventsource\"\nimport { jdpack } from \"./pack\"\nimport JDService from \"./service\"\n\nfunction trgbToValues(trgb: number) {\n    return [\n        (trgb >> 16) & 0xff,\n        (trgb >> 8) & 0xff,\n        trgb & 0xff,\n        (trgb >> 24) & 0xff,\n    ]\n}\n\nexport class LEDController extends JDEventSource {\n    constructor(\n        public readonly service: JDService,\n        public readonly command: number\n    ) {\n        super()\n    }\n\n    async blink(from: number, to: number, interval: number, repeat: number) {\n        const on = jdpack(\"u8 u8 u8 u8\", trgbToValues(from))\n        const off = jdpack(\"u8 u8 u8 u8\", trgbToValues(to))\n        const { bus } = this.service.device\n        for (let i = 0; i < repeat; ++i) {\n            await this.service.sendCmdAsync(this.command, on)\n            await bus.delay(interval - 1)\n            await this.service.sendCmdAsync(this.command, off)\n            await bus.delay(interval - 1)\n        }\n    }\n}\nexport default LEDController\n","import Packet from \"./packet\"\nimport {\n    JD_SERVICE_INDEX_CTRL,\n    DEVICE_ANNOUNCE,\n    DEVICE_CHANGE,\n    ANNOUNCE,\n    DISCONNECT,\n    JD_ADVERTISEMENT_0_COUNTER_MASK,\n    DEVICE_RESTART,\n    RESTART,\n    CHANGE,\n    PACKET_RECEIVE,\n    PACKET_REPORT,\n    PACKET_EVENT,\n    DEVICE_FIRMWARE_INFO,\n    ControlCmd,\n    DEVICE_NODE_NAME,\n    LOST,\n    DEVICE_LOST,\n    DEVICE_FOUND,\n    FOUND,\n    JD_SERVICE_INDEX_CRC_ACK,\n    ACK_MIN_DELAY,\n    ACK_MAX_DELAY,\n    ControlReg,\n    USB_TRANSPORT,\n    PACKETIO_TRANSPORT,\n    META_ACK_FAILED,\n    ControlAnnounceFlags,\n    IDENTIFY_DURATION,\n    PACKET_ANNOUNCE,\n    BLUETOOTH_TRANSPORT,\n    ERROR,\n    SRV_CONTROL,\n    SRV_LOGGER,\n    REPORT_UPDATE,\n    SERIAL_TRANSPORT,\n    WEBSOCKET_TRANSPORT,\n    DEVICE_PACKET_ANNOUNCE,\n} from \"./constants\"\nimport { read32, bufferEq, setAckError, read16 } from \"./utils\"\nimport { getNumber, NumberFormat } from \"./buffer\"\nimport JDBus from \"./bus\"\nimport JDService from \"./service\"\nimport { serviceClass, shortDeviceId } from \"./pretty\"\nimport JDNode from \"./node\"\nimport { isInstanceOf } from \"./spec\"\nimport { FirmwareInfo } from \"./flashing\"\nimport LEDController from \"./ledcontroller\"\nimport JDEventSource from \"./eventsource\"\nimport { ServiceFilter } from \"./filters/servicefilter\"\nimport { randomDeviceId } from \"./random\"\nimport Flags from \"./flags\"\n\n/**\n * Pipe information\n * @category Runtime\n */\nexport interface PipeInfo {\n    pipeType?: string\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    localPipe?: any\n}\n\ninterface AckAwaiter {\n    pkt: Packet\n    retriesLeft: number\n    okCb: () => void\n    errCb: () => void\n}\n\nexport interface DeviceStats {\n    dropped: number\n    restarts: number\n    announce: number\n}\n\n/**\n * Collects packet statistics about the device\n * @category JDOM\n */\nexport class DeviceStatsMonitor extends JDEventSource {\n    // counter\n    private _receivedPackets = 0\n    private _restarts = 0\n    private _announce = 0\n\n    // horizon\n    private readonly _data: {\n        received: number\n        total: number\n        restarts: number\n    }[] = Array(0xf << 2)\n        .fill(0)\n        .map(() => ({ received: 0, total: 0, restarts: 0 }))\n    private _dataIndex = 0\n\n    /**\n     * @internal\n     */\n    constructor() {\n        super()\n    }\n\n    /**\n     * Number of announce packets received by the device\n     **/\n    get announce() {\n        return this._announce\n    }\n\n    /**\n     * Average packet dropped per announce period\n     * @category Statistics\n     */\n    get dropped(): number {\n        const r =\n            this._data\n                .filter(e => !!e.total) // ignore total 0\n                .reduce((s, e) => s + (e.total - e.received), 0) /\n                this._data.length || 0\n        return r\n    }\n\n    /**\n     * Number of restarts within the last 64 announce packets\n     */\n    get restarts(): number {\n        const r = this._data.reduce((s, e) => s + e.restarts, 0)\n        return r\n    }\n\n    /**\n     * Gets the current stats\n     */\n    get current(): DeviceStats {\n        const { dropped, restarts, announce } = this\n        return { dropped, restarts, announce }\n    }\n\n    /**\n     * @internal\n     */\n    processAnnouncement(pkt: Packet) {\n        this._announce++\n\n        const { current: oldCurrent } = this\n        // collect metrics\n        const received = this._receivedPackets\n        const total = pkt.data[2]\n        const restarts = this._restarts\n\n        this._data[this._dataIndex] = { received, total, restarts }\n        this._dataIndex = (this._dataIndex + 1) % this._data.length\n\n        // reset counter\n        this._receivedPackets = 0\n        this._restarts = 0\n\n        const { current } = this\n        if (\n            oldCurrent.dropped !== current.dropped ||\n            oldCurrent.restarts !== current.restarts\n        )\n            this.emit(CHANGE)\n    }\n\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    processPacket(pkt: Packet) {\n        this._receivedPackets++\n    }\n\n    /**\n     * @internal\n     */\n    processRestart() {\n        this._restarts++\n        this._announce = 0\n    }\n}\n\n/**\n * A Jacdac device hosting services.\n * @category JDOM\n */\nexport class JDDevice extends JDNode {\n    /**\n     * Indicates if the device is connected to a bus\n     * @category Lifecycle\n     */\n    connected: boolean\n    private _source: string\n    private _replay: boolean\n    private _lost: boolean\n    private _servicesData: Uint8Array\n    private _statusLight: LEDController\n    /**\n     * Timestamp of the last packet received from the device\n     * @category Lifecycle\n     */\n    lastSeen: number\n    /**\n     * Timestamp of the last service update packet received from the device\n     * @category Lifecycle\n     */\n    lastServiceUpdate: number\n    private _shortId: string\n    private _anonymizedId: string\n    private _services: JDService[]\n    private _ports: Record<string, PipeInfo>\n    private _ackAwaiting: AckAwaiter[]\n    private _flashing = false\n    private _identifying: boolean\n    private _eventCounter: number\n    /**\n     * Gets the bus this device belongs to\n     * @category JDOM\n     */\n    public readonly bus: JDBus\n    /**\n     * Gets the device identifier\n     * @category Control\n     */\n    public readonly deviceId: string\n\n    /**\n     * Gets a random device id for the lifetime of this object.\n     */\n    public get anonymizedDeviceId() {\n        if (!this._anonymizedId) this._anonymizedId = randomDeviceId()\n        return this._anonymizedId\n    }\n\n    /**\n     * @internal\n     */\n    constructor(bus: JDBus, deviceId: string, pkt?: Packet) {\n        super()\n        this.bus = bus\n        this.deviceId = deviceId\n        this.connected = true\n        this._lost = false\n        this._identifying = false\n\n        this._source = pkt?.sender\n        this._replay = !!pkt?.replay\n    }\n\n    /**\n     * Quality of service statistics for this device\n     * @category Diagnostics\n     */\n    readonly stats = new DeviceStatsMonitor()\n\n    /**\n     * Gets a description of the device.\n     * @returns a descriptive string for this device\n     * @category Diagnostics\n     */\n    describe() {\n        const ignoredServices = [SRV_CONTROL, SRV_LOGGER]\n        return (\n            this.toString() +\n            (this.isPhysical ? \"\" : \" (sim)\") +\n            \": \" +\n            this.services()\n                .filter(srv => ignoredServices.indexOf(srv.serviceClass) < 0)\n                .map(\n                    s =>\n                        s.instanceName ||\n                        s.specification?.camelName ||\n                        s.serviceClass.toString(16)\n                )\n                .join(\", \")\n        )\n    }\n\n    /**\n     * Gets a unique identifier for this device in the bus\n     * @category JDOM\n     */\n    get id() {\n        return `${this.nodeKind}:${this.deviceId}`\n    }\n\n    /**\n     * Gets the short id of the device\n     * @category JDOM\n     */\n    get name() {\n        return this.shortId\n    }\n\n    /**\n     * Identifies node as a device\n     * @category JDOM\n     */\n    get nodeKind() {\n        return DEVICE_NODE_NAME\n    }\n\n    /**\n     * Indicates if the devices is a physical device, not emulated.\n     * @category Transport\n     */\n    get isPhysical() {\n        return (\n            this._source === USB_TRANSPORT ||\n            this._source === BLUETOOTH_TRANSPORT ||\n            this._source === SERIAL_TRANSPORT ||\n            this._source === PACKETIO_TRANSPORT ||\n            this._source === WEBSOCKET_TRANSPORT\n        )\n    }\n\n    /**\n     * Indicates the source of packets\n     * @category Transport\n     */\n    get source() {\n        return this._source\n    }\n\n    /**\n     * Indicates if the device is part of a trace replay\n     * @category Transport\n     */\n    get replay() {\n        return this._replay\n    }\n\n    /**\n     * Gets the device short name\n     * @category JDOM\n     */\n    get friendlyName() {\n        return this.shortId\n    }\n\n    /**\n     * Gets the device short name\n     * @category JDOM\n     */\n    get qualifiedName() {\n        return this.shortId\n    }\n\n    /**\n     * Indicates if service information is available.\n     * This happens after a announce packet has been received.\n     * @category Lifecycle\n     */\n    get announced(): boolean {\n        return !!this._servicesData?.length\n    }\n\n    /**\n     * Gets the control announce flag from the annouce packet.\n     * @category Control\n     */\n    get announceFlags(): ControlAnnounceFlags {\n        return this._servicesData ? read16(this._servicesData, 0) : 0\n    }\n\n    /**\n     * Gets the restart counter from the announce packet.\n     * @category Control\n     */\n    get restartCounter(): number {\n        return this.announceFlags & ControlAnnounceFlags.RestartCounterSteady\n    }\n\n    /**\n     * Gets the status light announce flags from the announce packet.\n     * @category Control\n     */\n    get statusLightFlags(): ControlAnnounceFlags {\n        return this.announceFlags & ControlAnnounceFlags.StatusLightRgbFade\n    }\n\n    /**\n     * Indicates if the device is announced as a client\n     * @category Control\n     */\n    get isClient() {\n        return !!(this.announceFlags & ControlAnnounceFlags.IsClient)\n    }\n\n    /**\n     * Gets the number of packets sent since the last announce packet,\n     * as read from the announce packet.\n     * @category Control\n     */\n    get packetCount(): number {\n        return this._servicesData?.[2] || 0\n    }\n\n    /**\n     * Gets the device short identifier\n     * @category JDOM\n     */\n    get shortId() {\n        // TODO measure if caching is worth it\n        if (!this._shortId) this._shortId = shortDeviceId(this.deviceId)\n        return this._shortId\n    }\n\n    /**\n     * Gets the bus instance hosting this device.\n     * @category JDOM\n     */\n    get parent(): JDNode {\n        return this.bus\n    }\n\n    /**\n     * Gets the firmware information if any.\n     * @category Firmware\n     */\n    get firmwareInfo(): FirmwareInfo {\n        const ctrl = this.service(0)\n\n        const deviceId = this.deviceId\n        const name = ctrl?.register(ControlReg.DeviceDescription)?.stringValue\n        const version = this.firmwareVersion\n        const productIdentifier = ctrl?.register(\n            ControlReg.ProductIdentifier\n        )?.uintValue\n        const bootloaderProductIdentifier = ctrl?.register(\n            ControlReg.BootloaderProductIdentifier\n        )?.uintValue\n        const ready =\n            version &&\n            (productIdentifier !== undefined ||\n                bootloaderProductIdentifier !== undefined)\n\n        return ready\n            ? {\n                  deviceId,\n                  name,\n                  version,\n                  productIdentifier,\n                  bootloaderProductIdentifier,\n              }\n            : undefined\n    }\n\n    refreshFirmwareInfo() {\n        // listen for specific registers\n        const ctrl = this._services?.[0]\n        const firmwareRegs = [\n            (ControlReg.ProductIdentifier,\n            ControlReg.FirmwareVersion,\n            ControlReg.BootloaderProductIdentifier),\n        ]\n        firmwareRegs.forEach(reg =>\n            ctrl.register(reg).once(REPORT_UPDATE, () => {\n                this.emitPropagated(DEVICE_FIRMWARE_INFO)\n                this.emitPropagated(CHANGE)\n            })\n        )\n    }\n\n    /**\n     * Indicates if no packet from this device has been observed in a while.\n     * @category Lifecycle\n     */\n    get lost() {\n        return this._lost\n    }\n\n    /**\n     * Sets the lost status\n     * @category Lifecycle\n     * @internal\n     */\n    set lost(v: boolean) {\n        if (!!v === this._lost) return\n\n        // something changed\n        this._lost = !!v\n        if (this.lost) {\n            this.emit(LOST)\n            this.bus.emit(DEVICE_LOST, this)\n        } else {\n            this.emit(FOUND)\n            this.bus.emit(DEVICE_FOUND, this)\n        }\n        this.emit(CHANGE)\n        this.bus.emit(DEVICE_CHANGE, this)\n        this.bus.emit(CHANGE)\n    }\n\n    /**\n     * A flashing sequence is in progress\n     * @category Firmware\n     */\n    get flashing() {\n        return this._flashing\n    }\n\n    /**\n     * Sets the flashing sequence state\n     * @category Firmware\n     */\n    set flashing(value: boolean) {\n        if (value !== this._flashing) {\n            this._flashing = value\n            this.emit(CHANGE)\n            this.bus.emit(DEVICE_CHANGE, this)\n            this.bus.emit(CHANGE)\n            if (this._flashing) this.bus.sendStopStreaming()\n        }\n    }\n\n    /**\n     * Gets the number of events received by the service clients in this device\n     * @category Lifecycle\n     */\n    get eventCounter() {\n        return this._eventCounter\n    }\n\n    /**\n     * @internal\n     */\n    set eventCounter(v: number) {\n        this._eventCounter = v\n    }\n\n    /**\n     * Indicates if the device contains at least one service matching the service class\n     * @param serviceClass service class to match\n     * @returns true if at least one service present\n     * @category Services\n     */\n    hasService(serviceClass: number): boolean {\n        if (!this.announced) return false\n        if (serviceClass === 0) return true\n\n        // skip first 4 bytes\n        for (let i = 4; i < this._servicesData.length; i += 4) {\n            const sc = getNumber(this._servicesData, NumberFormat.UInt32LE, i)\n            if (isInstanceOf(sc, serviceClass)) return true\n        }\n        return false\n    }\n\n    /**\n     * Gets or allocates a pipe port\n     * @param id identifier of the port\n     * @returns a pipe port\n     * @category Services\n     */\n    port(id: number) {\n        if (!this._ports) this._ports = {}\n        const key = id + \"\"\n        const ex = this._ports[key]\n        if (!ex) return (this._ports[key] = {})\n        return ex\n    }\n\n    /**\n     * Gets the number of services hosted by the device\n     * @category Services\n     */\n    get serviceLength() {\n        if (!this.announced) return 0\n        return this._servicesData.length >> 2\n    }\n\n    /**\n     * Gets the service class at a given index\n     * @param index index of the service\n     * @returns service class\n     * @category Services\n     */\n    serviceClassAt(index: number): number {\n        if (index == 0) return 0\n\n        index <<= 2\n        if (!this.announced || index + 4 > this._servicesData.length)\n            return undefined\n        return read32(this._servicesData, index)\n    }\n\n    /**\n     * Gets the list of service classes\n     * @category Services\n     */\n    get serviceClasses(): number[] {\n        const r = []\n        const n = this.serviceLength\n        for (let i = 0; i < n; ++i) r.push(this.serviceClassAt(i))\n        return r\n    }\n\n    private initServices(force?: boolean) {\n        if (force) this._services = undefined\n\n        if (!this._services && this._servicesData) {\n            this._statusLight = undefined\n            const n = this.serviceLength\n            const s = []\n            for (let i = 0; i < n; ++i) s.push(new JDService(this, i))\n            this._services = s\n            this.lastServiceUpdate = this.bus.timestamp\n            this.refreshFirmwareInfo()\n        }\n    }\n\n    /**\n     * Gets the service client at the given service index\n     * @param serviceIndex index of the service client\n     * @returns service client\n     * @category Services\n     */\n    service(serviceIndex: number): JDService {\n        if (!this.announced) return undefined\n        this.initServices()\n        serviceIndex = serviceIndex | 0\n        return this._services && this._services[serviceIndex]\n    }\n\n    /**\n     * Gets a filtered list of service clients.\n     * @param options filters for services\n     * @returns services matching the filter\n     * @category Services\n     */\n    services(options?: ServiceFilter): JDService[] {\n        if (!this.announced) return []\n\n        if (options?.serviceIndex >= 0)\n            return [this.service(options?.serviceIndex)]\n\n        if (options?.serviceName && options?.serviceClass > -1)\n            throw Error(\"serviceClass and serviceName cannot be used together\")\n        let sc = serviceClass(options?.serviceName)\n        if (sc === undefined || sc < 0) sc = options?.serviceClass\n        if (sc === undefined) sc = -1\n\n        this.initServices()\n        let r = this._services?.slice() || []\n        if (sc > -1) r = r.filter(s => s.serviceClass == sc)\n\n        if (options?.specification) r = r.filter(s => !!s.specification)\n\n        const mixins = options?.mixins\n        if (mixins !== undefined) r = r.filter(s => s.isMixin === mixins)\n\n        return r\n    }\n\n    /**\n     * Gets the list of child services.\n     * @category JDOM\n     */\n    get children(): JDNode[] {\n        return this.services()\n    }\n\n    /**\n     * @internal\n     */\n    sendCtrlCommand(cmd: number, payload: Uint8Array = null) {\n        const pkt = !payload\n            ? Packet.onlyHeader(cmd)\n            : Packet.from(cmd, payload)\n        pkt.serviceIndex = JD_SERVICE_INDEX_CTRL\n        return pkt.sendCmdAsync(this)\n    }\n\n    /**\n     * @internal\n     */\n    processAnnouncement(pkt: Packet) {\n        this.stats.processAnnouncement(pkt)\n\n        let changed = false\n        const w0 = this._servicesData\n            ? getNumber(this._servicesData, NumberFormat.UInt32LE, 0)\n            : 0\n        const w1 = getNumber(pkt.data, NumberFormat.UInt32LE, 0)\n\n        // compare service data\n        const servicesChanged = !bufferEq(pkt.data, this._servicesData, 4)\n        this._servicesData = pkt.data\n\n        // check for restart\n        if (\n            w1 &&\n            (w1 & JD_ADVERTISEMENT_0_COUNTER_MASK) <\n                (w0 & JD_ADVERTISEMENT_0_COUNTER_MASK)\n        ) {\n            this.stats.processRestart()\n            this.initServices(true)\n            this.bus.emit(DEVICE_RESTART, this)\n            this.emit(RESTART)\n            changed = true\n        }\n\n        // notify that services got updated\n        if (servicesChanged) {\n            if (!changed) this.initServices(true)\n            this.bus.emit(DEVICE_ANNOUNCE, this)\n            this.emit(ANNOUNCE)\n            changed = true\n        }\n\n        // notify that we've received an announce packet\n        this.bus.emit(DEVICE_PACKET_ANNOUNCE, this)\n        this.emit(PACKET_ANNOUNCE)\n\n        // notify of any changes\n        if (changed) {\n            this.bus.emit(DEVICE_CHANGE, this)\n            this.bus.emit(CHANGE)\n            this.emit(CHANGE)\n        }\n    }\n\n    /**\n     * @internal\n     */\n    processPacket(pkt: Packet) {\n        this.stats.processPacket(pkt)\n        this.lost = false\n        this.emit(PACKET_RECEIVE, pkt)\n        if (pkt.isReport) this.emit(PACKET_REPORT, pkt)\n        else if (pkt.isEvent) this.emit(PACKET_EVENT, pkt)\n\n        const service = this.service(pkt.serviceIndex)\n        if (service) service.processPacket(pkt)\n    }\n\n    /**\n     * @internal\n     */\n    disconnect() {\n        this.connected = false\n        this.emit(DISCONNECT)\n        this.emit(CHANGE)\n    }\n\n    /**\n     * Gets a controller for the status light. Returns undefined if the device does not support a status light.\n     * @category Control\n     */\n    get statusLight(): LEDController {\n        if (\n            !this._statusLight &&\n            this.statusLightFlags !== ControlAnnounceFlags.StatusLightNone\n        )\n            this._statusLight = new LEDController(\n                this.service(0),\n                ControlCmd.SetStatusLight\n            )\n        return this._statusLight\n    }\n\n    /**\n     * Sends an ``identify`` command to the device\n     * @category Lifecycle\n     */\n    async identify() {\n        if (this._identifying) return\n\n        try {\n            this._identifying = true\n            this.emit(CHANGE)\n            const statusLight = this.statusLight\n            if (statusLight) await statusLight.blink(0x0000ff, 0, 262, 4)\n            else {\n                const ctrl = this.service(0)\n                await ctrl.sendCmdAsync(ControlCmd.Identify, undefined, false)\n                await this.bus.delay(IDENTIFY_DURATION)\n            }\n        } catch (e) {\n            this.emit(ERROR, e)\n        } finally {\n            this._identifying = false\n            this.emit(CHANGE)\n        }\n    }\n\n    /**\n     * Indicates the device should be identifying.\n     * @category Lifecycle\n     */\n    get identifying() {\n        return this._identifying\n    }\n\n    /**\n     * Sends a ``reset`` command to the device\n     * @category Lifecycle\n     */\n    reset() {\n        return this.service(0)?.sendCmdAsync(ControlCmd.Reset)\n    }\n\n    /**\n     * Tries to retrive the product identifier from the device\n     * @param retry number of devices\n     * @returns promise that returns product identifier if received\n     * @category Control\n     */\n    async resolveProductIdentifier(retry = 0): Promise<number> {\n        const fwIdRegister = this.service(0)?.register(\n            ControlReg.ProductIdentifier\n        )\n        if (!fwIdRegister) return undefined\n\n        while (retry-- >= 0 && fwIdRegister.data === undefined)\n            await fwIdRegister.refresh(true)\n        return fwIdRegister.uintValue\n    }\n\n    /**\n     * Returns the product identifier synchronously. If needed, tries to refresh the value in the background.\n     * @category Control\n     */\n    get productIdentifier(): number {\n        const reg = this.service(0)?.register(ControlReg.ProductIdentifier)\n        const v = reg?.uintValue\n        if (reg && v === undefined) reg?.refresh(true)\n        return v\n    }\n\n    /**\n     * Gets the elapsed time since boot in milli-seconds\n     * @category Control\n     */\n    get uptime(): number {\n        const reg = this.service(0)?.register(ControlReg.Uptime)\n        const v = reg?.unpackedValue?.[0]\n        if (reg && v === undefined) reg?.refresh(true)\n        let uptime: number = undefined\n        if (v !== undefined) {\n            // compute offset\n            uptime = v / 1000 + this.bus.timestamp - reg.lastDataTimestamp\n        }\n        return uptime\n    }\n\n    /**\n     * Returns the firmware version synchronously. If needed, tries to refresh the value in the background.\n     * @category Control\n     */\n    get firmwareVersion(): string {\n        const reg = this.service(0)?.register(ControlReg.FirmwareVersion)\n        const v = reg?.stringValue\n        if (reg && v === undefined) reg?.refresh(true)\n        return v\n    }\n\n    private initAcks() {\n        if (this._ackAwaiting) return\n\n        let drops = 0\n        let resends = 0\n        this._ackAwaiting = []\n        const cleanUp = this.subscribe(PACKET_REPORT, (rep: Packet) => {\n            if (rep.serviceIndex != JD_SERVICE_INDEX_CRC_ACK) return\n            let numdone = 0\n            for (const aa of this._ackAwaiting) {\n                if (aa.pkt && aa.pkt.crc == rep.serviceCommand) {\n                    //console.log(`ack`, aa.pkt)\n                    aa.pkt = null\n                    numdone++\n                    aa.okCb()\n                }\n            }\n            if (numdone)\n                this._ackAwaiting = this._ackAwaiting.filter(aa => !!aa.pkt)\n        })\n\n        const resend = () => {\n            let numdrop = 0\n            for (const aa of this._ackAwaiting) {\n                if (aa.pkt) {\n                    if (--aa.retriesLeft < 0) {\n                        drops++\n                        aa.pkt.meta[META_ACK_FAILED] = true\n                        aa.pkt = null\n                        aa.errCb()\n                        numdrop++\n                        if (Flags.diagnostics)\n                            console.debug(\n                                `ack: ${this.shortId} drop ${aa.pkt} (${drops} drops, ${resends} resends)`\n                            )\n                    } else {\n                        resends++\n                        aa.pkt.sendCmdAsync(this)\n                        if (Flags.diagnostics)\n                            console.debug(\n                                `ack: ${this.shortId} resend ${aa.pkt} (${drops} drops, ${resends} resends)`\n                            )\n                    }\n                }\n            }\n            if (numdrop)\n                this._ackAwaiting = this._ackAwaiting.filter(aa => !!aa.pkt)\n\n            if (Flags.diagnostics)\n                console.debug(\n                    `ack: ${this.shortId} awaits ${this._ackAwaiting.length}`\n                )\n            if (this._ackAwaiting.length > 0) {\n                this.bus.scheduler.setTimeout(\n                    resend,\n                    Math.random() * (ACK_MAX_DELAY - ACK_MIN_DELAY) +\n                        ACK_MIN_DELAY\n                )\n            } else {\n                this._ackAwaiting = undefined\n                cleanUp()\n            }\n        }\n\n        // start loop\n        this.bus.scheduler.setTimeout(resend, 40)\n    }\n\n    /**\n     * @internal\n     */\n    sendPktWithAck(pkt: Packet) {\n        // no acks possible when bus is passive\n        pkt.requiresAck = !this.bus.passive\n        this.initAcks()\n        return new Promise<void>((resolve, reject) => {\n            const ack = {\n                pkt,\n                retriesLeft: 4,\n                okCb: resolve,\n                errCb: () => {\n                    const e = new Error(\"No ACK for \" + pkt.toString())\n                    setAckError(e)\n                    reject(e)\n                },\n            }\n            this._ackAwaiting.push(ack)\n            pkt.sendCmdAsync(this)\n        })\n    }\n\n    /**\n     * @internal\n     */\n    async floodPing(numPkts = 100, size = 32) {\n        const pkt = Packet.jdpacked(ControlCmd.FloodPing, \"u32 u32 u8\", [\n            numPkts,\n            0x1000,\n            size,\n        ])\n        pkt.serviceIndex = JD_SERVICE_INDEX_CTRL\n        await this.sendPktWithAck(pkt)\n    }\n}\n\nexport default JDDevice\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * A time scheduler to orchestrate time in the bus.\n * @category JDOM\n */\nexport interface Scheduler {\n    /**\n     * Gets the current timestamp\n     */\n    get timestamp(): number\n    /**\n     * Reset time\n     * @param delta\n     */\n    resetTime(delta: number): void\n    /**\n     * Start a timeout timer\n     */\n    setTimeout(\n        handler: (...args: any[]) => void,\n        delay: number,\n        ...args: any[]\n    ): any\n    /**\n     * Cancel an existing timeout timer\n     */\n    clearTimeout(handle: any): void\n    /**\n     * Start an interval timer\n     */\n    setInterval(\n        handler: (...args: any[]) => void,\n        delay: number,\n        ...args: any[]\n    ): any\n    /**\n     * Clear an interval timer\n     */\n    clearInterval(handle: any): void\n}\nexport default Scheduler\n\n/** @internal */\nexport class WallClockScheduler implements Scheduler {\n    private _now: () => number\n    private _startTime: number\n\n    constructor() {\n        this._now =\n            typeof performance !== \"undefined\"\n                ? () => performance.now()\n                : () => Date.now()\n        this._startTime = this._now()\n    }\n\n    get timestamp(): number {\n        return this._now() - this._startTime\n    }\n    resetTime(delta = 0) {\n        this._startTime = this._now() - delta\n    }\n    setTimeout(\n        handler: (...args: any[]) => void,\n        delay: number,\n        ...args: any[]\n    ): any {\n        return setTimeout(handler, delay, args)\n    }\n    clearTimeout(handle: any): void {\n        clearTimeout(handle)\n    }\n    setInterval(\n        handler: (...args: any[]) => void,\n        delay: number,\n        ...args: any[]\n    ): any {\n        return setInterval(handler, delay, args)\n    }\n    clearInterval(handle: any): void {\n        clearInterval(handle)\n    }\n}\n","import { bufferToArray, NumberFormat, getNumber } from \"./buffer\"\nimport JDBus from \"./bus\"\nimport Packet from \"./packet\"\nimport JDDevice from \"./device\"\nimport {\n    BootloaderCmd,\n    ControlCmd,\n    SRV_BOOTLOADER,\n    SRV_CONTROL,\n    CMD_ADVERTISEMENT_DATA,\n    CMD_GET_REG,\n    CMD_REG_MASK,\n    ControlReg,\n    PACKET_REPORT,\n} from \"./constants\"\nimport {\n    assert,\n    bufferConcat,\n    bufferToString,\n    strcmp,\n    readBlobToUint8Array,\n} from \"./utils\"\nimport { jdpack, jdunpack } from \"./pack\"\nimport { BootloaderError } from \"./constants\"\nimport { prettySize } from \"./pretty\"\nimport { deviceSpecificationFromProductIdentifier } from \"./spec\"\n\nconst BL_SUBPAGE_SIZE = 208\nconst BL_RETRIES = 15\nconst BL_SESSION_DELAY = 5\nconst BL_PAGE_DELAY = 5\n\nlet _startTime = 0\n\nconst uf2ExtTags: Record<string, number> = {\n    version: -0x9fc7bc,\n    name: -0x650d9d,\n    pageSize: 0x0be9f7,\n    productIdentifier: 0xc8a729,\n}\n\n/**\n * UF2 page data structure\n * @category Firmware\n * @internal\n */\nexport interface FirmwarePage {\n    data: Uint8Array\n    targetAddress: number\n}\n\n/**\n * Data structure representing a firmware binary\n * @category Firmware\n * @internal\n */\nexport interface FirmwareBlob {\n    pages: FirmwarePage[]\n    productIdentifier: number\n    pageSize: number\n    name: string\n    version: string\n    // name of the file or repo\n    store: string\n}\n\nfunction timestamp() {\n    if (!_startTime) _startTime = Date.now()\n    return Date.now() - _startTime\n}\n\nfunction log(msg: string) {\n    console.log(`BL [${timestamp()}ms]: ${msg}`)\n}\n\nclass FlashClient {\n    private pageSize: number\n    private flashSize: number\n    private sessionId: number\n    classClients: FlashClient[]\n    private lastStatus: Packet\n    private pending: boolean\n    public dev_class: number\n    public device: JDDevice\n\n    constructor(private bus: JDBus, adpkt: Packet) {\n        const d = bufferToArray(adpkt.data, NumberFormat.UInt32LE)\n        this.pageSize = d[1]\n        this.flashSize = d[2]\n        this.dev_class = d[3]\n        this.device = adpkt.device\n        this.handlePacket = this.handlePacket.bind(this)\n    }\n\n    private handlePacket(pkt: Packet) {\n        if (pkt.serviceCommand == BootloaderCmd.PageData) this.lastStatus = pkt\n    }\n\n    private start() {\n        this.device.on(PACKET_REPORT, this.handlePacket)\n    }\n\n    private stop() {\n        this.device.off(PACKET_REPORT, this.handlePacket)\n    }\n\n    private async sendCommandAsync(p: Packet) {\n        p.serviceIndex = 1\n        await p.sendCmdAsync(this.device)\n    }\n\n    private async startFlashAsync() {\n        this.sessionId = (Math.random() * 0x10000000) | 0\n        for (const d of this.classClients) {\n            d.start()\n            log(\n                `flashing ${d.device.shortId}; available flash=${\n                    d.flashSize / 1024\n                }kb; page=${d.pageSize}b`\n            )\n        }\n\n        const setsession = Packet.jdpacked<[number]>(\n            BootloaderCmd.SetSession,\n            \"u32\",\n            [this.sessionId]\n        )\n\n        this.allPending()\n\n        for (let i = 0; i < BL_RETRIES; ++i) {\n            for (const d of this.classClients) {\n                if (d.pending) {\n                    if (\n                        d.lastStatus &&\n                        d.lastStatus.getNumber(NumberFormat.UInt32LE, 0) ==\n                            this.sessionId\n                    ) {\n                        d.pending = false\n                    } else {\n                        d.lastStatus = null\n                        log(`set session ${this.sessionId} on ${d.device}`)\n                        await d.sendCommandAsync(setsession)\n                    }\n                    await this.bus.delay(BL_SESSION_DELAY)\n                }\n            }\n            if (this.numPending() == 0) break\n            await this.waitForStatusAsync()\n        }\n\n        if (this.numPending()) throw new Error(\"Can't set session id\")\n    }\n\n    private async endFlashAsync() {\n        for (const f of this.classClients) {\n            await this.bus.delay(10)\n            await f.device.sendCtrlCommand(ControlCmd.Reset)\n        }\n    }\n\n    private allPending() {\n        for (const c of this.classClients) {\n            c.pending = true\n            c.lastStatus = null\n        }\n    }\n\n    private numPending() {\n        let num = 0\n        for (const c of this.classClients) if (c.pending) num++\n        return num\n    }\n\n    private async waitForStatusAsync() {\n        for (let i = 0; i < 100; ++i) {\n            if (this.classClients.every(c => c.lastStatus != null)) break\n            await this.bus.delay(5)\n        }\n    }\n\n    private async flashPage(page: FirmwarePage) {\n        const pageAddr = page.targetAddress\n        const pageSize = this.pageSize\n        const numSubpage =\n            ((pageSize + BL_SUBPAGE_SIZE - 1) / BL_SUBPAGE_SIZE) | 0\n\n        log(\n            `flash ${prettySize(this.pageSize)} at ${(\n                pageAddr & 0xffffff\n            ).toString(16)}`\n        )\n\n        if (page.data.length != this.pageSize)\n            throw new Error(\"invalid page size\")\n\n        for (const f of this.classClients) f.lastStatus = null\n\n        this.allPending()\n        for (let i = 0; i < BL_RETRIES; ++i) {\n            log(`  attempt ${i}`)\n            let currSubpage = 0\n            for (let suboff = 0; suboff < pageSize; suboff += BL_SUBPAGE_SIZE) {\n                let sz = BL_SUBPAGE_SIZE\n                if (suboff + sz > pageSize) sz = pageSize - suboff\n                log(\n                    `send sub page ${currSubpage}/${\n                        numSubpage - 1\n                    } at ${suboff.toString(16)}[${sz}]`\n                )\n                const hd = jdpack(\"u32 u16 u8 u8 u32 u32 u32 u32 u32\", [\n                    pageAddr,\n                    suboff,\n                    currSubpage++,\n                    numSubpage - 1,\n                    this.sessionId,\n                    0,\n                    0,\n                    0,\n                    0,\n                ])\n                assert(hd.length == 4 * 7)\n                const p = Packet.from(\n                    BootloaderCmd.PageData,\n                    bufferConcat(hd, page.data.slice(suboff, suboff + sz))\n                )\n                // in first round, just broadcast everything\n                // in other rounds, broadcast everything except for last packet\n                if (i == 0 || currSubpage < numSubpage)\n                    await p.sendAsMultiCommandAsync(this.bus, SRV_BOOTLOADER)\n                else {\n                    for (const f of this.classClients)\n                        if (f.pending) {\n                            f.lastStatus = null\n                            await f.sendCommandAsync(p)\n                        }\n                }\n                await this.bus.delay(BL_PAGE_DELAY)\n            }\n\n            await this.waitForStatusAsync()\n\n            for (const f of this.classClients) {\n                if (f.pending) {\n                    let err = \"\"\n                    if (f.lastStatus) {\n                        const [session_id, page_error, pageAddrR] = jdunpack<\n                            [number, BootloaderError, number]\n                        >(f.lastStatus.data, \"u32 u32 u32\")\n                        if (session_id != this.sessionId)\n                            err = \"invalid session_id\"\n                        else if (pageAddrR != pageAddr)\n                            err = \"invalid page address\"\n                        else if (page_error)\n                            err =\n                                \"err: \" +\n                                (BootloaderError[page_error] || page_error)\n                    } else {\n                        err = \"timeout\"\n                    }\n                    if (err) {\n                        f.lastStatus = null\n                        log(`retry ${f.device}: ${err}`)\n                    } else {\n                        f.pending = false\n                    }\n                }\n            }\n\n            if (this.numPending() == 0) {\n                log(\n                    `page ${\n                        pageAddr & 0xffffff\n                    } done, ${i}/${BL_RETRIES} retries`\n                )\n                return\n            }\n        }\n\n        throw new Error(\"too many retries\")\n    }\n\n    public async flashFirmwareBlob(\n        fw: FirmwareBlob,\n        progress?: (perc: number) => void\n    ) {\n        const waitCycles = 15\n        const total = fw.pages.length + waitCycles + 3\n        let idx = 0\n        const prog = () => {\n            if (progress) progress((100 * idx) / total)\n            idx++\n        }\n        try {\n            prog()\n            await this.startFlashAsync()\n            prog()\n            for (const page of fw.pages) {\n                await this.flashPage(page)\n                prog()\n            }\n        } finally {\n            try {\n                // even if something failed, try to reset everyone\n                await this.endFlashAsync()\n                prog()\n                // wait until we're out of bootloader mode; otherwise the subsequent scan will keep devices in BL mode\n                for (let i = 0; i < waitCycles; ++i) {\n                    await this.bus.delay(150)\n                    prog()\n                }\n            } finally {\n                // even if resetting failed, unregister event listeners\n                for (const d of this.classClients) {\n                    d.stop()\n                }\n            }\n        }\n    }\n}\n\nconst UF2_MAGIC_START0 = 0x0a324655\nconst UF2_MAGIC_START1 = 0x9e5d5157\nconst UF2_MAGIC_END = 0x0ab16f30\n\n/**\n * Parses a UF2 firmware binary into firmware blobs\n * @param uf2\n * @param store\n * @returns\n * @category Firmware\n */\nexport function parseUF2Firmware(\n    uf2: Uint8Array,\n    store: string\n): FirmwareBlob[] {\n    const blobs: FirmwareBlob[] = []\n    let currBlob: FirmwareBlob\n    for (let off = 0; off < uf2.length; off += 512) {\n        const header = uf2.slice(off, off + 32)\n        const [\n            magic0,\n            magic1,\n            flags,\n            trgaddr,\n            payloadSize,\n            blkNo,\n            numBlocks,\n            familyID,\n        ] = bufferToArray(header, NumberFormat.UInt32LE)\n        if (\n            magic0 != UF2_MAGIC_START0 ||\n            magic1 != UF2_MAGIC_START1 ||\n            getNumber(uf2, NumberFormat.UInt32LE, off + 512 - 4) !=\n                UF2_MAGIC_END\n        )\n            throw new Error(\"invalid UF2\")\n        if (blkNo == 0) {\n            flush()\n            currBlob = {\n                pages: [],\n                productIdentifier: familyID,\n                version: \"\",\n                pageSize: 1024,\n                name: \"FW \" + familyID.toString(16),\n                store,\n            }\n        }\n        if (flags & 0x8000)\n            parseExtTags(uf2.slice(off + 32 + payloadSize, off + 512))\n        const pageSize = currBlob.pageSize || 1024\n        let currPage = currBlob.pages[currBlob.pages.length - 1]\n        if (\n            !currPage ||\n            !(\n                currPage.targetAddress <= trgaddr &&\n                trgaddr < currPage.targetAddress + pageSize\n            )\n        ) {\n            currPage = {\n                targetAddress: trgaddr & ~(pageSize - 1),\n                data: new Uint8Array(pageSize),\n            }\n            currPage.data.fill(0xff)\n            currBlob.pages.push(currPage)\n        }\n        currPage.data.set(\n            uf2.slice(off + 32, off + 32 + payloadSize),\n            trgaddr - currPage.targetAddress\n        )\n    }\n    flush()\n    return blobs\n\n    function flush() {\n        if (currBlob) blobs.push(currBlob)\n    }\n\n    function parseExtTags(buf: Uint8Array) {\n        let sz = 0\n        for (let i = 0; i < buf.length; i += sz) {\n            sz = buf[i]\n            if (sz == 0) break\n            const desig = getNumber(buf, NumberFormat.UInt32LE, i) >>> 8\n            for (const key of Object.keys(uf2ExtTags)) {\n                const tg = uf2ExtTags[key]\n                if (desig == Math.abs(tg)) {\n                    let v: any\n                    if (tg < 0) {\n                        v = bufferToString(buf.slice(i + 4, i + sz))\n                    } else {\n                        v = getNumber(buf, NumberFormat.UInt32LE, i + 4)\n                    }\n                    const cbany = currBlob as any\n                    cbany[key] = v\n                    break\n                }\n            }\n            sz = (sz + 3) & ~3\n        }\n    }\n}\n\n/**\n * Firmware information\n * @internal\n */\nexport interface FirmwareInfo {\n    deviceId: string\n    version: string\n    name: string\n    productIdentifier: number\n    bootloaderProductIdentifier: number\n}\n\n/**\n * Parse a UF2 firmware file and extracts firmware blobs\n * @param blob\n * @param store\n * @returns\n * @category Firmware\n */\nexport async function parseFirmwareFile(\n    blob: Blob,\n    store?: string\n): Promise<FirmwareBlob[]> {\n    const data = await readBlobToUint8Array(blob)\n    const buf = new Uint8Array(data)\n    const uf2Blobs = parseUF2Firmware(buf, store)\n    return uf2Blobs\n}\n\nasync function createFlashers(bus: JDBus) {\n    const flashers: FlashClient[] = []\n    const numTries = 10\n    const tryDelay = 10\n\n    const handlePkt = (p: Packet) => {\n        // note that we may get this even if recovery==false due to someone else asking\n        // (eg when the user set the recovery mode toggle)\n        if (\n            p.serviceIndex == 1 &&\n            p.serviceCommand == CMD_ADVERTISEMENT_DATA &&\n            p.getNumber(NumberFormat.UInt32LE, 0) == SRV_BOOTLOADER\n        ) {\n            if (!flashers.find(f => f.device.deviceId == p.deviceIdentifier)) {\n                log(`new flasher`)\n                flashers.push(new FlashClient(bus, p))\n            }\n        }\n    }\n\n    try {\n        bus.on(PACKET_REPORT, handlePkt)\n        for (let i = 0; i < numTries; ++i) {\n            // also ask BL services if any\n            const bl_announce = Packet.onlyHeader(CMD_ADVERTISEMENT_DATA)\n            await bl_announce.sendAsMultiCommandAsync(bus, SRV_BOOTLOADER)\n            await bus.delay(tryDelay)\n        }\n    } finally {\n        bus.off(PACKET_REPORT, handlePkt)\n    }\n    return flashers\n}\n\n/**\n * Indicates if a firmware blob is applicated to the device information\n * @param dev\n * @param blob\n * @returns\n * @category Firmware\n */\nexport function updateApplicable(dev: FirmwareInfo, blob: FirmwareBlob) {\n    return (\n        dev &&\n        blob &&\n        dev.bootloaderProductIdentifier == blob.productIdentifier &&\n        dev.version !== blob.version\n    )\n}\n\n/**\n * Flash firmware blob onto device\n * @param bus\n * @param blob\n * @param updateCandidates\n * @param ignoreFirmwareCheck\n * @param progress\n * @returns\n * @category Firmware\n */\nexport async function flashFirmwareBlob(\n    bus: JDBus,\n    blob: FirmwareBlob,\n    updateCandidates: FirmwareInfo[],\n    ignoreFirmwareCheck: boolean,\n    progress?: (perc: number) => void\n) {\n    if (!updateCandidates?.length) return\n    _startTime = Date.now()\n    log(`resetting ${updateCandidates.length} device(s)`)\n    for (const d of updateCandidates) {\n        const device = bus.device(d.deviceId)\n        log(`resetting ${device}`)\n        await device.sendCtrlCommand(ControlCmd.Reset)\n    }\n    const allFlashers = await createFlashers(bus)\n    const flashers = allFlashers.filter(\n        f => !!ignoreFirmwareCheck || f.dev_class == blob.productIdentifier\n    )\n    if (!flashers.length) {\n        log(`no devices to flash`)\n        return\n    }\n    if (flashers.length != updateCandidates.length)\n        console.error(\n            `expected ${updateCandidates.length} flashers, got ${flashers.length}`\n        )\n    flashers[0].classClients = flashers\n    log(`flashing ${blob.name}`)\n    await flashers[0].flashFirmwareBlob(blob, progress)\n}\n\n/**\n * This command can be sent every 50ms to keep devices in bootloader mode\n * @param bus\n * @category Firmware\n */\nexport async function sendStayInBootloaderCommand(bus: JDBus) {\n    const bl_announce = Packet.onlyHeader(BootloaderCmd.Info)\n    await bl_announce.sendAsMultiCommandAsync(bus, SRV_BOOTLOADER)\n}\n","import JDServiceServer from \"./serviceserver\"\nimport { jdpack, jdunpack, PackedSimpleValue, PackedValues } from \"../pack\"\nimport Packet from \"../packet\"\nimport { bufferEq, isSet, pick } from \"../utils\"\nimport JDEventSource from \"../eventsource\"\nimport {\n    CHANGE,\n    CMD_GET_REG,\n    PACKET_DATA_NORMALIZE,\n    PACKET_INVALID_DATA,\n    REGISTER_PRE_GET,\n    REPORT_RECEIVE,\n} from \"../constants\"\nimport { isRegister } from \"../spec\"\n\nfunction defaultFieldPayload(\n    specification: jdspec.PacketMember\n): PackedSimpleValue {\n    let r: PackedSimpleValue = undefined\n    switch (specification.type) {\n        case \"bool\":\n            r = 0\n            break\n        case \"i8\":\n        case \"i16\":\n        case \"i32\":\n        case \"u8\":\n        case \"u16\":\n        case \"u32\": {\n            const min = pick(\n                specification.typicalMin,\n                specification.absoluteMin,\n                undefined\n            )\n            const max = pick(\n                specification.typicalMax,\n                specification.absoluteMax,\n                undefined\n            )\n            if (max !== undefined && min !== undefined) r = (max + min) / 2\n            else r = 0\n            break\n        }\n        case \"bytes\": {\n            r = new Uint8Array(0)\n            break\n        }\n        case \"string\":\n        case \"string0\": {\n            r = \"\"\n            break\n        }\n    }\n\n    if (/^(u0|i1)\\.\\d+$/.test(specification.type)) r = 0\n\n    return r\n}\n\nfunction defaultPayload<T extends PackedValues>(\n    specification: jdspec.PacketInfo\n): T {\n    const { fields } = specification\n    const rs = fields.map(defaultFieldPayload)\n    return rs as T\n}\n\n/**\n * A register \"server\" instance, used to assembly service servers.\n * @category Servers\n */\nexport class JDRegisterServer<\n    TValues extends PackedValues\n> extends JDEventSource {\n    data: Uint8Array\n    lastSetTime: number\n    private readonly resetData: Uint8Array\n    readonly specification: jdspec.PacketInfo\n    readOnly: boolean\n    errorRegister: JDRegisterServer<TValues>\n    skipBoundaryCheck = false\n    skipErrorInjection = false\n\n    constructor(\n        public readonly service: JDServiceServer,\n        public readonly identifier: number,\n        defaultValue?: TValues\n    ) {\n        super()\n        const serviceSpecification = this.service.specification\n        this.specification = serviceSpecification.packets.find(\n            pkt => isRegister(pkt) && pkt.identifier === this.identifier\n        )\n        let v: PackedValues = defaultValue\n        if (!v && !this.specification.optional)\n            v = defaultPayload(this.specification)\n        if (v !== undefined && !v.some(vi => vi === undefined)) {\n            this.data = jdpack(this.packFormat, v)\n        }\n\n        // keep a copy to handle reset\n        this.resetData = this.data?.slice(0)\n\n        // don't check boundaries if there are none\n        this.skipBoundaryCheck = !this.specification?.fields.some(\n            field => isSet(field.absoluteMin) || isSet(field.absoluteMax)\n        )\n    }\n\n    get packFormat() {\n        return this.specification.packFormat\n    }\n\n    values(): TValues {\n        return jdunpack(this.data, this.packFormat) as TValues\n    }\n\n    private normalize(values: TValues) {\n        // enforce boundaries from spec\n        if (!this.skipBoundaryCheck) {\n            this.specification?.fields.forEach((field, fieldi) => {\n                if (field.isSimpleType) {\n                    let value = values[fieldi] as number\n                    // clamp within bounds\n                    const min = field.absoluteMin\n                    if (min !== undefined) value = Math.max(min, value)\n                    const max = field.absoluteMax\n                    if (max !== undefined) value = Math.min(max, value)\n                    // update\n                    values[fieldi] = value\n                }\n            })\n        }\n\n        // enforce other boundaries\n        this.emit(PACKET_DATA_NORMALIZE, values)\n    }\n\n    private shouldNormalize() {\n        return (\n            !this.skipBoundaryCheck || this.listenerCount(PACKET_DATA_NORMALIZE)\n        )\n    }\n\n    setValues(values: TValues, skipChangeEvent?: boolean) {\n        if (this.readOnly) return\n\n        if (this.shouldNormalize()) this.normalize(values)\n        const d = jdpack(this.packFormat, values)\n        if (!bufferEq(this.data, d)) {\n            this.data = d\n            if (!skipChangeEvent) this.emit(CHANGE)\n        }\n    }\n\n    reset() {\n        this.data = this.resetData?.slice(0)\n    }\n\n    async sendGetAsync() {\n        this.emit(REGISTER_PRE_GET)\n\n        let d = this.data\n        if (!d) return\n\n        const error =\n            !this.skipErrorInjection && this.errorRegister?.values()[0]\n        if (error && !isNaN(error)) {\n            // apply error artifically\n            const vs = this.values() as number[]\n            for (let i = 0; i < vs.length; ++i) {\n                vs[i] += Math.random() * error\n            }\n            d = jdpack(this.packFormat, vs)\n        }\n        await this.service.sendPacketAsync(\n            Packet.from(this.identifier | CMD_GET_REG, d)\n        )\n    }\n\n    handlePacket(pkt: Packet): boolean {\n        if (this.identifier !== pkt.registerIdentifier) return false\n\n        if (pkt.isRegisterGet) {\n            this.sendGetAsync()\n        } else if (this.identifier >> 8 !== 0x1) {\n            // set, non-const\n            let changed = false\n            let d = pkt.data\n\n            // unpack and check boundaries\n            if (this.shouldNormalize()) {\n                try {\n                    // unpack, apply boundaries, repack\n                    const values = jdunpack<TValues>(d, this.packFormat)\n                    this.normalize(values)\n                    d = jdpack<TValues>(this.packFormat, values)\n                } catch (e) {\n                    // invalid format, refuse\n                    this.emit(PACKET_INVALID_DATA, pkt)\n                }\n            }\n\n            // test if anything changed\n            if (!bufferEq(this.data, d)) {\n                this.data = d\n                changed = true\n            }\n            this.lastSetTime = this.service.timestamp\n            this.emit(REPORT_RECEIVE)\n            if (changed) this.emit(CHANGE)\n        }\n        return true\n    }\n}\nexport default JDRegisterServer\n","import {\n    BaseEvent,\n    SystemCmd,\n    SystemEvent,\n    SystemReg,\n    SystemStatusCodes,\n} from \"../../../jacdac-spec/dist/specconstants\"\nimport {\n    CHANGE,\n    DEVICE_CHANGE,\n    PACKET_RECEIVE,\n    PACKET_SEND,\n    REPORT_UPDATE,\n} from \"../constants\"\nimport JDServerServiceProvider from \"./serverserviceprovider\"\nimport JDEventSource from \"../eventsource\"\nimport Packet from \"../packet\"\nimport JDRegisterServer from \"./registerserver\"\nimport { isRegister, serviceSpecificationFromClassIdentifier } from \"../spec\"\nimport { PackedValues } from \"../pack\"\nimport JDService from \"../service\"\n\nconst CALIBRATION_DELAY = 5000\n\n/**\n * Server instiation options\n * @category Servers\n */\nexport interface JDServerOptions {\n    /**\n     * Service instance name\n     */\n    instanceName?: string\n    /**\n     * This server instance is a twin of a physical device and should not emit any packet\n     */\n    twin?: JDService\n    /**\n     * Initial value for the ``value`` register\n     */\n    valueValues?: PackedValues\n    /**\n     * Initial value for the ``intensity`` register\n     */\n    intensityValues?: PackedValues\n    /**\n     * Emit active/inactive events based on the intensity register\n     */\n    isActive?: (intensity: PackedValues) => boolean\n    /**\n     * Initial value for the ``variant`` register\n     */\n    variant?: number\n    /**\n     * A map of custom register initial values\n     */\n    registerValues?: {\n        code: number\n        values: PackedValues\n    }[]\n}\n\n/**\n * Base class for service server implementations\n * @category Servers\n */\nexport class JDServiceServer extends JDEventSource {\n    public serviceIndex = -1 // set by device\n    private _device: JDServerServiceProvider\n    public readonly specification: jdspec.ServiceSpec\n    private readonly _registers: JDRegisterServer<PackedValues>[] = []\n    private readonly commands: {\n        [identifier: number]: (pkt: Packet) => void\n    } = {}\n    readonly statusCode: JDRegisterServer<[SystemStatusCodes, number]>\n    readonly instanceName: JDRegisterServer<[string]>\n    private _twin: JDService\n    private _twinCleanup: (() => void)[]\n    private _locked = false\n\n    constructor(\n        public readonly serviceClass: number,\n        options?: JDServerOptions\n    ) {\n        super()\n        const {\n            instanceName,\n            variant,\n            valueValues,\n            intensityValues,\n            registerValues,\n            isActive,\n        } = options || {}\n\n        this.specification = serviceSpecificationFromClassIdentifier(\n            this.serviceClass\n        )\n\n        this.statusCode = this.addRegister<[SystemStatusCodes, number]>(\n            SystemReg.StatusCode,\n            [SystemStatusCodes.Ready, 0]\n        )\n        if (valueValues) this.addRegister(SystemReg.Value, valueValues)\n        if (intensityValues) {\n            const intensity = this.addRegister(\n                SystemReg.Intensity,\n                intensityValues\n            )\n            if (isActive)\n                intensity.on(CHANGE, () => {\n                    const ev = isActive(intensity.values())\n                    if (ev !== undefined)\n                        this.sendEvent(\n                            isActive(intensity.values())\n                                ? SystemEvent.Active\n                                : SystemEvent.Inactive\n                        )\n                })\n        }\n        if (variant) this.addRegister<[number]>(SystemReg.Variant, [variant])\n        this.instanceName = this.addRegister<[string]>(SystemReg.InstanceName, [\n            instanceName || \"\",\n        ])\n\n        // any extra\n        registerValues?.forEach(({ code, values }) =>\n            this.addRegister<PackedValues>(code, values)\n        )\n\n        // emit event when status code changes\n        this.statusCode.on(CHANGE, () =>\n            this.sendEvent(BaseEvent.StatusCodeChanged, this.statusCode.data)\n        )\n\n        // if the device has a calibrate command, regiser handler\n        // and put device in calibrationneeded state\n        if (\n            this.specification.packets.find(\n                pkt =>\n                    pkt.kind === \"command\" &&\n                    pkt.identifier === SystemCmd.Calibrate\n            )\n        ) {\n            this.addCommand(\n                SystemCmd.Calibrate,\n                this.handleCalibrate.bind(this)\n            )\n            this.statusCode.setValues(\n                [SystemStatusCodes.CalibrationNeeded, 0],\n                true\n            )\n        }\n\n        this.handleTwinPacket = this.handleTwinPacket.bind(this)\n    }\n\n    get device() {\n        return this._device\n    }\n\n    set device(value: JDServerServiceProvider) {\n        if (this._device !== value) {\n            this._device = value\n            this.emit(DEVICE_CHANGE)\n            this.emit(CHANGE)\n        }\n    }\n\n    get twin() {\n        return this._twin\n    }\n\n    set twin(service: JDService) {\n        if (service === this._twin) return\n\n        if (this._twin) {\n            this._twin.off(PACKET_RECEIVE, this.handleTwinPacket)\n            this._twin.off(PACKET_SEND, this.handleTwinPacket)\n            this._twinCleanup.forEach(tw => tw())\n            // unsubscribe\n        }\n        this._twin = service\n        this._twinCleanup = service ? [] : undefined\n        if (this._twin) {\n            this._twin.on(PACKET_RECEIVE, this.handleTwinPacket)\n            this._twin.on(PACKET_SEND, this.handleTwinPacket)\n            this._twin.registers().forEach(twinReg => {\n                const reg = this.register(twinReg.code)\n                if (reg) {\n                    reg?.setValues(twinReg.unpackedValue)\n                    this._twinCleanup.push(\n                        twinReg.subscribe(REPORT_UPDATE, () =>\n                            reg.setValues(twinReg.unpackedValue)\n                        )\n                    )\n                }\n            })\n        }\n\n        this.emit(CHANGE)\n    }\n\n    private handleTwinPacket(pkt: Packet) {\n        this.handlePacket(pkt)\n    }\n\n    get registers() {\n        return this._registers.slice(0)\n    }\n\n    get timestamp() {\n        const bus = this.device?.bus || this._twin?.device?.bus\n        return bus?.timestamp\n    }\n\n    register<TValues extends PackedValues = PackedValues>(\n        code: number\n    ): JDRegisterServer<TValues> {\n        return this._registers.find(\n            reg => reg.identifier === code\n        ) as JDRegisterServer<TValues>\n    }\n\n    protected addExistingRegister<TValues extends PackedValues = PackedValues>(\n        reg: JDRegisterServer<TValues>\n    ) {\n        this._registers.push(reg)\n        return reg\n    }\n\n    protected addRegister<TValues extends PackedValues = PackedValues>(\n        identifier: number,\n        defaultValue?: TValues\n    ): JDRegisterServer<TValues> {\n        let reg = this._registers.find(\n            r => r.identifier === identifier\n        ) as JDRegisterServer<TValues>\n        if (!reg && !this._locked) {\n            // make sure this register is supported\n            if (\n                !this.specification.packets.find(\n                    pkt => isRegister(pkt) && pkt.identifier === identifier\n                )\n            )\n                return undefined\n            reg = new JDRegisterServer<TValues>(this, identifier, defaultValue)\n            this._registers.push(reg)\n        }\n        return reg\n    }\n\n    reset() {\n        this.registers.forEach(reg => reg.reset())\n    }\n\n    /**\n     * Locks the current set of registers\n     */\n    public lock() {\n        this._locked = true\n    }\n\n    protected addCommand(identifier: number, handler: (pkt: Packet) => void) {\n        if (this._locked) console.error(`adding command to locked service`)\n        this.commands[identifier] = handler\n    }\n\n    async handlePacket(pkt: Packet) {\n        if (pkt.isRegisterGet || pkt.isRegisterSet) {\n            // find register to handle\n            const rid = pkt.registerIdentifier\n            let reg = this._registers.find(r => r.identifier === rid)\n            if (!reg) {\n                // try adding\n                reg = this.addRegister(rid)\n            }\n            reg?.handlePacket(pkt)\n        } else if (pkt.isCommand) {\n            const cmd = this.commands[pkt.serviceCommand]\n            if (cmd) cmd(pkt)\n            else if (cmd === undefined) console.log(`ignored command`, { pkt })\n        }\n        // ignored?\n    }\n\n    async sendPacketAsync(pkt: Packet) {\n        if (this.twin) return\n\n        pkt.serviceIndex = this.serviceIndex\n        await this.device.sendPacketAsync(pkt)\n    }\n\n    async sendEvent(eventCode: number, data?: Uint8Array) {\n        if (this.twin) return\n\n        const { device } = this\n        const { bus } = device\n        if (!bus) return\n\n        const now = bus.timestamp\n        const cmd = device.createEventCmd(eventCode)\n        const pkt = Packet.from(cmd, data || new Uint8Array(0))\n        await this.sendPacketAsync(pkt)\n        device.delayedSend(pkt, now + 20)\n        device.delayedSend(pkt, now + 100)\n    }\n\n    private async handleCalibrate() {\n        const [status] = this.statusCode.values()\n        if (status !== SystemStatusCodes.Ready) return\n        this.calibrate()\n    }\n\n    async calibrate() {\n        // notify that calibration started\n        this.statusCode.setValues([SystemStatusCodes.Calibrating, 0])\n        // wait 5 seconds\n        await this.device.bus.delay(CALIBRATION_DELAY)\n        // finish calibraion\n        this.statusCode.setValues([SystemStatusCodes.Ready, 0])\n    }\n}\nexport default JDServiceServer\n","import { SystemReg } from \"../../jacdac-spec/dist/specconstants\"\nimport {\n    CHANGE,\n    READING_SENT,\n    REFRESH,\n    SensorReg,\n    STREAMING_DEFAULT_INTERVAL,\n} from \"../jdom/constants\"\nimport { PackedValues } from \"../jdom/pack\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer, { JDServerOptions } from \"../jdom/servers/serviceserver\"\n\n/**\n * Creation options for sensor servers\n * @category Servers\n * @internal\n */\nexport interface SensorServiceOptions<TReading extends PackedValues>\n    extends JDServerOptions {\n    readingValues?: TReading\n    readingError?: TReading\n    streamingInterval?: number\n    preferredStreamingInterval?: number\n}\n\nexport default class SensorServer<\n    TReading extends PackedValues\n> extends JDServiceServer {\n    readonly reading: JDRegisterServer<TReading>\n    readonly readingError: JDRegisterServer<TReading>\n    readonly streamingSamples: JDRegisterServer<[number]>\n    readonly streamingInterval: JDRegisterServer<[number]>\n    readonly preferredStreamingInterval: JDRegisterServer<[number]>\n\n    private lastStream = 0\n    private lastErrorReadingChanged = false\n\n    constructor(\n        public readonly serviceClass: number,\n        options?: SensorServiceOptions<TReading>\n    ) {\n        super(serviceClass, options)\n        const {\n            readingValues,\n            streamingInterval,\n            preferredStreamingInterval,\n            readingError,\n        } = options || {}\n        this.reading = this.addRegister<TReading>(\n            SystemReg.Reading,\n            readingValues\n        )\n        this.streamingSamples = this.addRegister<[number]>(\n            SensorReg.StreamingSamples\n        )\n        this.streamingInterval = this.addRegister<[number]>(\n            SensorReg.StreamingInterval,\n            [\n                streamingInterval ||\n                    preferredStreamingInterval ||\n                    this.reading.specification.preferredInterval ||\n                    STREAMING_DEFAULT_INTERVAL,\n            ]\n        )\n        if (preferredStreamingInterval !== undefined)\n            this.preferredStreamingInterval = this.addRegister<[number]>(\n                SensorReg.StreamingPreferredInterval,\n                [preferredStreamingInterval]\n            )\n        if (readingError !== undefined) {\n            this.readingError = this.addRegister<TReading>(\n                SystemReg.ReadingError,\n                readingError\n            )\n            this.reading.errorRegister = this.readingError\n            this.readingError.on(\n                CHANGE,\n                () => (this.lastErrorReadingChanged = true)\n            )\n        }\n\n        this.on(REFRESH, this.refreshRegisters.bind(this))\n    }\n\n    private refreshRegisters() {\n        const [samples] = this.streamingSamples.values()\n        if (samples <= 0 || !this.reading.data) return\n        // is it time to stream?\n        let interval = this.streamingInterval?.values()?.[0]\n        if (interval === undefined)\n            interval = this.preferredStreamingInterval?.values()?.[0]\n        if (interval === undefined)\n            interval = this.reading.specification.preferredInterval\n        if (interval === undefined) interval = STREAMING_DEFAULT_INTERVAL\n\n        const now = this.device.bus.timestamp\n        if (now - this.lastStream > interval) {\n            // let's stream a value!\n            this.lastStream = now\n            this.streamingSamples.setValues([samples - 1])\n            this.reading.sendGetAsync()\n            this.emit(READING_SENT)\n\n            // if the error changed, send value as well.\n            if (this.lastErrorReadingChanged) {\n                this.readingError?.sendGetAsync()\n                this.lastErrorReadingChanged = false\n            }\n        }\n    }\n}\n","import SensorServer from \"./sensorserver\"\nimport {\n    RealTimeClockCmd,\n    RealTimeClockReg,\n    RealTimeClockVariant,\n    REFRESH,\n    SRV_REAL_TIME_CLOCK,\n} from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDBus from \"../jdom/bus\"\nimport Packet from \"../jdom/packet\"\n\n/**\n * @internal\n */\nexport type RealTimeClockReadingType = [\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number\n]\n\n/**\n * @internal\n */\nexport function dateToClock(n: Date): RealTimeClockReadingType {\n    const year = n.getFullYear()\n    const month = n.getMonth() + 1\n    const date = n.getDate()\n    const day = n.getDay()\n    const hour = n.getHours()\n    const min = n.getMinutes()\n    const sec = n.getSeconds()\n\n    return [year, month, date, day, hour, min, sec]\n}\n\nexport default class RealTimeClockServer extends SensorServer<RealTimeClockReadingType> {\n    readonly error: JDRegisterServer<[number]>\n    readonly precision: JDRegisterServer<[number]>\n    private lastSecond = 0\n\n    constructor() {\n        super(SRV_REAL_TIME_CLOCK, {\n            readingValues: dateToClock(new Date()),\n            variant: RealTimeClockVariant.Computer,\n            streamingInterval: 1000,\n        })\n\n        this.error = this.addRegister<[number]>(RealTimeClockReg.Error, [0])\n        this.precision = this.addRegister<[number]>(\n            RealTimeClockReg.Precision,\n            [0]\n        )\n\n        this.addCommand(RealTimeClockCmd.SetTime, this.handleSetTime.bind(this))\n        this.on(REFRESH, this.refreshTime.bind(this))\n    }\n\n    static async syncTime(bus: JDBus) {\n        const values = dateToClock(new Date())\n        const pkt = Packet.jdpacked<RealTimeClockReadingType>(\n            RealTimeClockCmd.SetTime,\n            \"u16 u8 u8 u8 u8 u8 u8\",\n            values\n        )\n        await pkt.sendAsMultiCommandAsync(bus, SRV_REAL_TIME_CLOCK)\n    }\n\n    private handleSetTime(pkt: Packet) {\n        console.log(`set time`, { pkt })\n    }\n\n    private refreshTime() {\n        const d = new Date()\n        const s = d.getSeconds()\n        if (s !== this.lastSecond) {\n            const r = dateToClock(d)\n            this.reading.setValues(r)\n            this.lastSecond = s\n        }\n    }\n}\n","import JDBus from \"../bus\"\nimport {\n    CHANGE,\n    CONNECT,\n    CONNECTING,\n    CONNECTION_STATE,\n    DISCONNECT,\n    DISCONNECTING,\n    ERROR,\n    LOST,\n    PACKET_SEND_DISCONNECT,\n    SELF_ANNOUNCE,\n    TRANSPORT_CONNECT_RETRY_DELAY,\n    TRANSPORT_PULSE_TIMEOUT,\n} from \"../constants\"\nimport JDEventSource from \"../eventsource\"\nimport { Observable } from \"../observable\"\nimport Packet from \"../packet\"\nimport { assert, delay } from \"../utils\"\n\n/**\n * Connection states for transports\n * @category Transport\n */\nexport enum ConnectionState {\n    Connected = \"connected\",\n    Connecting = \"connecting\",\n    Disconnecting = \"disconnecting\",\n    Disconnected = \"disconnected\",\n}\n\n/**\n * General options for the transports\n * @category Transport\n */\nexport interface TransportOptions {\n    // if no packets is received within the pulse interval, disconnect/reconnect\n    checkPulse?: boolean\n    connectObservable?: Observable<void>\n    disconnectObservable?: Observable<void>\n}\n\n/**\n * A transport marshalls Jacdac packets between a physical device on the TypeScript bus.\n * @category Transport\n */\nexport abstract class Transport extends JDEventSource {\n    private _bus: JDBus\n    private _checkPulse: boolean\n    private _connectionTime: number\n    private _lastReceivedTime: number\n    protected disposed = false\n    private _cleanups: (() => void)[]\n\n    constructor(readonly type: string, options?: TransportOptions) {\n        super()\n        this._checkPulse = !!options?.checkPulse\n        this._cleanups = [\n            options?.connectObservable?.subscribe({\n                next: async () => {\n                    if (this.bus?.disconnected) {\n                        await delay(TRANSPORT_CONNECT_RETRY_DELAY)\n                        if (this.bus?.disconnected) {\n                            if (\n                                typeof document !== \"undefined\" &&\n                                document.visibilityState === \"visible\"\n                            )\n                                this.connect(true)\n                        }\n                    }\n                },\n            })?.unsubscribe,\n            options?.disconnectObservable?.subscribe({\n                next: () => {\n                    this.disconnect()\n                },\n            })?.unsubscribe,\n        ].filter(c => !!c)\n    }\n\n    get bus() {\n        return this._bus\n    }\n\n    set bus(bus: JDBus) {\n        assert(!this._bus && !!bus)\n        this._bus = bus\n        if (this._checkPulse) {\n            this._bus.on(SELF_ANNOUNCE, this.checkPulse.bind(this))\n        }\n    }\n\n    private _connectionState = ConnectionState.Disconnected\n    private _connectPromise: Promise<void>\n    private _disconnectPromise: Promise<void>\n\n    /**\n     * Gets the bus connection state.\n     */\n    get connectionState(): ConnectionState {\n        return this._connectionState\n    }\n\n    private setConnectionState(state: ConnectionState) {\n        if (this._connectionState !== state) {\n            //console.debug(`${this._connectionState} -> ${state}`)\n            this._connectionState = state\n            this._connectionTime =\n                state === ConnectionState.Connected\n                    ? this.bus.timestamp\n                    : undefined\n            this._lastReceivedTime = undefined\n            this.emit(CONNECTION_STATE, this._connectionState)\n            this.bus.emit(CONNECTION_STATE, this)\n            switch (this._connectionState) {\n                case ConnectionState.Connected:\n                    this.emit(CONNECT)\n                    break\n                case ConnectionState.Connecting:\n                    this.emit(CONNECTING)\n                    break\n                case ConnectionState.Disconnecting:\n                    this.emit(DISCONNECTING)\n                    break\n                case ConnectionState.Disconnected:\n                    this.emit(DISCONNECT)\n                    break\n            }\n            this.emit(CHANGE)\n            this.bus.emit(CHANGE)\n        }\n    }\n\n    get connecting() {\n        return this.connectionState == ConnectionState.Connecting\n    }\n\n    get disconnecting() {\n        return this.connectionState == ConnectionState.Disconnecting\n    }\n\n    get connected() {\n        return this._connectionState == ConnectionState.Connected\n    }\n\n    get disconnected() {\n        return this._connectionState == ConnectionState.Disconnected\n    }\n\n    protected abstract transportSendPacketAsync(p: Packet): Promise<void>\n    protected abstract transportConnectAsync(\n        background?: boolean\n    ): Promise<void>\n    protected abstract transportDisconnectAsync(\n        background?: boolean\n    ): Promise<void>\n\n    private async checkPulse() {\n        assert(this._checkPulse)\n        if (!this.connected) return // ignore while connected\n        if (this.bus.safeBoot) return // don't mess with flashing bootloaders\n        const devices = this.bus.devices()\n        if (devices.some(dev => dev.flashing))\n            // don't mess with flashing\n            return\n\n        // detect if the proxy device is lost\n        const t =\n            this.bus.timestamp -\n            (this._lastReceivedTime || this._connectionTime)\n        if (t > TRANSPORT_PULSE_TIMEOUT) {\n            this.emit(LOST)\n            console.debug(`${this.type}: lost connection with device`)\n            if (this._lastReceivedTime !== undefined) await this.reconnect()\n            else await this.disconnect(true)\n        }\n    }\n\n    async sendPacketAsync(p: Packet) {\n        if (!this.connected) {\n            this.emit(PACKET_SEND_DISCONNECT, p)\n        } else {\n            await this.transportSendPacketAsync(p)\n        }\n    }\n\n    connect(background?: boolean): Promise<void> {\n        console.debug(\n            `${this.type}: connect ${background ? `(background)` : \"\"}`\n        )\n        if (this.disposed)\n            throw new Error(\"attempted to connect to a disposed transport\")\n        // already connected\n        if (this.connectionState == ConnectionState.Connected) {\n            console.debug(`${this.type}: already connected`)\n            return Promise.resolve()\n        }\n\n        // connecting\n        if (!this._connectPromise) {\n            // already disconnecting, retry when disconnected\n            if (this._disconnectPromise) {\n                console.debug(\n                    `${this.type}: queuing connect after disconnecting`\n                )\n                const p = this._disconnectPromise\n                this._disconnectPromise = undefined\n                this._connectPromise = p.then(() => this.connect())\n            } else {\n                // starting a fresh connection\n                console.debug(`${this.type}: connecting`)\n                this._connectPromise = Promise.resolve()\n                this.setConnectionState(ConnectionState.Connecting)\n                this._connectPromise = this._connectPromise.then(() =>\n                    this.transportConnectAsync(background)\n                )\n                const p = (this._connectPromise = this._connectPromise\n                    .then(() => {\n                        if (p == this._connectPromise) {\n                            this._connectPromise = undefined\n                            this.setConnectionState(ConnectionState.Connected)\n                        } else {\n                            console.debug(\n                                `${this.type}: connection aborted in flight`,\n                                {\n                                    state: this._connectionState,\n                                    old: this._connectPromise,\n                                    new: p,\n                                }\n                            )\n                            // already reported\n                        }\n                    })\n                    .catch(e => {\n                        if (p == this._connectPromise) {\n                            this._connectPromise = undefined\n                            this.setConnectionState(\n                                ConnectionState.Disconnected\n                            )\n                            if (!background) this.errorHandler(CONNECT, e)\n                            else\n                                console.debug(\n                                    `${this.type}: background connect failed`\n                                )\n                        } else {\n                            console.debug(\n                                `${this.type}: connection error aborted in flight`\n                            )\n                        }\n                    }))\n            }\n        } else {\n            console.debug(`${this.type}: connect with existing promise`)\n        }\n        return this._connectPromise\n    }\n\n    disconnect(background?: boolean): Promise<void> {\n        // already disconnected\n        if (this.connectionState == ConnectionState.Disconnected)\n            return Promise.resolve()\n\n        if (!this._disconnectPromise) {\n            // connection in progress, wait and disconnect when done\n            if (this._connectPromise) {\n                console.debug(\n                    `${this.type}: cancelling connection and disconnect`\n                )\n                this._connectPromise = undefined\n            }\n            console.debug(`${this.type}: disconnecting`)\n            this._disconnectPromise = Promise.resolve()\n            this.setConnectionState(ConnectionState.Disconnecting)\n            this._disconnectPromise = this._disconnectPromise.then(() =>\n                this.transportDisconnectAsync(background)\n            )\n            this._disconnectPromise = this._disconnectPromise\n                .catch(e => {\n                    this._disconnectPromise = undefined\n                    this.errorHandler(DISCONNECT, e)\n                })\n                .finally(() => {\n                    this._disconnectPromise = undefined\n                    this.setConnectionState(ConnectionState.Disconnected)\n                })\n        } else {\n            console.debug(`${this.type}: disconnect with existing promise`)\n        }\n        return this._disconnectPromise\n    }\n\n    async reconnect() {\n        console.debug(`${this.type}: reconnect`)\n        await this.disconnect(true)\n        await this.connect(true)\n    }\n\n    protected handlePacket(payload: Uint8Array) {\n        const { timestamp } = this.bus\n        this._lastReceivedTime = timestamp\n        const pkt = Packet.fromBinary(payload, timestamp)\n        pkt.sender = this.type\n        this.bus.processPacket(pkt)\n    }\n\n    protected handleFrame(payload: Uint8Array) {\n        const { timestamp } = this.bus\n        this._lastReceivedTime = timestamp\n        const pkts = Packet.fromFrame(payload, timestamp)\n        for (const pkt of pkts) {\n            pkt.sender = this.type\n            this.bus.processPacket(pkt)\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected errorHandler(context: string, exception: any) {\n        this.emit(ERROR, { context, exception })\n        this.bus.emit(ERROR, { transport: this, context, exception })\n        this.emit(CHANGE)\n\n        // when a microbit flash is initiated via file download, the device will\n        // stop responding. we should not try to reconnect while this is the case\n        this.disconnect(true)\n    }\n\n    dispose() {\n        this.disposed = true\n        this._cleanups.forEach(c => c())\n        this._cleanups = []\n    }\n}\n\nexport default Transport\n","import JDBus from \"./bus\"\nimport { CHANGE, PACKET_PROCESS, PACKET_SEND, SELF_ANNOUNCE } from \"./constants\"\nimport JDEventSource from \"./eventsource\"\nimport Packet from \"./packet\"\n\nexport interface BusStats {\n    packets: number\n    announce: number\n    acks: number\n    bytes: number\n\n    devices: number\n    simulators: number\n    transport?: string\n}\n\ninterface Stats {\n    packets: number\n    announce: number\n    acks: number\n    bytes: number\n}\n\nexport class BusStatsMonitor extends JDEventSource {\n    private readonly _prev: Stats[] = Array(4)\n        .fill(0)\n        .map(() => ({\n            packets: 0,\n            announce: 0,\n            acks: 0,\n            bytes: 0,\n        }))\n    private _previ = 0\n    private _temp: Stats = {\n        packets: 0,\n        announce: 0,\n        acks: 0,\n        bytes: 0,\n    }\n\n    /**\n     * @internal\n     */\n    constructor(private readonly bus: JDBus) {\n        super()\n        bus.on(PACKET_SEND, this.handlePacketSend.bind(this))\n        bus.on(PACKET_PROCESS, this.handlePacketProcess.bind(this))\n        bus.on(SELF_ANNOUNCE, this.handleSelfAnnounce.bind(this))\n    }\n\n    /**\n     * Computes the current packet statistics of the bus\n     */\n    get current(): BusStats {\n        const r: Stats = {\n            packets: 0,\n            announce: 0,\n            acks: 0,\n            bytes: 0,\n        }\n        const n = this._prev.length\n        for (let i = 0; i < this._prev.length; ++i) {\n            const p = this._prev[i]\n            r.packets += p.packets\n            r.announce += p.announce\n            r.acks += p.acks\n            r.bytes += p.bytes\n        }\n        // announce every 500ms\n        const n2 = n / 2\n        r.packets /= n2\n        r.announce /= n2\n        r.acks /= n2\n        r.bytes /= n2\n        return {\n            devices: this.bus.devices({ ignoreInfrastructure: true }).length,\n            simulators: this.bus.serviceProviders().length,\n            transport: this.bus.transports.find(\n                transport => transport.connected\n            )?.type,\n            ...r,\n        }\n    }\n\n    private accumulate(pkt: Packet) {\n        this._temp.packets++\n        this._temp.bytes += (pkt.header?.length || 0) + (pkt.data?.length || 0)\n        if (pkt.isAnnounce) this._temp.announce++\n        if (pkt.isCRCAck) this._temp.acks++\n    }\n\n    private handleSelfAnnounce() {\n        const changed =\n            JSON.stringify(this._prev) !== JSON.stringify(this._temp)\n        this._prev[this._previ] = this._temp\n        this._previ = (this._previ + 1) % this._prev.length\n        this._temp = {\n            packets: 0,\n            announce: 0,\n            acks: 0,\n            bytes: 0,\n        }\n        if (changed) this.emit(CHANGE)\n    }\n\n    private handlePacketSend(pkt: Packet) {\n        this.accumulate(pkt)\n    }\n\n    private handlePacketProcess(pkt: Packet) {\n        this.accumulate(pkt)\n    }\n}\n","import {\n    CHANGE,\n    ControlAnnounceFlags,\n    ControlCmd,\n    ControlReg,\n    IDENTIFY,\n    SRV_CONTROL,\n} from \"../constants\"\nimport { jdunpack } from \"../pack\"\nimport Packet from \"../packet\"\nimport JDRegisterServer from \"./registerserver\"\nimport JDServiceServer from \"./serviceserver\"\n\n/**\n * A control service server\n * @category Servers\n */\nexport class ControlServer extends JDServiceServer {\n    readonly deviceDescription: JDRegisterServer<[string]>\n    readonly mcuTemperature: JDRegisterServer<[number]>\n    readonly resetIn: JDRegisterServer<[number]>\n    readonly uptime: JDRegisterServer<[number]>\n    private startTime: number\n\n    statusLightColor: number = undefined\n\n    constructor(options?: { resetIn?: boolean }) {\n        super(SRV_CONTROL)\n        const { resetIn } = options || {}\n        this.startTime = Date.now()\n        this.deviceDescription = this.addRegister<[string]>(\n            ControlReg.DeviceDescription\n        )\n        this.mcuTemperature = this.addRegister<[number]>(\n            ControlReg.McuTemperature,\n            [25]\n        )\n        this.uptime = this.addRegister<[number]>(ControlReg.Uptime)\n        if (resetIn)\n            this.resetIn = this.addRegister<[number]>(ControlReg.ResetIn, [0])\n\n        this.addCommand(ControlCmd.Services, this.announce.bind(this))\n        this.addCommand(ControlCmd.Identify, this.identify.bind(this))\n        this.addCommand(ControlCmd.Reset, this.handleReset.bind(this))\n        this.addCommand(ControlCmd.Noop, null)\n        this.addCommand(\n            ControlCmd.SetStatusLight,\n            this.handleSetStatusLight.bind(this)\n        )\n    }\n\n    async announce() {\n        // restartCounter, flags, packetCount, serviceClass\n        const pkt = Packet.jdpacked<[ControlAnnounceFlags, number, number[]]>(\n            ControlCmd.Services,\n            \"u16 u8 x[1] u32[]\",\n            [\n                this.device.restartCounter |\n                    ControlAnnounceFlags.StatusLightRgbNoFade |\n                    ControlAnnounceFlags.SupportsACK,\n                this.device.packetCount + 1,\n                this.device\n                    .services()\n                    .slice(1)\n                    .map(srv => srv.serviceClass),\n            ]\n        )\n\n        await this.sendPacketAsync(pkt)\n\n        // micros\n        this.uptime.setValues([(Date.now() - this.startTime) * 100], true)\n\n        // check if we need to reset\n        if (this.resetIn) {\n            const [resetIn] = this.resetIn.values()\n            if (resetIn) {\n                const resetTimestamp = resetIn / 1000 + this.resetIn.lastSetTime\n                if (resetTimestamp < this.device.bus.timestamp) {\n                    // reset in expired\n                    console.debug(`${this} reset in expired`, {\n                        resetIn,\n                        lastSet: this.resetIn.lastSetTime,\n                        resetTimestamp,\n                    })\n                    this.device.reset()\n                }\n            }\n        }\n    }\n\n    async identify() {\n        this.emit(IDENTIFY)\n    }\n\n    private handleReset() {\n        this.startTime = Date.now()\n        this.device.reset()\n    }\n\n    private handleSetStatusLight(pkt: Packet) {\n        const [toRed, toGreen, toBlue] = jdunpack<\n            [number, number, number, number]\n        >(pkt.data, \"u8 u8 u8 u8\")\n        this.statusLightColor = (toRed << 16) | (toGreen << 8) | toBlue\n        this.emit(CHANGE)\n    }\n}\n\nexport default ControlServer\n","import JDBus from \"../bus\"\nimport { PACKET_PROCESS, PACKET_SEND, SELF_ANNOUNCE } from \"../constants\"\nimport JDEventSource from \"../eventsource\"\nimport Packet from \"../packet\"\nimport { shortDeviceId } from \"../pretty\"\nimport { randomDeviceId } from \"../random\"\n\n/**\n * Implements a device with service servers.\n * @category Servers\n */\nexport abstract class JDServiceProvider extends JDEventSource {\n    private _bus: JDBus\n    public readonly template: string\n    public readonly deviceId: string\n    public readonly shortId: string\n\n    constructor(template: string, deviceId?: string) {\n        super()\n        this.template = template\n        this.deviceId = deviceId\n        if (!this.deviceId) this.deviceId = randomDeviceId()\n        this.shortId = shortDeviceId(this.deviceId)\n        this.handleSelfAnnounce = this.handleSelfAnnounce.bind(this)\n        this.handlePacket = this.handlePacket.bind(this)\n    }\n\n    get bus() {\n        return this._bus\n    }\n\n    set bus(value: JDBus) {\n        if (value !== this._bus) {\n            this.stop()\n            this._bus = value\n            if (this._bus) this.start()\n        }\n    }\n\n    protected start() {\n        if (this._bus) {\n            this._bus.on(SELF_ANNOUNCE, this.handleSelfAnnounce)\n            this._bus.on([PACKET_PROCESS, PACKET_SEND], this.handlePacket)\n        }\n    }\n\n    protected stop() {\n        if (this._bus) {\n            this._bus.off(SELF_ANNOUNCE, this.handleSelfAnnounce)\n            this._bus.off([PACKET_PROCESS, PACKET_SEND], this.handlePacket)\n            this._bus = undefined\n        }\n    }\n\n    protected handleSelfAnnounce(): void {}\n    protected abstract handlePacket(pkt: Packet): void\n}\nexport default JDServiceProvider\n","import JDServiceServer from \"./serviceserver\"\nimport Packet from \"../packet\"\nimport { isBufferEmpty } from \"../utils\"\nimport ControlServer from \"./controlserver\"\nimport {\n    CHANGE,\n    CMD_EVENT_COUNTER_MASK,\n    CMD_EVENT_COUNTER_POS,\n    CMD_EVENT_MASK,\n    ERROR,\n    JD_SERVICE_INDEX_CRC_ACK,\n    MAX_SERVICES_LENGTH,\n    REFRESH,\n    RESET,\n} from \"../constants\"\nimport JDServiceProvider from \"./serviceprovider\"\n\n/**\n * Implements a device with service servers.\n * @category Servers\n */\nexport class JDServerServiceProvider extends JDServiceProvider {\n    private _services: JDServiceServer[]\n    public readonly controlService: ControlServer\n    private _restartCounter = 0\n    private _packetCount = 0\n    private _eventCounter: number = undefined\n    private _delayedPackets: {\n        timestamp: number\n        pkt: Packet\n    }[]\n\n    constructor(\n        template: string,\n        services: JDServiceServer[],\n        options?: {\n            deviceId?: string\n            resetIn?: boolean\n        }\n    ) {\n        super(template, options?.deviceId)\n        this.controlService = new ControlServer(options)\n        this._services = []\n        this.updateServices(services)\n\n        this.on(REFRESH, this.refreshRegisters.bind(this))\n    }\n\n    updateServices(services: JDServiceServer[]) {\n        // clear previous services\n        this._services?.slice(1).forEach(srv => (srv.device = undefined))\n        // store new services\n        this._services = [this.controlService, ...services]\n        if (this._services.length >= MAX_SERVICES_LENGTH) {\n            this.emit(\n                ERROR,\n                `too many services (${this._services.length}) > ${MAX_SERVICES_LENGTH}`\n            )\n            console.warn(`jacdac: dropping services to ${MAX_SERVICES_LENGTH}`)\n            this._services = this._services.slice(0, MAX_SERVICES_LENGTH)\n        }\n        this._services.forEach((srv, i) => {\n            srv.device = this\n            srv.serviceIndex = i\n        })\n        this.emit(CHANGE)\n    }\n\n    removeService(service: JDServiceServer) {\n        if (service?.device !== this) return // not in this device;\n        const newServices = this._services.slice(1)\n        const index = newServices.indexOf(service)\n        if (index > -1) {\n            newServices.splice(index, 1)\n            this.updateServices(newServices)\n        }\n    }\n\n    protected start() {\n        super.start()\n        this._packetCount = 0\n    }\n\n    protected stop() {\n        this._delayedPackets = undefined\n        super.stop()\n    }\n\n    protected handleSelfAnnounce() {\n        super.handleSelfAnnounce()\n        if (this._restartCounter < 0xf) this._restartCounter++\n        // async\n        this.controlService.announce()\n        // also send status codes, for non-zero codes\n        const activeServices = this.services().filter(\n            srv => !isBufferEmpty(srv.statusCode.data)\n        )\n        activeServices.forEach(srv => srv.statusCode.sendGetAsync())\n\n        // reset counter\n        this._packetCount = 0\n    }\n\n    get restartCounter() {\n        return this._restartCounter\n    }\n\n    get packetCount() {\n        return this._packetCount\n    }\n\n    services(): JDServiceServer[] {\n        return this._services.slice(0)\n    }\n\n    service(serviceIndex: number) {\n        return serviceIndex !== undefined && this._services[serviceIndex]\n    }\n\n    toString() {\n        return `host ${this.shortId}`\n    }\n\n    get eventCounter() {\n        return this._eventCounter\n    }\n\n    createEventCmd(evCode: number) {\n        if (!this._eventCounter) this._eventCounter = 0\n        this._eventCounter = (this._eventCounter + 1) & CMD_EVENT_COUNTER_MASK\n        if (evCode >> 8) throw new Error(\"invalid event code\")\n        return (\n            CMD_EVENT_MASK |\n            (this._eventCounter << CMD_EVENT_COUNTER_POS) |\n            evCode\n        )\n    }\n\n    async sendPacketAsync(pkt: Packet) {\n        if (!this.bus) return Promise.resolve()\n\n        // qos counter\n        this._packetCount++\n\n        pkt.deviceIdentifier = this.deviceId\n        // compute crc and send\n        const p = pkt.sendCoreAsync(this.bus)\n        // send to current bus\n        this.bus.processPacket(pkt)\n        // return priomise\n        return p\n    }\n\n    delayedSend(pkt: Packet, timestamp: number) {\n        if (!this._delayedPackets) {\n            this._delayedPackets = []\n            // start processing loop\n            setTimeout(this.processDelayedPackets.bind(this), 10)\n        }\n        const dp = { timestamp, pkt }\n        this._delayedPackets.push(dp)\n        this._delayedPackets.sort((l, r) => -l.timestamp + r.timestamp)\n    }\n\n    private processDelayedPackets() {\n        // consume packets that are ready\n        while (this._delayedPackets?.length) {\n            const { timestamp, pkt } = this._delayedPackets[0]\n            if (timestamp > this.bus.timestamp) break\n            this._delayedPackets.shift()\n            // do we wait?\n            try {\n                this.sendPacketAsync(pkt)\n            } catch (e) {\n                // something went wrong, clear queue\n                this._delayedPackets = undefined\n                throw e\n            }\n        }\n        // keep waiting or stop\n        if (!this._delayedPackets?.length) this._delayedPackets = undefined\n        // we're done\n        else setTimeout(this.processDelayedPackets.bind(this), 10)\n    }\n\n    protected handlePacket(pkt: Packet) {\n        const devIdMatch = pkt.deviceIdentifier == this.deviceId\n        if (pkt.requiresAck && devIdMatch) {\n            pkt.requiresAck = false // make sure we only do it once\n            const crc = pkt.crc\n            const ack = Packet.onlyHeader(crc)\n            ack.serviceIndex = JD_SERVICE_INDEX_CRC_ACK\n            this.sendPacketAsync(ack)\n        }\n\n        if (pkt.isMultiCommand) {\n            if (!pkt.isCommand) return // only commands supported\n            const multiCommandClass = pkt.serviceClass\n            for (const h of this._services) {\n                if (h.serviceClass == multiCommandClass) {\n                    // pretend it's directly addressed to us\n                    const npkt = pkt.cloneForDevice(this.deviceId, h.serviceIndex)\n                    h.handlePacket(npkt)\n                }\n            }\n        } else if (devIdMatch) {\n            if (!pkt.isCommand) return // huh? someone's pretending to be us?\n            const h = this._services[pkt.serviceIndex]\n            if (h) {\n                // log(`handle pkt at ${h.name} cmd=${pkt.service_command}`)\n                h.handlePacket(pkt)\n            }\n        } else {\n            if (pkt.isCommand) return // it's a command, and it's not for us\n            // reception of ACKs is handled by JDDevice class\n        }\n    }\n\n    private refreshRegisters() {\n        this._services.forEach(srv => srv.emit(REFRESH))\n    }\n\n    reset() {\n        this._restartCounter = 0\n        this._packetCount = 0\n        this._services?.forEach(srv => srv.reset())\n        this.emit(RESET)\n    }\n}\nexport default JDServerServiceProvider\n","import {\n    SRV_PROTO_TEST,\n    CHANGE,\n    ProtoTestReg,\n    ProtoTestCmd,\n    ProtoTestEvent,\n} from \"../constants\"\nimport { jdpack, jdunpack } from \"../pack\"\nimport Packet from \"../packet\"\nimport { OutPipe } from \"../pipes\"\nimport JDRegisterServer from \"./registerserver\"\nimport JDServiceServer from \"./serviceserver\"\n\nexport class ProtocolTestServer extends JDServiceServer {\n    private rwBytes: JDRegisterServer<[Uint8Array]>\n\n    constructor() {\n        super(SRV_PROTO_TEST)\n\n        this.init<[boolean]>(\n            ProtoTestReg.RwBool,\n            ProtoTestReg.RoBool,\n            ProtoTestCmd.CBool,\n            ProtoTestEvent.EBool,\n            false\n        )\n        this.init<[number]>(\n            ProtoTestReg.RwI32,\n            ProtoTestReg.RoI32,\n            ProtoTestCmd.CI32,\n            ProtoTestEvent.EI32,\n            0\n        )\n        this.init<[number]>(\n            ProtoTestReg.RwU32,\n            ProtoTestReg.RoU32,\n            ProtoTestCmd.CU32,\n            ProtoTestEvent.EU32,\n            0\n        )\n        this.init<[string]>(\n            ProtoTestReg.RwString,\n            ProtoTestReg.RoString,\n            ProtoTestCmd.CString,\n            ProtoTestEvent.EString,\n            \"\"\n        )\n        this.rwBytes = this.init<[Uint8Array]>(\n            ProtoTestReg.RwBytes,\n            ProtoTestReg.RoBytes,\n            ProtoTestCmd.CBytes,\n            ProtoTestEvent.EBytes,\n            new Uint8Array(0)\n        )\n        this.init<[number, number, number, number]>(\n            ProtoTestReg.RwI8U8U16I32,\n            ProtoTestReg.RoI8U8U16I32,\n            ProtoTestCmd.CI8U8U16I32,\n            ProtoTestEvent.EI8U8U16I32,\n            0,\n            0,\n            0,\n            0\n        )\n        this.init<[number, string]>(\n            ProtoTestReg.RwU8String,\n            ProtoTestReg.RoU8String,\n            ProtoTestCmd.CU8String,\n            ProtoTestEvent.EU8String,\n            0,\n            \"\"\n        )\n\n        this.addCommand(\n            ProtoTestCmd.CReportPipe,\n            this.handleReportPipe.bind(this)\n        )\n    }\n\n    private init<TValues extends any[]>(\n        rwi: number,\n        roi: number,\n        ci: number,\n        ei: number,\n        ...values: TValues\n    ) {\n        const rw = this.addRegister(rwi, values)\n        const ro = this.addRegister(roi, rw.values())\n        rw.on(CHANGE, () => {\n            ro.setValues(rw.values())\n            this.sendEvent(ei, rw.data)\n        })\n        this.addCommand(ci, pkt =>\n            rw.setValues(jdunpack(pkt.data, rw.specification.packFormat))\n        )\n        return rw\n    }\n\n    private async handleReportPipe(pkt: Packet) {\n        const pipe = OutPipe.from(this.device.bus, pkt, true)\n        await pipe.respondForEach(this.rwBytes.data, (b: number) => {\n            const buf = new Uint8Array(1)\n            buf[0] = b\n            return jdpack<[Uint8Array]>(\"b\", [buf])\n        })\n    }\n}\nexport default ProtocolTestServer\n","import {\n    ButtonEvent,\n    ButtonReg,\n    CHANGE,\n    REFRESH,\n    SRV_BUTTON,\n} from \"../jdom/constants\"\nimport SensorServer from \"./sensorserver\"\nimport RegisterServer from \"../jdom/servers/registerserver\"\nimport { jdpack } from \"../jdom/pack\"\n\n/**\n * Server implementation for the button service\n * @category Servers\n */\nexport default class ButtonServer extends SensorServer<[number]> {\n    public static readonly HOLD_TIME = 500\n    public static readonly INACTIVE_VALUE = 0\n    public static readonly ACTIVE_VALUE = 1\n\n    private _downTime: number\n    private _nextHold: number\n\n    readonly analog: RegisterServer<[boolean]>\n    private _threshold: RegisterServer<[number]>\n\n    constructor(instanceName?: string, analog?: boolean) {\n        super(SRV_BUTTON, {\n            instanceName,\n            readingValues: [ButtonServer.INACTIVE_VALUE],\n            streamingInterval: 50,\n        })\n        this.analog = this.addRegister(ButtonReg.Analog, [!!analog])\n        this.on(REFRESH, this.handleRefresh.bind(this))\n    }\n\n    get threshold() {\n        return this._threshold\n    }\n\n    set threshold(value: RegisterServer<[number]>) {\n        if (value !== this._threshold) {\n            this._threshold = value\n            this.analog.setValues([!!this._threshold])\n            this.emit(CHANGE)\n        }\n    }\n\n    private isActive() {\n        // TODO: debouncing\n        const [v] = this.reading.values()\n        const t = this.threshold?.values()?.[0] || 0.5\n\n        return v > t\n    }\n\n    private async handleRefresh() {\n        const now = this.device.bus.timestamp\n        if (this.isActive()) {\n            // down event\n            if (this._downTime === undefined) {\n                this._downTime = now\n                this._nextHold = this._downTime + ButtonServer.HOLD_TIME\n                await this.sendEvent(ButtonEvent.Down)\n                // hold\n            } else if (now > this._nextHold) {\n                const time = now - this._downTime\n                this._nextHold =\n                    this.device.bus.timestamp + ButtonServer.HOLD_TIME\n                await this.sendEvent(\n                    ButtonEvent.Hold,\n                    jdpack<[number]>(\"u32\", [time])\n                )\n            }\n        } else {\n            // up event\n            if (this._downTime !== undefined) {\n                const time = now - this._downTime\n                this._downTime = undefined\n                this._nextHold = undefined\n                await this.sendEvent(\n                    ButtonEvent.Up,\n                    jdpack<[number]>(\"u32\", [time])\n                )\n            }\n        }\n    }\n\n    async down() {\n        this.reading.setValues([ButtonServer.ACTIVE_VALUE])\n    }\n\n    async up() {\n        this.reading.setValues([ButtonServer.INACTIVE_VALUE])\n    }\n}\n","import { BuzzerCmd, BuzzerReg, SRV_BUZZER } from \"../jdom/constants\"\nimport { jdpack, jdunpack } from \"../jdom/pack\"\nimport Packet from \"../jdom/packet\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer, { JDServerOptions } from \"../jdom/servers/serviceserver\"\n\n/**\n * @internal\n */\nexport interface BuzzerTone {\n    frequency: number\n    duration: number\n    volume: number\n}\n\n/**\n * Encodes a buzzer tone information into a data payload\n * @param frequency sound frequency in Hz\n * @param ms sound duration in milliseconds\n * @param volume volume from [0..1]\n * @returns data payload\n * @category Data Packing\n */\nexport function tonePayload(frequency: number, ms: number, volume: number) {\n    const period = Math.round(1000000 / frequency)\n    const duty = (period * volume) >> 11\n    return jdpack(\"u16 u16 u16\", [period, duty, ms])\n}\n\n/**\n * Server implementation for the buzzer service\n * @category Servers\n */\nexport default class BuzzerServer extends JDServiceServer {\n    readonly volume: JDRegisterServer<[number]>\n\n    static PLAY_TONE = \"playTone\"\n\n    constructor(options?: JDServerOptions) {\n        super(SRV_BUZZER, options)\n\n        this.volume = this.addRegister<[number]>(BuzzerReg.Volume, [0.2])\n        this.addCommand(BuzzerCmd.PlayTone, this.handlePlayTone.bind(this))\n    }\n\n    private handlePlayTone(pkt: Packet) {\n        const [period, , duration] = jdunpack<[number, number, number]>(\n            pkt.data,\n            \"u16 u16 u16\"\n        )\n        const frequency = 1000000 / period\n        const [volume] = this.volume.values()\n\n        this.emit(BuzzerServer.PLAY_TONE, <BuzzerTone>{\n            frequency,\n            duration,\n            volume,\n        })\n    }\n}\n","import {\n    CharacterScreenReg,\n    CharacterScreenTextDirection,\n    CharacterScreenVariant,\n    CharacterScreenCmd,\n    SRV_CHARACTER_SCREEN,\n} from \"../jdom/constants\"\nimport Packet from \"../jdom/packet\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\n\nexport default class CharacterScreenServer extends JDServiceServer {\n    readonly message: JDRegisterServer<[string]>\n    readonly brightness: JDRegisterServer<[number]>\n    readonly rows: JDRegisterServer<[number]>\n    readonly columns: JDRegisterServer<[number]>\n    readonly variant: JDRegisterServer<[CharacterScreenVariant]>\n    readonly textDirection: JDRegisterServer<[CharacterScreenTextDirection]>\n\n    constructor(options?: {\n        message?: string\n        brightness?: number\n        rows?: number\n        columns?: number\n        variant?: CharacterScreenVariant\n        textDirection?: CharacterScreenTextDirection\n    }) {\n        super(SRV_CHARACTER_SCREEN)\n        const {\n            message = \"\",\n            rows = 2,\n            columns = 16,\n            variant,\n            textDirection,\n            brightness = 100,\n        } = options || {}\n\n        this.message = this.addRegister<[string]>(CharacterScreenReg.Message, [\n            message,\n        ])\n        this.brightness = this.addRegister<[number]>(\n            CharacterScreenReg.Brightness,\n            [brightness]\n        )\n        this.rows = this.addRegister<[number]>(CharacterScreenReg.Rows, [rows])\n        this.columns = this.addRegister<[number]>(CharacterScreenReg.Columns, [\n            columns,\n        ])\n        this.variant = this.addRegister<[CharacterScreenVariant]>(\n            CharacterScreenReg.Variant,\n            [variant || CharacterScreenVariant.LCD]\n        )\n        this.message = this.addRegister<[string]>(CharacterScreenReg.Message, [\n            \"\",\n        ])\n        this.textDirection = this.addRegister<[CharacterScreenTextDirection]>(\n            CharacterScreenReg.TextDirection,\n            [textDirection || CharacterScreenTextDirection.LeftToRight]\n        )\n\n        this.addCommand(\n            CharacterScreenCmd.SetLine,\n            this.handleSetLine.bind(this)\n        )\n        this.addCommand(CharacterScreenCmd.Clear, this.handleClear.bind(this))\n    }\n\n    handleClear() {\n        this.message.setValues([\"\"])\n    }\n\n    handleSetLine(pkt: Packet) {\n        const [line, lineMessage] = pkt.jdunpack<[number, string]>(\"u16 s\")\n        const [rows] = this.rows.values()\n        if (line >= rows) return\n        const [columns] = this.columns.values()\n\n        const [message = \"\"] = this.message.values()\n        const lines = message.split(\"\\n\")\n        lines[line] = lineMessage.slice(0, columns) // clip as needed\n        const newMessage = lines.map(l => l || \"\").join(\"\\n\")\n        this.message.setValues([newMessage])\n    }\n}\n","import {\n    JoystickButtons,\n    JoystickEvent,\n    JoystickReg,\n    JoystickVariant,\n    SRV_JOYSTICK,\n} from \"../jdom/constants\"\nimport { jdpack } from \"../jdom/pack\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport SensorServer from \"./sensorserver\"\n\n/**\n * @internal\n */\nexport const JOYSTICK_DPAD_BUTTONS =\n    JoystickButtons.Left |\n    JoystickButtons.Right |\n    JoystickButtons.Up |\n    JoystickButtons.Down\n\n/**\n * @internal\n */\nexport const JOYSTICK_ARCADE_BUTTONS =\n    JOYSTICK_DPAD_BUTTONS |\n    JoystickButtons.A |\n    JoystickButtons.B |\n    JoystickButtons.Menu |\n    JoystickButtons.Select |\n    JoystickButtons.Exit\n\n/**\n * @internal\n */\nexport const JOYSTICK_DPAD_A_BUTTONS = JOYSTICK_DPAD_BUTTONS | JoystickButtons.A\n\n/**\n * @internal\n */\nexport const JOYSTICK_DPAD_AB_BUTTONS =\n    JOYSTICK_DPAD_A_BUTTONS | JoystickButtons.B\n\n/**\n * @internal\n */\nexport const JOYSTICK_GAMEPAD_EXTRA_BUTTONS =\n    JoystickButtons.B |\n    JoystickButtons.Select |\n    JoystickButtons.Menu |\n    JoystickButtons.Reset\n\n// https://w3c.github.io/gamepad/#remapping\nconst standardGamepadMapping = [\n    [JoystickButtons.Left, 14],\n    [JoystickButtons.Right, 15],\n    [JoystickButtons.Up, 12],\n    [JoystickButtons.Down, 13],\n    [JoystickButtons.A, 0],\n    [JoystickButtons.B, 1],\n    [JoystickButtons.Select, 8],\n    [JoystickButtons.Menu, 9],\n]\n\nexport default class JoystickServer extends SensorServer<\n    [JoystickButtons, number, number]\n> {\n    readonly variant: JDRegisterServer<[JoystickVariant]>\n    readonly buttonsAvailable: JDRegisterServer<[JoystickButtons]>\n\n    constructor(options?: {\n        instanceName?: string\n        variant?: JoystickVariant\n        buttonsAvailable?: JoystickButtons\n    }) {\n        super(SRV_JOYSTICK, {\n            instanceName: options?.instanceName,\n            readingValues: [0, 0, 0],\n            streamingInterval: 50,\n        })\n        const { variant = JoystickVariant.Thumb, buttonsAvailable = 0 } =\n            options || {}\n\n        this.variant = this.addRegister<[JoystickVariant]>(\n            JoystickReg.Variant,\n            [variant]\n        )\n        this.buttonsAvailable = this.addRegister<[JoystickButtons]>(\n            JoystickReg.ButtonsAvailable,\n            [buttonsAvailable]\n        )\n    }\n\n    get isDigital() {\n        const [value] = this.buttonsAvailable.values()\n        return (value & JOYSTICK_DPAD_BUTTONS) === JOYSTICK_DPAD_BUTTONS\n    }\n\n    async down(buttons: JoystickButtons) {\n        const [currentButtons, x, y] = this.reading.values()\n        const newButtons = currentButtons | buttons\n        await this.updateReading(newButtons, x, y)\n    }\n\n    async up(buttons: JoystickButtons) {\n        const [currentButtons, x, y] = this.reading.values()\n        const newButtons = currentButtons & ~buttons\n        await this.updateReading(newButtons, x, y)\n    }\n\n    async updateDirection(x: number, y: number) {\n        const [button] = this.reading.values()\n        await this.updateReading(button, x, y)\n    }\n\n    /**\n     * Read the state of a browser gamepad and apply it to the sensor\n     * @param gamepad\n     */\n    async update(gamepad: Gamepad) {\n        const { buttons, axes } = gamepad\n        const [buttonsAvailable] = this.buttonsAvailable.values()\n\n        let newButtons: JoystickButtons = 0\n        for (const [b, id] of standardGamepadMapping) {\n            if ((b & buttonsAvailable) == b && !!buttons[id].pressed) {\n                newButtons |= b\n            }\n        }\n\n        let newX = 0,\n            newY = 0\n        if (!this.isDigital) {\n            const [axeLeftRight, axeUpDown] = axes\n            newX = axeLeftRight\n            newY = axeUpDown\n        }\n\n        await this.updateReading(newButtons, newX, newY)\n    }\n\n    private async updateReading(\n        buttons: JoystickButtons,\n        x: number,\n        y: number\n    ) {\n        const [oldButtons] = this.reading.values()\n        if (this.isDigital) {\n            x =\n                buttons & JoystickButtons.Left\n                    ? -1\n                    : buttons & JoystickButtons.Right\n                    ? 1\n                    : 0\n            y =\n                buttons & JoystickButtons.Up\n                    ? -1\n                    : buttons & JoystickButtons.Down\n                    ? 1\n                    : 0\n        } else {\n            const threshold = -1\n            if (x < -threshold) buttons |= JoystickButtons.Left\n            else if (x > threshold) buttons |= JoystickButtons.Right\n            else buttons &= ~(JoystickButtons.Left | JoystickButtons.Right)\n            if (y < -threshold) buttons |= JoystickButtons.Up\n            else if (y > threshold) buttons |= JoystickButtons.Down\n            else buttons &= ~(JoystickButtons.Up | JoystickButtons.Down)\n        }\n        this.reading.setValues([buttons, x, y])\n\n        if (buttons !== oldButtons) {\n            await this.sendEvent(\n                JoystickEvent.ButtonsChanged,\n                jdpack<[number]>(\"u32\", [buttons])\n            )\n        }\n    }\n}\n","import {\n    CHANGE,\n    DotMatrixReg,\n    DotMatrixVariant,\n    SensorReg,\n    SRV_DOT_MATRIX,\n} from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\n\nexport default class DotMatrixServer extends JDServiceServer {\n    readonly dots: JDRegisterServer<[Uint8Array]>\n    readonly rows: JDRegisterServer<[number]>\n    readonly columns: JDRegisterServer<[number]>\n    readonly brightness: JDRegisterServer<[number]>\n    readonly variant: JDRegisterServer<[DotMatrixVariant]>\n\n    constructor(\n        columns: number,\n        rows: number,\n        options?: {\n            brightness?: number\n            variant?: DotMatrixVariant\n        }\n    ) {\n        super(SRV_DOT_MATRIX)\n        const { brightness, variant } = options || {}\n        this.dots = this.addRegister(DotMatrixReg.Dots, [new Uint8Array(0)])\n        this.rows = this.addRegister(DotMatrixReg.Rows, [rows])\n        this.columns = this.addRegister(DotMatrixReg.Columns, [columns])\n        if (brightness !== undefined)\n            this.brightness = this.addRegister(DotMatrixReg.Brightness, [128])\n        if (variant !== undefined)\n            this.variant = this.addRegister(DotMatrixReg.Variant, [variant])\n        this.rows.skipBoundaryCheck = true\n        this.rows.skipErrorInjection = true\n\n        if (variant === DotMatrixVariant.LED)\n            this.addRegister<[number]>(SensorReg.StreamingPreferredInterval, [\n                50,\n            ])\n\n        this.rows.on(CHANGE, this.updateDotsBuffer.bind(this))\n        this.columns.on(CHANGE, this.updateDotsBuffer.bind(this))\n\n        this.updateDotsBuffer()\n    }\n\n    private updateDotsBuffer() {\n        // columns must be byte aligned\n        const [rows] = this.rows.values()\n        const [columns] = this.columns.values()\n\n        // there's probably a much smarter way to do this\n        const columnspadded = columns + (8 - (columns % 8))\n        // total bits needed\n        const n = rows * columnspadded\n\n        if (this.dots.data?.length !== n) {\n            this.dots.data = new Uint8Array(n)\n            this.dots.emit(CHANGE)\n        }\n    }\n}\n","/*\n * `0xD0: set_all(C+)` - set all pixels in current range to given color pattern\n * `0xD1: fade(C+)` - set `N` pixels to color between colors in sequence\n * `0xD2: fade_hsv(C+)` - similar to `fade()`, but colors are specified and faded in HSV\n * `0xD3: rotate_fwd(K)` - rotate (shift) pixels by `K` positions away from the connector\n * `0xD4: rotate_back(K)` - same, but towards the connector\n * `0xD5: show(M=50)` - send buffer to strip and wait `M` milliseconds\n * `0xD6: range(P=0, N=length)` - range from pixel `P`, `N` pixels long\n * `0xD7: mode(K=0)` - set update mode\n * `0xD8: mode1(K=0)` - set update mode for next command only\n */\n\nexport const LIGHT_PROG_SET_ALL = 0xd0\nexport const LIGHT_PROG_FADE = 0xd1\nexport const LIGHT_PROG_FADE_HSV = 0xd2\nexport const LIGHT_PROG_ROTATE_FWD = 0xd3\nexport const LIGHT_PROG_ROTATE_BACK = 0xd4\nexport const LIGHT_PROG_SHOW = 0xd5\nexport const LIGHT_PROG_RANGE = 0xd6\nexport const LIGHT_PROG_MODE = 0xd7\nexport const LIGHT_PROG_MODE1 = 0xd8\n\nexport const LIGHT_MODE_REPLACE = 0x00\nexport const LIGHT_MODE_ADD_RGB = 0x01\nexport const LIGHT_MODE_SUBTRACT_RGB = 0x02\nexport const LIGHT_MODE_MULTIPLY_RGB = 0x03\nexport const LIGHT_MODE_LAST = 0x03\n\nexport const LIGHT_PROG_COLN = 0xc0\nexport const LIGHT_PROG_COL1 = 0xc1\nexport const LIGHT_PROG_COL2 = 0xc2\nexport const LIGHT_PROG_COL3 = 0xc3\n\nexport const LIGHT_PROG_COL1_SET = 0xcf\n","import {\n    CHANGE,\n    LedPixelCmd,\n    LedPixelLightType,\n    LedPixelReg,\n    LedPixelVariant,\n    RENDER,\n    SRV_LED_PIXEL,\n} from \"../jdom/constants\"\nimport {\n    LIGHT_MODE_ADD_RGB,\n    LIGHT_MODE_LAST,\n    LIGHT_MODE_MULTIPLY_RGB,\n    LIGHT_MODE_REPLACE,\n    LIGHT_MODE_SUBTRACT_RGB,\n    LIGHT_PROG_COL1,\n    LIGHT_PROG_COL1_SET,\n    LIGHT_PROG_COL2,\n    LIGHT_PROG_COL3,\n    LIGHT_PROG_COLN,\n    LIGHT_PROG_FADE,\n    LIGHT_PROG_FADE_HSV,\n    LIGHT_PROG_MODE,\n    LIGHT_PROG_MODE1,\n    LIGHT_PROG_RANGE,\n    LIGHT_PROG_ROTATE_BACK,\n    LIGHT_PROG_ROTATE_FWD,\n    LIGHT_PROG_SET_ALL,\n    LIGHT_PROG_SHOW,\n} from \"../jdom/lightconstants\"\nimport Packet from \"../jdom/packet\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer, { JDServerOptions } from \"../jdom/servers/serviceserver\"\nimport { isBufferEmpty } from \"../jdom/utils\"\n\nconst PROG_EOF = 0\nconst PROG_CMD = 1\nconst PROG_NUMBER = 3\nconst PROG_COLOR_BLOCK = 4\n\ninterface RGB {\n    r: number\n    g: number\n    b: number\n}\n\nfunction rgb(r: number, g: number, b: number) {\n    return { r, g, b }\n}\n\nfunction hsv(hue: number, sat: number, val: number): RGB {\n    // scale down to 0..192\n    hue = (hue * 192) >> 8\n\n    // reference: based on FastLED's hsv2rgb rainbow algorithm\n    // [https://github.com/FastLED/FastLED](MIT)\n    const invsat = 255 - sat\n    const brightness_floor = (val * invsat) >> 8\n    const color_amplitude = val - brightness_floor\n    const section = (hue / 0x40) >> 0 // [0..2]\n    const offset = hue % 0x40 >> 0 // [0..63]\n\n    const rampup = offset\n    const rampdown = 0x40 - 1 - offset\n\n    const rampup_amp_adj = ((rampup * color_amplitude) / (256 / 4)) >> 0\n    const rampdown_amp_adj = ((rampdown * color_amplitude) / (256 / 4)) >> 0\n\n    const rampup_adj_with_floor = rampup_amp_adj + brightness_floor\n    const rampdown_adj_with_floor = rampdown_amp_adj + brightness_floor\n\n    let r = 0,\n        g = 0,\n        b = 0\n    if (section) {\n        if (section == 1) {\n            // section 1: 0x40..0x7F\n            r = brightness_floor\n            g = rampdown_adj_with_floor\n            b = rampup_adj_with_floor\n        } else {\n            // section 2; 0x80..0xBF\n            r = rampup_adj_with_floor\n            g = brightness_floor\n            b = rampdown_adj_with_floor\n        }\n    } else {\n        // section 0: 0x00..0x3F\n        r = rampdown_adj_with_floor\n        g = rampup_adj_with_floor\n        b = brightness_floor\n    }\n    return rgb(r, g, b)\n}\n\nfunction mulcol(c: number, m: number): number {\n    let c2 = (c * m) >> 7\n    if (m < 128 && c == c2) c2--\n    else if (m > 128 && c == c2) c2++\n    return c2\n}\n\nfunction clamp(c: number): number {\n    if (c < 0) return 0\n    if (c > 255) return 255\n    return c\n}\n\nfunction SCALE0(c: number, i: number) {\n    return ((c & 0xff) * (1 + (i & 0xff))) >> 8\n}\n\nexport default class LedPixelServer extends JDServiceServer {\n    readonly brightness: JDRegisterServer<[number]>\n    readonly actualBrightness: JDRegisterServer<[number]>\n    readonly lightType: JDRegisterServer<[LedPixelLightType]>\n    readonly numPixels: JDRegisterServer<[number]>\n    readonly maxPower: JDRegisterServer<[number]>\n    readonly variant: JDRegisterServer<[LedPixelVariant]>\n    readonly maxPixels: JDRegisterServer<[number]>\n    readonly numRepeats: JDRegisterServer<[number]>\n    readonly numColumns: JDRegisterServer<[number]>\n\n    private pxbuffer: Uint8Array = new Uint8Array(0)\n\n    private prog_mode = 0\n    private prog_tmpmode = 0\n\n    private range_start = 0\n    private range_end = 0\n    private range_len = 0\n    private range_ptr = 0\n\n    private prog_ptr = 0\n    private prog_size = 0\n    private prog_data = new Uint8Array(0)\n\n    private dirty = true\n    private inited = false\n\n    power_enable = false\n\n    constructor(\n        options?: {\n            numPixels?: number\n            numColumns?: number\n            maxPixels?: number\n            maxPower?: number\n        } & JDServerOptions\n    ) {\n        super(SRV_LED_PIXEL, options)\n\n        const {\n            numColumns,\n            maxPower = 200,\n            maxPixels = 300,\n            numPixels = 15,\n        } = options || {}\n\n        this.brightness = this.addRegister<[number]>(LedPixelReg.Brightness, [\n            15,\n        ])\n        this.actualBrightness = this.addRegister<[number]>(\n            LedPixelReg.ActualBrightness,\n            [15]\n        )\n        this.lightType = this.addRegister<[LedPixelLightType]>(\n            LedPixelReg.LightType,\n            [LedPixelLightType.WS2812B_GRB]\n        )\n        this.numPixels = this.addRegister<[number]>(LedPixelReg.NumPixels, [\n            numPixels,\n        ])\n        this.maxPower = this.addRegister<[number]>(LedPixelReg.MaxPower, [\n            maxPower,\n        ])\n        this.maxPixels = this.addRegister<[number]>(LedPixelReg.MaxPixels, [\n            maxPixels,\n        ])\n        this.variant = this.addRegister<[LedPixelVariant]>(\n            LedPixelReg.Variant,\n            [LedPixelVariant.Strip]\n        )\n        this.numRepeats = this.addRegister<[number]>(LedPixelReg.NumRepeats, [\n            0,\n        ])\n        if (numColumns !== undefined)\n            this.numColumns = this.addRegister<[number]>(\n                LedPixelReg.NumColumns,\n                [numColumns]\n            )\n\n        this.brightness.on(\n            CHANGE,\n            () => (this.intensity = this.requested_intensity)\n        )\n        this.numPixels.on(CHANGE, this.allocRxBuffer.bind(this))\n        this.maxPixels.on(CHANGE, this.allocRxBuffer.bind(this))\n\n        this.addCommand(LedPixelCmd.Run, this.handleRun.bind(this))\n\n        this.allocRxBuffer()\n    }\n\n    /**\n     * Gets an array of RGB color numbers\n     */\n    get colors() {\n        return this.pxbuffer\n    }\n\n    private get maxpower(): number {\n        const [r] = this.maxPower.values() || [200]\n        return r\n    }\n\n    private get maxpixels(): number {\n        const [r] = this.maxPixels.values() || []\n        return r\n    }\n\n    private get numpixels(): number {\n        const [r] = this.numPixels.values() || [0]\n        return r\n    }\n\n    private get requested_intensity(): number {\n        const [r] = this.brightness.values() || [0]\n        return r\n    }\n\n    private get intensity(): number {\n        const [r] = this.actualBrightness.values() || [0]\n        return r\n    }\n\n    private set intensity(v: number) {\n        this.actualBrightness.setValues([v])\n    }\n\n    private jd_power_enable(value: boolean) {\n        this.power_enable = value\n    }\n\n    is_enabled() {\n        return this.numpixels > 0 && this.requested_intensity > 0\n    }\n\n    private allocRxBuffer() {\n        const { numpixels = 0, maxpixels, pxbuffer } = this\n        if (maxpixels !== undefined && numpixels > maxpixels)\n            this.numPixels.setValues([this.maxpixels])\n        const n = numpixels * 3 // don't need to prealloc here\n        if (pxbuffer || n !== pxbuffer.length) this.pxbuffer = new Uint8Array(n)\n    }\n\n    private reset_range() {\n        this.range_ptr = this.range_start\n    }\n\n    private set_next(c: RGB) {\n        if (this.range_ptr >= this.range_end) return false\n\n        const p = this.pxbuffer\n        const pi = this.range_ptr++ * 3\n        // fast path\n        if (this.prog_tmpmode == LIGHT_MODE_REPLACE) {\n            p[pi + 0] = c.r\n            p[pi + 1] = c.g\n            p[pi + 2] = c.b\n            return true\n        }\n\n        let r = p[pi + 0],\n            g = p[pi + 1],\n            b = p[pi + 2]\n        switch (this.prog_tmpmode) {\n            case LIGHT_MODE_ADD_RGB:\n                r += c.r\n                g += c.g\n                b += c.b\n                break\n            case LIGHT_MODE_SUBTRACT_RGB:\n                r -= c.r\n                g -= c.g\n                b -= c.b\n                break\n            case LIGHT_MODE_MULTIPLY_RGB:\n                r = mulcol(r, c.r)\n                g = mulcol(g, c.g)\n                b = mulcol(b, c.b)\n                break\n        }\n        p[pi + 0] = clamp(r)\n        p[pi + 1] = clamp(g)\n        p[pi + 2] = clamp(b)\n        return true\n    }\n\n    private limit_intensity() {\n        const { numpixels, requested_intensity, maxpower, pxbuffer } = this\n\n        let n = numpixels * 3\n        const prev_intensity = this.intensity\n        let intensity = this.intensity\n\n        intensity += 1 + (intensity >> 5)\n        if (\n            requested_intensity !== undefined &&\n            intensity > requested_intensity\n        )\n            intensity = requested_intensity\n\n        let current_full = 0\n        let current = 0\n        let current_prev = 0\n        let di = 0\n        while (n--) {\n            const v = pxbuffer[di++]\n            current += SCALE0(v, intensity)\n            current_prev += SCALE0(v, prev_intensity)\n            current_full += v\n        }\n\n        // 46uA per step of LED\n        current *= 46\n        current_prev *= 46\n        current_full *= 46\n\n        // 14mA is the chip at 48MHz, 930uA per LED is static\n        const base_current = 14000 + 930 * numpixels\n        const current_limit = maxpower * 1000 - base_current\n\n        if (current <= current_limit) {\n            this.intensity = intensity\n            // LOG(\"curr: %dmA; not limiting %d\", (base_current + current) / 1000, state->intensity);\n            return\n        }\n\n        if (current_prev <= current_limit) {\n            return // no change needed\n        }\n\n        let inten = current_limit / (current_full >> 8) - 1\n        if (inten < 0) inten = 0\n        this.intensity = inten\n    }\n\n    private prog_fetch_color(): RGB {\n        const ptr = this.prog_ptr\n        if (ptr + 3 > this.prog_size) return rgb(0, 0, 0)\n        const d = this.prog_data\n        this.prog_ptr = ptr + 3\n        return rgb(d[ptr + 0], d[ptr + 1], d[ptr + 2])\n    }\n\n    private prog_fetch(): {\n        dst?: number\n        prog: number\n    } {\n        if (this.prog_ptr >= this.prog_size) return { prog: PROG_EOF }\n        const d = this.prog_data\n        const c = d[this.prog_ptr++]\n        if (!(c & 0x80)) {\n            return { dst: c, prog: PROG_NUMBER }\n        } else if ((c & 0xc0) == 0x80) {\n            return {\n                dst: ((c & 0x3f) << 8) | d[this.prog_ptr++],\n                prog: PROG_NUMBER,\n            }\n        } else\n            switch (c) {\n                case LIGHT_PROG_COL1:\n                    return {\n                        dst: 1,\n                        prog: PROG_COLOR_BLOCK,\n                    }\n                case LIGHT_PROG_COL2:\n                    return {\n                        dst: 2,\n                        prog: PROG_COLOR_BLOCK,\n                    }\n                case LIGHT_PROG_COL3:\n                    return {\n                        dst: 3,\n                        prog: PROG_COLOR_BLOCK,\n                    }\n                case LIGHT_PROG_COLN:\n                    return {\n                        dst: d[this.prog_ptr++],\n                        prog: PROG_COLOR_BLOCK,\n                    }\n                default:\n                    return {\n                        dst: c,\n                        prog: PROG_CMD,\n                    }\n            }\n    }\n\n    private prog_fetch_num(defl: number): number {\n        const prev = this.prog_ptr\n        const fr = this.prog_fetch()\n        const { dst: res, prog: r } = fr\n        if (r == PROG_NUMBER) return res\n        else {\n            this.prog_ptr = prev // rollback\n            return defl\n        }\n    }\n\n    private prog_fetch_cmd(): number {\n        let cmd: number\n        // skip until there's a command\n        for (;;) {\n            const c = this.prog_fetch()\n            switch (c.prog) {\n                case PROG_CMD:\n                    return c.dst\n                case PROG_COLOR_BLOCK:\n                    while (cmd--) this.prog_fetch_color()\n                    break\n                case PROG_EOF:\n                    return 0\n            }\n        }\n    }\n\n    private prog_set(len: number) {\n        this.reset_range()\n        const start = this.prog_ptr\n        for (;;) {\n            this.prog_ptr = start\n            let ok = false\n            for (let i = 0; i < len; ++i) {\n                // don't break the loop immediately if !ok - make sure the prog counter advances\n                ok = this.set_next(this.prog_fetch_color())\n            }\n            if (!ok) break\n        }\n    }\n\n    private prog_fade(len: number, usehsv: boolean) {\n        if (len < 2) {\n            this.prog_set(len)\n            return\n        }\n        let colidx = 0\n        const endp = this.prog_ptr + 3 * len\n        let col0 = this.prog_fetch_color()\n        let col1 = this.prog_fetch_color()\n\n        const colstep = ((len - 1) << 16) / this.range_len\n        let colpos = 0\n\n        this.reset_range()\n\n        for (;;) {\n            while (colidx < colpos >> 16) {\n                colidx++\n                col0 = col1\n                col1 = this.prog_fetch_color()\n            }\n            const fade1 = colpos & 0xffff\n            const fade0 = 0xffff - fade1\n            const col = rgb(\n                (col0.r * fade0 + col1.r * fade1 + 0x8000) >> 16,\n                (col0.g * fade0 + col1.g * fade1 + 0x8000) >> 16,\n                (col0.b * fade0 + col1.b * fade1 + 0x8000) >> 16\n            )\n            if (!this.set_next(usehsv ? hsv(col.r, col.g, col.b) : col)) break\n            colpos += colstep\n        }\n\n        this.prog_ptr = endp\n    }\n\n    private prog_rot(shift: number) {\n        if (shift <= 0 || shift >= this.range_len) return\n\n        const range_start = this.range_start\n        const range_end = this.range_end\n        const buf = this.pxbuffer\n\n        let first = range_start * 3\n        let middle = (range_start + shift) * 3\n        const last = range_end * 3\n        let next = middle\n\n        while (first != next) {\n            const tmp = buf[first]\n            const tmp1 = buf[first + 1]\n            const tmp2 = buf[first + 2]\n\n            buf[first] = buf[next]\n            buf[first + 1] = buf[next + 1]\n            buf[first + 2] = buf[next + 2]\n\n            buf[next] = tmp\n            buf[next + 1] = tmp1\n            buf[next + 2] = tmp2\n\n            first += 3\n            next += 3\n\n            if (next === last) next = middle\n            else if (first === middle) middle = next\n        }\n    }\n\n    private fetch_mode(): number {\n        const m = this.prog_fetch_num(0)\n        if (m > LIGHT_MODE_LAST) return 0\n        return m\n    }\n\n    private prog_process() {\n        const data = this.prog_data\n\n        if (this.prog_ptr >= this.prog_size) return false\n\n        // check that the program wasn't restarted\n        // concurrently\n        while (data === this.prog_data) {\n            const cmd = this.prog_fetch_cmd()\n            if (!cmd) break\n\n            if (cmd == LIGHT_PROG_SHOW) {\n                const k = this.prog_fetch_num(50)\n                this.dirty = true\n                setTimeout(this.animationFrame.bind(this), k)\n                // check data is still current;\n                return data === this.prog_data\n            }\n\n            switch (cmd) {\n                case LIGHT_PROG_COL1_SET:\n                    this.range_ptr = this.range_start + this.prog_fetch_num(0)\n                    this.set_next(this.prog_fetch_color())\n                    break\n                case LIGHT_PROG_FADE:\n                case LIGHT_PROG_FADE_HSV:\n                case LIGHT_PROG_SET_ALL: {\n                    const { dst: len, prog: pcmd } = this.prog_fetch()\n                    if (pcmd != PROG_COLOR_BLOCK || len == 0) continue // bailout\n                    if (cmd == LIGHT_PROG_SET_ALL) this.prog_set(len)\n                    else this.prog_fade(len, cmd == LIGHT_PROG_FADE_HSV)\n                    break\n                }\n\n                case LIGHT_PROG_ROTATE_BACK:\n                case LIGHT_PROG_ROTATE_FWD: {\n                    let k = this.prog_fetch_num(1)\n                    const len = this.range_len\n                    if (len == 0) continue\n                    while (k >= len) k -= len\n                    if (cmd == LIGHT_PROG_ROTATE_FWD && k != 0) k = len - k\n                    this.prog_rot(k)\n                    break\n                }\n\n                case LIGHT_PROG_MODE1:\n                    this.prog_tmpmode = this.fetch_mode()\n                    break\n\n                case LIGHT_PROG_MODE:\n                    this.prog_mode = this.fetch_mode()\n                    break\n\n                case LIGHT_PROG_RANGE: {\n                    let start = this.prog_fetch_num(0)\n                    const len = this.prog_fetch_num(this.numpixels)\n                    const numpixels = this.numpixels\n                    if (start > numpixels) start = numpixels\n                    let end = start + len\n                    if (end > numpixels) end = numpixels\n                    this.range_start = start\n                    this.range_end = end\n                    this.range_len = end - start\n                    break\n                }\n            }\n\n            if (cmd != LIGHT_PROG_MODE1) this.prog_tmpmode = this.prog_mode\n        }\n\n        return false\n    }\n\n    /**\n     * Perform an animation step\n     */\n    animationFrame() {\n        if (!this.prog_process()) return // concurrently udpated\n\n        if (!this.is_enabled()) return\n        if (this.dirty) {\n            this.dirty = false\n            if (isBufferEmpty(this.pxbuffer)) {\n                this.jd_power_enable(false)\n                return\n            } else {\n                this.jd_power_enable(true)\n            }\n            this.limit_intensity()\n            // we're ready to render...\n            this.emit(RENDER)\n        }\n    }\n\n    private sync_config() {\n        if (!this.is_enabled()) {\n            this.jd_power_enable(false)\n            return\n        }\n\n        if (!this.inited) {\n            this.inited = true\n            // initialize?\n            // px_init(this.lighttype);\n        }\n\n        this.jd_power_enable(true)\n    }\n\n    private handleRun(pkt: Packet) {\n        this.prog_data = pkt.data\n        this.prog_size = this.prog_data.length\n        this.prog_ptr = 0\n\n        this.range_start = 0\n        this.range_end = this.range_len = this.numpixels\n        this.prog_tmpmode = this.prog_mode = 0\n\n        this.sync_config()\n        this.animationFrame()\n    }\n}\n","import { MatrixKeypadReg, SRV_MATRIX_KEYPAD } from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport SensorServer from \"./sensorserver\"\n\nexport default class MatrixKeypadServer extends SensorServer<[[number][]]> {\n    readonly rows: JDRegisterServer<[number]>\n    readonly columns: JDRegisterServer<[number]>\n    readonly labels: JDRegisterServer<[[string][]]>\n\n    constructor(columns: number, rows: number, labels?: string[]) {\n        super(SRV_MATRIX_KEYPAD, {\n            readingValues: [[]],\n        })\n\n        this.columns = this.addRegister(MatrixKeypadReg.Columns, [columns])\n        this.rows = this.addRegister(MatrixKeypadReg.Rows, [rows])\n        this.labels = this.addRegister(\n            MatrixKeypadReg.Labels,\n            labels ? [labels.map(l => [l])] : undefined\n        )\n    }\n\n    async down(button: number) {\n        const [values] = this.reading.values()\n        const valuei = values.findIndex(v => v[0] === button)\n        if (valuei < 0) {\n            values.push([button])\n            this.reading.setValues([values])\n        }\n    }\n\n    async up(button: number) {\n        const [values] = this.reading.values()\n        const valuei = values.findIndex(v => v[0] === button)\n        if (valuei > -1) {\n            values.splice(valuei, 1)\n            this.reading.setValues([values])\n        }\n    }\n}\n","import { MotorReg, SRV_MOTOR } from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\n\nexport default class MotorServer extends JDServiceServer {\n    readonly duty: JDRegisterServer<[number]>\n    readonly enabled: JDRegisterServer<[boolean]>\n    readonly loadTorque: JDRegisterServer<[number]>\n    readonly loadSpeed: JDRegisterServer<[number]>\n\n    constructor(instanceName?: string) {\n        super(SRV_MOTOR, { instanceName })\n\n        this.duty = this.addRegister<[number]>(MotorReg.Duty, [0])\n        this.enabled = this.addRegister<[boolean]>(MotorReg.Enabled, [false])\n        this.loadTorque = this.addRegister<[number]>(MotorReg.LoadTorque)\n        this.loadSpeed = this.addRegister<[number]>(MotorReg.LoadSpeed)\n    }\n}\n","import { JDClient } from \"../jdom/client\"\nimport { CHANGE, SystemEvent, SystemReadingThreshold } from \"../jdom/constants\"\nimport AnalogSensorServer from \"./analogsensorserver\"\n\nexport default class LevelDetector extends JDClient {\n    private _state: number\n\n    constructor(readonly service: AnalogSensorServer) {\n        super()\n        this.reset()\n        if (this.service.inactiveThreshold)\n            this.mount(\n                this.service.inactiveThreshold.subscribe(\n                    CHANGE,\n                    this.reset.bind(this)\n                )\n            )\n        if (this.service.activeThreshold)\n            this.mount(\n                this.service.activeThreshold.subscribe(\n                    CHANGE,\n                    this.reset.bind(this)\n                )\n            )\n        this.mount(\n            this.service.reading.subscribe(CHANGE, this.update.bind(this))\n        )\n    }\n\n    reset() {\n        this._state = SystemReadingThreshold.Neutral\n    }\n\n    update() {\n        const [level] = this.service.reading.values()\n        if (level === undefined) {\n            this.setState(SystemReadingThreshold.Neutral)\n            return\n        }\n\n        const [active] = this.service.activeThreshold?.values()\n        if (active !== undefined && level >= active) {\n            this.setState(SystemReadingThreshold.Active)\n            return\n        }\n\n        const [inactive] = this.service.inactiveThreshold?.values()\n        if (inactive !== undefined && level <= inactive) {\n            this.setState(SystemReadingThreshold.Inactive)\n            return\n        }\n\n        // neutral\n        this.setState(SystemReadingThreshold.Neutral)\n    }\n\n    private setState(state: number) {\n        if (state === this._state) return\n\n        this._state = state\n        switch (state) {\n            case SystemReadingThreshold.Active:\n                this.service.sendEvent(SystemEvent.Active)\n                break\n            case SystemReadingThreshold.Inactive:\n                this.service.sendEvent(SystemEvent.Inactive)\n                break\n            case SystemReadingThreshold.Neutral:\n                this.service.sendEvent(SystemEvent.Neutral)\n                break\n        }\n    }\n}\n","import { SystemReg } from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport LevelDetector from \"./leveldetector\"\nimport SensorServer, { SensorServiceOptions } from \"./sensorserver\"\n\n/**\n * Creation options for AnalogSensorServer\n * @category Servers\n * @internal\n */\nexport interface AnalogSensorServerOptions\n    extends SensorServiceOptions<[number]> {\n    minReading?: number\n    maxReading?: number\n    inactiveThreshold?: number\n    activeThreshold?: number\n    readingResolution?: number\n}\n\n/**\n * Base class for analog sensor servers\n * @category Servers\n */\nexport default class AnalogSensorServer extends SensorServer<[number]> {\n    readonly inactiveThreshold: JDRegisterServer<[number]>\n    readonly activeThreshold: JDRegisterServer<[number]>\n    readonly levelDetector: LevelDetector\n\n    constructor(serviceClass: number, options?: AnalogSensorServerOptions) {\n        super(serviceClass, options)\n        const {\n            minReading,\n            maxReading,\n            inactiveThreshold,\n            activeThreshold,\n            readingResolution,\n        } = options || {}\n        if (minReading !== undefined)\n            this.addRegister<[number]>(SystemReg.MinReading, [minReading])\n        if (maxReading !== undefined)\n            this.addRegister<[number]>(SystemReg.MaxReading, [maxReading])\n        if (readingResolution !== undefined)\n            this.addRegister<[number]>(SystemReg.ReadingResolution, [\n                readingResolution,\n            ])\n        if (\n            inactiveThreshold !== undefined ||\n            this.activeThreshold !== undefined\n        ) {\n            if (inactiveThreshold !== undefined)\n                this.inactiveThreshold = this.addRegister<[number]>(\n                    SystemReg.InactiveThreshold,\n                    [inactiveThreshold]\n                )\n            if (activeThreshold !== undefined)\n                this.activeThreshold = this.addRegister<[number]>(\n                    SystemReg.ActiveThreshold,\n                    [activeThreshold]\n                )\n            this.levelDetector = new LevelDetector(this)\n        }\n    }\n}\n","import { CHANGE, RainGaugeReg, SRV_RAIN_GAUGE } from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport AnalogSensorServer from \"./analogsensorserver\"\n\nexport default class RainGaugeServer extends AnalogSensorServer {\n    readonly precipitationPrecision: JDRegisterServer<[number]>\n    private _tiltCount = 0\n    private _level = 0\n\n    constructor(options?: { bucketSize?: number }) {\n        super(SRV_RAIN_GAUGE, {\n            readingValues: [0],\n        })\n        const { bucketSize } = options || {}\n\n        this.precipitationPrecision = this.addRegister<[number]>(\n            RainGaugeReg.PrecipitationPrecision,\n            [bucketSize || 0.2794]\n        )\n        this._level = 0\n    }\n\n    get tiltCount() {\n        return this._tiltCount\n    }\n\n    get level() {\n        return this._level\n    }\n\n    async rain(fraction: number) {\n        if (!fraction) return\n\n        this._level += fraction\n        if (this._level >= 0.7) await this.tilt()\n        else this.emit(CHANGE)\n    }\n\n    async tilt() {\n        this._tiltCount++\n        this._level = 0\n\n        const [bucket] = this.precipitationPrecision.values()\n        const [current] = this.reading.values()\n        this.reading.setValues([current + (bucket || 0.2)])\n\n        this.emit(CHANGE)\n    }\n}\n","import {\n    ReflectedLightReg,\n    ReflectedLightVariant,\n    SRV_REFLECTED_LIGHT,\n} from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport AnalogSensorServer from \"./analogsensorserver\"\n\nexport default class ReflectedLightServer extends AnalogSensorServer {\n    readonly variant: JDRegisterServer<[ReflectedLightVariant]>\n\n    constructor(options?: { variant?: ReflectedLightVariant }) {\n        super(SRV_REFLECTED_LIGHT, { readingValues: [0] })\n        const { variant } = options || {}\n\n        this.variant = this.addRegister<[ReflectedLightVariant]>(\n            ReflectedLightReg.Variant,\n            [variant || ReflectedLightVariant.InfraredDigital]\n        )\n    }\n}\n","import { RotaryEncoderReg, SRV_ROTARY_ENCODER } from \"../jdom/constants\"\nimport SensorServer from \"./sensorserver\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\n\nexport default class RotaryEncoderServer extends SensorServer<[number]> {\n    readonly clicksPerTurn: JDRegisterServer<[number]>\n\n    constructor() {\n        super(SRV_ROTARY_ENCODER, { readingValues: [0], streamingInterval: 50 })\n\n        this.clicksPerTurn = this.addRegister<[number]>(\n            RotaryEncoderReg.ClicksPerTurn,\n            [12]\n        )\n    }\n\n    async rotate(clicks: number) {\n        const [position] = this.reading.values()\n        this.reading.setValues([position + (clicks >> 0)])\n    }\n}\n","import {\n    CHANGE,\n    PACKET_DATA_NORMALIZE,\n    ServoReg,\n    SRV_SERVO,\n} from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer, { JDServerOptions } from \"../jdom/servers/serviceserver\"\n\nexport default class ServoServer extends JDServiceServer {\n    readonly angle: JDRegisterServer<[number]>\n    readonly currentAngle: JDRegisterServer<[number]>\n    readonly offset: JDRegisterServer<[number]>\n    readonly enabled: JDRegisterServer<[boolean]>\n    readonly minAngle: JDRegisterServer<[number]>\n    readonly maxAngle: JDRegisterServer<[number]>\n    readonly responseSpeed: JDRegisterServer<[number]>\n    readonly stallTorque: JDRegisterServer<[number]>\n\n    constructor(\n        options?: {\n            minAngle?: number\n            maxAngle?: number\n            responseSpeed?: number\n            stallTorque?: number\n        } & JDServerOptions\n    ) {\n        super(SRV_SERVO, options)\n        const {\n            minAngle = -90,\n            maxAngle = 90,\n            responseSpeed,\n            stallTorque,\n        } = options || {}\n\n        this.angle = this.addRegister<[number]>(ServoReg.Angle, [0])\n        this.currentAngle = this.addRegister<[number]>(ServoReg.CurrentAngle, [\n            0,\n        ])\n        this.enabled = this.addRegister<[boolean]>(ServoReg.Enabled, [false])\n        this.minAngle = this.addRegister<[number]>(\n            ServoReg.MinAngle,\n            minAngle !== undefined ? [minAngle] : undefined\n        )\n        this.maxAngle = this.addRegister<[number]>(\n            ServoReg.MaxAngle,\n            maxAngle !== undefined ? [maxAngle] : undefined\n        )\n        this.offset = this.addRegister<[number]>(ServoReg.Offset, [0])\n        this.responseSpeed = this.addRegister<[number]>(\n            ServoReg.ResponseSpeed,\n            responseSpeed !== undefined ? [responseSpeed] : undefined\n        )\n        this.stallTorque = this.addRegister<[number]>(\n            ServoReg.StallTorque,\n            stallTorque !== undefined ? [stallTorque] : undefined\n        )\n\n        this.angle.on(PACKET_DATA_NORMALIZE, (values: [number]) => {\n            let angle = values[0]\n            const [minAngle] = this.minAngle.values()\n            const [maxAngle] = this.maxAngle.values()\n            if (minAngle !== undefined) angle = Math.max(minAngle, angle)\n            if (maxAngle !== undefined) angle = Math.min(maxAngle, angle)\n            values[0] = angle\n        })\n        this.angle.on(CHANGE, () =>\n            this.currentAngle.setValues(this.angle.values())\n        )\n    }\n}\n","import { SettingsCmd, SettingsEvent, SRV_SETTINGS } from \"../jdom/constants\"\nimport { jdpack } from \"../jdom/pack\"\nimport Packet from \"../jdom/packet\"\nimport { OutPipe } from \"../jdom/pipes\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\nimport { fromHex, toHex } from \"../jdom/utils\"\n\nexport default class SettingsServer extends JDServiceServer {\n    private settings: Record<string, string>\n\n    constructor(readonly storageKey?: string) {\n        super(SRV_SETTINGS)\n\n        this.addCommand(SettingsCmd.Get, this.handleGet.bind(this))\n        this.addCommand(SettingsCmd.Set, this.handleSet.bind(this))\n        this.addCommand(SettingsCmd.Delete, this.handleDelete.bind(this))\n        this.addCommand(SettingsCmd.ListKeys, this.handleListKeys.bind(this))\n        this.addCommand(SettingsCmd.List, this.handleList.bind(this))\n        this.addCommand(SettingsCmd.Clear, this.handleClear.bind(this))\n\n        this.settings = this.read()\n    }\n\n    private getPayload(key: string) {\n        const value = this.settings[key]\n        const secret = /^$/.test(key)\n\n        let payload: Uint8Array\n        if (value === undefined) {\n            payload = new Uint8Array(0)\n        } else if (secret) {\n            const payload = new Uint8Array(1)\n            payload[0] = 0\n        } else {\n            payload = fromHex(value)\n        }\n\n        return payload\n    }\n\n    private async handleGet(pkt: Packet) {\n        const [key] = pkt.jdunpack<[string]>(\"s\")\n        const payload = this.getPayload(key)\n        const resp = Packet.jdpacked<[string, Uint8Array]>(\n            SettingsCmd.Get,\n            \"z b\",\n            [key, payload]\n        )\n        await this.sendPacketAsync(resp)\n    }\n\n    private async handleSet(pkt: Packet) {\n        const [key, value] = pkt.jdunpack<[string, Uint8Array]>(\"z b\")\n        console.log({ cmd: \"set\", key, value })\n        this.settings[key] = toHex(value)\n        await this.save()\n    }\n\n    private async handleDelete(pkt: Packet) {\n        const [key] = pkt.jdunpack<[string]>(\"s\")\n        delete this.settings[key]\n        await this.save()\n    }\n\n    private async handleListKeys(pkt: Packet) {\n        const pipe = OutPipe.from(this.device.bus, pkt, true)\n        await pipe.respondForEach(Object.keys(this.settings), k =>\n            jdpack<[string]>(\"s\", [k])\n        )\n    }\n\n    private async handleList(pkt: Packet) {\n        const pipe = OutPipe.from(this.device.bus, pkt, true)\n        await pipe.respondForEach(Object.keys(this.settings), k => {\n            const payload = this.getPayload(k)\n            return jdpack<[string, Uint8Array]>(\"z b\", [k, payload])\n        })\n    }\n\n    private handleClear() {\n        this.settings = {}\n        this.save()\n    }\n\n    private read(): Record<string, string> {\n        if (!this.storageKey) return {}\n\n        try {\n            const payload =\n                typeof window !== \"undefined\" &&\n                window.localStorage.getItem(this.storageKey)\n            return JSON.parse(payload || \"{}\")\n        } catch (e) {\n            console.log(e)\n            return {}\n        }\n    }\n\n    private async save() {\n        if (this.storageKey) {\n            try {\n                if (typeof window !== \"undefined\")\n                    window.localStorage.setItem(\n                        this.storageKey,\n                        JSON.stringify(this.settings)\n                    )\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        await this.sendEvent(SettingsEvent.Change)\n    }\n}\n","import {\n    SpeechSynthesisCmd,\n    SpeechSynthesisReg,\n    SRV_SPEECH_SYNTHESIS,\n} from \"../jdom/constants\"\nimport Packet from \"../jdom/packet\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\n\nexport default class SpeechSynthesisServer extends JDServiceServer {\n    readonly enabled: JDRegisterServer<[boolean]>\n    readonly pitch: JDRegisterServer<[number]>\n    readonly rate: JDRegisterServer<[number]>\n    readonly lang: JDRegisterServer<[string]>\n    readonly volume: JDRegisterServer<[number]>\n\n    readonly synthesis: SpeechSynthesis\n\n    constructor() {\n        super(SRV_SPEECH_SYNTHESIS)\n\n        this.synthesis = typeof window !== \"undefined\" && window.speechSynthesis\n\n        this.enabled = this.addRegister<[boolean]>(SpeechSynthesisReg.Enabled, [\n            !this.synthesis?.paused,\n        ])\n        this.pitch = this.addRegister<[number]>(SpeechSynthesisReg.Pitch, [1])\n        this.rate = this.addRegister<[number]>(SpeechSynthesisReg.Rate, [1])\n        this.lang = this.addRegister<[string]>(SpeechSynthesisReg.Lang, [\"\"])\n        this.volume = this.addRegister<[number]>(SpeechSynthesisReg.Volume, [\n            0.5,\n        ])\n\n        this.addCommand(SpeechSynthesisCmd.Speak, this.handleSpeak.bind(this))\n        this.addCommand(SpeechSynthesisCmd.Cancel, this.handleCancel.bind(this))\n    }\n\n    private handleSpeak(pkt: Packet) {\n        const [text] = pkt.jdunpack(\"s\")\n        if (!this.synthesis || !text) return\n\n        const [pitch] = this.pitch.values()\n        const [rate] = this.pitch.values()\n        const [lang] = this.lang.values()\n        const [volume] = this.volume.values()\n\n        const utterance = new SpeechSynthesisUtterance(text)\n        utterance.pitch = pitch\n        utterance.rate = rate\n        utterance.lang = lang\n        utterance.volume = volume\n\n        this.synthesis.speak(utterance)\n    }\n\n    private handleCancel(pkt: Packet) {\n        this.synthesis?.cancel()\n    }\n}\n","import {\n    SRV_SWITCH,\n    SwitchEvent,\n    SwitchReg,\n    SwitchVariant,\n} from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport SensorServer from \"./sensorserver\"\n\nexport default class SwitchServer extends SensorServer<[boolean]> {\n    readonly variant: JDRegisterServer<[SwitchVariant]>\n    readonly autoOffDelay: JDRegisterServer<[number]>\n    private autoOffInterval: any\n\n    constructor(options?: { autoOffDelay?: number; variant?: SwitchVariant }) {\n        super(SRV_SWITCH, { readingValues: [false], streamingInterval: 50 })\n        const { autoOffDelay, variant } = options || {}\n\n        this.variant = this.addRegister(\n            SwitchReg.Variant,\n            variant !== undefined ? [variant] : undefined\n        )\n        this.autoOffDelay = this.addRegister(\n            SwitchReg.AutoOffDelay,\n            autoOffDelay !== undefined ? [autoOffDelay] : undefined\n        )\n    }\n\n    async toggle() {\n        const [v] = this.reading.values()\n        if (!v) await this.switchOn()\n        else await this.switchOff()\n    }\n\n    async switchOn() {\n        const [v] = this.reading.values()\n        if (!v) {\n            this.reading.setValues([true])\n            await this.sendEvent(SwitchEvent.On)\n            this.startAutoOff()\n        }\n    }\n\n    async switchOff() {\n        const [v] = this.reading.values()\n        if (v) {\n            this.reading.setValues([false])\n            await this.sendEvent(SwitchEvent.Off)\n            this.stopAutoOff()\n        }\n    }\n\n    private startAutoOff() {\n        this.stopAutoOff()\n        if (this.autoOffDelay.data !== undefined) {\n            const [delay] = this.autoOffDelay.values()\n            this.autoOffInterval = setTimeout(this.switchOn.bind(this), delay)\n        }\n    }\n\n    private stopAutoOff() {\n        if (this.autoOffInterval) {\n            clearTimeout(this.autoOffInterval)\n            this.autoOffInterval = undefined\n        }\n    }\n}\n","import { SRV_TRAFFIC_LIGHT, TrafficLightReg } from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer, { JDServerOptions } from \"../jdom/servers/serviceserver\"\n\nexport default class TrafficLightServer extends JDServiceServer {\n    readonly red: JDRegisterServer<[boolean]>\n    readonly orange: JDRegisterServer<[boolean]>\n    readonly green: JDRegisterServer<[boolean]>\n\n    constructor(options?: JDServerOptions) {\n        super(SRV_TRAFFIC_LIGHT, options)\n\n        this.red = this.addRegister(TrafficLightReg.Red, [true])\n        this.orange = this.addRegister(TrafficLightReg.Orange, [false])\n        this.green = this.addRegister(TrafficLightReg.Green, [false])\n    }\n}\n","import {\n    LedCmd,\n    LedReg,\n    LedVariant,\n    REFRESH,\n    REGISTER_PRE_GET,\n    SRV_LED,\n} from \"../jdom/constants\"\nimport Packet from \"../jdom/packet\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer, { JDServerOptions } from \"../jdom/servers/serviceserver\"\n\nexport interface LEDServiceOptions extends JDServerOptions {\n    ledCount?: number\n    variant?: LedVariant\n    luminousIntensity?: number\n    waveLength?: number\n    maxPower?: number\n    color?: [number, number, number]\n}\n\nexport default class LEDServer extends JDServiceServer {\n    readonly color: JDRegisterServer<[number, number, number]>\n    readonly maxPower: JDRegisterServer<[number]>\n    readonly ledCount: JDRegisterServer<[number]>\n    readonly luminousIntensity: JDRegisterServer<[number]>\n    readonly waveLength: JDRegisterServer<[number]>\n    readonly variant: JDRegisterServer<[LedVariant]>\n\n    private _animation: {\n        red: number\n        green: number\n        blue: number\n        toRed: number\n        toGreen: number\n        toBlue: number\n        speed: number\n        start: number\n    }\n\n    constructor(options?: LEDServiceOptions) {\n        super(SRV_LED, options)\n        const {\n            ledCount = 1,\n            variant = LedVariant.ThroughHole,\n            luminousIntensity,\n            waveLength,\n            color = [255, 0, 0],\n            maxPower = 200,\n        } = options || {}\n\n        this.color = this.addRegister<[number, number, number]>(\n            LedReg.Color,\n            color\n        )\n        this.color.on(REGISTER_PRE_GET, this.updateColor.bind(this))\n        this.maxPower = this.addRegister(LedReg.MaxPower, [maxPower])\n        this.ledCount = this.addRegister(LedReg.LedCount, [ledCount])\n        if (luminousIntensity !== undefined)\n            this.luminousIntensity = this.addRegister(\n                LedReg.LuminousIntensity,\n                [luminousIntensity]\n            )\n        if (waveLength !== undefined)\n            this.waveLength = this.addRegister(LedReg.WaveLength, [waveLength])\n        this.variant = this.addRegister(LedReg.Variant, [variant])\n\n        this.addCommand(LedCmd.Animate, this.handleAnimate.bind(this))\n        // animation\n        this.on(REFRESH, this.updateColor.bind(this))\n    }\n\n    private updateColor() {\n        if (!this._animation) return // nothing to do\n\n        // compute new color\n        const { red, green, blue, toRed, toGreen, toBlue, speed, start } =\n            this._animation\n        const now = this.device.bus.timestamp\n        const elapsed = now - start\n        // see control.md\n        const total = ((512 / speed) * 100) | 0\n        const progress = elapsed / total // may overshoot\n        const alpha = Math.min(1, progress)\n        const oneAlpha = 1 - alpha\n\n        const newRed = (red * oneAlpha + alpha * toRed) | 0\n        const newGreen = (green * oneAlpha + alpha * toGreen) | 0\n        const newBlue = (blue * oneAlpha + alpha * toBlue) | 0\n\n        this.color.setValues([newRed, newGreen, newBlue])\n        // clear animation when done\n        if (progress > 1) this._animation = undefined\n    }\n\n    private handleAnimate(pkt: Packet) {\n        const [toRed, toGreen, toBlue, speed] =\n            pkt.jdunpack<[number, number, number, number]>(\"u8 u8 u8 u8\")\n\n        if (speed == 0) {\n            this.color.setValues([toRed, toGreen, toBlue])\n            this._animation = undefined\n        } else {\n            const [red, green, blue] = this.color.values()\n            this._animation = {\n                red,\n                green,\n                blue,\n                toRed,\n                toGreen,\n                toBlue,\n                speed,\n                start: this.device.bus.timestamp,\n            }\n        }\n    }\n}\n","import {\n    SoundPlayerCmd,\n    SoundPlayerReg,\n    SRV_SOUND_PLAYER,\n} from \"../jdom/constants\"\nimport { jdpack } from \"../jdom/pack\"\nimport Packet from \"../jdom/packet\"\nimport { OutPipe } from \"../jdom/pipes\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\n\n/**\n * @internal\n */\nexport type SoundPlayerSound = [number, string]\n\nexport default class SoundPlayerServer extends JDServiceServer {\n    readonly volume: JDRegisterServer<[number]>\n    onPlay?: (name: string) => void\n    constructor(private readonly sounds: SoundPlayerSound[]) {\n        super(SRV_SOUND_PLAYER)\n\n        this.volume = this.addRegister(SoundPlayerReg.Volume, [0.5])\n        this.addCommand(\n            SoundPlayerCmd.ListSounds,\n            this.handleListSounds.bind(this)\n        )\n        this.addCommand(SoundPlayerCmd.Play, this.handlePlay.bind(this))\n    }\n\n    private async handleListSounds(pkt: Packet) {\n        const pipe = OutPipe.from(this.device.bus, pkt, true)\n        await pipe.respondForEach(this.sounds, sound =>\n            jdpack<[number, string]>(\"u32 s\", sound)\n        )\n    }\n\n    private handlePlay(pkt: Packet) {\n        const [name] = pkt.jdunpack(\"s\")\n        this.onPlay?.(name)\n    }\n}\n","import {\n    REGISTER_PRE_GET,\n    RngReg,\n    RngVariant,\n    SRV_RNG,\n} from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\n\nexport default class RandomNumberGeneratorServer extends JDServiceServer {\n    readonly reading: JDRegisterServer<[Uint8Array]>\n    constructor() {\n        super(SRV_RNG, {\n            variant: RngVariant.WebCrypto,\n        })\n\n        this.reading = this.addRegister(RngReg.Random, [new Uint8Array(64)])\n        this.reading.on(REGISTER_PRE_GET, this.handleRefresh.bind(this))\n    }\n\n    private handleRefresh() {\n        // generate new data\n        const data = new Uint8Array(64)\n        if (typeof window !== \"undefined\") window.crypto.getRandomValues(data)\n        this.reading.setValues([data], true)\n    }\n}\n","import {\n    CHANGE,\n    CompassReg,\n    SRV_COMPASS,\n    SystemStatusCodes,\n} from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport AnalogSensorServer from \"./analogsensorserver\"\n\nexport default class CompassServer extends AnalogSensorServer {\n    private enabled: JDRegisterServer<[boolean]>\n    constructor() {\n        super(SRV_COMPASS, {\n            readingValues: [0],\n            minReading: 0,\n            maxReading: 360,\n            readingError: [1],\n        })\n\n        this.enabled = this.addRegister(CompassReg.Enabled, [false])\n        this.enabled.on(CHANGE, () => {\n            const [status] = this.statusCode.values()\n            if (status === SystemStatusCodes.CalibrationNeeded) {\n                console.log(\"start calibration\")\n                this.calibrate()\n            }\n        })\n    }\n}\n","import { DmxCmd, SRV_DMX } from \"../jdom/constants\"\nimport Packet from \"../jdom/packet\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\nimport { toHex } from \"../jdom/utils\"\n\nexport default class DMXServer extends JDServiceServer {\n    constructor() {\n        super(SRV_DMX, {\n            intensityValues: [0],\n        })\n\n        this.addCommand(DmxCmd.Send, this.handleSend.bind(this))\n    }\n\n    private handleSend(pkt: Packet) {\n        // ignore\n        console.log(`dmx send`, toHex(pkt.data))\n    }\n}\n","/**\n * @internal\n */\nexport function inIFrame() {\n    try {\n        return typeof window !== \"undefined\" && window.self !== window.top\n    } catch (e) {\n        return typeof window !== \"undefined\"\n    }\n}\n","import { getNumber, NumberFormat, setNumber } from \"../jdom/buffer\"\nimport { BitRadioCmd, BitRadioReg, SRV_BIT_RADIO } from \"../jdom/constants\"\nimport { inIFrame } from \"../jdom/iframeclient\"\nimport Packet from \"../jdom/packet\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\nimport { memcpy, stringToBuffer } from \"../jdom/utils\"\n\n// keep in sync with CODAL\nconst RADIO_MAX_PACKET_SIZE = 32\n//const MAX_FIELD_DOUBLE_NAME_LENGTH = 8;\nconst MAX_PAYLOAD_LENGTH = 20\nconst PACKET_PREFIX_LENGTH = 9\nconst VALUE_PACKET_NAME_LEN_OFFSET = 13\nconst DOUBLE_VALUE_PACKET_NAME_LEN_OFFSET = 17\n\n// Packet Spec:\n// | 0              | 1 ... 4       | 5 ... 8           | 9 ... 28\n// ----------------------------------------------------------------\n// | packet type    | system time   | serial number     | payload\n//\n// Serial number defaults to 0 unless enabled by user\n\n// payload: number (9 ... 12)\nconst PACKET_TYPE_NUMBER = 0\n// payload: number (9 ... 12), name length (13), name (14 ... 26)\nconst PACKET_TYPE_VALUE = 1\n// payload: string length (9), string (10 ... 28)\nconst PACKET_TYPE_STRING = 2\n// payload: buffer length (9), buffer (10 ... 28)\nconst PACKET_TYPE_BUFFER = 3\n// payload: number (9 ... 16)\nconst PACKET_TYPE_DOUBLE = 4\n// payload: number (9 ... 16), name length (17), name (18 ... 26)\nconst PACKET_TYPE_DOUBLE_VALUE = 5\n\nfunction getStringOffset(packetType: number) {\n    switch (packetType) {\n        case PACKET_TYPE_STRING:\n            return PACKET_PREFIX_LENGTH\n        case PACKET_TYPE_VALUE:\n            return VALUE_PACKET_NAME_LEN_OFFSET\n        case PACKET_TYPE_DOUBLE_VALUE:\n            return DOUBLE_VALUE_PACKET_NAME_LEN_OFFSET\n        default:\n            return undefined\n    }\n}\n\n/*\nfunction getMaxStringLength(packetType: number) {\n    switch (packetType) {\n        case PACKET_TYPE_STRING:\n            return MAX_PAYLOAD_LENGTH - 2;\n        case PACKET_TYPE_VALUE:\n        case PACKET_TYPE_DOUBLE_VALUE:\n            return MAX_FIELD_DOUBLE_NAME_LENGTH;\n        default:\n            return undefined;\n    }\n}\n*/\n\nfunction truncateString(str: string) {\n    // TODO\n    return str\n}\n\nclass RadioPacket {\n    public static getPacket(data: Uint8Array) {\n        if (!data) return undefined\n        // last 4 bytes is RSSi\n        return new RadioPacket(data)\n    }\n\n    public static mkPacket(packetType: number) {\n        const res = new RadioPacket()\n        res.data[0] = packetType\n        return res\n    }\n\n    private constructor(public readonly data?: Uint8Array) {\n        if (!data) this.data = new Uint8Array(RADIO_MAX_PACKET_SIZE + 4)\n    }\n\n    get signal() {\n        return getNumber(this.data, NumberFormat.Int32LE, this.data.length - 4)\n    }\n\n    get packetType() {\n        return this.data[0]\n    }\n\n    get time() {\n        return getNumber(this.data, NumberFormat.Int32LE, 1)\n    }\n\n    set time(val: number) {\n        setNumber(this.data, NumberFormat.Int32LE, 1, val)\n    }\n\n    get serial() {\n        return getNumber(this.data, NumberFormat.Int32LE, 5)\n    }\n\n    set serial(val: number) {\n        setNumber(this.data, NumberFormat.Int32LE, 5, val)\n    }\n\n    get stringPayload() {\n        const offset = getStringOffset(this.packetType) as number\n        return offset\n            ? this.data.slice(offset + 1, this.data[offset]).toString()\n            : undefined\n    }\n\n    set stringPayload(val: string) {\n        const offset = getStringOffset(this.packetType) as number\n        if (offset) {\n            const buf = stringToBuffer(truncateString(val))\n            this.data[offset] = buf.length\n            memcpy(this.data, offset + 1, buf)\n        }\n    }\n\n    get numberPayload() {\n        switch (this.packetType) {\n            case PACKET_TYPE_NUMBER:\n            case PACKET_TYPE_VALUE:\n                return getNumber(\n                    this.data,\n                    NumberFormat.Int32LE,\n                    PACKET_PREFIX_LENGTH\n                )\n            case PACKET_TYPE_DOUBLE:\n            case PACKET_TYPE_DOUBLE_VALUE:\n                return getNumber(\n                    this.data,\n                    NumberFormat.Float64LE,\n                    PACKET_PREFIX_LENGTH\n                )\n        }\n        return undefined\n    }\n\n    set numberPayload(val: number) {\n        switch (this.packetType) {\n            case PACKET_TYPE_NUMBER:\n            case PACKET_TYPE_VALUE:\n                setNumber(\n                    this.data,\n                    NumberFormat.Int32LE,\n                    PACKET_PREFIX_LENGTH,\n                    val\n                )\n                break\n            case PACKET_TYPE_DOUBLE:\n            case PACKET_TYPE_DOUBLE_VALUE:\n                setNumber(\n                    this.data,\n                    NumberFormat.Float64LE,\n                    PACKET_PREFIX_LENGTH,\n                    val\n                )\n                break\n        }\n    }\n\n    get bufferPayload() {\n        const len = this.data[PACKET_PREFIX_LENGTH]\n        return this.data.slice(\n            PACKET_PREFIX_LENGTH + 1,\n            PACKET_PREFIX_LENGTH + 1 + len\n        )\n    }\n\n    set bufferPayload(b: Uint8Array) {\n        const len = Math.min(b.length, MAX_PAYLOAD_LENGTH - 1)\n        this.data[PACKET_PREFIX_LENGTH] = len\n        memcpy(this.data, PACKET_PREFIX_LENGTH + 1, b, 0, len)\n    }\n\n    hasString() {\n        return (\n            this.packetType === PACKET_TYPE_STRING ||\n            this.packetType === PACKET_TYPE_VALUE ||\n            this.packetType === PACKET_TYPE_DOUBLE_VALUE\n        )\n    }\n\n    hasNumber() {\n        return (\n            this.packetType === PACKET_TYPE_NUMBER ||\n            this.packetType === PACKET_TYPE_DOUBLE ||\n            this.packetType === PACKET_TYPE_VALUE ||\n            this.packetType === PACKET_TYPE_DOUBLE_VALUE\n        )\n    }\n}\n\n/**\n * A server implementation of the bit:radio service\n * @category Servers\n */\nexport default class BitRadioServer extends JDServiceServer {\n    readonly enabled: JDRegisterServer<[boolean]>\n    readonly group: JDRegisterServer<[number]>\n    readonly transmissionPower: JDRegisterServer<[number]>\n    readonly frequencyBand: JDRegisterServer<[number]>\n\n    constructor() {\n        super(SRV_BIT_RADIO)\n\n        this.enabled = this.addRegister<[boolean]>(BitRadioReg.Enabled, [false])\n        this.group = this.addRegister<[number]>(BitRadioReg.Group, [1])\n        this.transmissionPower = this.addRegister<[number]>(\n            BitRadioReg.TransmissionPower,\n            [6]\n        )\n        this.frequencyBand = this.addRegister<[number]>(\n            BitRadioReg.FrequencyBand,\n            [7]\n        )\n\n        this.addCommand(\n            BitRadioCmd.SendString,\n            this.handleSendString.bind(this)\n        )\n        this.addCommand(\n            BitRadioCmd.SendNumber,\n            this.handleSendNumber.bind(this)\n        )\n        this.addCommand(BitRadioCmd.SendValue, this.handleSendValue.bind(this))\n        this.addCommand(\n            BitRadioCmd.SendBuffer,\n            this.handleSendBuffer.bind(this)\n        )\n    }\n\n    private handleSendString(pkt: Packet) {\n        const [message] = pkt.jdunpack<[string]>(\"s\")\n        const rpkt = RadioPacket.mkPacket(PACKET_TYPE_STRING)\n        rpkt.stringPayload = message\n        this.sendRadioPacket(rpkt)\n    }\n\n    private handleSendNumber(pkt: Packet) {\n        const [value] = pkt.jdunpack<[number, string]>(\"f64\")\n        const rpkt = RadioPacket.mkPacket(PACKET_TYPE_DOUBLE)\n        rpkt.numberPayload = value\n        this.sendRadioPacket(rpkt)\n    }\n\n    private handleSendValue(pkt: Packet) {\n        const [value, name] = pkt.jdunpack<[number, string]>(\"f64 s\")\n        const rpkt = RadioPacket.mkPacket(PACKET_TYPE_DOUBLE_VALUE)\n        rpkt.stringPayload = name\n        rpkt.numberPayload = value\n        this.sendRadioPacket(rpkt)\n    }\n\n    private handleSendBuffer(pkt: Packet) {\n        const { data } = pkt\n        const rpkt = RadioPacket.mkPacket(PACKET_TYPE_BUFFER)\n        rpkt.bufferPayload = data\n        this.sendRadioPacket(rpkt)\n    }\n\n    private sendRadioPacket(rpkt: RadioPacket) {\n        const [on] = this.enabled.values()\n        if (!on) return // radio is off\n\n        const { bus } = this.device\n        const { timestamp } = bus\n        const [group] = this.group.values()\n        rpkt.time = timestamp\n        rpkt.serial = 0 // todo\n        const msg = {\n            type: \"radiopacket\",\n            broadcast: true,\n            // TODO\n            rssi: -75,\n            // TODO\n            serial: 0,\n            time: bus.timestamp,\n            payload: {\n                groupId: group,\n                type: 0, // buffer\n                bufferData: rpkt.data,\n            },\n        }\n        // send message to parent\n        console.log(`bitradio: send`, msg)\n        if (inIFrame()) {\n            window.parent.postMessage(msg, \"*\")\n        }\n    }\n}\n","import { PowerReg, SRV_POWER } from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer, { JDServerOptions } from \"../jdom/servers/serviceserver\"\n\nexport default class PowerServer extends JDServiceServer {\n    readonly enabled: JDRegisterServer<[boolean]>\n    readonly maxPower: JDRegisterServer<[number]>\n    readonly overload: JDRegisterServer<[boolean]>\n\n    constructor(options?: JDServerOptions) {\n        super(SRV_POWER, options)\n        this.enabled = this.addRegister<[boolean]>(PowerReg.Allowed, [false])\n        this.maxPower = this.addRegister<[number]>(PowerReg.MaxPower, [500])\n        this.overload = this.addRegister<[boolean]>(PowerReg.PowerStatus, [\n            false,\n        ])\n    }\n}\n","import { CapacitiveButtonReg, SRV_CAPACITIVE_BUTTON } from \"../jdom/constants\"\nimport JDServiceServer, { JDServerOptions } from \"../jdom/servers/serviceserver\"\nimport RegisterServer from \"../jdom/servers/registerserver\"\n\nexport default class CapacitiveButtonServer extends JDServiceServer {\n    readonly threshold: RegisterServer<[number]>\n\n    constructor(options?: { threshold?: number } & JDServerOptions) {\n        super(SRV_CAPACITIVE_BUTTON, options)\n        const { threshold = 0.5 } = options || {}\n\n        this.threshold = this.addRegister(CapacitiveButtonReg.Threshold, [\n            threshold,\n        ])\n    }\n}\n","import {\n    CHANGE,\n    HidKeyboardAction,\n    HidKeyboardCmd,\n    HidKeyboardModifiers,\n    SRV_HID_KEYBOARD,\n} from \"../jdom/constants\"\nimport Packet from \"../jdom/packet\"\nimport JDServiceServer, { JDServerOptions } from \"../jdom/servers/serviceserver\"\nimport { SMap } from \"../jdom/utils\"\n\nexport default class HIDKeyboardServer extends JDServiceServer {\n    private _lastKey: [number, HidKeyboardModifiers, HidKeyboardAction][]\n\n    constructor(options?: JDServerOptions) {\n        super(SRV_HID_KEYBOARD, options)\n\n        this.addCommand(HidKeyboardCmd.Clear, this.handleClear.bind(this))\n        this.addCommand(HidKeyboardCmd.Key, this.handleKey.bind(this))\n    }\n\n    get lastKey() {\n        return this._lastKey\n    }\n\n    private handleKey(pkt: Packet) {\n        const [rest] =\n            pkt.jdunpack<[[number, HidKeyboardModifiers, HidKeyboardAction][]]>(\n                \"r: u16 u8 u8\"\n            )\n        this._lastKey = rest\n        this.emit(CHANGE)\n    }\n\n    private handleClear() {\n        if (this._lastKey) {\n            this._lastKey = undefined\n            this.emit(CHANGE)\n        }\n    }\n}\n/**\n * @internal\n */\nexport const selectors: SMap<number> = {\n    a: 0x04,\n    b: 0x05,\n    c: 0x06,\n    d: 0x07,\n    e: 0x08,\n    f: 0x09,\n    g: 0x0a,\n    h: 0x0b,\n    i: 0x0c,\n    j: 0x0d,\n    k: 0x0e,\n    l: 0x0f,\n    m: 0x10,\n    n: 0x11,\n    o: 0x12,\n    p: 0x13,\n    q: 0x14,\n    r: 0x15,\n    s: 0x16,\n    t: 0x17,\n    u: 0x18,\n    v: 0x19,\n    w: 0x1a,\n    x: 0x1b,\n    y: 0x1c,\n    z: 0x1d,\n\n    \"1\": 0x1e,\n    \"2\": 0x1f,\n    \"3\": 0x20,\n    \"4\": 0x21,\n    \"5\": 0x22,\n    \"6\": 0x23,\n    \"7\": 0x24,\n    \"8\": 0x25,\n    \"9\": 0x26,\n    \"0\": 0x27,\n\n    \"!\": 0x1e,\n    \"@\": 0x1f,\n    \"#\": 0x20,\n    $: 0x21,\n    \"%\": 0x22,\n    \"^\": 0x23,\n    \"&\": 0x24,\n    \"*\": 0x25,\n    \"(\": 0x26,\n    \")\": 0x27,\n\n    enter: 0x28,\n    escape: 0x29,\n    backspace: 0x2a,\n    tab: 0x2b,\n    space: 0x2c,\n    \" \": 0x2c,\n    \"-\": 0x2d,\n    _: 0x2d,\n    \"=\": 0x2e,\n    \"+\": 0x2e,\n    \"[\": 0x2f,\n    \"{\": 0x2f,\n    \"]\": 0x30,\n    \"}\": 0x30,\n    \"\\\\\": 0x31,\n    \"|\": 0x31,\n    // non-US #\n    \"~\": 0x32,\n    \";\": 0x33,\n    \":\": 0x33,\n    \"'\": 0x34,\n    '\"': 0x34,\n    \"`\": 0x35,\n    \",\": 0x36,\n    //\"<\": 0x37,\n    \".\": 0x37,\n    //\">\": 0x37,\n    \"/\": 0x38,\n    \"?\": 0x38,\n    capslock: 0x39,\n    f1: 0x3a,\n    f2: 0x3b,\n    f3: 0x3c,\n    f4: 0x3d,\n    f5: 0x3e,\n    f6: 0x3f,\n    f7: 0x40,\n    f8: 0x41,\n    f9: 0x42,\n    f10: 0x43,\n    f11: 0x44,\n    f12: 0x45,\n    printscreen: 0x46,\n    scrolllock: 0x47,\n    pause: 0x48,\n    insert: 0x49,\n    home: 0x4a,\n    pageup: 0x4b,\n    delete: 0x4c,\n    end: 0x4d,\n    pagedown: 0x4e,\n    arrowright: 0x4f,\n    arrowleft: 0x50,\n    arrowdown: 0x51,\n    arrowup: 0x52,\n    numlock: 0x53,\n    numpaddivide: 0x54,\n    numpadmultiply: 0x55,\n    numpadsubstract: 0x56,\n    numpadadd: 0x57,\n    numpadenter: 0x58,\n    numpad1: 0x59,\n    numpad2: 0x5a,\n    numpad3: 0x5b,\n    numpad4: 0x5c,\n    numpad5: 0x5d,\n    numpad6: 0x5e,\n    numpad7: 0x5f,\n    numpad8: 0x60,\n    numpad9: 0x61,\n    numpad0: 0x62,\n    numpaddecimal: 0x63,\n    numpadequal: 0x67,\n    f13: 0x68,\n    f14: 0x69,\n    f15: 0x6a,\n    f16: 0x6b,\n    f17: 0x6c,\n    f18: 0x6d,\n    f19: 0x6e,\n    f20: 0x6f,\n    f21: 0x70,\n    f22: 0x71,\n    f23: 0x72,\n    f24: 0x73,\n    execute: 0x74,\n    help: 0x75,\n    contextmenu: 0x76,\n    select: 0x77,\n    stop: 0x78,\n    again: 0x79,\n    undo: 0x7a,\n    cut: 0x7b,\n    copy: 0x7c,\n    paste: 0x7d,\n    find: 0x7e,\n    mute: 0x7f,\n    volumeup: 0x80,\n    volumedown: 0x81,\n\n    numpadcomma: 0x85,\n}\n/**\n * @internal\n */\nexport const reverseSelectors: { [index: number]: string } = Object.keys(\n    selectors\n).reduce((r, key) => {\n    if (!r[selectors[key]]) r[selectors[key]] = key\n    return r\n}, {} as { [index: number]: string })\n\n/**\n * @internal\n */\nexport const modifierCodes = {\n    controlleft: HidKeyboardModifiers.LeftControl,\n    altleft: HidKeyboardModifiers.LeftAlt,\n    shiftleft: HidKeyboardModifiers.LeftShift,\n    metaleft: HidKeyboardModifiers.LeftGUI,\n\n    controlright: HidKeyboardModifiers.RightControl,\n    altright: HidKeyboardModifiers.RightAlt,\n    shiftright: HidKeyboardModifiers.RightShift,\n    metaright: HidKeyboardModifiers.RightGUI,\n}\n\n/**\n * @internal\n */\nexport function renderKeyboardKey(\n    selector: number,\n    modifiers: HidKeyboardModifiers,\n    pretty: boolean\n) {\n    const flags = pretty\n        ? [\n              \"Ctrl\",\n              \"Shift\",\n              \"Alt\",\n              \"Cmd\",\n              \"Ctrl Right\",\n              \"Shift Right\",\n              \"AltRight\",\n              \"Cmd Right\",\n          ]\n        : [\n              \"{controlleft}\",\n              \"{shiftleft}\",\n              \"{altleft}\",\n              \"{metaleft}\",\n              \"{controlright}\",\n              \"{shiftright}\",\n              \"{altright}\",\n              \"{metaright}\",\n          ]\n    const sep = pretty ? \" + \" : \" \"\n    const values = []\n    flags.forEach((flag, i) => {\n        if (modifiers & (1 << i)) {\n            values.push(flag)\n        }\n    })\n    const sel = reverseSelectors[selector]\n    if (sel !== undefined)\n        values.push(\n            pretty\n                ? sel.toUpperCase()\n                : !pretty && sel.length > 1\n                ? `{${sel}}`\n                : sel\n        )\n    const value = values.filter(v => !!v).join(sep)\n    return value\n}\n","import {\n    CHANGE,\n    HidMouseButton,\n    HidMouseButtonEvent,\n    HidMouseCmd,\n    SRV_HID_MOUSE,\n} from \"../jdom/constants\"\nimport Packet from \"../jdom/packet\"\nimport JDServiceServer, { JDServerOptions } from \"../jdom/servers/serviceserver\"\n\n/**\n * @internal\n */\nexport function renderHidMouseButtons(buttons: HidMouseButton) {\n    const btns = [\n        buttons & HidMouseButton.Left ? \"left\" : \"\",\n        buttons & HidMouseButton.Right ? \"right\" : \"\",\n        buttons & HidMouseButton.Middle ? \"middle\" : \"\",\n    ]\n        .filter(b => !!b)\n        .join(\", \")\n    return btns\n}\n\nexport default class HIDMouseServer extends JDServiceServer {\n    private _lastCommand: string\n\n    constructor(options?: JDServerOptions) {\n        super(SRV_HID_MOUSE, options)\n\n        this.addCommand(HidMouseCmd.Move, this.handleMove.bind(this))\n        this.addCommand(HidMouseCmd.SetButton, this.handleSetButton.bind(this))\n        this.addCommand(HidMouseCmd.Wheel, this.handleWheel.bind(this))\n    }\n\n    get lastCommand() {\n        return this._lastCommand\n    }\n\n    setLastCommand(s: string) {\n        if (this._lastCommand !== s) {\n            this._lastCommand = s\n            this.emit(CHANGE)\n        }\n    }\n\n    private handleMove(pkt: Packet) {\n        const [dx, dy, time] =\n            pkt.jdunpack<[number, number, number]>(\"i16 i16 u16\")\n        this.setLastCommand(`move ${dx} ${dy} ${time}`)\n    }\n\n    private handleSetButton(pkt: Packet) {\n        const [buttons, event] =\n            pkt.jdunpack<[HidMouseButton, HidMouseButtonEvent]>(\"u16 u8\")\n        const btns = renderHidMouseButtons(buttons)\n        this.setLastCommand(\n            `set buttons ${btns || \"?\"} ${(\n                HidMouseButtonEvent[event] || \"?\"\n            ).toLocaleLowerCase()}`\n        )\n    }\n\n    private handleWheel(pkt: Packet) {\n        const [dy, time] = pkt.jdunpack<[number, number]>(\"i16 u16\")\n        this.setLastCommand(`wheel ${dy} ${time}`)\n    }\n}\n","import { DimmerReg, DimmerVariant, SRV_DIMMER } from \"../jdom/constants\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\n\nexport default class DimmerServer extends JDServiceServer {\n    readonly intensity: JDRegisterServer<[number]>\n    readonly variant: JDRegisterServer<[DimmerVariant]>\n\n    constructor(\n        instanceName?: string,\n        options: { variant?: DimmerVariant } = {}\n    ) {\n        super(SRV_DIMMER, { instanceName })\n\n        const { variant = DimmerVariant.Light } = options\n\n        this.intensity = this.addRegister<[number]>(DimmerReg.Intensity, [0])\n        this.variant = this.addRegister<[number]>(DimmerReg.Variant, [variant])\n    }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n    AzureIotHubHealthCmd,\n    AzureIotHubHealthConnectionStatus,\n    AzureIotHubHealthEvent,\n    AzureIotHubHealthReg,\n    CHANGE,\n    SRV_AZURE_IOT_HUB_HEALTH,\n} from \"../jdom/constants\"\nimport Packet from \"../jdom/packet\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer, { JDServerOptions } from \"../jdom/servers/serviceserver\"\nimport { delay } from \"../jdom/utils\"\n\nfunction splitPair(kv: string): string[] {\n    const i = kv.indexOf(\"=\")\n    if (i < 0) return [kv, \"\"]\n    else return [kv.slice(0, i), kv.slice(i + 1)]\n}\n\nfunction parsePropertyBag(\n    msg: string,\n    separator?: string\n): Record<string, string> {\n    const r: Record<string, string> = {}\n    msg.split(separator || \"&\")\n        .map(kv => splitPair(kv))\n        .forEach(\n            parts =>\n                (r[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]))\n        )\n    return r\n}\n\nexport default class AzureIoTHubHealthServer extends JDServiceServer {\n    readonly hubName: JDRegisterServer<[string]>\n    readonly hubDeviceId: JDRegisterServer<[string]>\n    readonly connectionStatus: JDRegisterServer<\n        [AzureIotHubHealthConnectionStatus]\n    >\n    connectionString: string\n\n    constructor(options?: JDServerOptions) {\n        super(SRV_AZURE_IOT_HUB_HEALTH, options)\n\n        this.hubName = this.addRegister(AzureIotHubHealthReg.HubName, [\"\"])\n        this.hubDeviceId = this.addRegister(AzureIotHubHealthReg.HubDeviceId, [\n            \"\",\n        ])\n        this.connectionStatus = this.addRegister(\n            AzureIotHubHealthReg.ConnectionStatus,\n            [AzureIotHubHealthConnectionStatus.Connected]\n        )\n        this.connectionStatus.on(CHANGE, () =>\n            this.sendEvent(AzureIotHubHealthEvent.ConnectionStatusChange)\n        )\n        this.connectionString = \"\"\n\n        this.addCommand(\n            AzureIotHubHealthCmd.Connect,\n            this.handleConnect.bind(this)\n        )\n        this.addCommand(\n            AzureIotHubHealthCmd.Disconnect,\n            this.handleDisconnect.bind(this)\n        )\n        this.addCommand(\n            AzureIotHubHealthCmd.SetConnectionString,\n            this.handleSetConnectionString.bind(this)\n        )\n    }\n\n    private async handleConnect() {\n        this.connectionStatus.setValues([\n            AzureIotHubHealthConnectionStatus.Connecting,\n        ])\n        await delay(500)\n        if (!this.connectionString) this.connectionStatus.setValues([401])\n        else\n            this.connectionStatus.setValues([\n                AzureIotHubHealthConnectionStatus.Connected,\n            ])\n    }\n\n    private async handleDisconnect() {\n        this.connectionStatus.setValues([\n            AzureIotHubHealthConnectionStatus.Disconnecting,\n        ])\n        await delay(500)\n        this.connectionStatus.setValues([\n            AzureIotHubHealthConnectionStatus.Disconnected,\n        ])\n    }\n\n    private async handleSetConnectionString(pkt: Packet) {\n        const newConnectionString = pkt.stringData\n        if (newConnectionString !== this.connectionString) {\n            await this.handleDisconnect()\n            this.connectionString = newConnectionString\n            const connStringParts = parsePropertyBag(this.connectionString, \";\")\n            this.hubName.setValues([connStringParts[\"HostName\"] || \"\"])\n            this.hubDeviceId.setValues([connStringParts[\"DeviceId\"] || \"\"])\n            // notify connection string changed\n            this.sendEvent(AzureIotHubHealthEvent.ConnectionStatusChange)\n        }\n    }\n}\n","import {\n    CHANGE,\n    REFRESH,\n    SRV_VIBRATION_MOTOR,\n    VibrationMotorCmd,\n    VibrationMotorReg,\n} from \"../jdom/constants\"\nimport Packet from \"../jdom/packet\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\n\nexport default class VibrationMotorServer extends JDServiceServer {\n    readonly enabled: JDRegisterServer<[boolean]>\n\n    static VIBRATE_PATTERN = \"vibratePattern\"\n\n    private _animation: {\n        start: number\n        pattern: [number, number][]\n    }\n    private _animationStep = -1\n\n    constructor() {\n        super(SRV_VIBRATION_MOTOR)\n        this.enabled = this.addRegister<[boolean]>(VibrationMotorReg.Enabled, [\n            false,\n        ])\n        this.addCommand(\n            VibrationMotorCmd.Vibrate,\n            this.handleVibrate.bind(this)\n        )\n        this.on(REFRESH, this.handleRefresh.bind(this))\n    }\n\n    private handleRefresh() {\n        if (!this._animation) return // nothing to do\n\n        const { start, pattern } = this._animation\n        const now = this.device.bus.timestamp\n        const elapsed = now - start\n        let t = 0\n        for (let i = 0; i < pattern.length; ++i) {\n            const [duration, speed] = pattern[i]\n            const dt = duration << 3\n            t += dt\n            if (t - dt <= elapsed && t > elapsed) {\n                // we're playing this note\n                if (this._animationStep !== i) {\n                    this._animationStep = i\n                    this.emit(VibrationMotorServer.VIBRATE_PATTERN, {\n                        duration,\n                        speed,\n                    })\n                }\n                break\n            }\n        }\n        if (elapsed > t) {\n            // animation finished\n            this._animation = undefined\n            this._animationStep = -1\n            this.emit(VibrationMotorServer.VIBRATE_PATTERN, {\n                duration: 0,\n                speed: 0,\n            })\n            this.emit(CHANGE)\n        }\n    }\n\n    private handleVibrate(pkt: Packet) {\n        const [pattern] = pkt.jdunpack<[[number, number][]]>(\"r: u8 u0.8\")\n        this._animation = {\n            start: this.device.bus.timestamp,\n            pattern,\n        }\n        this._animationStep = -1\n        if (pattern.length) {\n            const [duration, speed] = pattern[0]\n            this._animationStep = 0\n            this.emit(VibrationMotorServer.VIBRATE_PATTERN, {\n                duration,\n                speed,\n            })\n        }\n        this.emit(CHANGE)\n    }\n}\n","import {\n    CHANGE,\n    SRV_WIFI,\n    WifiAPFlags,\n    WifiCmd,\n    WifiEvent,\n    WifiReg,\n} from \"../jdom/constants\"\nimport { jdpack } from \"../jdom/pack\"\nimport { Packet } from \"../jdom/packet\"\nimport { OutPipe } from \"../jdom/pipes\"\nimport { randomBytes } from \"../jdom/random\"\nimport JDRegisterServer from \"../jdom/servers/registerserver\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\nimport { toHex } from \"../jdom/utils\"\n\ninterface ScanResult {\n    flags: WifiAPFlags\n    rssi: number\n    channel: number\n    bssid: Uint8Array\n    ssid: string\n}\n\nexport class WifiServer extends JDServiceServer {\n    readonly enabled: JDRegisterServer<[boolean]>\n    readonly connected: JDRegisterServer<[boolean]>\n    readonly ssid: JDRegisterServer<[string]>\n    readonly ipAddress: JDRegisterServer<[Uint8Array]>\n    readonly eui48: JDRegisterServer<[Uint8Array]>\n\n    private _lastScanResults: ScanResult[] = [\n        {\n            ssid: \"HOME\",\n            bssid: new Uint8Array(0),\n            rssi: -42,\n            channel: 10,\n            flags: WifiAPFlags.WPS | WifiAPFlags.IEEE_802_11B,\n        },\n    ]\n    private _knownNetworks: {\n        ssid: string\n        flags: WifiAPFlags\n        priority: number\n        password: string\n    }[] = [\n        {\n            ssid: \"HOME\",\n            password: \"home\",\n            priority: 0,\n            flags: WifiAPFlags.WPS | WifiAPFlags.IEEE_802_11B,\n        },\n    ]\n\n    constructor() {\n        super(SRV_WIFI, { intensityValues: [true] })\n\n        this.enabled = this.addRegister(WifiReg.Enabled, [true])\n        this.connected = this.addRegister(WifiReg.Connected, [false])\n        this.ssid = this.addRegister(WifiReg.Ssid, [\"\"])\n        this.ipAddress = this.addRegister<[Uint8Array]>(WifiReg.IpAddress, [\n            new Uint8Array(0),\n        ])\n        this.eui48 = this.addRegister<[Uint8Array]>(WifiReg.Eui48, [\n            randomBytes(6),\n        ])\n\n        this.addCommand(WifiCmd.Scan, this.handleScan.bind(this))\n        this.addCommand(WifiCmd.Reconnect, this.handleReconnect.bind(this))\n        this.addCommand(\n            WifiCmd.LastScanResults,\n            this.handleLastScanResults.bind(this)\n        )\n        this.addCommand(\n            WifiCmd.ListKnownNetworks,\n            this.handleListKnownNetworks.bind(this)\n        )\n        this.addCommand(WifiCmd.AddNetwork, this.handleAddNetwork.bind(this))\n        this.addCommand(\n            WifiCmd.ForgetAllNetworks,\n            this.handleForgetAllNetworks.bind(this)\n        )\n        this.addCommand(\n            WifiCmd.ForgetNetwork,\n            this.handleForgetNetwork.bind(this)\n        )\n        this.addCommand(\n            WifiCmd.SetNetworkPriority,\n            this.handleSetNetworkPriority.bind(this)\n        )\n\n        this.ipAddress.on(CHANGE, this.handleIpChange.bind(this))\n        this.enabled.on(CHANGE, this.handleEnabledChange.bind(this))\n    }\n\n    private handleEnabledChange() {\n        const [enabled] = this.enabled.values()\n        if (!enabled) this.disconnect()\n        else this.connect()\n    }\n\n    private handleIpChange() {\n        const [ip] = this.ipAddress.values()\n        console.debug(`wifi: ip ${toHex(ip)}`)\n        if (ip?.length) this.sendEvent(WifiEvent.GotIp)\n        else this.sendEvent(WifiEvent.LostIp)\n    }\n\n    private get scannedKnownNetworks() {\n        return this._lastScanResults.filter(n =>\n            this._knownNetworks.some(kn => kn.ssid === n.ssid)\n        )\n    }\n\n    private handleReconnect() {\n        console.debug(`wifi: reconnect`, {\n            scan: this._lastScanResults,\n            known: this._knownNetworks,\n            networks: this.scannedKnownNetworks,\n            enabled: this.enabled.values()[0],\n            connected: this.connected.values()[0],\n        })\n        this.disconnect()\n        if (this.scannedKnownNetworks.length) {\n            console.debug(`wifi: reconnect, connect`)\n            this.enabled.setValues([true])\n        }\n    }\n\n    private connect() {\n        console.debug(`wifi: connect`, {\n            scan: this._lastScanResults,\n            known: this._knownNetworks,\n            networks: this.scannedKnownNetworks,\n        })\n        const network = this.scannedKnownNetworks[0]\n        const { ssid } = network || {}\n        this.ssid.setValues([ssid || \"\"])\n        this.enabled.setValues([!!ssid])\n        this.connected.setValues([!!ssid])\n        this.ipAddress.setValues([randomBytes(4)])\n    }\n\n    private disconnect() {\n        console.debug(`wifi: disconnect`)\n        this.ssid.setValues([\"\"])\n        this.connected.setValues([false])\n        this.enabled.setValues([false])\n        this.ipAddress.setValues([new Uint8Array(0)])\n    }\n\n    private scan() {\n        this._lastScanResults = [\n            {\n                ssid: \"HOME\",\n                bssid: new Uint8Array(0),\n                rssi: -42,\n                channel: 10,\n                flags: WifiAPFlags.WPS | WifiAPFlags.IEEE_802_11B,\n            },\n            Math.random() > 0.5 && {\n                ssid: \"OFFICE\",\n                bssid: new Uint8Array(0),\n                rssi: -70,\n                channel: 11,\n                flags: WifiAPFlags.IEEE_802_11N,\n            },\n        ].filter(res => !!res)\n\n        this.sendEvent(\n            WifiEvent.ScanComplete,\n            jdpack<[number, number]>(\"u16 u16\", [\n                this._lastScanResults.length,\n                this.scannedKnownNetworks.length,\n            ])\n        )\n    }\n\n    private handleScan() {\n        this.scan()\n    }\n\n    private async handleLastScanResults(pkt: Packet) {\n        const pipe = OutPipe.from(this.device.bus, pkt, true)\n        console.debug(`list scan results`, this._lastScanResults)\n        await pipe.respondForEach(\n            this._lastScanResults,\n            ({ flags, rssi, channel, bssid, ssid }) =>\n                jdpack<[WifiAPFlags, number, number, Uint8Array, string]>(\n                    \"u32 x[4] i8 u8 b[6] s[33]\",\n                    [flags, rssi, channel, bssid, ssid]\n                )\n        )\n    }\n\n    private async handleListKnownNetworks(pkt: Packet) {\n        const pipe = OutPipe.from(this.device.bus, pkt, true)\n        console.debug(`list knowns`, this._knownNetworks)\n        await pipe.respondForEach(\n            this._knownNetworks,\n            ({ priority, flags, ssid }) =>\n                jdpack<[number, number, string]>(\"i16 i16 s\", [\n                    priority,\n                    flags,\n                    ssid,\n                ])\n        )\n    }\n\n    private handleAddNetwork(pkt: Packet) {\n        console.debug(`wifi: add network`)\n        const [ssid, password] = pkt.jdunpack<[string, string]>(\"z z\")\n        let network = this._knownNetworks.find(n => n.ssid === ssid)\n        if (!network) {\n            const scanned = this._lastScanResults.find(s => s.ssid === ssid)\n            this._knownNetworks.push(\n                (network = {\n                    ssid,\n                    flags: scanned?.flags,\n                    priority: 0,\n                    password: \"\",\n                })\n            )\n        }\n        network.password = password\n        this.sendEvent(WifiEvent.NetworksChanged)\n    }\n\n    private handleForgetAllNetworks() {\n        this._knownNetworks = []\n        this.disconnect()\n        this.sendEvent(WifiEvent.NetworksChanged)\n    }\n\n    private handleForgetNetwork(pkt: Packet) {\n        const [ssid] = pkt.jdunpack<[string]>(\"s\")\n        this._knownNetworks = this._knownNetworks.filter(\n            network => network.ssid !== ssid\n        )\n        const [currentSsid] = this.ssid.values()\n        if (ssid === currentSsid) this.disconnect()\n        this.sendEvent(WifiEvent.NetworksChanged)\n    }\n\n    private handleSetNetworkPriority(pkt: Packet) {\n        const [priority, ssid] = pkt.jdunpack<[number, string]>(\"i16 s\")\n        const network = this._knownNetworks.find(\n            network => network.ssid === ssid\n        )\n        if (network) network.priority = priority\n        this.sendEvent(WifiEvent.NetworksChanged)\n    }\n}\nexport default WifiServer\n","import JDBus from \"../jdom/bus\"\nimport {\n    CharacterScreenTextDirection,\n    CharacterScreenVariant,\n    DistanceVariant,\n    LedPixelVariant,\n    PotentiometerVariant,\n    RelayReg,\n    RelayVariant,\n    SRV_ACCELEROMETER,\n    SRV_BAROMETER,\n    SRV_BUTTON,\n    SRV_BUZZER,\n    SRV_CHARACTER_SCREEN,\n    SRV_DISTANCE,\n    SRV_E_CO2,\n    SRV_HUMIDITY,\n    SRV_LED_PIXEL,\n    SRV_MATRIX_KEYPAD,\n    SRV_MOTOR,\n    SRV_POTENTIOMETER,\n    SRV_PROTO_TEST,\n    SRV_RAIN_GAUGE,\n    SRV_RELAY,\n    SRV_JOYSTICK,\n    SRV_ROTARY_ENCODER,\n    SRV_SERVO,\n    SRV_SETTINGS,\n    SRV_SWITCH,\n    SRV_THERMOMETER,\n    SRV_TRAFFIC_LIGHT,\n    SRV_VIBRATION_MOTOR,\n    SRV_TVOC,\n    SRV_WIND_DIRECTION,\n    SRV_WIND_SPEED,\n    SwitchVariant,\n    ThermometerVariant,\n    WindSpeedReg,\n    ECO2Variant,\n    SRV_SPEECH_SYNTHESIS,\n    SRV_SOIL_MOISTURE,\n    JoystickVariant,\n    SRV_REAL_TIME_CLOCK,\n    SRV_ILLUMINANCE,\n    SRV_LIGHT_LEVEL,\n    LightLevelVariant,\n    SRV_UV_INDEX,\n    SRV_REFLECTED_LIGHT,\n    ReflectedLightVariant,\n    SRV_MOTION,\n    SRV_LED,\n    SRV_SEVEN_SEGMENT_DISPLAY,\n    SevenSegmentDisplayReg,\n    SRV_HEART_RATE,\n    HeartRateVariant,\n    LedVariant,\n    SRV_WATER_LEVEL,\n    SRV_SOUND_LEVEL,\n    SRV_COLOR,\n    SRV_SOUND_PLAYER,\n    SRV_PULSE_OXIMETER,\n    SRV_WEIGHT_SCALE,\n    WeightScaleVariant,\n    SRV_DOT_MATRIX,\n    SRV_RNG,\n    SRV_COMPASS,\n    SRV_THERMOCOUPLE,\n    ThermocoupleVariant,\n    SRV_GYROSCOPE,\n    SoundLevelReg,\n    SRV_SOUND_SPECTRUM,\n    SoundSpectrumReg,\n    SRV_SOLENOID,\n    SRV_DMX,\n    SRV_BIT_RADIO,\n    SRV_POWER,\n    CHANGE,\n    JoystickButtons,\n    SRV_HID_KEYBOARD,\n    SRV_HID_MOUSE,\n    //    SRV_AZURE_IOT_HUB,\n    SRV_DIMMER,\n    DimmerVariant,\n    SRV_AZURE_IOT_HUB_HEALTH,\n    DotMatrixVariant,\n    FlexVariant,\n    SRV_FLEX,\n    SRV_WIFI,\n} from \"../jdom/constants\"\nimport JDServerServiceProvider from \"../jdom/servers/serverserviceprovider\"\nimport ProtocolTestServer from \"../jdom/servers/protocoltestserver\"\nimport JDServiceServer from \"../jdom/servers/serviceserver\"\nimport ButtonServer from \"./buttonserver\"\nimport BuzzerServer from \"./buzzerserver\"\nimport CharacterScreenServer from \"./characterscreenserver\"\nimport JoystickServer, {\n    JOYSTICK_ARCADE_BUTTONS,\n    JOYSTICK_DPAD_AB_BUTTONS,\n} from \"./joystickserver\"\nimport DotMatrixServer from \"./dotmatrixserver\"\nimport LedPixelServer from \"./ledpixelserver\"\nimport MatrixKeypadServer from \"./matrixkeypadserver\"\nimport MotorServer from \"./motorserver\"\nimport RainGaugeServer from \"./raingaugeserver\"\nimport RealTimeClockServer from \"./realtimeclockserver\"\nimport ReflectedLightServer from \"./reflectedlightserver\"\nimport RotaryEncoderServer from \"./rotaryencoderserver\"\nimport SensorServer, { SensorServiceOptions } from \"./sensorserver\"\nimport ServoServer from \"./servoserver\"\nimport SettingsServer from \"./settingsserver\"\nimport SpeechSynthesisServer from \"./speechsynthesisserver\"\nimport SwitchServer from \"./switchserver\"\nimport TrafficLightServer from \"./trafficlightserver\"\nimport LEDServer from \"./ledserver\"\nimport { fromHex, hash, stringToUint8Array, toFullHex } from \"../jdom/utils\"\nimport SoundPlayerServer, { SoundPlayerSound } from \"./soundplayerserver\"\nimport AnalogSensorServer, {\n    AnalogSensorServerOptions,\n} from \"./analogsensorserver\"\nimport RandomNumberGeneratorServer from \"./randomnumbergeneratorserver\"\nimport CompassServer from \"./compassserver\"\nimport DMXServer from \"./dmxserver\"\nimport BitRadioServer from \"./bitradioserver\"\nimport PowerServer from \"./powerserver\"\nimport CapacitiveButtonServer from \"./capacitivebuttonserver\"\nimport HIDKeyboardServer from \"./hidkeyboardserver\"\nimport HIDMouseServer from \"./hidmouseserver\"\n//import AzureIoTHubServer from \"./azureiothubserver\"\nimport DimmerServer from \"./dimmerserver\"\nimport AzureIoTHubHealthServer from \"./azureiothubhealthserver\"\nimport JDServiceProvider from \"../jdom/servers/serviceprovider\"\nimport VibrationMotor from \"./vibrationmotorserver\"\nimport WifiServer from \"./wifiserver\"\n\nconst indoorThermometerOptions: AnalogSensorServerOptions = {\n    instanceName: \"indoor\",\n    readingValues: [21.5],\n    streamingInterval: 1000,\n    minReading: -5,\n    maxReading: 50,\n    readingError: [0.25],\n    variant: ThermometerVariant.Indoor,\n}\nconst outdoorThermometerOptions: AnalogSensorServerOptions = {\n    instanceName: \"temperature\",\n    readingValues: [21.5],\n    streamingInterval: 60000,\n    minReading: -40,\n    maxReading: 120,\n    readingError: [0.25],\n    variant: ThermometerVariant.Outdoor,\n}\nconst outdoorHumidityOptions: AnalogSensorServerOptions = {\n    instanceName: \"humidity\",\n    streamingInterval: 60000,\n    readingValues: [40],\n    readingError: [0.1],\n}\nconst medicalThermometerOptions: AnalogSensorServerOptions = {\n    instanceName: \"medical\",\n    readingValues: [37.5],\n    streamingInterval: 1000,\n    minReading: 35,\n    maxReading: 42,\n    readingError: [0.5],\n    variant: ThermometerVariant.Body,\n}\nconst barometerOptions: AnalogSensorServerOptions = {\n    instanceName: \"pressure\",\n    readingValues: [1013],\n    readingError: [0.4],\n}\nconst sonarOptions: AnalogSensorServerOptions = {\n    variant: DistanceVariant.Ultrasonic,\n    minReading: 0.02,\n    maxReading: 4,\n    readingValues: [1],\n}\n\nconst SG90_STALL_TORQUE = 1.8\n/**\n * @internal\n */\nexport const SG90_RESPONSE_SPEED = 0.12 // deg/60deg\n\nconst microServoOptions = {\n    stallTorque: SG90_STALL_TORQUE, // kg/cm\n    responseSpeed: SG90_RESPONSE_SPEED, // s/60deg\n    minAngle: -90,\n    maxAngle: 90,\n}\nconst microServo270Options = {\n    stallTorque: SG90_STALL_TORQUE, // kg/cm\n    responseSpeed: SG90_RESPONSE_SPEED, // s/60deg\n    minAngle: -135,\n    maxAngle: 135,\n}\nconst microServo360Options = {\n    stallTorque: SG90_STALL_TORQUE, // kg/cm\n    responseSpeed: SG90_RESPONSE_SPEED * 2, // s/60deg\n    minAngle: -180,\n    maxAngle: 180,\n}\nconst windDirectionOptions: AnalogSensorServerOptions = {\n    readingValues: [0],\n    readingError: [5],\n    streamingInterval: 1000,\n}\nconst windSpeedOptions: AnalogSensorServerOptions = {\n    readingValues: [0],\n    readingError: [0.5],\n    streamingInterval: 1000,\n    registerValues: [{ code: WindSpeedReg.MaxWindSpeed, values: [55] }],\n}\nconst eCO2Options: AnalogSensorServerOptions = {\n    readingValues: [4000],\n    streamingInterval: 1000,\n    variant: ECO2Variant.VOC,\n}\nconst CO2Options: AnalogSensorServerOptions = {\n    readingValues: [4000],\n    streamingInterval: 1000,\n    variant: ECO2Variant.NDIR,\n}\nconst tvocOptions: AnalogSensorServerOptions = {\n    readingValues: [500],\n    streamingInterval: 1000,\n}\n\nconst microbitSounds: SoundPlayerSound[] = [\n    [0, \"giggle\"],\n    [0, \"happy\"],\n    [0, \"hello\"],\n    [0, \"mysterious\"],\n    [0, \"sad\"],\n    [0, \"slide\"],\n    [0, \"soaring\"],\n    [0, \"spring\"],\n    [0, \"twinkle\"],\n    [0, \"yawn\"],\n]\nconst soundLevel: AnalogSensorServerOptions = {\n    readingValues: [0],\n    inactiveThreshold: 10,\n    activeThreshold: 70,\n    intensityValues: [false],\n    registerValues: [\n        {\n            code: SoundLevelReg.MinDecibels,\n            values: [-100],\n        },\n        {\n            code: SoundLevelReg.MaxDecibels,\n            values: [-30],\n        },\n    ],\n}\nconst soundSpectrum: SensorServiceOptions<[Uint8Array]> = {\n    readingValues: [new Uint8Array(0)],\n    intensityValues: [false],\n    registerValues: [\n        {\n            code: SoundSpectrumReg.FftPow2Size,\n            values: [5],\n        },\n        {\n            code: SoundSpectrumReg.MinDecibels,\n            values: [-100],\n        },\n        {\n            code: SoundSpectrumReg.MaxDecibels,\n            values: [-30],\n        },\n        {\n            code: SoundSpectrumReg.SmoothingTimeConstant,\n            values: [0.8],\n        },\n    ],\n}\n\n/**\n * A factory for instantiation a simulated service server\n * @category Servers\n */\nexport interface ServiceProviderDefinition {\n    /**\n     * Name of the simulated device\n     */\n    name: string\n    /**\n     * List of service classes hosted by the provider\n     */\n    serviceClasses: number[]\n    /**\n     * Factory handler to instantiate simulated servers\n     */\n    services: () => JDServiceServer[]\n    /**\n     * Indicates if the simulated device should support resetId\n     */\n    resetIn?: boolean\n    /**\n     * Custom factory to wrap the services into a service provider\n     */\n    factory?: (services: JDServiceServer[]) => JDServiceProvider\n}\n\nconst _providerDefinitions: ServiceProviderDefinition[] = [\n    {\n        name: \"7-segment (4 segments)\",\n        serviceClasses: [SRV_SEVEN_SEGMENT_DISPLAY],\n        services: () => [\n            new JDServiceServer(SRV_SEVEN_SEGMENT_DISPLAY, {\n                intensityValues: [0xffff],\n                valueValues: [fromHex(\"ff112233\")],\n                registerValues: [\n                    {\n                        code: SevenSegmentDisplayReg.DigitCount,\n                        values: [4],\n                    },\n                    {\n                        code: SevenSegmentDisplayReg.DecimalPoint,\n                        values: [true],\n                    },\n                ],\n            }),\n        ],\n    },\n    {\n        name: \"7-segment (8 segments)\",\n        serviceClasses: [SRV_SEVEN_SEGMENT_DISPLAY],\n        services: () => [\n            new JDServiceServer(SRV_SEVEN_SEGMENT_DISPLAY, {\n                intensityValues: [0xffff],\n                valueValues: [fromHex(\"0102040810204080\")],\n                registerValues: [\n                    {\n                        code: SevenSegmentDisplayReg.DigitCount,\n                        values: [8],\n                    },\n                    {\n                        code: SevenSegmentDisplayReg.DecimalPoint,\n                        values: [true],\n                    },\n                ],\n            }),\n        ],\n    },\n    {\n        name: \"accelerometer\",\n        serviceClasses: [SRV_ACCELEROMETER],\n        services: () => [\n            new SensorServer<[number, number, number]>(SRV_ACCELEROMETER, {\n                readingValues: [0.5, 0.5, -(1 - (0.5 * 0.5 + 0.5 * 0.5))],\n                preferredStreamingInterval: 20,\n            }),\n        ],\n    },\n    {\n        name: \"barometer\",\n        serviceClasses: [SRV_BAROMETER],\n        services: () => [\n            new AnalogSensorServer(SRV_BAROMETER, barometerOptions),\n        ],\n    },\n    {\n        name: \"bitradio\",\n        serviceClasses: [SRV_BIT_RADIO],\n        services: () => [new BitRadioServer()],\n    },\n    {\n        name: \"button\",\n        serviceClasses: [SRV_BUTTON],\n        services: () => [new ButtonServer()],\n    },\n    {\n        name: \"button (2x)\",\n        serviceClasses: [SRV_BUTTON],\n        services: () => [new ButtonServer(\"B0\"), new ButtonServer(\"B1\")],\n    },\n    {\n        name: \"button (4x)\",\n        serviceClasses: [SRV_BUTTON],\n        services: () =>\n            Array(4)\n                .fill(0)\n                .map((_, i) => new ButtonServer(`B${i}`)),\n    },\n    {\n        name: \"buzzer\",\n        serviceClasses: [SRV_BUZZER],\n        services: () => [new BuzzerServer()],\n    },\n    {\n        name: \"capacitive button\",\n        serviceClasses: [SRV_BUTTON],\n        services: () => {\n            const button = new ButtonServer()\n            const config = new CapacitiveButtonServer()\n            button.threshold = config.threshold\n            return [button, config]\n        },\n    },\n    {\n        name: \"capacitive button (6x)\",\n        serviceClasses: [SRV_BUTTON],\n        services: () =>\n            Array(6)\n                .fill(0)\n                .map((_, i) => new ButtonServer(`C${i}`, true)),\n    },\n    {\n        name: \"capacitive button (12x)\",\n        serviceClasses: [SRV_BUTTON],\n        services: () =>\n            Array(12)\n                .fill(0)\n                .map((_, i) => new ButtonServer(`C${i}`, true)),\n    },\n    {\n        name: \"character screen (LDC, 16x2)\",\n        serviceClasses: [SRV_CHARACTER_SCREEN],\n        services: () => [\n            new CharacterScreenServer({ message: \"hello\\nworld!\" }),\n        ],\n    },\n    {\n        name: \"character screen (OLED, 32x8, RTL)\",\n        serviceClasses: [SRV_CHARACTER_SCREEN],\n        services: () => [\n            new CharacterScreenServer({\n                message: \"hello\\nworld!\",\n                columns: 32,\n                rows: 8,\n                variant: CharacterScreenVariant.OLED,\n                textDirection: CharacterScreenTextDirection.RightToLeft,\n            }),\n        ],\n    },\n    {\n        name: \"character screen (Braille, 4x1)\",\n        serviceClasses: [SRV_CHARACTER_SCREEN],\n        services: () => [\n            new CharacterScreenServer({\n                message: \"hi\",\n                columns: 4,\n                rows: 1,\n                variant: CharacterScreenVariant.Braille,\n                textDirection: CharacterScreenTextDirection.LeftToRight,\n            }),\n        ],\n    },\n    {\n        name: \"color\",\n        serviceClasses: [SRV_COLOR],\n        services: () => [\n            new SensorServer<[number, number, number]>(SRV_COLOR, {\n                readingValues: [0.5, 0, 0.5],\n                preferredStreamingInterval: 1000,\n            }),\n        ],\n    },\n    {\n        name: \"compass\",\n        serviceClasses: [SRV_COMPASS],\n        services: () => [new CompassServer()],\n    },\n    {\n        name: \"dimmer (fan)\",\n        serviceClasses: [SRV_DIMMER],\n        services: () => [\n            new DimmerServer(\"fan\", { variant: DimmerVariant.Fan }),\n        ],\n    },\n    {\n        name: \"dimmer (light)\",\n        serviceClasses: [SRV_DIMMER],\n        services: () => [\n            new DimmerServer(\"light\", { variant: DimmerVariant.Light }),\n        ],\n    },\n    {\n        name: \"distance (sonar)\",\n        serviceClasses: [SRV_DISTANCE],\n        services: () => [new AnalogSensorServer(SRV_DISTANCE, sonarOptions)],\n    },\n    {\n        name: \"DMX\",\n        serviceClasses: [SRV_DMX],\n        services: () => [new DMXServer()],\n    },\n    {\n        name: \"eCO₂\",\n        serviceClasses: [SRV_E_CO2],\n        services: () => [new AnalogSensorServer(SRV_E_CO2, eCO2Options)],\n    },\n    {\n        name: \"eCO₂ + TVOC\",\n        serviceClasses: [SRV_E_CO2, SRV_TVOC],\n        services: () => [\n            new AnalogSensorServer(SRV_E_CO2, eCO2Options),\n            new AnalogSensorServer(SRV_TVOC, tvocOptions),\n        ],\n    },\n    {\n        name: \"eCO₂ + humidity + thermometer\",\n        serviceClasses: [SRV_E_CO2, SRV_HUMIDITY, SRV_THERMOMETER],\n        services: () => [\n            new AnalogSensorServer(SRV_E_CO2, CO2Options),\n            new AnalogSensorServer(SRV_HUMIDITY, outdoorHumidityOptions),\n            new AnalogSensorServer(SRV_THERMOMETER, indoorThermometerOptions),\n        ],\n    },\n    {\n        name: \"flex sensor (2.2 inch)\",\n        serviceClasses: [SRV_FLEX],\n        services: () => [\n            new AnalogSensorServer(SRV_FLEX, {\n                variant: FlexVariant.Linear22Inch,\n                readingValues: [0.5],\n            }),\n        ],\n    },\n    {\n        name: \"gyroscope\",\n        serviceClasses: [SRV_GYROSCOPE],\n        services: () => [\n            new SensorServer<[number, number, number]>(SRV_GYROSCOPE, {\n                readingValues: [0, 0, 0],\n            }),\n        ],\n    },\n    {\n        name: \"heart rate\",\n        serviceClasses: [SRV_HEART_RATE],\n        services: () => [\n            new AnalogSensorServer(SRV_HEART_RATE, {\n                readingValues: [80],\n                streamingInterval: 100,\n                variant: HeartRateVariant.Finger,\n            }),\n        ],\n    },\n    {\n        name: \"humidity\",\n        serviceClasses: [SRV_HUMIDITY],\n        services: () => [\n            new AnalogSensorServer(SRV_HUMIDITY, outdoorHumidityOptions),\n        ],\n    },\n    {\n        name: \"humidity + temperature\",\n        serviceClasses: [SRV_HUMIDITY, SRV_THERMOMETER],\n        services: () => [\n            new AnalogSensorServer(SRV_THERMOMETER, outdoorThermometerOptions),\n            new AnalogSensorServer(SRV_HUMIDITY, outdoorHumidityOptions),\n        ],\n    },\n    {\n        name: \"humidity + temperature + barometer\",\n        serviceClasses: [SRV_HUMIDITY, SRV_THERMOMETER, SRV_BAROMETER],\n        services: () => [\n            new AnalogSensorServer(SRV_THERMOMETER, outdoorThermometerOptions),\n            new AnalogSensorServer(SRV_HUMIDITY, outdoorHumidityOptions),\n            new AnalogSensorServer(SRV_BAROMETER, barometerOptions),\n        ],\n    },\n    {\n        name: \"illuminance\",\n        serviceClasses: [SRV_ILLUMINANCE],\n        services: () => [\n            new AnalogSensorServer(SRV_ILLUMINANCE, {\n                readingValues: [1],\n            }),\n        ],\n    },\n    {\n        name: \"joystick (stick + A + B)\",\n        serviceClasses: [SRV_JOYSTICK],\n        services: () => [\n            new JoystickServer({\n                variant: JoystickVariant.Thumb,\n                buttonsAvailable: JoystickButtons.A | JoystickButtons.B,\n            }),\n        ],\n    },\n    {\n        name: \"joystick (stick)\",\n        serviceClasses: [SRV_JOYSTICK],\n        services: () => [\n            new JoystickServer({\n                variant: JoystickVariant.Thumb,\n            }),\n        ],\n    },\n    {\n        name: \"joystick (stick+A)\",\n        serviceClasses: [SRV_JOYSTICK],\n        services: () => [\n            new JoystickServer({\n                variant: JoystickVariant.Thumb,\n                buttonsAvailable: JoystickButtons.A,\n            }),\n        ],\n    },\n    {\n        name: \"joystick (Dpad + all buttons)\",\n        serviceClasses: [SRV_JOYSTICK],\n        services: () => [\n            new JoystickServer({\n                variant: JoystickVariant.Gamepad,\n                buttonsAvailable: JOYSTICK_ARCADE_BUTTONS,\n            }),\n        ],\n    },\n    {\n        name: \"joystick (only DPad+A/B)\",\n        serviceClasses: [SRV_JOYSTICK],\n        services: () => [\n            new JoystickServer({\n                variant: JoystickVariant.Gamepad,\n                buttonsAvailable: JOYSTICK_DPAD_AB_BUTTONS,\n            }),\n        ],\n    },\n    {\n        name: \"RGB LED (RGB through hole)\",\n        serviceClasses: [SRV_LED],\n        services: () => [\n            new LEDServer({\n                variant: LedVariant.ThroughHole,\n                ledCount: 1,\n                color: [255, 0, 0],\n            }),\n        ],\n    },\n    {\n        name: \"LED (5x blue through hole)\",\n        serviceClasses: [SRV_LED],\n        services: () => [\n            new LEDServer({\n                variant: LedVariant.ThroughHole,\n                waveLength: 450,\n                ledCount: 5,\n                color: [0, 0, 255],\n            }),\n        ],\n    },\n    {\n        name: \"LED matrix (5x5 micro:bit)\",\n        serviceClasses: [SRV_DOT_MATRIX],\n        services: () => [\n            new DotMatrixServer(5, 5, {\n                brightness: 128,\n                variant: DotMatrixVariant.LED,\n            }),\n        ],\n    },\n    {\n        name: \"LED matrix (8x8)\",\n        serviceClasses: [SRV_DOT_MATRIX],\n        services: () => [\n            new DotMatrixServer(8, 8, {\n                brightness: 128,\n                variant: DotMatrixVariant.LED,\n            }),\n        ],\n    },\n    {\n        name: \"LED matrix (11x7)\",\n        serviceClasses: [SRV_DOT_MATRIX],\n        services: () => [\n            new DotMatrixServer(11, 7, {\n                brightness: 128,\n                variant: DotMatrixVariant.LED,\n            }),\n        ],\n    },\n    {\n        name: \"Braille matrix (8x4)\",\n        serviceClasses: [SRV_DOT_MATRIX],\n        services: () => [\n            new DotMatrixServer(8, 4, {\n                variant: DotMatrixVariant.Braille,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel ring 10\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 10,\n                variant: LedPixelVariant.Ring,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel ring 12\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 12,\n                variant: LedPixelVariant.Ring,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel ring 16\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 16,\n                variant: LedPixelVariant.Ring,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel ring 24\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 24,\n                variant: LedPixelVariant.Ring,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel jewel 7\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 7,\n                variant: LedPixelVariant.Jewel,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel stick 8\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 8,\n                variant: LedPixelVariant.Stick,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel strip 30\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 60,\n                maxPower: 1000,\n                variant: LedPixelVariant.Strip,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel strip 60\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 60,\n                maxPower: 2000,\n                variant: LedPixelVariant.Strip,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel strip 150\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 150,\n                maxPower: 5000,\n                variant: LedPixelVariant.Strip,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel strip 300\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 300,\n                maxPower: 5000,\n                variant: LedPixelVariant.Strip,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel matrix (4x4)\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 16,\n                variant: LedPixelVariant.Matrix,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel matrix (8x8)\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 64,\n                variant: LedPixelVariant.Matrix,\n            }),\n        ],\n    },\n    {\n        name: \"LED pixel matrix (16x4)\",\n        serviceClasses: [SRV_LED_PIXEL],\n        services: () => [\n            new LedPixelServer({\n                numPixels: 64,\n                numColumns: 16,\n                variant: LedPixelVariant.Matrix,\n            }),\n        ],\n    },\n    {\n        name: \"light level (photo-resistor)\",\n        serviceClasses: [SRV_LIGHT_LEVEL],\n        services: () => [\n            new SensorServer(SRV_LIGHT_LEVEL, {\n                readingValues: [0.5],\n                variant: LightLevelVariant.PhotoResistor,\n            }),\n        ],\n    },\n    {\n        name: \"line tracker (digital)\",\n        serviceClasses: [SRV_REFLECTED_LIGHT],\n        services: () => [new ReflectedLightServer()],\n    },\n    {\n        name: \"line tracker (2x digital)\",\n        serviceClasses: [SRV_REFLECTED_LIGHT],\n        services: () => [\n            new ReflectedLightServer(),\n            new ReflectedLightServer(),\n        ],\n    },\n    {\n        name: \"line tracker (analog)\",\n        serviceClasses: [SRV_REFLECTED_LIGHT],\n        services: () => [\n            new ReflectedLightServer({\n                variant: ReflectedLightVariant.InfraredAnalog,\n            }),\n        ],\n    },\n    {\n        name: \"matrix keypad (3x4)\",\n        serviceClasses: [SRV_MATRIX_KEYPAD],\n        services: () => [\n            new MatrixKeypadServer(3, 4, [\n                \"0\",\n                \"1\",\n                \"2\",\n                \"3\",\n                \"4\",\n                \"5\",\n                \"6\",\n                \"7\",\n                \"8\",\n                \"*\",\n                \"0\",\n                \"#\",\n            ]),\n        ],\n    },\n    {\n        name: \"matrix keypad (4x4)\",\n        serviceClasses: [SRV_MATRIX_KEYPAD],\n        services: () => [\n            new MatrixKeypadServer(4, 4, [\n                \"0\",\n                \"1\",\n                \"2\",\n                \"A\",\n                \"3\",\n                \"4\",\n                \"5\",\n                \"B\",\n                \"6\",\n                \"7\",\n                \"8\",\n                \"C\",\n                \"*\",\n                \"0\",\n                \"#\",\n                \"D\",\n            ]),\n        ],\n    },\n    {\n        name: \"matrix keypad (1x4)\",\n        serviceClasses: [SRV_MATRIX_KEYPAD],\n        services: () => [new MatrixKeypadServer(4, 1, [\"1\", \"2\", \"3\", \"4\"])],\n    },\n    {\n        name: \"motion\",\n        serviceClasses: [SRV_MOTION],\n        services: () => [\n            new SensorServer(SRV_MOTION, {\n                readingValues: [false],\n                streamingInterval: 1000,\n            }),\n        ],\n    },\n    {\n        name: \"motor\",\n        serviceClasses: [SRV_MOTOR],\n        services: () => [new MotorServer()],\n        resetIn: true,\n    },\n    {\n        name: \"protocol test\",\n        serviceClasses: [SRV_PROTO_TEST],\n        services: () => [new ProtocolTestServer()],\n    },\n    {\n        name: \"pulse oxymeter\",\n        serviceClasses: [SRV_PULSE_OXIMETER],\n        services: () => [\n            new SensorServer<[number]>(SRV_PULSE_OXIMETER, {\n                readingValues: [98],\n                streamingInterval: 1000,\n            }),\n        ],\n    },\n    {\n        name: \"oxymeter + heart beat\",\n        serviceClasses: [SRV_PULSE_OXIMETER, SRV_HEART_RATE],\n        services: () => [\n            new SensorServer<[number]>(SRV_PULSE_OXIMETER, {\n                readingValues: [98],\n                streamingInterval: 1000,\n            }),\n            new AnalogSensorServer(SRV_HEART_RATE, {\n                readingValues: [80],\n                streamingInterval: 1000,\n                variant: HeartRateVariant.Finger,\n            }),\n        ],\n    },\n    {\n        name: \"power\",\n        serviceClasses: [SRV_POWER],\n        services: () => [new PowerServer()],\n    },\n    {\n        name: \"RNG (random number generator)\",\n        serviceClasses: [SRV_RNG],\n        services: () => [new RandomNumberGeneratorServer()],\n    },\n    {\n        name: \"rain gauge\",\n        serviceClasses: [SRV_RAIN_GAUGE],\n        services: () => [new RainGaugeServer()],\n    },\n    {\n        name: \"real time clock\",\n        serviceClasses: [SRV_REAL_TIME_CLOCK],\n        services: () => [new RealTimeClockServer()],\n    },\n    {\n        name: \"relay (EM/10A)\",\n        serviceClasses: [SRV_RELAY],\n        services: () => [\n            new JDServiceServer(SRV_RELAY, {\n                intensityValues: [false],\n                isActive: values => !!values?.[0],\n                variant: RelayVariant.Electromechanical,\n                registerValues: [\n                    {\n                        code: RelayReg.MaxSwitchingCurrent,\n                        values: [10],\n                    },\n                ],\n            }),\n        ],\n    },\n    {\n        name: \"relay 4x (SSR/5A)\",\n        serviceClasses: [SRV_RELAY],\n        services: () =>\n            Array(4)\n                .fill(0)\n                .map(\n                    () =>\n                        new JDServiceServer(SRV_RELAY, {\n                            intensityValues: [false],\n                            isActive: values => !!values?.[0],\n                            variant: RelayVariant.SolidState,\n                            registerValues: [\n                                {\n                                    code: RelayReg.MaxSwitchingCurrent,\n                                    values: [5],\n                                },\n                            ],\n                        })\n                ),\n    },\n    {\n        name: \"rotary encoder\",\n        serviceClasses: [SRV_ROTARY_ENCODER],\n        services: () => [new RotaryEncoderServer()],\n    },\n    {\n        name: \"rotary encoder + button\",\n        serviceClasses: [SRV_ROTARY_ENCODER, SRV_BUTTON],\n        services: () => [new RotaryEncoderServer(), new ButtonServer()],\n    },\n    {\n        name: \"rotary potentiometer\",\n        serviceClasses: [SRV_POTENTIOMETER],\n        services: () => [\n            new AnalogSensorServer(SRV_POTENTIOMETER, {\n                variant: PotentiometerVariant.Rotary,\n                readingValues: [0.5],\n            }),\n        ],\n    },\n    {\n        name: \"servo\",\n        serviceClasses: [SRV_SERVO],\n        services: () => [new ServoServer(microServoOptions)],\n        resetIn: true,\n    },\n    {\n        name: \"servo (270°)\",\n        serviceClasses: [SRV_SERVO],\n        services: () => [new ServoServer(microServo270Options)],\n        resetIn: true,\n    },\n    {\n        name: \"servo (360°)\",\n        serviceClasses: [SRV_SERVO],\n        services: () => [new ServoServer(microServo360Options)],\n        resetIn: true,\n    },\n    {\n        name: \"servo x 2\",\n        serviceClasses: [SRV_SERVO],\n        resetIn: true,\n        services: () =>\n            Array(2)\n                .fill(0)\n                .map(\n                    (_, i) =>\n                        new ServoServer({\n                            ...microServoOptions,\n                            instanceName: `S${i}`,\n                        })\n                ),\n    },\n    {\n        name: \"servo x 4\",\n        serviceClasses: [SRV_SERVO],\n        resetIn: true,\n        services: () =>\n            Array(4)\n                .fill(0)\n                .map(\n                    (_, i) =>\n                        new ServoServer({\n                            ...microServoOptions,\n                            instanceName: `S${i}`,\n                        })\n                ),\n    },\n    {\n        name: \"servo x 6\",\n        serviceClasses: [SRV_SERVO],\n        resetIn: true,\n        services: () =>\n            Array(6)\n                .fill(0)\n                .map(\n                    (_, i) =>\n                        new ServoServer({\n                            ...microServoOptions,\n                            instanceName: `S${i}`,\n                        })\n                ),\n    },\n    {\n        name: \"servo x 16\",\n        serviceClasses: [SRV_SERVO],\n        resetIn: true,\n        services: () =>\n            Array(16)\n                .fill(0)\n                .map(\n                    (_, i) =>\n                        new ServoServer({\n                            ...microServoOptions,\n                            instanceName: `S${i}`,\n                        })\n                ),\n    },\n    {\n        name: \"settings\",\n        serviceClasses: [SRV_SETTINGS],\n        services: () => [new SettingsServer()],\n    },\n    {\n        name: \"slider (potentiometer)\",\n        serviceClasses: [SRV_POTENTIOMETER],\n        services: () => [\n            new AnalogSensorServer(SRV_POTENTIOMETER, {\n                variant: PotentiometerVariant.Slider,\n            }),\n        ],\n    },\n    {\n        name: \"soil moisture\",\n        serviceClasses: [SRV_SOIL_MOISTURE],\n        services: () => [\n            new AnalogSensorServer(SRV_SOIL_MOISTURE, {\n                readingValues: [0.5],\n                streamingInterval: 1000,\n            }),\n        ],\n    },\n    {\n        name: \"speech synthesis\",\n        serviceClasses: [SRV_SPEECH_SYNTHESIS],\n        services: () => [new SpeechSynthesisServer()],\n    },\n    {\n        name: \"solenoid\",\n        serviceClasses: [SRV_SOLENOID],\n        services: () => [\n            new JDServiceServer(SRV_SOLENOID, {\n                intensityValues: [0],\n            }),\n        ],\n    },\n    {\n        name: \"sound level\",\n        serviceClasses: [SRV_SOUND_LEVEL],\n        services: () => [new AnalogSensorServer(SRV_SOUND_LEVEL, soundLevel)],\n    },\n    {\n        name: \"sound spectrum\",\n        serviceClasses: [SRV_SOUND_SPECTRUM],\n        services: () => [\n            new SensorServer<[Uint8Array]>(SRV_SOUND_SPECTRUM, soundSpectrum),\n        ],\n    },\n    {\n        name: \"sound player (micro:bit v2 sounds)\",\n        serviceClasses: [SRV_SOUND_PLAYER],\n        services: () => [new SoundPlayerServer(microbitSounds)],\n    },\n    {\n        name: \"switch (slide)\",\n        serviceClasses: [SRV_SWITCH],\n        services: () => [new SwitchServer({ variant: SwitchVariant.Slide })],\n    },\n    {\n        name: \"switch (push button)\",\n        serviceClasses: [SRV_SWITCH],\n        services: () => [\n            new SwitchServer({ variant: SwitchVariant.PushButton }),\n        ],\n    },\n    {\n        name: \"switch (toggle)\",\n        serviceClasses: [SRV_SWITCH],\n        services: () => [new SwitchServer({ variant: SwitchVariant.Toggle })],\n    },\n    {\n        name: \"switch (tilt)\",\n        serviceClasses: [SRV_SWITCH],\n        services: () => [new SwitchServer({ variant: SwitchVariant.Tilt })],\n    },\n    {\n        name: \"switch (proximity)\",\n        serviceClasses: [SRV_SWITCH],\n        services: () => [\n            new SwitchServer({\n                variant: SwitchVariant.Proximity,\n                autoOffDelay: 30,\n            }),\n        ],\n    },\n    {\n        name: \"thermometer (outdoor)\",\n        serviceClasses: [SRV_THERMOMETER],\n        services: () => [\n            new AnalogSensorServer(SRV_THERMOMETER, outdoorThermometerOptions),\n        ],\n    },\n    {\n        name: \"thermometer (medical)\",\n        serviceClasses: [SRV_THERMOMETER],\n        services: () => [\n            new AnalogSensorServer(SRV_THERMOMETER, medicalThermometerOptions),\n        ],\n    },\n    {\n        name: \"traffic light\",\n        serviceClasses: [SRV_TRAFFIC_LIGHT],\n        services: () => [new TrafficLightServer()],\n    },\n    {\n        name: \"traffic crossing (4 x lights)\",\n        serviceClasses: [SRV_TRAFFIC_LIGHT],\n        services: () =>\n            Array(4)\n                .fill(0)\n                .map(_ => new TrafficLightServer()),\n    },\n    {\n        name: \"thermocouple\",\n        serviceClasses: [SRV_THERMOCOUPLE],\n        services: () => [\n            new AnalogSensorServer(SRV_THERMOCOUPLE, {\n                readingValues: [550],\n                streamingInterval: 1000,\n                minReading: 0,\n                maxReading: 1100,\n                readingError: [2.2],\n                variant: ThermocoupleVariant.TypeB,\n            }),\n        ],\n    },\n    {\n        name: \"TVOC\",\n        serviceClasses: [SRV_TVOC],\n        services: () => [new AnalogSensorServer(SRV_TVOC, tvocOptions)],\n    },\n    {\n        name: \"UV index\",\n        serviceClasses: [SRV_UV_INDEX],\n        services: () => [\n            new AnalogSensorServer(SRV_UV_INDEX, {\n                readingValues: [5],\n                streamingInterval: 1000,\n            }),\n        ],\n    },\n    {\n        name: \"vibration motor\",\n        serviceClasses: [SRV_VIBRATION_MOTOR],\n        services: () => [new VibrationMotor()],\n    },\n    {\n        name: \"water level\",\n        serviceClasses: [SRV_WATER_LEVEL],\n        services: () => [\n            new AnalogSensorServer(SRV_WATER_LEVEL, {\n                readingValues: [0.5],\n                streamingInterval: 1000,\n            }),\n        ],\n    },\n    {\n        name: \"weight scale (jewelry)\",\n        serviceClasses: [SRV_WEIGHT_SCALE],\n        services: () => [\n            new AnalogSensorServer(SRV_WEIGHT_SCALE, {\n                readingValues: [0.001],\n                variant: WeightScaleVariant.Jewelry,\n                maxReading: 0.2,\n                minReading: 0.0005,\n                readingResolution: 0.00001,\n            }),\n        ],\n    },\n    {\n        name: \"weight scale (body)\",\n        serviceClasses: [SRV_WEIGHT_SCALE],\n        services: () => [\n            new AnalogSensorServer(SRV_WEIGHT_SCALE, {\n                readingValues: [60],\n                variant: WeightScaleVariant.Body,\n                maxReading: 180,\n                readingResolution: 0.1,\n            }),\n        ],\n    },\n    {\n        name: \"weight scale (food)\",\n        serviceClasses: [SRV_WEIGHT_SCALE],\n        services: () => [\n            new AnalogSensorServer(SRV_WEIGHT_SCALE, {\n                readingValues: [0.5],\n                variant: WeightScaleVariant.Food,\n                maxReading: 6,\n                readingResolution: 0.001,\n            }),\n        ],\n    },\n    {\n        name: \"wind direction\",\n        serviceClasses: [SRV_WIND_DIRECTION],\n        services: () => [\n            new AnalogSensorServer(SRV_WIND_DIRECTION, windDirectionOptions),\n        ],\n    },\n    {\n        name: \"wind speed\",\n        serviceClasses: [SRV_WIND_SPEED],\n        services: () => [\n            new AnalogSensorServer(SRV_WIND_SPEED, windSpeedOptions),\n        ],\n    },\n    {\n        name: \"weather station (wind speed, direction, rain)\",\n        serviceClasses: [SRV_WIND_SPEED, SRV_WIND_DIRECTION, SRV_RAIN_GAUGE],\n        services: () => [\n            new AnalogSensorServer(SRV_WIND_SPEED, windSpeedOptions),\n            new AnalogSensorServer(SRV_WIND_DIRECTION, windDirectionOptions),\n            new RainGaugeServer(),\n        ],\n    },\n    {\n        name: \"chassis (motor x 2 + sonar + light)\",\n        serviceClasses: [SRV_DISTANCE, SRV_LED_PIXEL, SRV_MOTOR],\n        services: () => [\n            new MotorServer(\"L\"),\n            new MotorServer(\"R\"),\n            new AnalogSensorServer(SRV_DISTANCE, sonarOptions),\n            new LedPixelServer({\n                numPixels: 5,\n                variant: LedPixelVariant.Stick,\n                instanceName: \"lights\",\n            }),\n        ],\n    },\n    {\n        name: \"railway crossing (2 x lights, 2 x servos, 1 x buffer)\",\n        serviceClasses: [SRV_TRAFFIC_LIGHT, SRV_SERVO, SRV_BUZZER],\n        services: () => [\n            new TrafficLightServer({ instanceName: \"left light\" }),\n            new ServoServer({\n                minAngle: 0,\n                maxAngle: 90,\n                instanceName: \"left arm\",\n            }),\n            new TrafficLightServer({ instanceName: \"right light\" }),\n            new ServoServer({\n                minAngle: 0,\n                maxAngle: 90,\n                instanceName: \"right arm\",\n            }),\n            new BuzzerServer({ instanceName: \"bell\" }),\n        ],\n    },\n    {\n        name: \"Arcade controller (6 x buttons)\",\n        serviceClasses: [SRV_BUTTON],\n        services: () => [\n            new ButtonServer(\"Left\"),\n            new ButtonServer(\"Up\"),\n            new ButtonServer(\"Right\"),\n            new ButtonServer(\"Down\"),\n            new ButtonServer(\"A\"),\n            new ButtonServer(\"B\"),\n        ],\n    },\n    {\n        name: \"micro:bit v2\",\n        serviceClasses: [\n            SRV_DOT_MATRIX,\n            SRV_BUTTON,\n            SRV_ACCELEROMETER,\n            SRV_SOUND_LEVEL,\n            SRV_LIGHT_LEVEL,\n            SRV_BUZZER,\n            SRV_SOUND_PLAYER,\n        ],\n        services: () => [\n            new DotMatrixServer(5, 5),\n            new ButtonServer(\"A\"),\n            new ButtonServer(\"B\"),\n            new SensorServer<[number, number, number]>(SRV_ACCELEROMETER, {\n                readingValues: [0.5, 0.5, -(1 - (0.5 * 0.5 + 0.5 * 0.5))],\n            }),\n            new AnalogSensorServer(SRV_SOUND_LEVEL, soundLevel),\n            new SensorServer(SRV_LIGHT_LEVEL, {\n                readingValues: [0.5],\n                variant: LightLevelVariant.LEDMatrix,\n            }),\n            new BuzzerServer(),\n            new SoundPlayerServer(microbitSounds),\n        ],\n    },\n    {\n        name: \"power + humidity\",\n        serviceClasses: [SRV_POWER, SRV_HUMIDITY],\n        services: () => [\n            new PowerServer(),\n            new AnalogSensorServer(SRV_HUMIDITY, outdoorHumidityOptions),\n        ],\n        factory: services => {\n            const dev = new JDServerServiceProvider(\"power+humidity\", [\n                services[0],\n            ])\n            const pwr = dev.service(1) as PowerServer\n            pwr.enabled.on(CHANGE, () => {\n                const enabled = !!pwr.enabled.values()[0]\n                console.log(`power: ${enabled ? \"on\" : \"off\"}`)\n                if (enabled)\n                    // power + rest\n                    dev.updateServices(services)\n                // power only\n                else dev.updateServices([services[0]])\n            })\n            return dev\n        },\n    },\n    {\n        name: \"HID keyboard\",\n        serviceClasses: [SRV_HID_KEYBOARD],\n        services: () => [new HIDKeyboardServer()],\n    },\n    {\n        name: \"HID mouse\",\n        serviceClasses: [SRV_HID_MOUSE],\n        services: () => [new HIDMouseServer()],\n    },\n    /*    \n    {\n        name: \"Azure IoT Hub\",\n        serviceClasses: [SRV_AZURE_IOT_HUB],\n        services: () => [new AzureIoTHubServer()],\n    },\n    */\n    {\n        name: \"WiFi (virtual)\",\n        serviceClasses: [SRV_WIFI],\n        services: () => [new WifiServer()],\n    },\n    {\n        name: \"Azure IoT Hub Health\",\n        serviceClasses: [SRV_AZURE_IOT_HUB_HEALTH],\n        services: () => [new AzureIoTHubHealthServer()],\n    },\n]\n\n/**\n * Gets the list of simulated service providers\n * @category Servers\n */\nexport default function serviceProviderDefinitions() {\n    return _providerDefinitions.slice(0)\n}\n\nfunction stableSimulatorDeviceId(bus: JDBus, template: string): string {\n    const others = bus.serviceProviders().filter(sp => sp.template === template)\n    const word0 = hash(stringToUint8Array(template + others.length), 32)\n    const word1 = hash(stringToUint8Array(template + others.length + 1), 32)\n    const id = toFullHex([word0, word1])\n    return id.slice(2)\n}\n\n/**\n * Instantiates a new service provider instance and adds it to the bus\n * @category Servers\n */\nexport function addServiceProvider(\n    bus: JDBus,\n    definition: ServiceProviderDefinition\n) {\n    const services = definition.services()\n    services.forEach(srv => srv.lock())\n    const deviceId = stableSimulatorDeviceId(bus, definition.name)\n    const options = {\n        resetIn: definition.resetIn,\n        deviceId,\n    }\n    const d =\n        definition.factory?.(services) ||\n        new JDServerServiceProvider(definition.name, services, options)\n    bus.addServiceProvider(d)\n    return d\n}\n\n/**\n * Finds the first service provider that supports the given service class\n * @category Servers\n */\nexport function serviceProviderDefinitionFromServiceClass(\n    serviceClass: number\n) {\n    return _providerDefinitions.find(\n        provider =>\n            provider.serviceClasses.length === 1 &&\n            provider.serviceClasses[0] === serviceClass\n    )\n}\n\n/**\n * Starts a service provider that hosts the given service class.\n * @category Servers\n */\nexport function startServiceProviderFromServiceClass(\n    bus: JDBus,\n    serviceClass: number\n) {\n    const provider = serviceProviderDefinitionFromServiceClass(serviceClass)\n    return addServiceProvider(bus, provider)\n}\n","import JDService from \"./service\"\nimport JDDevice from \"./device\"\nimport JDBus from \"./bus\"\nimport { JDClient } from \"./client\"\n\n/**\n * Base class for service clients\n * @category Clients\n */\nexport class JDServiceClient extends JDClient {\n    constructor(public readonly service: JDService) {\n        super()\n    }\n\n    protected get device(): JDDevice {\n        return this.service.device\n    }\n\n    protected get bus(): JDBus {\n        return this.device.bus\n    }\n\n    toString(): string {\n        return `client of ${this.service}`\n    }\n}\n","import {\n    addServiceProvider,\n    serviceProviderDefinitionFromServiceClass,\n} from \"../../servers/servers\"\nimport {\n    CHANGE,\n    DEVICE_ANNOUNCE,\n    DISCONNECT,\n    ERROR,\n    EVENT,\n    RoleManagerCmd,\n    ROLE_MANAGER_POLL,\n    SELF_ANNOUNCE,\n    SRV_CONTROL,\n    SRV_LOGGER,\n    SRV_ROLE_MANAGER,\n    SystemEvent,\n} from \"../constants\"\nimport { jdpack, jdunpack } from \"../pack\"\nimport Packet from \"../packet\"\nimport { InPipeReader } from \"../pipes\"\nimport JDService from \"../service\"\nimport { JDServiceClient } from \"../serviceclient\"\nimport {\n    arrayConcatMany,\n    debounceAsync,\n    fromHex,\n    groupBy,\n    toHex,\n} from \"../utils\"\n\n/**\n * A service role assigment\n * @category Clients\n */\nexport interface Role {\n    /**\n     * Identifier of the bound device\n     */\n    deviceId: string\n    /**\n     * Service class bound, for sanity check\n     */\n    serviceClass: number\n    /**\n     * Service index bound\n     */\n    serviceIndex: number\n    /**\n     * Role name\n     */\n    name: string\n}\n\n/**\n * A client for the role manager service\n * @category Clients\n */\nexport class RoleManagerClient extends JDServiceClient {\n    private _roles: Role[] = []\n    private _needRefresh = true\n    private _lastRefreshAttempt = 0\n\n    public readonly startRefreshRoles: () => void\n\n    constructor(service: JDService) {\n        super(service)\n        const changeEvent = service.event(SystemEvent.Change)\n\n        // always debounce refresh roles\n        this.startRefreshRoles = debounceAsync(\n            this.refreshRoles.bind(this),\n            200\n        )\n\n        // role manager emits change events\n        this.mount(changeEvent.subscribe(EVENT, this.handleChange.bind(this)))\n        // assign roles when need device enter the bus\n        this.mount(\n            this.bus.subscribe(DEVICE_ANNOUNCE, this.assignRoles.bind(this))\n        )\n        // unmount when device is removed\n        this.mount(\n            service.device.subscribe(DISCONNECT, () => {\n                if (this.bus.roleManager?.service === this.service)\n                    this.bus.setRoleManagerService(undefined)\n            })\n        )\n        // clear on unmount\n        this.mount(this.clearRoles.bind(this))\n        // retry to get roles on every self-announce\n        this.mount(\n            this.bus.subscribe(\n                SELF_ANNOUNCE,\n                this.handleSelfAnnounce.bind(this)\n            )\n        )\n    }\n\n    private handleSelfAnnounce() {\n        if (\n            this._needRefresh &&\n            this.bus.timestamp - this._lastRefreshAttempt > ROLE_MANAGER_POLL\n        )\n            this.startRefreshRoles()\n    }\n\n    get roles() {\n        return this._roles\n    }\n\n    private async handleChange() {\n        this.startRefreshRoles()\n    }\n\n    private async refreshRoles() {\n        if (this.unmounted) return\n\n        this._needRefresh = false\n        await this.collectRoles()\n\n        if (this.unmounted) return\n        this.assignRoles()\n    }\n\n    private async collectRoles() {\n        this._lastRefreshAttempt = this.bus.timestamp\n        const previousRolesHash = JSON.stringify(this._roles)\n        try {\n            const inp = new InPipeReader(this.bus)\n            await this.service.sendPacketAsync(\n                inp.openCommand(RoleManagerCmd.ListRequiredRoles),\n                true\n            )\n            // collect all roles\n            const roles: Role[] = []\n            for (const buf of await inp.readData(1000)) {\n                const [devidbuf, serviceClass, serviceIndex, name] = jdunpack<\n                    [Uint8Array, number, number, string]\n                >(buf, \"b[8] u32 u8 s\")\n                const deviceId = toHex(devidbuf)\n                const role: Role = {\n                    deviceId,\n                    serviceClass,\n                    serviceIndex,\n                    name,\n                }\n                roles.push(role)\n            }\n            // store result if changed\n            if (JSON.stringify(roles) !== previousRolesHash) {\n                this._roles = roles\n                this.emit(CHANGE)\n            }\n        } catch (e) {\n            this._needRefresh = true\n            this.emit(ERROR, e)\n        }\n    }\n\n    static unroledSrvs = [SRV_CONTROL, SRV_ROLE_MANAGER, SRV_LOGGER]\n\n    private assignRoles() {\n        this.bus\n            .services()\n            .filter(\n                srv =>\n                    RoleManagerClient.unroledSrvs.indexOf(srv.serviceClass) < 0\n            )\n            .forEach(srv => this.assignRole(srv))\n    }\n\n    private assignRole(service: JDService) {\n        const deviceId = service.device.deviceId\n        const serviceIndex = service.serviceIndex\n        const role = this._roles.find(\n            r => r.deviceId === deviceId && r.serviceIndex === serviceIndex\n        )\n        //console.debug(`role ${service.id} -> ${role?.role}`, { service })\n        service.role = role?.name\n    }\n\n    private clearRoles() {\n        this.bus.services().forEach(srv => (srv.role = undefined))\n    }\n\n    hasRoleForService(service: JDService) {\n        const { serviceClass } = service\n        return !!this._roles?.find(r => r.serviceClass === serviceClass)\n    }\n\n    compatibleRoles(service: JDService): Role[] {\n        const { serviceClass } = service\n        return this._roles?.filter(r => r.serviceClass === serviceClass)\n    }\n\n    role(name: string): Role {\n        return this._roles.find(r => r.serviceIndex > 0 && r.name === name)\n    }\n\n    async setRole(service: JDService, name: string) {\n        const { device, serviceIndex } = service\n        const { deviceId } = device\n        //console.debug(`set role ${deviceId}:${serviceIndex} to ${role}`)\n\n        const previous = name && this._roles.find(r => r.name === name)\n        if (\n            previous &&\n            previous.deviceId === deviceId &&\n            previous.serviceIndex === serviceIndex\n        ) {\n            // nothing todo\n            console.debug(`role unmodified, skipping`)\n            return\n        }\n\n        // set new role assignment\n        {\n            const data = jdpack<[Uint8Array, number, string]>(\"b[8] u8 s\", [\n                fromHex(deviceId),\n                serviceIndex,\n                name || \"\",\n            ])\n            await this.service.sendPacketAsync(\n                Packet.from(RoleManagerCmd.SetRole, data),\n                true\n            )\n        }\n\n        // clear previous role assignment\n        if (previous) {\n            console.debug(\n                `clear role ${previous.deviceId}:${previous.serviceIndex}`\n            )\n            const data = jdpack<[Uint8Array, number, string]>(\"b[8] u8 s\", [\n                fromHex(previous.deviceId),\n                previous.serviceIndex,\n                \"\",\n            ])\n            await this.service.sendPacketAsync(\n                Packet.from(RoleManagerCmd.SetRole, data),\n                true\n            )\n        }\n    }\n\n    startSimulators() {\n        if (!this._roles?.length) return\n\n        // collect roles that need to be bound\n        const todos = groupBy(\n            this._roles\n                .filter(role => !this.bus.device(role.deviceId, true))\n                .map(role => ({\n                    role,\n                    hostDefinition: serviceProviderDefinitionFromServiceClass(\n                        role.serviceClass\n                    ),\n                }))\n                .filter(todo => !!todo.hostDefinition),\n            todo => parentName(todo.role.name) || \"\"\n        )\n\n        // spawn devices with group of devices\n        Object.keys(todos).forEach(parent => {\n            const todo = todos[parent]\n            // no parent, spawn individual services\n            if (!parent) {\n                todo.forEach(t =>\n                    addServiceProvider(this.bus, t.hostDefinition)\n                )\n            } else {\n                // spawn all services into 1\n                addServiceProvider(this.bus, {\n                    name: \"\",\n                    serviceClasses: [],\n                    services: () =>\n                        arrayConcatMany(\n                            todo.map(t => t.hostDefinition.services())\n                        ),\n                })\n            }\n        })\n\n        function parentName(role: string) {\n            return role.split(\"/\", 1)[0]\n        }\n    }\n}\nexport default RoleManagerClient\n","import Packet from \"./packet\"\nimport JDDevice from \"./device\"\nimport { strcmp, arrayConcatMany, toHex } from \"./utils\"\nimport {\n    JD_SERVICE_INDEX_CTRL,\n    CMD_ADVERTISEMENT_DATA,\n    DEVICE_ANNOUNCE,\n    PACKET_SEND,\n    ERROR,\n    CONNECTING,\n    DEVICE_CONNECT,\n    DEVICE_DISCONNECT,\n    PACKET_RECEIVE,\n    PACKET_RECEIVE_ANNOUNCE,\n    PACKET_EVENT,\n    PACKET_REPORT,\n    PACKET_PROCESS,\n    DEVICE_CHANGE,\n    CHANGE,\n    FIRMWARE_BLOBS_CHANGE,\n    BUS_NODE_NAME,\n    DEVICE_NODE_NAME,\n    SERVICE_NODE_NAME,\n    EVENT_NODE_NAME,\n    REGISTER_NODE_NAME,\n    FIELD_NODE_NAME,\n    JD_DEVICE_DISCONNECTED_DELAY,\n    JD_DEVICE_LOST_DELAY,\n    JD_SERVICE_INDEX_CRC_ACK,\n    SELF_ANNOUNCE,\n    TIMEOUT,\n    LATE,\n    REPORT_UPDATE,\n    REGISTER_POLL_REPORT_INTERVAL,\n    REGISTER_POLL_REPORT_MAX_INTERVAL,\n    REGISTER_OPTIONAL_POLL_COUNT,\n    PACKET_PRE_PROCESS,\n    STREAMING_DEFAULT_INTERVAL,\n    REGISTER_POLL_FIRST_REPORT_INTERVAL,\n    SERVICE_PROVIDER_ADDED,\n    SERVICE_PROVIDER_REMOVED,\n    REFRESH,\n    ROLE_MANAGER_CHANGE,\n    TIMEOUT_DISCONNECT,\n    REGISTER_POLL_STREAMING_INTERVAL,\n    REPORT_RECEIVE,\n    CMD_SET_REG,\n    PING_LOGGERS_POLL,\n    RESET_IN_TIME_US,\n    REFRESH_REGISTER_POLL,\n    META_TRACE,\n    DEVICE_CLEAN,\n    REGISTER_POLL_REPORT_VOLATILE_MAX_INTERVAL,\n    REGISTER_POLL_REPORT_VOLATILE_INTERVAL,\n    SRV_INFRASTRUCTURE,\n    CONNECTION_STATE,\n} from \"./constants\"\nimport { serviceClass } from \"./pretty\"\nimport JDNode from \"./node\"\nimport { FirmwareBlob, sendStayInBootloaderCommand } from \"./flashing\"\nimport JDService from \"./service\"\nimport {\n    deviceSpecificationFromProductIdentifier,\n    isConstRegister,\n    isReading,\n    isSensor,\n} from \"./spec\"\nimport {\n    LoggerPriority,\n    LoggerReg,\n    SensorReg,\n    SRV_LOGGER,\n    SRV_REAL_TIME_CLOCK,\n    SystemReg,\n} from \"../../src/jdom/constants\"\nimport JDServiceProvider from \"./servers/serviceprovider\"\nimport RealTimeClockServer from \"../servers/realtimeclockserver\"\nimport { SRV_ROLE_MANAGER } from \"../../src/jdom/constants\"\nimport Transport, { ConnectionState } from \"./transport/transport\"\nimport { BusStatsMonitor } from \"./busstats\"\nimport RoleManagerClient from \"./clients/rolemanagerclient\"\nimport JDBridge from \"./bridge\"\nimport { randomDeviceId } from \"./random\"\nimport { ControlReg, SRV_CONTROL } from \"../../jacdac-spec/dist/specconstants\"\nimport Scheduler, { WallClockScheduler } from \"./scheduler\"\nimport ServiceFilter from \"./filters/servicefilter\"\nimport DeviceFilter from \"./filters/devicefilter\"\nimport Flags from \"./flags\"\nimport { stack } from \"./trace/trace\"\n\n/**\n * Creation options for a bus\n * @category JDOM\n */\nexport interface BusOptions {\n    /**\n     * The self-device device id\n     */\n    deviceId?: string\n    /**\n     * A custom scheduler to control time\n     */\n    scheduler?: Scheduler\n    /**\n     * Parent domain origin to handle iframe messages\n     */\n    parentOrigin?: string\n}\n\n/**\n * A Jacdac bus manager. This instance maintains the list of devices on the bus.\n * @category JDOM\n */\nexport class JDBus extends JDNode {\n    /**\n     * @internal\n     */\n    readonly selfDeviceId: string\n    /**\n     * A timer and interval schedular to orchastrate bus timestamps\n     * @category Scheduling\n     */\n    readonly scheduler: Scheduler\n    /**\n     * @internal\n     */\n    readonly parentOrigin: string\n    private readonly _transports: Transport[] = []\n    private _bridges: JDBridge[] = []\n    private _devices: JDDevice[] = []\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _gcInterval: any\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _announceInterval: any\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _safeBootInterval: any\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _refreshRegistersInterval: any\n    private _lastPingLoggerTime = 0\n    private _lastResetInTime = 0\n    private _restartCounter = 0\n    private _roleManagerClient: RoleManagerClient\n    private _minLoggerPriority = LoggerPriority.Debug\n    private _firmwareBlobs: FirmwareBlob[]\n    private _gcDevicesFrozen = 0\n    private _serviceProviders: JDServiceProvider[] = []\n    private _streaming = false\n    private _unsubscribeBroadcastChannel: () => void\n    private _passive = false\n\n    /**\n     * Gets an instance that tracks packet statistics\n     * @category Diagnostics\n     **/\n    public readonly stats: BusStatsMonitor\n\n    /**\n     * Creates the bus with the given transport\n     * @param sendPacket\n     * @category Lifecycle\n     */\n    constructor(transports?: Transport[], options?: BusOptions) {\n        super()\n\n        this.selfDeviceId = options?.deviceId || randomDeviceId()\n        this.scheduler = options?.scheduler || new WallClockScheduler()\n        this.parentOrigin = options?.parentOrigin || \"*\"\n        this.stats = new BusStatsMonitor(this)\n\n        // some transport may be undefined\n        transports?.filter(tr => !!tr).map(tr => this.addTransport(tr))\n\n        // tell loggers to send data, every now and then\n        // send resetin packets\n        this.on(SELF_ANNOUNCE, this.handleSelfAnnounce.bind(this))\n        // tell RTC clock the computer time\n        this.on(DEVICE_ANNOUNCE, this.handleRealTimeClockSync.bind(this))\n        // grab the default role manager\n        this.on(DEVICE_CHANGE, this.handleRoleManager.bind(this))\n\n        // start all timers\n        this.start()\n    }\n\n    private configureBroadcastChannel() {\n        if (typeof BroadcastChannel === \"undefined\") return\n\n        // the purpose of this code is to orchestrate\n        // interactions with multiple tabs and windows\n        const channel = new BroadcastChannel(\"jacdac\")\n        const postConnectionState = () => {\n            channel.postMessage({\n                id: this.selfDevice.shortId,\n                event: CONNECTION_STATE,\n                transports: this._transports.map(tr => ({\n                    type: tr.type,\n                    connectionState: tr.connectionState,\n                })),\n            })\n        }\n        // update other windows with connection status\n        const unsubConnectionState = this.subscribe(\n            CONNECTION_STATE,\n            postConnectionState\n        )\n        const handleVisibilityChange = () => {\n            // tell other windows, we are visible or not\n            channel.postMessage({\n                id: this.selfDevice.shortId,\n                event: \"visibilitychange\",\n                visibilityState: document.visibilityState,\n            })\n        }\n        const handleBroadcastMessage = async (\n            msg: MessageEvent<{\n                id: string\n                event: string\n                visibilityState?: VisibilityState\n                transports: { type: string; connectionState: string }[]\n            }>\n        ) => {\n            const { data } = msg\n            const { event, transports, visibilityState } = data\n            switch (event) {\n                case \"visibilitychange\": {\n                    // automatically disconnect if another pane becomes live\n                    //console.debug(\n                    //   `broadcast ${id}: ${event} ${visibilityState}`\n                    //)\n                    if (visibilityState === \"visible\") await this.disconnect()\n                    else {\n                        // let other window disconnect\n                        await this.delay(2000)\n                        await this.connect(true)\n                    }\n                    break\n                }\n                case CONNECTION_STATE: {\n                    //console.debug(`broadcast ${id}: ${event}`, transports)\n                    // if any other window is trying to connect, disconnect\n                    transports\n                        .filter(\n                            tr =>\n                                tr.connectionState ===\n                                ConnectionState.Connecting\n                        )\n                        .forEach(ctr => {\n                            this.transports\n                                .filter(tr => tr.type === ctr.type)\n                                .forEach(tr => tr.disconnect())\n                        })\n                }\n            }\n        }\n\n        channel.addEventListener(\"message\", handleBroadcastMessage, false)\n        document.addEventListener(\"visibilitychange\", handleVisibilityChange)\n        this._unsubscribeBroadcastChannel = () => {\n            unsubConnectionState()\n            document.removeEventListener(\n                \"visibilitychange\",\n                handleVisibilityChange\n            )\n            channel.removeEventListener(\"message\", handleBroadcastMessage)\n            channel.close()\n        }\n\n        // notify other pages\n        handleVisibilityChange()\n    }\n\n    /**\n     * Gets the list of transports registers with the bus\n     * @category Transports and Bridges\n     */\n    get transports() {\n        return this._transports.slice(0)\n    }\n\n    /**\n     * Adds a transport to the bus\n     * @category Transports and Bridges\n     */\n    addTransport(transport: Transport) {\n        if (this._transports.indexOf(transport) > -1) return // already added\n\n        this._transports.push(transport)\n        transport.bus = this\n        transport.bus.on(CONNECTING, () => this.preConnect(transport))\n    }\n\n    /**\n     * Gets the list of bridges registered with the bus\n     * @category Transports and Bridges\n     */\n    get bridges() {\n        return this._bridges.slice(0)\n    }\n\n    /**\n     * Add a bridge to the bus and returns a callback to remove it.\n     * @param bridge\n     * @returns callback to remove bridge\n     * @category Transports and Bridges\n     * @internal\n     */\n    addBridge(bridge: JDBridge): () => void {\n        if (this._bridges.indexOf(bridge) < 0) {\n            console.debug(`add bridge`, { bridge })\n            this._bridges.push(bridge)\n            this.emit(CHANGE)\n        }\n        return () => this.removeBridge(bridge)\n    }\n\n    private removeBridge(bridge: JDBridge) {\n        const i = this._bridges.indexOf(bridge)\n        if (i > -1) {\n            console.debug(`remove bridge`, { bridge })\n            this._bridges.splice(i, 1)\n            this.emit(CHANGE)\n        }\n    }\n\n    /**\n     * Do not send any packet on the bus\n     */\n    get passive(): boolean {\n        return this._passive\n    }\n\n    set passive(value: boolean) {\n        if (value !== this._passive) {\n            this._passive = value\n            this.emit(CHANGE)\n        }\n    }\n\n    private preConnect(transport: Transport) {\n        //console.debug(`preconnect ${transport.type}`, { transport })\n        return Promise.all(\n            this._transports\n                .filter(t => t !== transport)\n                .map(t => t.disconnect())\n        )\n    }\n\n    /**\n     * Connects the bus going through the transports chronologically. Does nothing if already connected.\n     * @param background connection was triggered automatically\n     * @category Lifecycle\n     */\n    async connect(background?: boolean) {\n        if (this.connected) return\n\n        for (const transport of this._transports) {\n            // start connection\n            await transport.connect(background)\n            // keep going if not connected\n            if (transport.connected) break\n        }\n        this.emit(CHANGE)\n    }\n\n    /**\n     * Disconnects the bus and any connected transport.\n     * @category Lifecycle\n     */\n    async disconnect() {\n        for (const transport of this._transports) {\n            await transport.disconnect()\n        }\n        this.emit(CHANGE)\n    }\n\n    /**\n     * Starts to process packets and updates the JDOM nodes\n     * @category Lifecycle\n     */\n    start() {\n        this.configureBroadcastChannel()\n        if (!this._announceInterval)\n            this._announceInterval = this.scheduler.setInterval(() => {\n                if (!this.passive) this.emit(SELF_ANNOUNCE)\n            }, 499)\n        this.backgroundRefreshRegisters = true\n        if (!this._gcInterval)\n            this._gcInterval = this.scheduler.setInterval(\n                () => this.gcDevices(),\n                JD_DEVICE_DISCONNECTED_DELAY\n            )\n    }\n\n    /**\n     * Stops processing packets\n     * @category Lifecycle\n     */\n    async stop() {\n        await this.disconnect()\n        if (this._unsubscribeBroadcastChannel) {\n            this._unsubscribeBroadcastChannel()\n            this._unsubscribeBroadcastChannel = undefined\n        }\n        if (this._announceInterval) {\n            this.scheduler.clearInterval(this._announceInterval)\n            this._announceInterval = undefined\n        }\n        this.safeBoot = false\n        this.backgroundRefreshRegisters = false\n        if (this._gcInterval) {\n            this.scheduler.clearInterval(this._gcInterval)\n            this._gcInterval = undefined\n        }\n    }\n\n    /**\n     * Stops the bus and all transport connections.\n     * @category Lifecycle\n     */\n    async dispose() {\n        console.debug(`${this.id}: disposing.`)\n        await this.stop()\n        this._transports.forEach(transport => transport.dispose())\n    }\n\n    /**\n     * Indicates that the bus is sending commands keep devices in bootloader mode.\n     * This property is signaled by CHANGE.\n     * @category Lifecycle\n     */\n    get safeBoot() {\n        return !!this._safeBootInterval\n    }\n\n    /**\n     * Turn on or off the safe boot mode where the bus keeps devices in bootloader mode.\n     * Triggers a CHANGE event.\n     * @category Lifecycle\n     */\n    set safeBoot(enabled: boolean) {\n        if (enabled && !this._safeBootInterval) {\n            this._safeBootInterval = this.scheduler.setInterval(() => {\n                // don't send message if any device is flashing\n                if (this._devices.some(d => d.flashing)) return\n                sendStayInBootloaderCommand(this)\n            }, 50)\n            this.emit(CHANGE)\n        } else if (!enabled && this._safeBootInterval) {\n            this.scheduler.clearInterval(this._safeBootInterval)\n            this._safeBootInterval = undefined\n            this.emit(CHANGE)\n        }\n    }\n\n    /**\n     * Indicates if any of the transports is connected.\n     * Some transports might be in the process of connecting or disconnecting.\n     * @category Lifecycle\n     */\n    get connected() {\n        return this._transports.some(t => t.connected)\n    }\n\n    /**\n     * Indicates if any of the transports is disconnected.\n     * Some transports might be in the process of connecting or disconnecting.\n     * @category Lifecycle\n     */\n    get disconnected() {\n        return this._transports.every(t => t.disconnected)\n    }\n\n    /**\n     * Clears known devices and service providers (simulators). Optionally reset bus timestamp.\n     * @param timestamp\n     * @category Services\n     */\n    clear(timestamp = 0) {\n        // clear hosts\n        if (this._serviceProviders?.length) {\n            this._serviceProviders.forEach(host => (host.bus = undefined))\n            this._serviceProviders = []\n        }\n\n        // clear devices\n        const devs = this._devices\n        if (devs?.length) {\n            this._devices = []\n            devs.forEach(dev => {\n                dev.disconnect()\n                this.emit(DEVICE_DISCONNECT, dev)\n                this.emit(DEVICE_CHANGE, dev)\n            })\n        }\n        this.resetTime(timestamp)\n    }\n\n    /**\n     * Gets a unique identifier for this node in the Jacdac DOM.\n     * @category JDOM\n     */\n    get id(): string {\n        return this.nodeKind\n    }\n\n    /**\n     * Gets the bus name\n     * @category JDOM\n     */\n    get name(): string {\n        return \"bus\"\n    }\n\n    /**\n     * Gets the bus name\n     * @category JDOM\n     */\n    get friendlyName(): string {\n        return this.name\n    }\n\n    /**\n     * Gets the bus name\n     * @category JDOM\n     */\n    get qualifiedName(): string {\n        return this.name\n    }\n\n    /**\n     * Returns the ``BUS_NODE_NAME``\n     * @category JDOM\n     */\n    get nodeKind(): string {\n        return BUS_NODE_NAME\n    }\n\n    /**\n     * Gets the default role manager service client, if any\n     * @category Services\n     */\n    get roleManager(): RoleManagerClient {\n        return this._roleManagerClient\n    }\n\n    /**\n     * Sets the default role manager service client\n     * @category Services\n     */\n    setRoleManagerService(service: JDService) {\n        //console.log(`set role manager`, { service })\n        // clean if needed\n        if (\n            this._roleManagerClient &&\n            this._roleManagerClient.service !== service\n        ) {\n            //console.debug(\"unmount role manager\")\n            this._roleManagerClient.unmount()\n            this._roleManagerClient = undefined\n        }\n\n        // allocate new manager\n        if (service && service !== this._roleManagerClient?.service) {\n            //console.debug(\"mount role manager\")\n            this._roleManagerClient = new RoleManagerClient(service)\n            this.emit(ROLE_MANAGER_CHANGE)\n            this.emit(CHANGE)\n            this._roleManagerClient.startRefreshRoles()\n        }\n    }\n\n    /**\n     * @internal\n     */\n    toString(): string {\n        return `bus: ${this._devices?.length || 0} devices, ${\n            this._transports\n                ?.filter(tr => tr.connected)\n                .map(tr => tr.type)\n                .join(\", \") || \"\"\n        }`\n    }\n\n    /**\n     * Gets a detailled description of the devices and services connected to the bus\n     * @returns\n     */\n    describe() {\n        return `\ntransport:\n${this._transports.map(tr => `  ${tr.type}: ${tr.connectionState}`).join(\"\\n\")}\n\n${this.devices({ ignoreInfrastructure: true })\n    .map(\n        dev => `device: \n  id: ${dev.shortId} (0x${dev.deviceId})\n  product: ${\n      dev.productIdentifier\n          ? `${\n                deviceSpecificationFromProductIdentifier(dev.productIdentifier)\n                    ?.id || \"?\"\n            } (0x${dev.productIdentifier?.toString(16)})`\n          : \"\"\n  }\n  firmware_version: ${dev.firmwareVersion || \"\"}\n  services:\n${dev\n    .services()\n    .slice(1)\n    .map(srv =>\n        [\n            `    ${\n                srv.specification?.shortName || srv.name\n            } (0x${srv.serviceClass.toString(16)})`,\n            ...srv\n                .registers()\n                .filter(reg => !!reg.data)\n                .map(\n                    reg =>\n                        `        ${reg.specification?.kind || \"reg\"} ${\n                            reg.name\n                        }: ${reg.humanValue} (${toHex(reg.data)})`\n                ),\n            ...srv.events.map(ev => `        event ${ev.name}: ${ev.count}`),\n        ].join(\"\\n\")\n    )\n    .join(\"\\n\")}\n`\n    )\n    .join(\"\\n\")}`\n    }\n\n    /**\n     * Resolves a JDOM node from an identifier\n     * @param id node identifier\n     * @returns node if found, undefined otherwise\n     * @category JDOM\n     */\n    node(id: string): JDNode {\n        const resolve = (): JDNode => {\n            const m =\n                /^(?<type>bus|device|service|register|event|field)(:(?<dev>\\w+)(:(?<srv>\\w+)(:(?<reg>\\w+(:(?<idx>\\w+))?))?)?)?$/.exec(\n                    id\n                )\n            if (!m) return undefined\n            const type = m.groups[\"type\"]\n            const dev = m.groups[\"dev\"]\n            const srv = parseInt(m.groups[\"srv\"], 16)\n            const reg = parseInt(m.groups[\"reg\"], 16)\n            const idx = parseInt(m.groups[\"idx\"], 16)\n            //console.log(type, this.device(dev), this.device(dev)?.service(srv), this.device(dev)?.service(srv)?.register(reg), idx)\n            switch (type) {\n                case BUS_NODE_NAME:\n                    return this\n                case DEVICE_NODE_NAME:\n                    return this.device(dev, true)\n                case SERVICE_NODE_NAME:\n                    return this.device(dev, true)?.service(srv)\n                case REGISTER_NODE_NAME:\n                    return this.device(dev, true)?.service(srv)?.register(reg)\n                case EVENT_NODE_NAME:\n                    return this.device(dev, true)?.service(srv)?.event(reg)\n                case FIELD_NODE_NAME:\n                    return this.device(dev, true)?.service(srv)?.register(reg)\n                        ?.fields[idx]\n            }\n            console.info(`node ${id} not found`)\n            return undefined\n        }\n        const node = resolve()\n        return node\n    }\n\n    private resetTime(delta = 0) {\n        this.scheduler.resetTime(delta)\n        this.emit(CHANGE)\n    }\n\n    /**\n     * Gets the current bus-relavite time in milliseconds\n     * @category Scheduling\n     */\n    get timestamp(): number {\n        return this.scheduler.timestamp\n    }\n\n    /**\n     * Indicates if the bus should force all sensors to stream\n     */\n    get streaming(): boolean {\n        return this._streaming\n    }\n\n    /**\n     * Sets automatic streaming on and off\n     */\n    set streaming(value: boolean) {\n        this._streaming = value\n    }\n\n    /**\n     * Creates a promise that awaits for the given duration using the bus scheduler\n     * @category Scheduling\n     */\n    delay<T>(millis: number, value?: T): Promise<T | undefined> {\n        return new Promise(resolve =>\n            this.scheduler.setTimeout(() => resolve(value), millis)\n        )\n    }\n\n    /**\n     * Gets the current desired minimum logger verbosity on the bus\n     * @category Diagnostics\n     */\n    get minLoggerPriority(): LoggerPriority {\n        return this._minLoggerPriority\n    }\n\n    /**\n     * Sets the current desired minimum logger verbosity on the bus\n     * @category Diagnostics\n     */\n    set minLoggerPriority(priority: LoggerPriority) {\n        if (priority !== this._minLoggerPriority) {\n            this._minLoggerPriority = priority\n            this.emit(CHANGE)\n        }\n    }\n\n    /**\n     * Returns undefined\n     * @category JDOM\n     */\n    get parent(): JDNode {\n        return undefined\n    }\n\n    private async handleRealTimeClockSync(device: JDDevice) {\n        // tell time to the RTC clocks\n        if (device.hasService(SRV_REAL_TIME_CLOCK))\n            await RealTimeClockServer.syncTime(this)\n    }\n\n    private handleRoleManager() {\n        if (this.roleManager) return\n\n        const service = this.services({ serviceClass: SRV_ROLE_MANAGER })[0]\n        this.setRoleManagerService(service)\n    }\n\n    /**\n     * Sends a packet to the bus\n     * @param packet packet to send\n     * @internal\n     */\n    async sendPacketAsync(packet: Packet) {\n        packet.timestamp = this.timestamp\n        if (Flags.trace) packet.meta[META_TRACE] = stack()\n\n        // special debug mode to avoid dashboard interfere with packets\n        // will generate fails for acks\n        if (this.passive) return\n\n        this.emit(PACKET_SEND, packet)\n\n        await Promise.all(\n            this._transports.map(transport => transport.sendPacketAsync(packet))\n        )\n    }\n\n    /**\n     * Gets the list of known firmware blobs\n     * @category Firmware\n     */\n    get firmwareBlobs() {\n        return this._firmwareBlobs\n    }\n\n    /**\n     * Sets the list of known firmware blobs\n     * @category Firmware\n     */\n    set firmwareBlobs(blobs: FirmwareBlob[]) {\n        this._firmwareBlobs = blobs\n        this.emit(FIRMWARE_BLOBS_CHANGE)\n        this.emit(CHANGE)\n    }\n\n    /**\n     * Gets the current list of known devices on the bus\n     * @category Services\n     */\n    devices(options?: DeviceFilter) {\n        if (options?.serviceName && options?.serviceClass > -1)\n            throw Error(\"serviceClass and serviceName cannot be used together\")\n        const sc =\n            options?.serviceClass > -1\n                ? options?.serviceClass\n                : serviceClass(options?.serviceName)\n\n        let r = this._devices.slice(0)\n        if (sc > -1) r = r.filter(s => s.hasService(sc))\n        if (options?.ignoreInfrastructure)\n            r = r.filter(\n                s =>\n                    s.deviceId !== this.selfDeviceId &&\n                    s.serviceClasses.indexOf(SRV_INFRASTRUCTURE) < 0\n            )\n        if (options?.announced) r = r.filter(s => s.announced)\n        if (options?.ignoreSimulators)\n            r = r.filter(r => !this.findServiceProvider(r.deviceId))\n        if (options?.productIdentifier) r = r.filter(r => !!r.productIdentifier)\n        if (options?.physical) r = r.filter(r => !!r.isPhysical)\n        return r\n    }\n\n    /**\n     * Gets the current list of service providers on the bus\n     * @category Services\n     */\n    serviceProviders(): JDServiceProvider[] {\n        return this._serviceProviders.slice(0)\n    }\n\n    /**\n     * Get a service providers for a given device\n     * @param deviceId\n     * @category Services\n     */\n    findServiceProvider(deviceId: string) {\n        return this._serviceProviders.find(d => d.deviceId === deviceId)\n    }\n\n    /**\n     * Adds the service provider to the bus and returns the associated devoce\n     * @param provider instance to add\n     * @category Services\n     */\n    addServiceProvider(provider: JDServiceProvider) {\n        if (provider && this._serviceProviders.indexOf(provider) < 0) {\n            this._serviceProviders.push(provider)\n            provider.bus = this\n\n            this.emit(SERVICE_PROVIDER_ADDED, provider)\n            this.emit(CHANGE)\n        }\n\n        return this.device(provider.deviceId)\n    }\n\n    /**\n     * Removes the service provider from the bus\n     * @param provider instance to remove\n     * @category Services\n     */\n    removeServiceProvider(provider: JDServiceProvider) {\n        if (!provider) return\n\n        const i = this._serviceProviders.indexOf(provider)\n        if (i > -1) {\n            this.removeDevice(provider.deviceId)\n            // remove host\n            this._serviceProviders.splice(i, 1)\n            provider.bus = undefined\n            this.emit(SERVICE_PROVIDER_REMOVED, provider)\n\n            // removed host\n            this.emit(CHANGE)\n        }\n    }\n\n    /**\n     * Remove a device client by identifier\n     * @param deviceId\n     * @category Devices\n     */\n    removeDevice(deviceId: string) {\n        // remove device as well\n        const devi = this._devices.findIndex(d => d.deviceId === deviceId)\n        if (devi > -1) {\n            const dev = this._devices[devi]\n            this._devices.splice(devi, 1)\n            dev.disconnect()\n            this.emit(DEVICE_DISCONNECT, dev)\n            this.emit(DEVICE_CHANGE, dev)\n        }\n    }\n\n    /**\n     * Gets the list of devices\n     * @category JDOM\n     */\n    get children(): JDNode[] {\n        return this.devices()\n    }\n\n    /**\n     * Gets the current list of services from all the known devices on the bus\n     * @category Services\n     */\n    services(options?: ServiceFilter & DeviceFilter): JDService[] {\n        return arrayConcatMany(\n            this.devices(options).map(d => d.services(options))\n        )\n    }\n\n    /**\n     * Gets a device on the bus\n     * @param id device identifier to query\n     * @param skipCreate do not create new device if missing\n     * @param pkt packet that generated this device query\n     * @category Services\n     */\n    device(id: string, skipCreate?: boolean, pkt?: Packet) {\n        if (id === \"0000000000000000\" && !skipCreate) {\n            console.warn(\"jadac: trying to access device 0000000000000000\")\n            return undefined\n        }\n        let d = this._devices.find(d => d.deviceId == id)\n        if (!d && !skipCreate) {\n            if (this.devicesFrozen) {\n                console.debug(`info`, `devices frozen, dropping ${id}`)\n                return undefined\n            }\n            d = new JDDevice(this, id, pkt)\n            this._devices.push(d)\n            console.debug(\n                `${id === this.selfDeviceId ? \"self\" : \"new\"} device ${\n                    d.shortId\n                } (${id})`\n            )\n            // stable sort\n            this._devices.sort((l, r) => strcmp(l.deviceId, r.deviceId))\n            this.emit(DEVICE_CONNECT, d)\n            this.emit(DEVICE_CHANGE, d)\n            this.emit(CHANGE)\n        }\n        return d\n    }\n\n    /**\n     * Push a context to disable cleaning device that haven't issued packets recently.\n     * @category Lifecycle\n     */\n    pushDeviceFrozen() {\n        this._gcDevicesFrozen++\n    }\n\n    /**\n     * Pop a context to disable cleaning device that haven't issued packets recently.\n     * @category Lifecycle\n     */\n    popDeviceFrozen() {\n        this._gcDevicesFrozen = Math.max(0, this._gcDevicesFrozen - 1)\n    }\n\n    /**\n     * Indicates if the device list if currently frozen.\n     * @category Lifecycle\n     */\n    get devicesFrozen() {\n        return this._gcDevicesFrozen > 0\n    }\n\n    private gcDevices() {\n        this.emit(DEVICE_CLEAN)\n        if (this.devicesFrozen) {\n            console.debug(\"devices frozen\")\n            return\n        }\n\n        const LOST_DELAY = JD_DEVICE_LOST_DELAY\n        const DISCONNECTED_DELAY = JD_DEVICE_DISCONNECTED_DELAY\n        const lostCutoff = this.timestamp - LOST_DELAY\n        const disconnectedCutoff = this.timestamp - DISCONNECTED_DELAY\n\n        // cycle through events and disconnect devices that are long gone\n        for (let i = 0; i < this._devices.length; ++i) {\n            const dev = this._devices[i]\n\n            if (dev.lastSeen < disconnectedCutoff) {\n                this._devices.splice(i, 1)\n                i--\n                this.disconnectDevice(dev)\n            } else if (dev.lastSeen < lostCutoff) {\n                dev.lost = true\n            }\n        }\n    }\n\n    private disconnectDevice(dev: JDDevice) {\n        dev.disconnect()\n        this.emit(DEVICE_DISCONNECT, dev)\n        this.emit(DEVICE_CHANGE, dev)\n        this.emit(CHANGE)\n    }\n\n    /**\n     * Ingests and process a packet received from the bus.\n     * @param pkt a jacdac packet\n     * @internal\n     */\n    processPacket(pkt: Packet) {\n        if (!pkt.isMultiCommand && !pkt.device) {\n            pkt.device = this.device(pkt.deviceIdentifier, false, pkt)\n            // the device id is unknown dropping\n            if (!pkt.device) {\n                if (Flags.diagnostics)\n                    console.debug(\n                        `unknown pkt device ${pkt.deviceIdentifier}`,\n                        {\n                            pkt,\n                        }\n                    )\n                return\n            }\n        }\n        this.emit(PACKET_PRE_PROCESS, pkt)\n        let isAnnounce = false\n        if (!pkt.device) {\n            // skip\n        } else if (pkt.isCommand) {\n            if (pkt.deviceIdentifier == this.selfDeviceId) {\n                if (pkt.requiresAck) {\n                    const ack = Packet.onlyHeader(pkt.crc)\n                    ack.serviceIndex = JD_SERVICE_INDEX_CRC_ACK\n                    ack.deviceIdentifier = this.selfDeviceId\n                    ack.sendReportAsync(this.selfDevice)\n                }\n            }\n            pkt.device.processPacket(pkt)\n        } else {\n            pkt.device.lastSeen = pkt.timestamp\n            if (pkt.serviceIndex == JD_SERVICE_INDEX_CTRL) {\n                if (pkt.serviceCommand == CMD_ADVERTISEMENT_DATA) {\n                    isAnnounce = true\n                    pkt.device.processAnnouncement(pkt)\n                } else if (\n                    pkt.isMultiCommand &&\n                    pkt.serviceCommand == (CMD_SET_REG | ControlReg.ResetIn)\n                ) {\n                    // someone else is doing reset in\n                    this._lastResetInTime = this.timestamp\n                }\n            }\n            pkt.device.processPacket(pkt)\n        }\n        this.emit(PACKET_PROCESS, pkt)\n        // don't spam with duplicate advertisement events\n        if (isAnnounce) {\n            this.emit(PACKET_RECEIVE_ANNOUNCE, pkt)\n        } else {\n            this.emit(PACKET_RECEIVE, pkt)\n            if (pkt.isEvent) this.emit(PACKET_EVENT, pkt)\n            else if (pkt.isReport) this.emit(PACKET_REPORT, pkt)\n        }\n    }\n\n    /**\n     * Gets the virtual device created by this bus to handle pipes.\n     * @category Services\n     */\n    get selfDevice() {\n        return this.device(this.selfDeviceId)\n    }\n\n    private handleSelfAnnounce(): Promise<void> {\n        return Promise.all([\n            this.sendAnnounce(),\n            this.sendResetIn(),\n            this.sendPingLoggers(),\n        ]).then(() => {})\n    }\n\n    private async sendAnnounce() {\n        // we do not support any services (at least yet)\n        if (this._restartCounter < 0xf) this._restartCounter++\n        const pkt = Packet.jdpacked<[number, number[][]]>(\n            CMD_ADVERTISEMENT_DATA,\n            \"u32 r: u32\",\n            [this._restartCounter | 0x100, [[SRV_INFRASTRUCTURE]]]\n        )\n        pkt.serviceIndex = JD_SERVICE_INDEX_CTRL\n        pkt.deviceIdentifier = this.selfDeviceId\n        await pkt.sendReportAsync(this.selfDevice)\n    }\n\n    get lastResetInTime() {\n        return this._lastResetInTime\n    }\n\n    private async sendResetIn() {\n        // don't send reset if already received\n        // or no devices\n        if (!this.devices({ ignoreInfrastructure: true }).length) return\n        this._lastResetInTime = this.timestamp\n        const rst = Packet.jdpacked<[number]>(\n            CMD_SET_REG | ControlReg.ResetIn,\n            \"u32\",\n            [RESET_IN_TIME_US]\n        )\n        await rst.sendAsMultiCommandAsync(this, SRV_CONTROL)\n    }\n\n    public async sendStopStreaming(): Promise<void> {\n        console.debug(`bus: stop streaming`)\n        const readingRegisters = this.services({\n            announced: true,\n            ignoreInfrastructure: true,\n        })\n            .map(\n                srv =>\n                    srv.readingRegister &&\n                    srv.register(SensorReg.StreamingSamples)\n            )\n            .filter(reg => !!reg)\n\n        await Promise.all(\n            readingRegisters.map(reg => reg.sendSetPackedAsync([0]))\n        )\n    }\n\n    private async sendPingLoggers() {\n        if (\n            this._minLoggerPriority < LoggerPriority.Silent &&\n            this.timestamp - this._lastPingLoggerTime > PING_LOGGERS_POLL &&\n            this.devices({\n                ignoreInfrastructure: true,\n                serviceClass: SRV_LOGGER,\n            }).length > 0\n        ) {\n            this._lastPingLoggerTime = this.timestamp\n            const pkt = Packet.jdpacked<[LoggerPriority]>(\n                CMD_SET_REG | LoggerReg.MinPriority,\n                \"u8\",\n                [this._minLoggerPriority]\n            )\n            await pkt.sendAsMultiCommandAsync(this, SRV_LOGGER)\n        }\n    }\n\n    /**\n     * Indicates if registers are automatically refreshed in the background.\n     * @category Services\n     */\n    get backgroundRefreshRegisters() {\n        return !!this._refreshRegistersInterval\n    }\n\n    /**\n     * Enables or disables automatically refreshing registers in the background.\n     * @param enabled true to automatically refresh registers\n     * @category Services\n     */\n    set backgroundRefreshRegisters(enabled: boolean) {\n        if (!!enabled !== this.backgroundRefreshRegisters) {\n            if (!enabled) {\n                if (this._refreshRegistersInterval)\n                    this.scheduler.clearInterval(this._refreshRegistersInterval)\n                this._refreshRegistersInterval = undefined\n            } else {\n                this._refreshRegistersInterval = this.scheduler.setInterval(\n                    this.handleRefreshRegisters.bind(this),\n                    REFRESH_REGISTER_POLL\n                )\n            }\n        }\n    }\n\n    /**\n     * Cycles through all known registers and refreshes the once that have REPORT_UPDATE registered\n     */\n    private handleRefreshRegisters() {\n        const devices = this._devices.filter(\n            device => device.announced && !device.lost\n        ) // don't try lost devices or devices flashing\n\n        // skip if no devices or any device is currently flashing\n        if (!devices.length || devices.some(dev => dev.flashing)) return // no devices, we're done\n\n        // collect registers\n        const registers = arrayConcatMany(\n            devices.map(device =>\n                arrayConcatMany(\n                    device.services({ specification: true }).map(service =>\n                        service\n                            .registers()\n                            // someone is listening for reports\n                            .filter(\n                                reg =>\n                                    // automatic streaming\n                                    (this._streaming &&\n                                        reg.code === SystemReg.Reading) ||\n                                    // listening for updates\n                                    reg.listenerCount(REPORT_RECEIVE) > 0 ||\n                                    reg.listenerCount(REPORT_UPDATE) > 0\n                            )\n                            // ask if data is missing or non-const/status code\n                            .filter(\n                                reg =>\n                                    !reg.data ||\n                                    !(\n                                        isConstRegister(reg.specification) ||\n                                        reg.code === SystemReg.StatusCode ||\n                                        reg.code === SystemReg.ReadingError\n                                    )\n                            )\n                            // stop asking optional registers\n                            .filter(\n                                reg =>\n                                    !reg.specification?.optional ||\n                                    reg.lastGetAttempts <\n                                        REGISTER_OPTIONAL_POLL_COUNT\n                            )\n                    )\n                )\n            )\n        )\n\n        // refresh values\n        for (const register of registers) {\n            const { service, specification } = register\n            const noDataYet = !register.data\n            const age = this.timestamp - register.lastGetTimestamp\n            const backoff = register.lastGetAttempts\n\n            // streaming register? use streaming sample\n            if (isReading(specification) && isSensor(service.specification)) {\n                // compute refresh interval\n                const intervalRegister = service.register(\n                    SensorReg.StreamingInterval\n                )\n                let interval = intervalRegister?.uintValue\n                // no interval data\n                if (interval === undefined) {\n                    // use preferred interval data or default to 50\n                    const preferredIntervalRegister = service.register(\n                        SensorReg.StreamingPreferredInterval\n                    )\n                    const preferredInterval =\n                        preferredIntervalRegister?.uintValue\n                    interval = preferredInterval\n                    // if no interval, poll interval value\n                    if (interval === undefined) {\n                        // all async\n                        if (\n                            intervalRegister &&\n                            !intervalRegister.data &&\n                            this.timestamp - intervalRegister.lastGetTimestamp >\n                                REGISTER_POLL_STREAMING_INTERVAL\n                        )\n                            intervalRegister.sendGetAsync()\n\n                        if (\n                            preferredIntervalRegister &&\n                            !preferredIntervalRegister.data &&\n                            this.timestamp -\n                                preferredIntervalRegister.lastGetTimestamp >\n                                REGISTER_POLL_STREAMING_INTERVAL\n                        )\n                            preferredIntervalRegister.sendGetAsync()\n                    }\n                }\n                // still no interval data use from spec or default\n                if (interval === undefined)\n                    interval =\n                        specification.preferredInterval ||\n                        STREAMING_DEFAULT_INTERVAL\n                const streamingSamplesRegister = service.register(\n                    SensorReg.StreamingSamples\n                )\n                const streamingSamplesAge =\n                    this.timestamp - streamingSamplesRegister.lastSetTimestamp\n                // need to figure out when we asked for streaming\n                const midSamplesAge = (interval * 0xff) >> 1\n                // compute if half aged\n                if (streamingSamplesAge > midSamplesAge) {\n                    //console.debug({ samplesAge, midSamplesAge, interval })\n                    streamingSamplesRegister.sendSetPackedAsync([0xff])\n                }\n\n                // first query, get data asap once per second\n                if (noDataYet && age > 1000) register.sendGetAsync()\n            } // regular register, ping if data is old\n            else {\n                const volatile = !!specification?.volatile\n                const expiration = volatile\n                    ? Math.min(\n                          REGISTER_POLL_REPORT_VOLATILE_MAX_INTERVAL,\n                          REGISTER_POLL_REPORT_VOLATILE_INTERVAL *\n                              (1 << backoff)\n                      )\n                    : Math.min(\n                          REGISTER_POLL_REPORT_MAX_INTERVAL,\n                          (noDataYet\n                              ? REGISTER_POLL_FIRST_REPORT_INTERVAL\n                              : REGISTER_POLL_REPORT_INTERVAL) *\n                              (1 << backoff)\n                      )\n                if (age > expiration) {\n                    //console.log(`bus: poll ${register.id}`, register, age, backoff, expiration)\n                    register.sendGetAsync()\n                }\n            }\n        }\n\n        // apply streaming samples to service provider\n        this._serviceProviders.map(host => host.emit(REFRESH))\n    }\n\n    /**\n     * Runs a promise with a timeout. Returns undefined if timeout happens before of disconnection.\n     * @param timeout duration to wait before declaring timeout\n     * @param promise promise to wrap\n     * @category Lifecycle\n     */\n    withTimeout<T>(timeout: number, promise: Promise<T>): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            let done = false\n            const tid = setTimeout(() => {\n                if (!done) {\n                    done = true\n                    if (!this._transports.some(tr => tr.connected)) {\n                        // the bus got disconnected so all operation will\n                        // time out going further\n                        this.emit(TIMEOUT_DISCONNECT)\n                        resolve(undefined)\n                    } else {\n                        // the command timed out\n                        this.emit(TIMEOUT)\n                        this.emit(ERROR, \"Timeout (\" + timeout + \"ms)\")\n                        resolve(undefined)\n                    }\n                }\n            }, timeout)\n            promise.then(\n                v => {\n                    if (!done) {\n                        done = true\n                        clearTimeout(tid)\n                        resolve(v)\n                    } else {\n                        // we already gave up\n                        this.emit(LATE)\n                    }\n                },\n                e => {\n                    if (!done) {\n                        done = true\n                        clearTimeout(tid)\n                        reject(e)\n                    }\n                }\n            )\n        })\n    }\n}\n\nexport default JDBus\n","import JDBus from \"../bus\"\nimport JDClient from \"../client\"\nimport { CHANGE, PROGRESS } from \"../constants\"\nimport Trace from \"./trace\"\n\n/**\n * A player for packet traces.\n * @category Trace\n */\nexport class TracePlayer extends JDClient {\n    private _trace: Trace\n    private _busStartTimestamp = 0\n    private _index = 0\n    private _interval: any\n    private _lastProgressEmit = 0\n\n    constructor(public readonly bus: JDBus, public speed: number = 1) {\n        super()\n        this.tick = this.tick.bind(this)\n\n        // always stop when unmounting\n        this.mount(() => this.stop())\n    }\n\n    get running() {\n        return !!this._interval\n    }\n\n    get trace() {\n        return this._trace\n    }\n\n    set trace(t: Trace) {\n        if (t !== this._trace) {\n            this.stop()\n            this._trace = t\n            this.emit(CHANGE)\n        }\n    }\n\n    /**\n     * Gets the adjusted timestamp\n     */\n    get elapsed() {\n        return (this.bus.timestamp - this._busStartTimestamp) * this.speed\n    }\n\n    get progress() {\n        if (!this.trace) return 0\n        return Math.max(0, Math.min(1, this.elapsed / this.trace.duration))\n    }\n\n    get length() {\n        return this.trace?.length || 0\n    }\n\n    start() {\n        if (this._interval || !this._trace) return // already running\n\n        // this is the reference start time of this run\n        this._busStartTimestamp = this.bus.timestamp\n        this._index = 0\n        this._interval = this.bus.scheduler.setInterval(this.tick, 50)\n        this.emit(CHANGE)\n        this.emitProgress(true)\n    }\n\n    stop() {\n        if (this._interval) {\n            this.bus.scheduler.clearInterval(this._interval)\n            this._interval = undefined\n            this.emitProgress(true)\n            this.emit(CHANGE)\n        }\n    }\n\n    private tick() {\n        if (!this._trace) return\n\n        const busElapsed = this.elapsed\n        const packets = this.trace.packets\n        const packetStart = packets[0]?.timestamp || 0\n\n        while (this._index < packets.length) {\n            const packet = packets[this._index]\n            const packetElapsed = packet.timestamp - packetStart\n            if (packetElapsed > busElapsed) break // wait to catch up\n            // clone packet and send\n            const pkt = packet.clone()\n            pkt.replay = true\n            pkt.timestamp = this._busStartTimestamp + packetElapsed\n            this.bus.processPacket(pkt)\n            this._index++\n        }\n\n        //console.log(`replay ${this._index} ${nframes} frames, ${npackets} packets`)\n        this.emitProgress()\n        if (this._index >= packets.length) this.stop()\n    }\n\n    private emitProgress(force?: boolean) {\n        if (force || this.bus.timestamp - this._lastProgressEmit > 250) {\n            this.emit(PROGRESS, this.progress)\n            this._lastProgressEmit = this.bus.timestamp\n        }\n    }\n}\nexport default TracePlayer\n","import { arrayConcatMany, fromHex } from \"./utils\"\nimport JDBus from \"./bus\"\nimport Packet from \"./packet\"\nimport TracePlayer from \"./trace/traceplayer\"\nimport Frame from \"./frame\"\nimport Trace from \"./trace/trace\"\nimport { META_TRACE } from \"./constants\"\n\n/**\n * Parse a trace text file\n * @param contents\n * @returns\n * @category Trace\n */\nexport function parseTrace(contents: string): Trace {\n    const description: string[] = []\n    const packets: Packet[] = []\n    contents?.split(/\\r?\\n/).forEach(ln => {\n        // parse data\n        const m = /^(\\d+.?\\d*)\\s+([a-f0-9]{12,})/i.exec(ln)\n        if (!m) {\n            // might be a stack trace\n            if (/^\\s+at\\s/.test(ln)) {\n                const lastPacket = packets[packets.length - 1]\n                if (lastPacket) {\n                    let trace = (lastPacket.meta[META_TRACE] as string) || \"\"\n                    trace += ln + \"\\n\"\n                    lastPacket.meta[META_TRACE] = trace\n                }\n            } else {\n                // probably junk data\n                if (packets.length == 0) description.push(ln)\n            }\n            return\n        }\n\n        const timestamp = parseInt(m[1])\n        const data = fromHex(m[2])\n        // add to array\n        packets.push(Packet.fromBinary(data, timestamp))\n    })\n    if (packets.length)\n        return new Trace(packets, {\n            description: description.join(\"\\n\").trim(),\n        })\n    else return undefined\n}\n\n/**\n * Parses a logic analyzer log into a trace\n * @param logcontents\n * @returns\n * @category Trace\n */\nexport function parseLogicLog(logcontents: string): Frame[] {\n    if (!logcontents) return undefined\n\n    const res: Frame[] = []\n    let frameBytes = []\n    let lastTime = 0\n    for (const ln of logcontents.split(/\\r?\\n/)) {\n        let m = /^JD (\\d+) ([0-9a-f]+)/i.exec(ln)\n        if (m) {\n            res.push({\n                timestamp: parseInt(m[1]),\n                data: fromHex(m[2]),\n            })\n            continue\n        }\n\n        /** Windows, logic 1.*\nTime [s],Value,Parity Error,Framing Error\n0.042909760000000,0x00,,Error\n0.042980320000000,0xD4,,\n0.042990240000000,0x81,,\n0.043000160000000,0x10,,\n0.043010240000000,0x00,,\n0.043020160000000,0xE8,,\n0.043030240000000,0xDF,,\n0.043040160000000,0xCB,,\n0.043050240000000,0xD1,,\n0.043060160000000,0x97,,\n0.043070240000000,0x34,,\n0.043080160000000,0x37,,\n0.043090240000000,0x48,,\n0.043100160000000,0x0C,,\n0.043110080000000,0x00,,\n0.043120160000000,0x00,,\n0.043130080000000,0x00,,\n0.043140160000000,0x00,,\n0.043150080000000,0x00,,\n0.043160160000000,0x00,,\n0.043170080000000,0x00,,\n0.043180160000000,0xCA,,\n0.043190080000000,0x1F,,\n0.043200160000000,0xDC,,\n0.043210080000000,0x12,,\n0.043220160000000,0x46,,\n0.043230080000000,0x47,,\n0.043240160000000,0x27,,\n0.043250080000000,0x1F,,\n0.043264800000000,0x00,,Error\n0.063968960000000,0x00,,Error\n         */\n        m = /^([\\d.]+),(?:Async Serial,)?.*(0x[A-F0-9][A-F0-9])/.exec(ln)\n        if (!m) continue\n        const tm = parseFloat(m[1])\n        if (lastTime && tm - lastTime > 0.1) {\n            res.push({\n                timestamp: lastTime * 1000,\n                data: new Uint8Array(frameBytes),\n                info: \"timeout\",\n            })\n            frameBytes = []\n            lastTime = 0\n        }\n\n        lastTime = tm\n        if (/(framing error|Error)/.test(ln)) {\n            if (frameBytes.length > 0)\n                res.push({\n                    timestamp: lastTime * 1000,\n                    data: new Uint8Array(frameBytes),\n                })\n            frameBytes = []\n            lastTime = 0\n        } else {\n            frameBytes.push(parseInt(m[2]))\n        }\n    }\n\n    return res\n}\n\n/**\n * Replays a parsed logic log\n * @param bus\n * @param frames\n * @param speed\n * @category Trace\n */\nexport function replayLogicLog(\n    bus: JDBus,\n    frames: Frame[],\n    speed?: number\n): void {\n    const packets = arrayConcatMany(\n        frames.map(frame => Packet.fromFrame(frame.data, frame.timestamp))\n    )\n    const player = new TracePlayer(bus, speed)\n    player.trace = new Trace(packets)\n    bus.clear(packets[0].timestamp)\n    player.start()\n}\n","import * as U from \"./utils\"\nimport Packet from \"./packet\"\nimport JDDevice from \"./device\"\nimport { PACKET_REPORT, CMD_GET_REG, JD_SERVICE_INDEX_CTRL } from \"./constants\"\nimport { ControlReg } from \"../../jacdac-spec/dist/specconstants\"\n\n/**\n * @internal\n */\nexport async function packetSpeedTest(dev: JDDevice) {\n    const pingCmd = CMD_GET_REG | ControlReg.ProductIdentifier\n\n    dev.on(PACKET_REPORT, onPacket)\n    const t0 = Date.now()\n    let lastSend = Date.now()\n    let numpkt = 0\n    let timeouts = 0\n    let numrecv = 0\n    let done = false\n\n    await ask()\n    while (numpkt < 100) {\n        await U.delay(50)\n        const now = Date.now()\n        if (now - t0 > 3000) break\n        if (now - lastSend > 100) {\n            timeouts++\n            await ask()\n        }\n    }\n    done = true\n    await U.delay(250)\n    dev.off(PACKET_REPORT, onPacket)\n    const ms = Date.now() - t0\n\n    const pktsPerSecond = numpkt / (ms / 1000)\n    const dropRate = (100 * (numpkt - numrecv)) / numpkt\n\n    return {\n        msg: `${pktsPerSecond.toFixed(1)} pkts/s; ${dropRate.toFixed(\n            2\n        )}% dropped`,\n        pktsPerSecond,\n        dropRate,\n    }\n\n    async function ask() {\n        lastSend = Date.now()\n        numpkt++\n        await dev.sendCtrlCommand(pingCmd)\n    }\n\n    async function onPacket(p: Packet) {\n        if (\n            p.serviceIndex == JD_SERVICE_INDEX_CTRL &&\n            p.serviceCommand == pingCmd\n        ) {\n            numrecv++\n            if (!done) await ask()\n        }\n    }\n}\n","import { setNumber, sizeOfNumberFormat } from \"./buffer\"\nimport { CMD_SET_REG, JD_SERIAL_MAX_PAYLOAD_SIZE } from \"./constants\"\nimport { PackedValues } from \"./pack\"\nimport Packet from \"./packet\"\nimport {\n    clampToStorage,\n    isRegister,\n    numberFormatFromStorageType,\n    scaleFloatToInt,\n} from \"./spec\"\nimport { stringToUint8Array, toUTF8 } from \"./utils\"\n\n/**\n * @internal\n */\nexport function packArguments(info: jdspec.PacketInfo, args: PackedValues) {\n    let repeatIdx = -1\n    let numReps = 0\n    let argIdx = 0\n    let dst = 0\n\n    const buf = new Uint8Array(256)\n\n    for (let i = 0; i < info.fields.length; ++argIdx, ++i) {\n        if (argIdx >= args.length && numReps > 0) break\n        const arg0 = argIdx < args.length ? args[argIdx] : 0\n        const fld = info.fields[i]\n\n        if (repeatIdx == -1 && fld.startRepeats) repeatIdx = i\n\n        const arg1 =\n            fld.type == \"string0\" && typeof arg0 == \"string\"\n                ? arg0 + \"\\u0000\"\n                : arg0\n\n        const arg =\n            typeof arg1 == \"boolean\"\n                ? arg1\n                    ? 1\n                    : 0\n                : typeof arg1 == \"string\"\n                ? stringToUint8Array(toUTF8(arg1))\n                : arg1\n\n        if (typeof arg == \"number\") {\n            const intVal = scaleFloatToInt(arg, fld)\n            if (fld.storage == 0)\n                throw new Error(`expecting ${fld.type} got number`)\n\n            const fmt = numberFormatFromStorageType(fld.storage)\n            setNumber(buf, fmt, dst, clampToStorage(intVal, fld.storage))\n            dst += sizeOfNumberFormat(fmt)\n        } else {\n            let size = Math.abs(fld.storage)\n            if (typeof arg1 == \"string\") {\n                if (size == 0) size = arg.length\n                const argCut = arg.slice(0, size)\n                buf.set(argCut, dst)\n                dst += size\n            } else if (size == 0 || size == arg.length) {\n                buf.set(arg, dst)\n                dst += arg.length\n            } else {\n                throw new Error(\n                    `expecting ${Math.abs(fld.storage)} bytes; got ${\n                        arg.length\n                    }`\n                )\n            }\n        }\n\n        if (dst >= JD_SERIAL_MAX_PAYLOAD_SIZE)\n            throw new Error(\n                `jacdac packet length too large, ${dst} > ${JD_SERIAL_MAX_PAYLOAD_SIZE} bytes`\n            )\n\n        if (repeatIdx != -1 && i + 1 >= info.fields.length) {\n            i = repeatIdx - 1\n            numReps++\n        }\n    }\n\n    const cmd = isRegister(info)\n        ? info.identifier | CMD_SET_REG\n        : info.identifier\n    const pkt = Packet.from(cmd, buf.slice(0, dst))\n    if (info.kind != \"report\") pkt.isCommand = true\n    return pkt\n}\n","import {\n    ControlReg,\n    LoggerReg,\n    SRV_CONTROL,\n    SRV_LOGGER,\n} from \"../../jacdac-spec/dist/specconstants\"\nimport JDBus from \"./bus\"\nimport Packet from \"./packet\"\nimport { isInstanceOf, serviceSpecificationFromName } from \"./spec\"\n\n/**\n * @category Trace\n * @internal\n */\nexport type CompiledPacketFilter = (pkt: Packet) => boolean\n\n/**\n * @category Trace\n * @internal\n */\nexport interface PacketFilterProps {\n    announce?: boolean\n    repeatedAnnounce?: boolean\n    resetIn?: boolean\n    minPriority?: boolean\n    requiresAck?: boolean\n    log?: boolean\n    productIdentifiers?: number[]\n    flags?: string[]\n    regGet?: boolean\n    regSet?: boolean\n    devices?: Record<string, { from?: boolean; to?: boolean }>\n    selfDevice?: boolean\n    serviceClasses?: number[]\n    pkts?: string[]\n    before?: number\n    after?: number\n    grouping?: boolean\n    pipes?: boolean\n    port?: number\n    collapseAck?: boolean\n    collapsePipes?: boolean\n    collapseGets?: boolean\n    errors?: boolean\n}\n\n/**\n * @internal\n */\nexport interface PacketFilter {\n    source: string\n    props: PacketFilterProps\n    filter: CompiledPacketFilter\n}\n\n/**\n * Given a filter text, compiles packet filter\n * @param bus\n * @param text\n * @returns\n * @category Trace\n */\nexport function parsePacketFilter(bus: JDBus, text: string): PacketFilter {\n    if (!text) {\n        return {\n            source: text,\n            props: {\n                grouping: true,\n            },\n            filter: () => true,\n        }\n    }\n\n    const flags = new Set<string>()\n    const serviceClasses = new Set<number>()\n    const pkts = new Set<string>()\n    const productIdentifiers = new Set<number>()\n    let repeatedAnnounce: boolean = undefined\n    let announce: boolean = undefined\n    let resetIn: boolean = undefined\n    let minPriority: boolean = undefined\n    let regGet: boolean = undefined\n    let regSet: boolean = undefined\n    let requiresAck: boolean = undefined\n    let log: boolean = undefined\n    let before: number = undefined\n    let after: number = undefined\n    const devices: Record<string, { from: boolean; to: boolean }> = {}\n    let grouping = true\n    let pipes: boolean = undefined\n    let port: number = undefined\n    let collapseAck = true\n    let collapsePipes = true\n    let collapseGets = true\n    let errors: boolean = undefined\n    let selfDevice: boolean = undefined\n    text.split(/\\s+/g).forEach(part => {\n        const [, prefix, , value] =\n            /([a-z\\-_]+)([:=]([^\\s]+))?/.exec(part) || []\n        switch (prefix || \"\") {\n            case \"kind\":\n            case \"k\":\n                if (!value) break\n                flags.add(value.toLowerCase())\n                break\n            case \"service\":\n            case \"srv\": {\n                if (!value) break\n                const service = serviceSpecificationFromName(value)\n                const serviceClass =\n                    service?.classIdentifier || parseInt(value, 16)\n                if (serviceClass !== undefined && !isNaN(serviceClass))\n                    serviceClasses.add(serviceClass)\n                break\n            }\n            case \"announce\":\n            case \"a\":\n                announce = parseBoolean(value)\n                break\n            case \"repeated-announce\":\n            case \"ra\":\n                repeatedAnnounce = parseBoolean(value)\n                break\n            case \"self\":\n                selfDevice = parseBoolean(value)\n                break\n            case \"reset-in\":\n            case \"ri\":\n            case \"resetin\":\n                resetIn = parseBoolean(value)\n                break\n            case \"errors\":\n                errors = parseBoolean(value)\n                break\n            case \"min-priority\":\n            case \"minpri\":\n            case \"minpriority\":\n            case \"mi\":\n                minPriority = parseBoolean(value)\n                break\n            case \"requires-ack\":\n            case \"ack\":\n                requiresAck = parseBoolean(value)\n                break\n            case \"collapse-ack\":\n                collapseAck = parseBoolean(value)\n                break\n            case \"device\":\n            case \"dev\":\n            case \"to\":\n            case \"from\": {\n                if (!value) break\n                // resolve device by name\n                const deviceId = bus\n                    .devices()\n                    .find(\n                        d => d.shortId === value || d.name === value\n                    )?.deviceId\n                if (deviceId) {\n                    const data =\n                        devices[deviceId] ||\n                        (devices[deviceId] = { from: false, to: false })\n                    if (prefix === \"from\") data.from = true\n                    else if (prefix === \"to\") data.to = true\n                }\n                break\n            }\n            case \"pid\":\n            case \"product-identifier\": {\n                if (!value) return\n                // find register\n                const pid = parseInt(value.replace(/^0?x/, \"\"), 16)\n                if (!isNaN(pid)) productIdentifiers.add(pid)\n                break\n            }\n            case \"pkt\":\n            case \"reg\":\n            case \"register\":\n            case \"cmd\":\n            case \"command\":\n            case \"ev\":\n            case \"event\": {\n                if (!value) return\n                // find register\n                const id = parseInt(value.replace(/^0?x/, \"\"), 16)\n                if (!isNaN(id)) pkts.add(id.toString(16))\n                // support name\n                pkts.add(value)\n                break\n            }\n            case \"reg-get\":\n            case \"get\":\n                regGet = parseBoolean(value)\n                break\n            case \"reg-set\":\n            case \"set\":\n                regSet = parseBoolean(value)\n                break\n            case \"log\":\n                log = parseBoolean(value)\n                break\n            case \"before\":\n                before = parseTimestamp(value)\n                break\n            case \"after\":\n                after = parseTimestamp(value)\n                break\n            case \"grouping\":\n                grouping = parseBoolean(value)\n                break\n            case \"pipes\":\n                pipes = parseBoolean(value)\n                break\n            case \"collapse-pipe\":\n            case \"collapse-pipes\":\n                collapsePipes = parseBoolean(value)\n                break\n            case \"collapse-get\":\n            case \"collapse-gets\":\n                collapseGets = parseBoolean(value)\n                break\n            case \"port\":\n                port = parseInt(value)\n                break\n        }\n    })\n\n    const props = {\n        announce,\n        repeatedAnnounce,\n        resetIn,\n        minPriority,\n        requiresAck,\n        collapseAck,\n        log,\n        productIdentifiers:\n            !!productIdentifiers.size && Array.from(productIdentifiers.keys()),\n        flags: !!flags.size && Array.from(flags.keys()),\n        regGet,\n        regSet,\n        devices,\n        selfDevice,\n        serviceClasses:\n            !!serviceClasses.size && Array.from(serviceClasses.keys()),\n        pkts: !!pkts.size && Array.from(pkts.keys()),\n        before,\n        after,\n        grouping,\n        pipes,\n        collapsePipes,\n        collapseGets,\n        port,\n        errors,\n    }\n    const filter = compileFilter(props)\n    return {\n        source: text,\n        props,\n        filter,\n    }\n    function parseBoolean(value: string) {\n        if (value === \"false\" || value === \"no\") return false\n        else if (value === \"true\" || value === \"yes\" || !value) return true\n        else return undefined\n    }\n    function parseTimestamp(value: string) {\n        const t = parseInt(value)\n        return isNaN(t) ? undefined : t\n    }\n}\n\nfunction compileFilter(props: PacketFilterProps) {\n    const {\n        announce,\n        repeatedAnnounce,\n        resetIn,\n        minPriority,\n        requiresAck,\n        log,\n        productIdentifiers,\n        flags,\n        regGet,\n        regSet,\n        devices,\n        selfDevice,\n        serviceClasses,\n        pkts,\n        before,\n        after,\n        pipes,\n        port,\n        errors,\n    } = props\n\n    const filters: CompiledPacketFilter[] = []\n    if (before !== undefined) filters.push(pkt => pkt.timestamp <= before)\n    if (after !== undefined) filters.push(pkt => pkt.timestamp >= after)\n    if (announce !== undefined) filters.push(pkt => pkt.isAnnounce === announce)\n    if (repeatedAnnounce !== undefined)\n        filters.push(\n            pkt =>\n                (!pkt.isAnnounce || pkt.isRepeatedAnnounce) === repeatedAnnounce\n        )\n    if (resetIn !== undefined)\n        filters.push(\n            pkt =>\n                !!(\n                    pkt.isRegisterSet &&\n                    pkt.serviceClass === SRV_CONTROL &&\n                    pkt.registerIdentifier === ControlReg.ResetIn\n                ) === resetIn\n        )\n    if (minPriority !== undefined)\n        filters.push(\n            pkt =>\n                (pkt.isRegisterSet &&\n                    pkt.serviceClass == SRV_LOGGER &&\n                    pkt.registerIdentifier === LoggerReg.MinPriority) ===\n                minPriority\n        )\n    if (requiresAck !== undefined)\n        filters.push(pkt => pkt.requiresAck === requiresAck)\n    if (flags) filters.push(pkt => hasAnyFlag(pkt))\n    if (pipes !== undefined) filters.push(pkt => pkt.isPipe)\n    if (port !== undefined) filters.push(pkt => pkt.pipePort === port)\n\n    if (regGet !== undefined && regSet !== undefined)\n        filters.push(\n            pkt => pkt.isRegisterGet === regGet && pkt.isRegisterSet === regSet\n        )\n    else if (regGet !== undefined)\n        filters.push(pkt => pkt.isRegisterGet === regGet)\n    else if (regSet !== undefined)\n        filters.push(pkt => pkt.isRegisterSet === regSet)\n\n    if (log !== undefined)\n        filters.push(\n            pkt => (pkt.serviceClass === SRV_LOGGER && pkt.isReport) === log\n        )\n    if (selfDevice !== undefined) {\n        filters.push(pkt => {\n            const { device } = pkt\n            if (!device) return true\n            return (device === device.bus.selfDevice) === selfDevice\n        })\n    }\n    if (Object.keys(devices).length)\n        filters.push(pkt => {\n            if (!pkt.device) return false\n            const f = devices[pkt.device.deviceId]\n            return (\n                !!f && (!f.from || !pkt.isCommand) && (!f.to || pkt.isCommand)\n            )\n        })\n    if (serviceClasses) {\n        filters.push(pkt =>\n            serviceClasses.some(serviceClass =>\n                isInstanceOf(pkt.serviceClass, serviceClass)\n            )\n        )\n    }\n    if (pkts) {\n        filters.push(\n            pkt =>\n                pkts.indexOf(pkt.decoded?.info.identifier.toString(16)) > -1 ||\n                pkts.indexOf(pkt.decoded?.info.name) > -1\n        )\n    }\n    if (productIdentifiers)\n        filters.push(pkt => {\n            const fwid = pkt.device?.productIdentifier\n            return fwid === undefined || productIdentifiers.indexOf(fwid) > -1\n        })\n\n    if (errors !== undefined)\n        filters.push(pkt => !!pkt.decoded?.error === errors)\n\n    const filter: CompiledPacketFilter = (pkt: Packet) =>\n        filters.every(filter => filter(pkt))\n    return filter\n\n    function hasAnyFlag(pkt: Packet) {\n        const k = pkt.decoded?.info.kind\n        return !!k && flags.indexOf(k) > -1\n    }\n}\n","import JDBus from \"../bus\"\nimport JDClient from \"../client\"\nimport { CHANGE, PACKET_PROCESS, PACKET_SEND, START, STOP } from \"../constants\"\nimport Packet from \"../packet\"\nimport Trace from \"./trace\"\n\nconst RECORDING_TRACE_MAX_ITEMS = 100000\n\n/**\n * A recorder of packets to create traces.\n * @category Trace\n */\nexport class TraceRecorder extends JDClient {\n    public maxRecordingLength = RECORDING_TRACE_MAX_ITEMS\n    private _trace: Trace\n    private _subscription: () => void\n\n    constructor(public readonly bus: JDBus) {\n        super()\n        this.handlePacket = this.handlePacket.bind(this)\n\n        this.mount(() => this._subscription?.())\n    }\n\n    start() {\n        if (this.recording) return\n\n        this._subscription = this.bus.subscribe(\n            [PACKET_PROCESS, PACKET_SEND],\n            this.handlePacket\n        )\n        this._trace = new Trace([], { maxLength: this.maxRecordingLength })\n        this.emit(START)\n        this.emit(CHANGE)\n    }\n\n    stop() {\n        if (!this.recording) return\n\n        this._subscription?.()\n        this._subscription = undefined\n        const t = this._trace\n        this._trace = undefined\n        this.emit(STOP)\n        this.emit(CHANGE)\n\n        return t\n    }\n\n    get recording() {\n        return !!this._trace\n    }\n\n    get trace() {\n        return this._trace\n    }\n\n    private handlePacket(pkt: Packet) {\n        // record packets in traces\n        this._trace.addPacket(pkt)\n        // notify that this packet has been processed\n        this.emit(PACKET_PROCESS, pkt)\n    }\n}\nexport default TraceRecorder\n","import JDBus from \"../bus\"\nimport { JDClient } from \"../client\"\nimport {\n    CHANGE,\n    DEVICE_ANNOUNCE,\n    META_ACK,\n    META_GET,\n    META_PIPE,\n    PACKET_PROCESS,\n    PACKET_SEND,\n    TRACE_FILTER_HORIZON,\n} from \"../constants\"\nimport Packet from \"../packet\"\nimport { PacketFilter, parsePacketFilter } from \"../packetfilter\"\nimport Trace from \"./trace\"\nimport { throttle, toHex } from \"../utils\"\n\nconst TRACE_MAX_ITEMS = 1000\nconst FILTERED_TRACE_MAX_ITEMS = 100\nconst DUPLICATE_PACKET_MERGE_HORIZON_MAX_DISTANCE = 10\nconst DUPLICATE_PACKET_MERGE_HORIZON_MAX_TIME = 5000\n\n/**\n * A grouped packet\n * @category Trace\n */\nexport interface TracePacketProps {\n    /**\n     * Unique key used for React lists\n     */\n    key: string\n    /**\n     * Identifier to match packets together\n     */\n    hash: string\n    /**\n     * The packet\n     */\n    packet: Packet\n    count?: number\n}\n\n/**\n * A filtered view over a packet trace\n * @category Trace\n */\nexport class TraceView extends JDClient {\n    private id = \"v\" + Math.random()\n    private _maxFilteredLength = FILTERED_TRACE_MAX_ITEMS\n\n    private _paused = false\n    private _trace: Trace\n    private _filter: string\n    private _packetFilter: PacketFilter = undefined\n    private _filteredPackets: TracePacketProps[] = []\n\n    public silent = false\n    private notifyPacketsChanged: () => void\n\n    constructor(\n        public readonly bus: JDBus,\n        filter: string,\n        throttleDelay = 200\n    ) {\n        super()\n        this._trace = new Trace([], { maxLength: TRACE_MAX_ITEMS })\n        this.handlePacket = this.handlePacket.bind(this)\n        this.handleFilterUpdate = this.handleFilterUpdate.bind(this)\n\n        this.notifyPacketsChanged = throttle(() => {\n            if (!this.silent)\n                this.setFilteredPackets()\n        }, throttleDelay)\n\n        this.mount(\n            this.bus.subscribe([PACKET_PROCESS, PACKET_SEND], this.handlePacket)\n        )\n        this.mount(this.bus.subscribe(DEVICE_ANNOUNCE, this.handleFilterUpdate))\n\n        this.filter = filter\n    }\n\n    /**\n     * No new packet is added to the filtered view\n     */\n    get paused() {\n        return this._paused\n    }\n\n    set paused(v: boolean) {\n        if (v !== this._paused) {\n            this._paused = v\n            if (!this._paused) {\n                this.refreshFilter()\n                this.emit(CHANGE)\n            }\n        }\n    }\n\n    get trace() {\n        return this._trace\n    }\n\n    set trace(t: Trace) {\n        if (t !== this._trace) {\n            this._trace = t\n            this.refreshFilter()\n            this.emit(CHANGE)\n        }\n    }\n\n    get filteredPackets() {\n        return this._filteredPackets\n    }\n\n    get filter() {\n        return this._filter\n    }\n\n    set filter(f: string) {\n        if (f !== this._filter) {\n            this._filter = f\n            this.refreshFilter()\n            this.emit(CHANGE)\n        }\n    }\n\n    get maxFilteredLength() {\n        return this._maxFilteredLength\n    }\n\n    set maxFilteredLength(v: number) {\n        if (this._maxFilteredLength !== v) {\n            this._maxFilteredLength = v\n            this.refreshFilter()\n            this.emit(CHANGE)\n        }\n    }\n\n    private setFilteredPackets() {\n        // always clone for React\n        this._filteredPackets = this._filteredPackets.slice(\n            0,\n            this._filteredPackets.length > this.maxFilteredLength * 1.1\n                ? this.maxFilteredLength\n                : this._filteredPackets.length\n        )\n        this.emit(CHANGE)\n    }\n\n    clear() {\n        this.trace = new Trace([], { maxLength: TRACE_MAX_ITEMS })\n        this._filteredPackets = []\n        this.setFilteredPackets()\n        this.emit(CHANGE)\n    }\n\n    private handleFilterUpdate() {\n        this.refreshFilter()\n    }\n\n    private refreshFilter() {\n        this.id = \"view\" + Math.random()\n        this._packetFilter = parsePacketFilter(this.bus, this._filter)\n        this._filteredPackets = []\n        const packets = this.trace.packets\n        // reapply filter to existing trace\n        for (\n            let i = packets.length - 1;\n            i >= 0 && this._filteredPackets.length < this.maxFilteredLength;\n            --i\n        ) {\n            const pkt = packets[i]\n            if (this._packetFilter?.filter(pkt)) {\n                this.addFilteredPacket(pkt)\n            }\n        }\n        this._filteredPackets = this._filteredPackets.reverse()\n        this.notifyPacketsChanged?.()\n    }\n\n    private handlePacket(pkt: Packet) {\n        if (this._paused) return\n\n        // remember packet\n        this.trace.addPacket(pkt)\n\n        // add packet to live list\n        if (this._packetFilter?.filter(pkt)) {\n            this.addFilteredPacket(pkt)\n            // debounced notification of changes\n            this.notifyPacketsChanged?.()\n        }\n    }\n\n    private addFilteredPacket(packet: Packet) {\n        if (packet.meta[this.id]) return\n        packet.meta[this.id] = true\n\n        // resolve packet device for pretty name\n        if (!packet.isMultiCommand && !packet.device)\n            packet.device = this.bus.device(\n                packet.deviceIdentifier,\n                false,\n                packet\n            )\n\n        // keep in filtered view\n        let filtered = true\n        const hash = toHex(packet.toBuffer())\n        if (this._packetFilter?.props.grouping) {\n            const old = this._filteredPackets\n                .slice(0, DUPLICATE_PACKET_MERGE_HORIZON_MAX_DISTANCE)\n                .find(\n                    p =>\n                        packet.timestamp - p.packet.timestamp <\n                            DUPLICATE_PACKET_MERGE_HORIZON_MAX_TIME &&\n                        p.hash === hash\n                )\n            if (old) {\n                old.count++\n                filtered = false\n            }\n        }\n\n        // collapse acks\n        if (packet.isCRCAck) {\n            const pkts = this.trace.packets\n            const crc = packet.serviceCommand\n            const did = packet.deviceIdentifier\n            const m = Math.max(0, pkts.length - TRACE_FILTER_HORIZON) // max scan 100 packets back\n            for (let i = pkts.length - 1; i >= m; i--) {\n                const old = pkts[i]\n                if (\n                    old.requiresAck &&\n                    old.deviceIdentifier === did &&\n                    old.crc === crc\n                ) {\n                    old.meta[META_ACK] = packet\n                    if (this._packetFilter?.props.collapseAck) filtered = false\n                    break\n                }\n            }\n        }\n        // report coming back\n        if (packet.isRegisterGet && packet.isReport && !packet.meta[META_GET]) {\n            const pkts = this.trace.packets\n            const did = packet.deviceIdentifier\n            const si = packet.serviceIndex\n            const rid = packet.registerIdentifier\n            const m = Math.max(0, pkts.length - TRACE_FILTER_HORIZON) // max scan 100 packets back\n            for (let i = pkts.length - 1; i >= m; i--) {\n                const old = pkts[i]\n                if (\n                    old.isRegisterGet &&\n                    old.isCommand &&\n                    old.deviceIdentifier === did &&\n                    old.serviceIndex === si &&\n                    old.registerIdentifier === rid\n                ) {\n                    // response from a get command\n                    packet.meta[META_GET] = old\n                    if (this._packetFilter?.props.collapseGets) {\n                        // remove old\n                        this._filteredPackets.splice(i, 1)\n                        // keep new\n                    }\n                    break\n                }\n            }\n        }\n        // collapse pipes\n        if (\n            this._packetFilter?.props.collapsePipes &&\n            packet.isPipe &&\n            packet.isCommand\n        ) {\n            const pkts = this._filteredPackets\n            const m = Math.min(pkts.length, TRACE_FILTER_HORIZON) // max scan 100 packets back\n            const port = packet.pipePort\n            const did = packet.deviceIdentifier\n            for (let i = 0; i < m; ++i) {\n                const old = pkts[i].packet\n                if (old.deviceIdentifier === did && old.pipePort === port) {\n                    let pipePackets = old.meta[META_PIPE] as Packet[]\n                    if (!pipePackets) pipePackets = old.meta[META_PIPE] = []\n                    pipePackets[packet.pipeCount] = packet\n                    filtered = false\n                    break\n                }\n            }\n        }\n\n        if (filtered) {\n            const key = packet.timestamp + hash\n            this._filteredPackets.unshift({\n                key,\n                hash,\n                packet,\n                count: 1,\n            })\n        }\n    }\n}\nexport default TraceView\n","import {\n    LIGHT_PROG_COL1_SET,\n    LIGHT_PROG_FADE,\n    LIGHT_PROG_FADE_HSV,\n    LIGHT_PROG_MODE,\n    LIGHT_PROG_MODE1,\n    LIGHT_PROG_RANGE,\n    LIGHT_PROG_ROTATE_BACK,\n    LIGHT_PROG_ROTATE_FWD,\n    LIGHT_PROG_SET_ALL,\n    LIGHT_PROG_SHOW,\n} from \"./lightconstants\"\nimport { fromHex } from \"./utils\"\n\nfunction cmdCode(cmd: string) {\n    switch (cmd) {\n        case \"setall\":\n            return LIGHT_PROG_SET_ALL\n        case \"fade\":\n            return LIGHT_PROG_FADE\n        case \"fadehsv\":\n            return LIGHT_PROG_FADE_HSV\n        case \"rotfwd\":\n            return LIGHT_PROG_ROTATE_FWD\n        case \"rotback\":\n            return LIGHT_PROG_ROTATE_BACK\n        case \"show\":\n        case \"wait\":\n            return LIGHT_PROG_SHOW\n        case \"range\":\n            return LIGHT_PROG_RANGE\n        case \"mode\":\n            return LIGHT_PROG_MODE\n        case \"tmpmode\":\n            return LIGHT_PROG_MODE1\n        case \"setone\":\n            return LIGHT_PROG_COL1_SET\n        case \"mult\":\n            return 0x100\n        default:\n            return undefined\n    }\n}\n\nfunction isWhiteSpace(code: number) {\n    return code == 32 || code == 13 || code == 10 || code == 9\n}\n\n/**\n * Encodes a light command into a buffer\n * @param format\n * @param args\n * @returns\n * @category Data Packing\n */\nexport function lightEncode(format: string, args: (number | number[])[]) {\n    // tokens are white-space separated\n    // % - number from args[]\n    // # - color from args[]\n    // #0123ff - color\n    // 123 - number\n    // commands: set, fade, fadehsv, rotfwd, rotback, pause\n    // fadehsv 0 12 #00ffff #ffffff\n\n    const outarr: number[] = []\n    let colors: number[] = []\n    let pos = 0\n    let currcmd = 0\n\n    function pushNumber(n: number) {\n        if (n == null || (n | 0) != n || n < 0 || n >= 16383)\n            throw new Error(\"number out of range: \" + n)\n        if (n < 128) outarr.push(n)\n        else {\n            outarr.push(0x80 | (n >> 8))\n            outarr.push(n & 0xff)\n        }\n    }\n\n    function flush() {\n        if (currcmd == 0xcf) {\n            if (colors.length != 1) throw new Error(\"setone requires 1 color\")\n        } else {\n            if (colors.length == 0) return\n            if (colors.length <= 3) outarr.push(0xc0 | colors.length)\n            else {\n                outarr.push(0xc0)\n                outarr.push(colors.length)\n            }\n        }\n        for (const c of colors) {\n            outarr.push((c >> 16) & 0xff)\n            outarr.push((c >> 8) & 0xff)\n            outarr.push((c >> 0) & 0xff)\n        }\n        colors = []\n    }\n\n    function nextToken() {\n        while (isWhiteSpace(format.charCodeAt(pos))) pos++\n        const beg = pos\n        while (pos < format.length && !isWhiteSpace(format.charCodeAt(pos)))\n            pos++\n        return format.slice(beg, pos)\n    }\n\n    while (pos < format.length) {\n        const token = nextToken()\n        const t0 = token.charCodeAt(0)\n        if (97 <= t0 && t0 <= 122) {\n            // a-z\n            flush()\n            currcmd = cmdCode(token)\n            if (currcmd == undefined)\n                throw new Error(\"unknown light command: \" + token)\n            if (currcmd == 0x100) {\n                const f = parseFloat(nextToken())\n                if (isNaN(f) || f < 0 || f > 2)\n                    throw new Error(\"expecting scale\")\n                outarr.push(0xd8) // tmpmode\n                outarr.push(3) // mult\n                outarr.push(0xd0) // setall\n                const mm = Math.round(128 * f) & 0xff\n                outarr.push(0xc1)\n                outarr.push(mm)\n                outarr.push(mm)\n                outarr.push(mm)\n            } else {\n                outarr.push(currcmd)\n            }\n        } else if (48 <= t0 && t0 <= 57) {\n            // 0-9\n            pushNumber(parseInt(token))\n        } else if (t0 == 37) {\n            // %\n            if (args.length == 0) throw new Error(\"out of args, %\")\n            const v = args.shift()\n            if (typeof v != \"number\") throw new Error(\"expecting number\")\n            pushNumber(v)\n        } else if (t0 == 35) {\n            // #\n            if (token.length == 1) {\n                if (args.length == 0) throw new Error(\"out of args, #\")\n                const v = args.shift()\n                if (typeof v === \"number\") colors.push(v)\n                else if (Array.isArray(v)) for (const vv of v) colors.push(vv)\n                else throw Error(\"invalid number \" + v)\n            } else {\n                if (token.length == 7) {\n                    const b = fromHex(token.slice(1))\n                    const c = (b[0] << 16) | (b[1] << 8) | b[2]\n                    colors.push(c)\n                } else {\n                    throw new Error(\"invalid color: \" + token)\n                }\n            }\n        }\n    }\n    flush()\n\n    return new Uint8Array(outarr)\n}\n","/**\n * @internal\n */\nexport function hsvToCss(\n    hue: number,\n    saturation: number,\n    value: number,\n    brightness: number,\n    monochrome?: boolean\n) {\n    const csshue = (hue * 360) / 0xff\n    const csssat = (monochrome ? 0xff : saturation) / 0xff\n    const cssval = value / 0xff\n    const [h, s, l] = hsv_to_hsl(csshue, csssat, cssval)\n    const mixl = 0.3\n    const alpha = (mixl + (1 - mixl) * l) * brightness\n\n    return `hsla(${h}, ${s * 100}%, ${l * 100}%, ${alpha}`\n}\n\nfunction hsv_to_hsl(h: number, s: number, v: number) {\n    // both hsv and hsl values are in [0, 1]\n    const l = ((2 - s) * v) / 2\n\n    if (l != 0) {\n        if (l == 1) {\n            s = 0\n        } else if (l < 0.5) {\n            s = (s * v) / (l * 2)\n        } else {\n            s = (s * v) / (2 - l * 2)\n        }\n    }\n\n    return [h, s, l]\n}\n","import JDBus from \"./bus\"\nimport { JDClient } from \"./client\"\nimport { CHANGE, PACKET_PROCESS, PACKET_SEND } from \"./constants\"\nimport Packet from \"./packet\"\nimport { randomDeviceId } from \"./random\"\n\n/**\n * A client that bridges received and sent packets to a parent iframe.\n * @category JDOM\n */\nexport abstract class JDBridge extends JDClient {\n    private _bus: JDBus\n    readonly bridgeId = `bridge-` + randomDeviceId()\n    packetSent = 0\n    packetProcessed = 0\n\n    constructor() {\n        super()\n        this.handleSendPacket = this.handleSendPacket.bind(this)\n    }\n\n    get bus() {\n        return this._bus\n    }\n\n    set bus(newBus: JDBus) {\n        if (newBus !== this._bus) {\n            if (this._bus) this.unmount()\n            this._bus = newBus\n            if (this._bus) {\n                this.mount(\n                    this._bus.subscribe(PACKET_PROCESS, this.handleSendPacket)\n                )\n                this.mount(\n                    this._bus.subscribe(PACKET_SEND, this.handleSendPacket)\n                )\n                this.mount(this._bus.addBridge(this))\n            }\n            this.emit(CHANGE)\n        }\n    }\n\n    /**\n     * Receives frame data payload and injects it into the bus\n     * @param data\n     * @returns\n     */\n    protected receiveFrame(data: Uint8Array) {\n        if (!this._bus) return // disconnected\n\n        // try frame format (sent by hardware, hosts)\n        const pkts = Packet.fromFrame(data, this.bus.timestamp)\n        this.dispatchPackets(pkts)\n    }\n\n    /**\n     * Receives packet data payload and injects it into the bus\n     * @param data\n     * @returns\n     */\n    protected receivePacket(data: Uint8Array) {\n        if (!this._bus) return // disconnected\n\n        // try as a single packet (send by the MakeCode simulator)\n        const pkt = Packet.fromBinary(data, this.bus.timestamp)\n        if (pkt) this.dispatchPackets([pkt])\n    }\n\n    private dispatchPackets(pkts: Packet[]) {\n        // bail out if no packets\n        if (!pkts?.length) return\n\n        this.packetProcessed += pkts.length\n\n        for (const pkt of pkts) {\n            // tracing the source of packets to avoid self-resending\n            pkt.sender = this.bridgeId\n            // send to native bus\n            this.bus.sendPacketAsync(pkt)\n            // send to javascript bus\n            this.bus.processPacket(pkt)\n        }\n    }\n\n    private handleSendPacket(pkt: Packet) {\n        if (!this._bus || pkt.sender === this.bridgeId) return\n        this.packetSent++\n        this.sendPacket(pkt.toBuffer())\n    }\n\n    /**\n     * Sends packet data over the bridge\n     * @param pkt\n     */\n    protected abstract sendPacket(data: Uint8Array): void\n}\nexport default JDBridge\n","import { CHANGE, SettingsCmd } from \"../constants\"\nimport { jdpack, jdunpack } from \"../pack\"\nimport Packet from \"../packet\"\nimport { InPipeReader } from \"../pipes\"\nimport JDService from \"../service\"\nimport { JDServiceClient } from \"../serviceclient\"\nimport { bufferToString, stringToBuffer } from \"../utils\"\n\n/**\n * A settings service client implementation.\n * @category Clients\n */\nexport class SettingsClient extends JDServiceClient {\n    constructor(service: JDService) {\n        super(service)\n        service.registersUseAcks = true\n    }\n\n    async clear() {\n        await this.service.sendCmdAsync(SettingsCmd.Clear)\n    }\n\n    async listKeys(): Promise<string[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(\n            inp.openCommand(SettingsCmd.ListKeys),\n            true\n        )\n        const { output } = await inp.readAll()\n        const keys = output.map(pkt => pkt.stringData)\n        return keys.filter(k => !!k)\n    }\n\n    async list(): Promise<{ key: string; value?: Uint8Array }[]> {\n        const inp = new InPipeReader(this.bus)\n        await this.service.sendPacketAsync(\n            inp.openCommand(SettingsCmd.List),\n            true\n        )\n        const { output } = await inp.readAll()\n        return output\n            .map(pkt => {\n                const [key, value] = pkt.jdunpack<[string, Uint8Array]>(\"z b\")\n                return key && { key, value }\n            })\n            .filter(kv => !!kv)\n    }\n\n    async setValue(key: string, value: Uint8Array) {\n        key = key.trim()\n        if (value === undefined) {\n            await this.deleteValue(key)\n        } else {\n            const pkt = Packet.from(\n                SettingsCmd.Set,\n                jdpack(\"z b\", [key, value])\n            )\n            await this.service.sendPacketAsync(pkt)\n            this.emit(CHANGE)\n        }\n    }\n\n    async setStringValue(key: string, value: string) {\n        await this.setValue(key, value ? stringToBuffer(value) : undefined)\n    }\n\n    async getValue(key: string): Promise<Uint8Array> {\n        if (!key) return undefined\n\n        key = key.trim()\n        const pkt = Packet.from(SettingsCmd.Get, jdpack(\"s\", [key]))\n        const resp = await this.service.sendCmdAwaitResponseAsync(pkt)\n        const [rkey, value] = jdunpack<[string, Uint8Array]>(resp.data, \"z b\")\n        if (key !== rkey) {\n            console.error(\n                `device returned different key, got \"${rkey}\", expected \"${key}\"`\n            )\n            return undefined\n        }\n        return value\n    }\n\n    async getStringValue(key: string) {\n        const value = await this.getValue(key)\n        return value && bufferToString(value)\n    }\n\n    async deleteValue(key: string) {\n        if (!key) return\n        key = key.trim()\n        const pkt = Packet.from(SettingsCmd.Delete, jdpack(\"s\", [key]))\n        await this.service.sendPacketAsync(pkt)\n\n        this.emit(CHANGE)\n    }\n}\nexport default SettingsClient\n","import Packet from \"../packet\"\nimport Flags from \"../flags\"\nimport { bufferConcat } from \"../utils\"\nimport {\n    BLUETOOTH_JACDAC_TX_CHARACTERISTIC,\n    BLUETOOTH_JACDAC_RX_CHARACTERISTIC,\n    BLUETOOTH_JACDAC_SERVICE,\n    BLUETOOTH_TRANSPORT,\n} from \"../constants\"\nimport Transport from \"./transport\"\n\nconst JD_BLE_FIRST_CHUNK_FLAG = 0x80\n\n/**\n * Indicates with Web Bluetooth transport are enabled\n * @category Transport\n */\nexport function isWebBluetoothEnabled(): boolean {\n    return !!Flags.webBluetooth\n}\n\n/**\n * Indicates with Web Bluetooth is supported in this environment\n * @category Transport\n */\nexport function isWebBluetoothSupported(): boolean {\n    try {\n        return (\n            typeof navigator !== \"undefined\" &&\n            !!navigator.bluetooth &&\n            !!navigator.bluetooth.requestDevice\n        )\n    } catch (e) {\n        return false\n    }\n}\n\nfunction bleRequestDevice(\n    options?: RequestDeviceOptions\n): Promise<BluetoothDevice> {\n    // disabled\n    if (!Flags.webBluetooth) return Promise.resolve(undefined)\n\n    try {\n        console.debug(`bluetooth request`, { options })\n        return navigator?.bluetooth?.requestDevice?.(options)\n    } catch (e) {\n        if (Flags.diagnostics) console.warn(e)\n        return undefined\n    }\n}\n\nfunction bleGetDevices(): Promise<BluetoothDevice[]> {\n    // disabled\n    if (!Flags.webBluetooth) return Promise.resolve([])\n\n    try {\n        return navigator?.bluetooth?.getDevices() || Promise.resolve([])\n    } catch (e) {\n        if (Flags.diagnostics) console.warn(e)\n        return Promise.resolve([])\n    }\n}\n\nclass BluetoothTransport extends Transport {\n    private _device: BluetoothDevice\n    private _server: BluetoothRemoteGATTServer\n    private _service: BluetoothRemoteGATTService\n    private _rxCharacteristic: BluetoothRemoteGATTCharacteristic\n    private _txCharacteristic: BluetoothRemoteGATTCharacteristic\n    private _rxBuffer: Uint8Array\n    private _rxChunkCounter: number\n\n    constructor() {\n        super(BLUETOOTH_TRANSPORT, { checkPulse: true })\n\n        this.handleDisconnected = this.handleDisconnected.bind(this)\n        this.handleCharacteristicChanged =\n            this.handleCharacteristicChanged.bind(this)\n    }\n\n    protected async transportConnectAsync(background: boolean) {\n        // get a device\n        if (background) {\n            const devices = await bleGetDevices()\n            this._device = devices?.[0]\n        } else {\n            const device = await bleRequestDevice({\n                filters: [{ namePrefix: \"BBC micro:bit\" }],\n                optionalServices: [BLUETOOTH_JACDAC_SERVICE],\n            })\n            this._device = device\n        }\n\n        if (!this._device?.gatt) throw new Error(\"Device not found\")\n\n        // listen for disconnection\n        this._device.addEventListener(\n            \"gattserverdisconnected\",\n            this.handleDisconnected,\n            false\n        )\n\n        // connect to gatt\n        this._server = await this._device.gatt.connect()\n        // connect to service\n        this._service = await this._server.getPrimaryService(\n            BLUETOOTH_JACDAC_SERVICE\n        )\n        // connect to characteristic\n        this._rxCharacteristic = await this._service.getCharacteristic(\n            BLUETOOTH_JACDAC_RX_CHARACTERISTIC\n        )\n\n        this._txCharacteristic = await this._service.getCharacteristic(\n            BLUETOOTH_JACDAC_TX_CHARACTERISTIC\n        )\n        // listen for incoming packet\n        this._rxCharacteristic.addEventListener(\n            \"characteristicvaluechanged\",\n            this.handleCharacteristicChanged,\n            false\n        )\n        // start listening\n        await this._rxCharacteristic.startNotifications()\n    }\n\n    protected async transportSendPacketAsync(p: Packet) {\n        if (!this._txCharacteristic) {\n            console.debug(`trying to send Bluetooth packet while disconnected`)\n            return\n        }\n\n        const data = p.toBuffer()\n        const length = data.length\n\n        const totalChunks = Math.ceil(data.length / 18)\n        let remainingChunks = totalChunks == 0 ? 0 : totalChunks - 1\n        let sent = 0\n        while (sent < length) {\n            const n = Math.min(18, length - sent)\n            const chunk = data.slice(sent, sent + n)\n            const header = new Uint8Array(2)\n            header[0] = totalChunks & 0x7f\n\n            if (sent == 0) header[0] |= JD_BLE_FIRST_CHUNK_FLAG\n\n            header[1] = remainingChunks\n            this._txCharacteristic.writeValueWithoutResponse(\n                bufferConcat(header, chunk)\n            )\n            sent += n\n            remainingChunks = remainingChunks == 0 ? 0 : remainingChunks - 1\n            console.log(\n                `chunk: ${chunk.toString()} [${remainingChunks} chunks remaining]`\n            )\n        }\n    }\n\n    protected async transportDisconnectAsync() {\n        if (!this._device) return\n\n        console.debug(`ble: disconnecting`)\n        try {\n            this._rxCharacteristic?.removeEventListener(\n                \"characteristicvaluechanged\",\n                this.handleCharacteristicChanged\n            )\n            this._device?.removeEventListener(\n                \"gattserverdisconnected\",\n                this.handleDisconnected\n            )\n            this._server.disconnect()\n        } finally {\n            this._rxCharacteristic = undefined\n            this._txCharacteristic = undefined\n            this._service = undefined\n            this._server = undefined\n            this._device = undefined\n            this._rxBuffer = undefined\n        }\n    }\n\n    private handleDisconnected() {\n        // start disconnecting\n        this.disconnect()\n    }\n\n    private handleCharacteristicChanged() {\n        const data = new Uint8Array(this._rxCharacteristic.value.buffer)\n        const packetData = data.slice(2)\n        console.log(`received length ${data.length}`)\n\n        if (data[0] & JD_BLE_FIRST_CHUNK_FLAG) {\n            if (this._rxBuffer)\n                console.error(\n                    `Dropped buffer. Chunks remaining: ${this._rxChunkCounter}`\n                )\n            this._rxBuffer = new Uint8Array()\n            this._rxChunkCounter = data[0] & 0x7f\n            console.log(`Initial chunk counter: ${this._rxChunkCounter}`)\n        }\n\n        this._rxChunkCounter =\n            this._rxChunkCounter == 0 ? 0 : this._rxChunkCounter - 1\n        console.log(`after modification chunk counter: ${this._rxChunkCounter}`)\n\n        if (data[1] !== this._rxChunkCounter)\n            console.error(\n                `Data out of order. Expected chunk: ${this._rxChunkCounter} Got chunk: ${data[1]}`\n            )\n        else this._rxBuffer = bufferConcat(this._rxBuffer, packetData)\n\n        if (this._rxChunkCounter == 0) {\n            const pkt = Packet.fromBinary(this._rxBuffer, this.bus.timestamp)\n            console.log(`processed packet ${pkt}`)\n            pkt.sender = BLUETOOTH_TRANSPORT\n            this.bus.processPacket(pkt)\n            this._rxBuffer = undefined\n            this._rxChunkCounter = 0\n        }\n    }\n}\n\n/**\n * Creates a transport that uses Web Bluetooth\n * @category Transport\n */\nexport function createBluetoothTransport(): Transport {\n    return isWebBluetoothSupported() && new BluetoothTransport()\n}\n","import Proto from \"./proto\"\nimport {\n    throwError,\n    assert,\n    PromiseBuffer,\n    PromiseQueue,\n    memcpy,\n    write32,\n    write16,\n    read16,\n    encodeU32LE,\n    read32,\n    bufferToString,\n} from \"../utils\"\n\n// see https://github.com/microsoft/uf2/blob/main/hf2.md for full spec\nexport const HF2_DEVICE_MAJOR = 42\nexport const HF2_CMD_BININFO = 0x0001 // no arguments\nexport const HF2_MODE_BOOTLOADER = 0x01\nexport const HF2_MODE_USERSPACE = 0x02\n/*\nstruct HF2_BININFO_Result {\n    uint32_t mode;\n    uint32_t flash_page_size;\n    uint32_t flash_num_pages;\n    uint32_t max_message_size;\n};\n*/\n\nexport const HF2_CMD_INFO = 0x0002\n// no arguments\n// results is utf8 character array\n\nexport const HF2_CMD_RESET_INTO_APP = 0x0003 // no arguments, no result\n\nexport const HF2_CMD_RESET_INTO_BOOTLOADER = 0x0004 // no arguments, no result\n\nexport const HF2_CMD_START_FLASH = 0x0005 // no arguments, no result\n\nexport const HF2_CMD_WRITE_FLASH_PAGE = 0x0006\n/*\nstruct HF2_WRITE_FLASH_PAGE_Command {\n    uint32_t target_addr;\n    uint32_t data[flash_page_size];\n};\n*/\n// no result\n\nexport const HF2_CMD_CHKSUM_PAGES = 0x0007\n/*\nstruct HF2_CHKSUM_PAGES_Command {\n    uint32_t target_addr;\n    uint32_t num_pages;\n};\nstruct HF2_CHKSUM_PAGES_Result {\n    uint16_t chksums[num_pages];\n};\n*/\n\nexport const HF2_CMD_READ_WORDS = 0x0008\n/*\nstruct HF2_READ_WORDS_Command {\n    uint32_t target_addr;\n    uint32_t num_words;\n};\nstruct HF2_READ_WORDS_Result {\n    uint32_t words[num_words];\n};\n*/\n\nexport const HF2_CMD_WRITE_WORDS = 0x0009\n/*\nstruct HF2_WRITE_WORDS_Command {\n    uint32_t target_addr;\n    uint32_t num_words;\n    uint32_t words[num_words];\n};\n*/\n// no result\n\nexport const HF2_CMD_DMESG = 0x0010\n// no arguments\n// results is utf8 character array\n\nexport const HF2_FLAG_SERIAL_OUT = 0x80\nexport const HF2_FLAG_SERIAL_ERR = 0xc0\nexport const HF2_FLAG_CMDPKT_LAST = 0x40\nexport const HF2_FLAG_CMDPKT_BODY = 0x00\nexport const HF2_FLAG_MASK = 0xc0\nexport const HF2_SIZE_MASK = 63\n\nexport const HF2_STATUS_OK = 0x00\nexport const HF2_STATUS_INVALID_CMD = 0x01\nexport const HF2_STATUS_EXEC_ERR = 0x02\nexport const HF2_STATUS_EVENT = 0x80\n\n// the eventId is overlayed on the tag+status; the mask corresponds\n// to the HF2_STATUS_EVENT above\nexport const HF2_EV_MASK = 0x800000\n\nexport const HF2_CMD_JDS_CONFIG = 0x0020\nexport const HF2_CMD_JDS_SEND = 0x0021\nexport const HF2_EV_JDS_PACKET = 0x800020\n\nexport interface HF2_IO {\n    onData: (v: Uint8Array) => void\n    onError: (e: Error) => void\n    connectAsync(background: boolean): Promise<Proto>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    log(msg: string, v?: any): void\n    disconnectAsync(): Promise<void>\n    error(msg: string, code?: string): void\n    sendPacketAsync(pkt: Uint8Array): Promise<void>\n}\n\nexport class HF2Proto implements Proto {\n    eventHandlers: Record<string, (buf: Uint8Array) => void> = {}\n    msgs = new PromiseBuffer<Uint8Array>()\n    cmdSeq = (Math.random() * 0xffff) | 0\n    private lock = new PromiseQueue()\n\n    constructor(private io: HF2_IO) {\n        let frames: Uint8Array[] = []\n\n        io.onData = buf => {\n            const tp = buf[0] & HF2_FLAG_MASK\n            const len = buf[0] & 63\n            //console.log(`msg tp=${tp} len=${len}`)\n            const frame = new Uint8Array(len)\n            memcpy(frame, 0, buf, 1, len)\n            if (tp & HF2_FLAG_SERIAL_OUT) {\n                this.onSerial(frame, tp == HF2_FLAG_SERIAL_ERR)\n                return\n            }\n            frames.push(frame)\n            if (tp == HF2_FLAG_CMDPKT_BODY) {\n                return\n            } else {\n                assert(tp == HF2_FLAG_CMDPKT_LAST)\n                let total = 0\n                for (const f of frames) total += f.length\n                const r = new Uint8Array(total)\n                let ptr = 0\n                for (const f of frames) {\n                    memcpy(r, ptr, f)\n                    ptr += f.length\n                }\n                frames = []\n                if (r[2] & HF2_STATUS_EVENT) {\n                    // asynchronous event\n                    this.handleEvent(r)\n                } else {\n                    this.msgs.push(r)\n                }\n            }\n        }\n    }\n\n    error(m: string) {\n        return this.io?.error(m)\n    }\n\n    talkAsync(cmd: number, data?: Uint8Array) {\n        if (!this.io) console.error(\"rogue hf2 instance\")\n\n        let len = 8\n        if (data) len += data.length\n        const pkt = new Uint8Array(len)\n        const seq = ++this.cmdSeq & 0xffff\n        write32(pkt, 0, cmd)\n        write16(pkt, 4, seq)\n        write16(pkt, 6, 0)\n        if (data) memcpy(pkt, 8, data, 0, data.length)\n        let numSkipped = 0\n        const handleReturnAsync = (): Promise<Uint8Array> =>\n            this.msgs\n                .shiftAsync(1000) // we wait up to a second\n                .then(res => {\n                    if (read16(res, 0) != seq) {\n                        if (numSkipped < 3) {\n                            numSkipped++\n                            this.io.log(\n                                `message out of sync, (${seq} vs ${read16(\n                                    res,\n                                    0\n                                )}); will re-try`\n                            )\n                            return handleReturnAsync()\n                        }\n                        this.error(\"out of sync\")\n                    }\n                    let info = \"\"\n                    if (res[3]) info = \"; info=\" + res[3]\n                    switch (res[2]) {\n                        case HF2_STATUS_OK:\n                            return res.slice(4)\n                        case HF2_STATUS_INVALID_CMD:\n                            this.error(\"invalid command\" + info)\n                            break\n                        case HF2_STATUS_EXEC_ERR:\n                            this.error(\"execution error\" + info)\n                            break\n                        default:\n                            this.error(\"error \" + res[2] + info)\n                            break\n                    }\n                    return null\n                })\n                .catch(e => {\n                    console.debug(`HF2: ${e.message}; cmd=${cmd}`)\n                    this.error(e)\n                    return null\n                })\n\n        return this.lock.enqueue(\"talk\", () =>\n            this.sendMsgAsync(pkt).then(handleReturnAsync)\n        )\n    }\n\n    private sendMsgAsync(buf: Uint8Array, serial = 0) {\n        // Util.assert(buf.length <= this.maxMsgSize)\n        const frame = new Uint8Array(64)\n        const loop = (pos: number): Promise<void> => {\n            let len = buf.length - pos\n            if (len <= 0) return Promise.resolve()\n            if (len > 63) {\n                len = 63\n                frame[0] = HF2_FLAG_CMDPKT_BODY\n            } else {\n                frame[0] = HF2_FLAG_CMDPKT_LAST\n            }\n            if (serial)\n                frame[0] =\n                    serial == 1 ? HF2_FLAG_SERIAL_OUT : HF2_FLAG_SERIAL_ERR\n            frame[0] |= len\n            for (let i = 0; i < len; ++i) frame[i + 1] = buf[pos + i]\n            if (!this.io) return Promise.resolve()\n            return this.io.sendPacketAsync(frame).then(() => loop(pos + len))\n        }\n        return loop(0)\n    }\n\n    onEvent(id: number, f: (buf: Uint8Array) => void) {\n        assert(!!(id & HF2_EV_MASK))\n        this.eventHandlers[id + \"\"] = f\n    }\n\n    onJDMessage(f: (buf: Uint8Array) => void) {\n        this.talkAsync(HF2_CMD_JDS_CONFIG, encodeU32LE([1]))\n        this.onEvent(HF2_EV_JDS_PACKET, f)\n    }\n\n    sendJDMessageAsync(buf: Uint8Array) {\n        return this.talkAsync(HF2_CMD_JDS_SEND, buf).then(() => {})\n    }\n\n    handleEvent(buf: Uint8Array) {\n        const evid = read32(buf, 0)\n        const f = this.eventHandlers[evid + \"\"]\n        if (f) {\n            f(buf.slice(4))\n        } else {\n            this.io.log(\"unhandled event: \" + evid.toString(16))\n            // We can get these before we're ready to recv; this is fine.\n            //if (evid === 0x800020) {\n            //    this.io.onError(new Error(\"hf2 corrupted\"))\n            //}\n        }\n    }\n    onSerial(data: Uint8Array, iserr: boolean) {\n        const msg = `hf2 serial: ${bufferToString(data)}`\n        if (iserr) console.warn(msg)\n        else console.log(msg)\n    }\n\n    async postConnectAsync() {\n        await this.checkMode()\n        const buf = await this.talkAsync(HF2_CMD_INFO)\n        this.io.log(\"Connected to: \" + bufferToString(buf))\n    }\n\n    private async checkMode() {\n        // first check that we are not talking to a bootloader\n        const info = await this.talkAsync(HF2_CMD_BININFO)\n        const mode = read32(info, 0)\n        this.io.log(`hf2 mode ${mode}`)\n        if (mode == HF2_MODE_USERSPACE) {\n            // all good\n            this.io.log(`device in user-space mode`)\n        } else if (mode == HF2_MODE_BOOTLOADER) {\n            this.io.log(\n                `device in bootloader mode, reseting into user-space mode`\n            )\n            await this.talkAsync(HF2_CMD_RESET_INTO_APP)\n            // and fail\n            throwError(\"Device in bootloader mode\")\n        } else {\n            // unknown mdoe\n            throwError(\"Unknown device operation mode\")\n        }\n    }\n\n    async disconnectAsync() {\n        if (this.io) {\n            const io = this.io\n            this.io = undefined\n            await io.disconnectAsync()\n        }\n    }\n}\n","import Proto from \"./proto\"\nimport USBIO from \"./usbio\"\nimport {\n    delay,\n    PromiseQueue,\n    write32,\n    write16,\n    read32,\n    uint8ArrayToString,\n    fromHex,\n    bufferConcat,\n    fromUTF8,\n} from \"../utils\"\nimport Flags from \"../flags\"\nimport {\n    ERROR_MICROBIT_INVALID_MEMORY,\n    ERROR_MICROBIT_JACDAC_MISSING,\n    ERROR_MICROBIT_UNKNOWN,\n    ERROR_MICROBIT_V1,\n} from \"../constants\"\n\nexport const MICROBIT_V2_VENDOR_ID = 3368\nexport const MICROBIT_V2_PRODUCT_ID = 516\n\ninterface SendItem {\n    buf: Uint8Array\n    cb: () => void\n}\nexport class CMSISProto implements Proto {\n    private readonly q = new PromiseQueue()\n    private sendQ: SendItem[] = []\n    private irqn: number\n    private xchgAddr: number\n    private _onJDMsg: (buf: Uint8Array) => void\n    private pendingSerial: Uint8Array\n    private lastPendingSerial: number\n    private lastSend: number\n    private lastXchg: number\n    private recvTo: () => void\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _lastInterval: any\n\n    constructor(private io: USBIO) {}\n\n    private startRecvToLoop() {\n        console.assert(!this._lastInterval)\n\n        let last = this.recvTo\n        // do not use bus schedulere here\n        this._lastInterval = setInterval(() => {\n            if (!this.io) this.stopRecvToLoop()\n            if (last && last == this.recvTo) {\n                last()\n            }\n            last = this.recvTo\n        }, 200)\n    }\n\n    private stopRecvToLoop() {\n        if (this._lastInterval) {\n            clearInterval(this._lastInterval)\n            this._lastInterval = undefined\n        }\n    }\n\n    private error(msg: string, code?: string) {\n        this.stopRecvToLoop()\n        this.io?.error(msg, code)\n        // clear state\n        this.xchgAddr = null\n    }\n\n    onJDMessage(f: (buf: Uint8Array) => void): void {\n        this._onJDMsg = f\n    }\n\n    sendJDMessageAsync(buf: Uint8Array): Promise<void> {\n        if (buf.length & 3) {\n            const tmp = new Uint8Array((buf.length + 3) & ~3)\n            tmp.set(buf)\n            buf = tmp\n        }\n        return new Promise<void>(resolve => {\n            this.sendQ.push({\n                buf,\n                cb: resolve,\n            })\n        })\n    }\n\n    async disconnectAsync() {\n        if (this.io) {\n            console.debug(`micro:bit: disconnect proto`)\n            this.stopRecvToLoop()\n            this._onJDMsg = () => console.warn(\"rogue jd callback\")\n            const io = this.io\n            this.io = undefined\n            if (io) await io.disconnectAsync()\n        }\n    }\n\n    private recvAsync() {\n        return new Promise<Uint8Array>((resolve, reject) => {\n            // io may have been cleared\n            if (!this.io) {\n                reject(new Error(\"USB disconnected\"))\n                return\n            }\n            this.io.recvPacketAsync().then(\n                v => {\n                    const f = resolve\n                    resolve = null\n                    if (f) {\n                        this.recvTo = null\n                        f(v)\n                    }\n                },\n                err => {\n                    if (resolve) {\n                        resolve = null\n                        this.recvTo = null\n                        reject(err)\n                    }\n                }\n            )\n            this.recvTo = () => {\n                if (resolve) {\n                    resolve = null\n                    reject(new Error(\"CMSIS recv timeout\"))\n                }\n            }\n        })\n    }\n\n    private talkAsync(cmds: ArrayLike<number>) {\n        return this.q.enqueue(\"talk\", async () => {\n            if (!this.io) {\n                this.error(\"micro:bit disconnected\")\n                return // disconnected\n            }\n            //console.log(\"TALK\", cmds)\n            await this.io.sendPacketAsync(new Uint8Array(cmds))\n            if (!this.io) {\n                this.error(\"micro:bit disconnected\")\n                return // disconnected\n            }\n            let response = await this.recvAsync()\n            if (response[0] !== cmds[0]) {\n                const msg = `Bad response for ${cmds[0]} -> ${response[0]}, try again`\n                console.debug(msg, { cmds, response })\n                try {\n                    response = await this.recvAsync()\n                } catch (e) {\n                    // throw the original error in case of timeout\n                    this.error(msg)\n                }\n                if (response[0] !== cmds[0]) this.error(msg)\n            }\n            return response\n        })\n    }\n\n    private talkHexAsync(str: string) {\n        return this.talkAsync(fromHex(str.replace(/ /g, \"\")))\n    }\n\n    private decodeString(buf: Uint8Array) {\n        const len = buf[1]\n        const ss = buf.slice(2, 2 + len)\n        return uint8ArrayToString(ss)\n    }\n\n    private dapDelay(micros: number) {\n        const cmd = [0x09, 0, 0]\n        if (micros > 0xffff) this.error(\"too large delay\")\n        write16(cmd, 1, micros)\n        return this.talkAsync(cmd)\n    }\n\n    private async setBaudRate() {\n        const setBaud = [0x82, 0, 0, 0, 0]\n        write32(setBaud, 1, 115200)\n        await this.talkAsync(setBaud) // this reset the board on 0255\n    }\n\n    private async xchgLoop() {\n        let currSend: SendItem\n        while (this.io) {\n            const now = Date.now()\n            if (\n                Flags.diagnostics &&\n                this.lastXchg &&\n                now - this.lastXchg > 50\n            ) {\n                console.warn(\"slow xchg: \" + (now - this.lastXchg) + \"ms\")\n            }\n            this.lastXchg = now\n\n            let numev = 0\n            let inp = await this.readBytes(this.xchgAddr + 12, 256, true)\n            if (inp[2]) {\n                await this.writeWord(this.xchgAddr + 12, 0)\n                await this.triggerIRQ()\n                inp = inp.slice(0, inp[2] + 12)\n                this._onJDMsg(inp)\n                numev++\n            }\n\n            let sendFree = false\n            if (currSend) {\n                const send = await this.readBytes(this.xchgAddr + 12 + 256, 4)\n                if (!send[2]) {\n                    currSend.cb()\n                    currSend = null\n                    sendFree = true\n                    numev++\n                }\n            }\n\n            if (!currSend && this.sendQ.length) {\n                if (!sendFree) {\n                    const send = await this.readBytes(\n                        this.xchgAddr + 12 + 256,\n                        4\n                    )\n                    if (!send[2]) sendFree = true\n                }\n                if (sendFree) {\n                    currSend = this.sendQ.shift()\n                    const bbody = currSend.buf.slice(4)\n                    await this.writeWords(\n                        this.xchgAddr + 12 + 256 + 4,\n                        new Uint32Array(bbody.buffer)\n                    )\n                    const bhead = currSend.buf.slice(0, 4)\n                    await this.writeWords(\n                        this.xchgAddr + 12 + 256,\n                        new Uint32Array(bhead.buffer)\n                    )\n                    await this.triggerIRQ()\n                    this.lastSend = Date.now()\n                    numev++\n                } else {\n                    if (this.lastSend) {\n                        const d = Date.now() - this.lastSend\n                        if (d > 50) {\n                            this.lastSend = 0\n                            console.warn(\"failed to send packet fast enough\")\n                        }\n                    }\n                }\n            }\n\n            if (await this.readSerial()) numev++\n\n            if (numev == 0) await this.dapDelay(1000)\n        }\n    }\n\n    private async readSerial() {\n        let buf = await this.talkAsync([0x83])\n        const len = buf[1]\n        if (len) {\n            buf = buf.slice(2, 2 + len)\n            if (this.pendingSerial) buf = bufferConcat(this.pendingSerial, buf)\n            let ptr = 0\n            let beg = 0\n            while (ptr < buf.length) {\n                if (buf[ptr] == 10 || buf[ptr] == 13) {\n                    const line = buf.slice(beg, ptr)\n                    if (line.length)\n                        console.debug(\n                            \"microbit: \" + fromUTF8(uint8ArrayToString(line))\n                        )\n                    beg = ptr + 1\n                }\n                ptr++\n            }\n            buf = buf.slice(beg)\n            this.pendingSerial = buf.length ? buf : null\n            if (this.pendingSerial) this.lastPendingSerial = Date.now()\n        } else if (this.pendingSerial) {\n            const d = Date.now() - this.lastPendingSerial\n            if (d > 500) {\n                const s = fromUTF8(uint8ArrayToString(this.pendingSerial))\n                this.pendingSerial = null\n                console.log(\"SERIAL[TO]: \" + s)\n            }\n        }\n\n        return len\n    }\n\n    private async talkStringAsync(...cmds: number[]) {\n        return this.talkAsync(cmds).then(buf => this.decodeString(buf))\n    }\n\n    private async readDP(reg: number) {\n        const nums = [0x05, 0, 1, 2 | reg, 0, 0, 0, 0]\n        const buf = await this.talkAsync(nums)\n        return read32(buf, 3)\n    }\n\n    private async setupTAR(addr: number) {\n        const nums = [5, 0, 2, 1, 0x52, 0, 0, 0x23, 5, 0, 0, 0, 0]\n        write32(nums, 9, addr)\n        await this.talkAsync(nums)\n    }\n\n    private async writeWords(addr: number, data: Uint32Array) {\n        await this.setupTAR(addr)\n\n        const MAX = 0xe\n        let ptr = 0\n        const reqHd = [6, 0, MAX, 0, 0xd]\n        for (let i = 0; i < MAX * 4; ++i) reqHd.push(0)\n        const req = new Uint8Array(reqHd)\n        let overhang = 1\n        let ptrTX = 0\n        const count = data.length\n        const dataBytes = new Uint8Array(data.buffer)\n        let lastCh = MAX\n\n        //console.log(\"WRITE\", addr.toString(16), data)\n\n        await this.q.enqueue(\"talk\", async () => {\n            while (ptr < count) {\n                const ch = Math.min(count - ptrTX, MAX)\n                if (ch) {\n                    req[2] = ch\n                    req.set(dataBytes.slice(ptrTX * 4, (ptrTX + ch) * 4), 5)\n                    if (!this.io) {\n                        this.error(\"disconnected\")\n                        return\n                    }\n                    await this.io.sendPacketAsync(\n                        ch == MAX ? req : req.slice(0, 5 + 4 * ch)\n                    )\n                    ptrTX += ch\n                    lastCh = ch\n                }\n                if (overhang-- > 0) continue\n                const buf = await this.recvAsync()\n                if (buf[0] != req[0])\n                    this.error(`bad response, ${buf[0]} != ${req[0]}`)\n                if (buf[1] != MAX && buf[1] != lastCh)\n                    this.error(\n                        `bad response, ${buf[1]} != ${MAX} && ${buf[1]} != ${lastCh}`\n                    )\n                ptr += buf[1]\n            }\n        })\n    }\n\n    private async readBytes(addr: number, count: number, jdmode = false) {\n        if (addr & 3 || count & 3) this.error(\"unaligned\")\n        const b = await this.readWords(addr, count >> 2, jdmode)\n        return new Uint8Array(b.buffer)\n    }\n\n    private async readWords(addr: number, count: number, jdmode = false) {\n        await this.setupTAR(addr)\n        const MAX = 0xe\n        const res = new Uint32Array(count)\n        let ptr = 0\n        const req = new Uint8Array([6, 0, MAX, 0, 0xf])\n        let overhang = 1\n        let ptrTX = 0\n\n        // console.log(\"READ\", addr.toString(16), count)\n        let numPending = 0\n        await this.q.enqueue(\"talk\", async () => {\n            while (ptr < count || numPending) {\n                const ch = Math.min(count - ptrTX, MAX)\n                if (ch > 0) {\n                    req[2] = ch\n                    numPending++\n                    if (!this.io) {\n                        this.error(\"disconnected\")\n                        return\n                    }\n                    await this.io.sendPacketAsync(req)\n                    ptrTX += ch\n                }\n                if (overhang-- > 0) continue\n                const buf = await this.recvAsync()\n                numPending--\n                if (buf[0] != req[0]) {\n                    this.error(\"bad response\")\n                    return\n                }\n                const len = buf[1]\n                const words = new Uint32Array(\n                    buf.slice(4, (1 + len) * 4).buffer\n                )\n                if (words.length != len) {\n                    this.error(\"bad response2\")\n                    return\n                }\n                res.set(words, ptr)\n                // limit transfer, according to JD frame size\n                if (jdmode && ptr == 0) {\n                    const frmsz = new Uint8Array(res.buffer)[2]\n                    const words = (frmsz + 12 + 3) >> 2\n                    if (count > words) count = words\n                }\n                ptr += words.length\n            }\n        })\n\n        return res\n    }\n\n    private async findExchange() {\n        const memStart = 0x2000_0000\n        const memStop = memStart + 128 * 1024\n        const checkSize = 1024\n\n        let p0 = 0x20006000\n        let p1 = 0x20006000 + checkSize\n\n        const check = async (addr: number) => {\n            if (addr < memStart) return null\n            if (addr + checkSize > memStop) return null\n            const buf = await this.readWords(addr, checkSize >> 2)\n            for (let i = 0; i < buf.length; ++i) {\n                if (buf[i] == 0x786d444a && buf[i + 1] == 0xb0a6c0e9)\n                    return addr + (i << 2)\n            }\n            return 0\n        }\n\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const a0 = await check(p0)\n            if (a0) return a0\n            const a1 = await check(p1)\n            if (a1) return a1\n            if (a0 === null && a1 === null) return null\n            p0 -= checkSize\n            p1 += checkSize\n        }\n    }\n\n    private async triggerIRQ() {\n        const addr = 0xe000e200 + (this.irqn >> 5) * 4\n        const data = new Uint32Array([1 << (this.irqn & 31)])\n        await this.writeWords(addr, data)\n    }\n\n    private writeWord(addr: number, val: number) {\n        return this.writeWords(addr, new Uint32Array([val]))\n    }\n\n    private async reset() {\n        await this.writeWord(0xe000edfc, 0) // DEMCR\n        await this.writeWord(0xe000ed0c, 0x05fa0000 | (1 << 2)) // AIRCR\n    }\n\n    async postConnectAsync() {\n        this.startRecvToLoop()\n        const devid = await this.talkStringAsync(0x80)\n        if (/^9902/.test(devid)) {\n            this.error(\n                `micro:bit v1 is not supported. sorry.`,\n                ERROR_MICROBIT_V1\n            )\n            return\n        }\n        if (!/^990[3456789]/.test(devid)) {\n            this.error(\n                `Invalid Vendor0 response: ` + devid,\n                ERROR_MICROBIT_UNKNOWN\n            )\n            return\n        }\n\n        this.io.log(\"DAPLink v\" + (await this.talkStringAsync(0x00, 0x04)))\n\n        await this.setBaudRate() // this may reset the board\n\n        const freq = [0x11, 0, 0, 0, 0]\n        write32(freq, 1, 10_000_000)\n        await this.talkAsync(freq)\n\n        const inits = [\n            \"02 00\", // connect\n            \"04 00 64 00 00 00\", // configure delays\n            // SWD switch\n            \"12 38 FF FF FF FF FF FF FF\", // ones\n            \"12 10 9E E7\", // SWD\n            \"12 38 FF FF FF FF FF FF FF\", // ones\n            \"12 08 00\", // zero\n            // read DPIDR\n            \"05 00 01 02 00 00 00 00\",\n            // clear errors\n            \"05 00 03 00 04 00 00 00 08 00 00 00 00 04 00 00 00 50\",\n        ]\n\n        for (const ini of inits) await this.talkHexAsync(ini)\n\n        for (let i = 0; i < 100; ++i) {\n            const st = await this.readDP(4)\n            const mask = (1 << 29) | (1 << 31)\n            if ((st & mask) == mask) break\n            await delay(20)\n        }\n\n        await this.reset()\n        await delay(1000) // the actual minimum until mbbridge starts seems to be 700ms; give it some more time just in case\n\n        const xchg = await this.findExchange()\n        if (xchg === null) {\n            this.error(\n                `exchange address not found; add jacdac to your project`,\n                ERROR_MICROBIT_JACDAC_MISSING\n            )\n            return\n        }\n        this.xchgAddr = xchg\n        const info = await this.readBytes(xchg, 16)\n        this.irqn = info[8]\n        if (info[12 + 2] != 0xff) {\n            this.error(\n                \"invalid memory; try power-cycling the micro:bit\",\n                ERROR_MICROBIT_INVALID_MEMORY\n            )\n            return\n        }\n        // clear initial lock\n        await this.writeWord(xchg + 12, 0)\n        this.io.log(\n            `exchange address: 0x${xchg.toString(16)}; irqn=${this.irqn}`\n        )\n\n        /* async */ this.xchgLoop().catch(e => {\n            console.debug(e)\n            this.error(e?.message || \"an error occured\")\n        })\n    }\n}\n","import { JACDAC_ERROR } from \"./constants\"\n\n/**\n * Common Jacdac error type\n * @category Runtime\n */\nexport class JDError extends Error {\n    constructor(message: string, readonly jacdacName?: string) {\n        super(message)\n        this.name = JACDAC_ERROR\n    }\n}\nexport default JDError\n\n/**\n * Extract the Jacdac error code if any\n * @param e\n * @returns\n * @category Runtime\n */\nexport function errorCode(e: JDError): string {\n    return e.name === JACDAC_ERROR ? (e as JDError)?.jacdacName : undefined\n}\n","import { HF2Proto, HF2_DEVICE_MAJOR, HF2_IO } from \"./hf2\"\nimport {\n    CMSISProto,\n    MICROBIT_V2_PRODUCT_ID,\n    MICROBIT_V2_VENDOR_ID,\n} from \"./microbit\"\nimport { Observable } from \"../observable\"\nimport Proto from \"./proto\"\nimport { assert, delay, throwError } from \"../utils\"\nimport Flags from \"../flags\"\nimport JDError, { errorCode } from \"../error\"\n\nexport const USB_FILTERS = {\n    filters: [\n        {\n            // hf2 devices (incl. arcade)\n            classCode: 255,\n            subclassCode: HF2_DEVICE_MAJOR,\n        },\n        {\n            // micro:bit v2\n            vendorId: MICROBIT_V2_VENDOR_ID,\n            productId: MICROBIT_V2_PRODUCT_ID,\n        },\n    ],\n}\n\nconst controlTransferGetReport = 0x01\nconst controlTransferSetReport = 0x09\nconst controlTransferOutReport = 0x200\nconst controlTransferInReport = 0x100\n\nexport interface USBOptions {\n    requestDevice?: (options: USBDeviceRequestOptions) => Promise<USBDevice>\n    getDevices: (options: USBDeviceRequestOptions) => Promise<USBDevice[]>\n    connectObservable?: Observable<void>\n    disconnectObservable?: Observable<void>\n}\n\nexport default class USBIO implements HF2_IO {\n    private dev: USBDevice\n    private iface: USBInterface\n    private altIface: USBAlternateInterface\n    private epIn: USBEndpoint\n    private epOut: USBEndpoint\n    private readLoopStarted = false\n    private ready = false\n    private rawMode = false\n\n    constructor(public readonly options: USBOptions) {}\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onData = (v: Uint8Array) => {}\n    onError = (e: Error) => {\n        console.warn(`usb error: ${errorCode(e) || \"\"} ${e ? e.stack : e}`)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    log(msg: string, v?: any) {\n        if (Flags.diagnostics) {\n            if (v != undefined) console.debug(\"usb: \" + msg, v)\n            else console.debug(\"usb: \" + msg)\n        }\n    }\n\n    private mkProto(): Proto {\n        return this.isMicrobit() ? new CMSISProto(this) : new HF2Proto(this)\n    }\n\n    private clearDev() {\n        if (this.dev) {\n            this.dev = null\n            this.epIn = null\n            this.epOut = null\n            this.onData = () => console.warn(\"rogue hf2 onData\")\n        }\n    }\n\n    disconnectAsync(): Promise<void> {\n        this.ready = false\n        if (!this.dev) return Promise.resolve()\n        console.debug(\"close device\")\n        return this.dev\n            .close()\n            .catch(e => {\n                // just ignore errors closing, most likely device just disconnected\n                console.debug(e)\n            })\n            .then(() => {\n                this.clearDev()\n                return delay(500)\n            })\n    }\n\n    recvPacketAsync(): Promise<Uint8Array> {\n        if (!this.rawMode) this.error(\"rawMode required\")\n        return this.recvPacketCoreAsync()\n    }\n\n    private recvPacketCoreAsync(): Promise<Uint8Array> {\n        const final = (res: USBInTransferResult) => {\n            if (res.status != \"ok\") this.error(\"USB IN transfer failed\")\n            const arr = new Uint8Array(res.data.buffer)\n            if (arr.length == 0) return this.recvPacketCoreAsync()\n            return arr\n        }\n\n        if (!this.dev) return Promise.reject(new Error(\"Disconnected\"))\n\n        if (!this.epIn) {\n            return this.dev\n                .controlTransferIn(\n                    {\n                        requestType: \"class\",\n                        recipient: \"interface\",\n                        request: controlTransferGetReport,\n                        value: controlTransferInReport,\n                        index: this.iface.interfaceNumber,\n                    },\n                    64\n                )\n                .then(final)\n        }\n\n        return this.dev.transferIn(this.epIn.endpointNumber, 64).then(final)\n    }\n\n    error(msg: string, code?: string) {\n        const e = new JDError(\n            `device ${this.dev ? this.dev.productName : \"n/a\"} (${msg})`,\n            code\n        )\n        this.onError(e)\n    }\n\n    private async readLoop() {\n        if (this.rawMode || this.readLoopStarted) return\n        this.readLoopStarted = true\n        console.debug(\"start read loop\")\n\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            if (!this.ready) {\n                break\n                //await delay(300)\n                //continue\n            }\n\n            try {\n                const buf = await this.recvPacketCoreAsync()\n\n                if (buf[0]) {\n                    // we've got data; retry reading immedietly after processing it\n                    this.onData(buf)\n                } else {\n                    // throttle down if no data coming\n                    await delay(5)\n                }\n            } catch (err) {\n                if (this.dev) {\n                    this.onError(err)\n                    await this.disconnectAsync()\n                }\n                await delay(300)\n            }\n        }\n    }\n\n    sendPacketAsync(pkt: Uint8Array) {\n        if (!this.dev) return Promise.reject(new Error(\"Disconnected\"))\n        assert(pkt.length <= 64)\n        if (!this.epOut) {\n            return this.dev\n                .controlTransferOut(\n                    {\n                        requestType: \"class\",\n                        recipient: \"interface\",\n                        request: controlTransferSetReport,\n                        value: controlTransferOutReport,\n                        index: this.iface.interfaceNumber,\n                    },\n                    pkt\n                )\n                .then(res => {\n                    if (res.status != \"ok\")\n                        this.error(\"USB CTRL OUT transfer failed\")\n                })\n        }\n        return this.dev\n            .transferOut(this.epOut.endpointNumber, pkt)\n            .then(res => {\n                if (res.status != \"ok\") this.error(\"USB OUT transfer failed\")\n            })\n    }\n\n    private isMicrobit() {\n        return (\n            this.dev && this.dev.productId == 516 && this.dev.vendorId == 3368\n        )\n    }\n\n    private checkDevice() {\n        this.iface = undefined\n        this.altIface = undefined\n        if (!this.dev) return false\n        console.debug(\n            \"connect device: \" +\n                this.dev.manufacturerName +\n                \" \" +\n                this.dev.productName\n        )\n        // resolve interfaces\n        const subcl = this.isMicrobit() ? 0 : HF2_DEVICE_MAJOR\n        for (const iface of this.dev.configuration.interfaces) {\n            const alt = iface.alternates[0]\n            if (alt.interfaceClass == 0xff && alt.interfaceSubclass == subcl) {\n                this.iface = iface\n                this.altIface = alt\n                break\n            }\n        }\n        if (this.isMicrobit()) this.rawMode = true\n        return !!this.iface\n    }\n\n    private async tryReconnectAsync(deviceId?: string) {\n        try {\n            const devices = await this.options.getDevices(USB_FILTERS)\n            this.dev = deviceId\n                ? devices.find(dev => dev.serialNumber === deviceId)\n                : devices[0]\n        } catch (e) {\n            console.log(e)\n            this.dev = undefined\n        }\n    }\n\n    private async requestDeviceAsync() {\n        try {\n            this.dev = await this.options.requestDevice(USB_FILTERS)\n        } catch (e) {\n            console.log(e)\n            this.dev = undefined\n        }\n    }\n\n    async connectAsync(background: boolean, deviceId?: string) {\n        await this.tryReconnectAsync(deviceId)\n        if (!this.dev && !background) await this.requestDeviceAsync()\n        // background call and no device, just give up for now\n        if (!this.dev && background) throwError(\"device not paired\", true)\n\n        // let's connect\n        await this.openDeviceAsync()\n\n        const proto = this.mkProto()\n        try {\n            await proto.postConnectAsync()\n        } catch (e) {\n            console.debug(e)\n            await proto.disconnectAsync()\n            throw e\n        }\n        return proto\n    }\n\n    private async openDeviceAsync() {\n        if (!this.dev) throwError(\"device not found\")\n        if (!this.checkDevice()) throwError(\"device does not support HF2\")\n\n        await this.dev.open()\n        await this.dev.selectConfiguration(1)\n        if (this.altIface.endpoints.length) {\n            this.epIn = this.altIface.endpoints.filter(\n                e => e.direction == \"in\"\n            )[0]\n            this.epOut = this.altIface.endpoints.filter(\n                e => e.direction == \"out\"\n            )[0]\n            assert(this.epIn.packetSize == 64)\n            assert(this.epOut.packetSize == 64)\n        }\n        console.debug(\"claim interface\")\n        await this.dev.claimInterface(this.iface.interfaceNumber)\n        console.debug(\"all connected\")\n        this.ready = true\n        /* no await */ this.readLoop()\n    }\n}\n","import { HF2Proto, HF2_IO } from \"./hf2\"\nimport Proto from \"./proto\"\nimport { assert, bufferConcat, delay, throwError } from \"../utils\"\nimport Flags from \"../flags\"\nimport JDError, { errorCode } from \"../error\"\n\nexport const WEB_SERIAL_FILTERS = {\n    filters: [\n        {\n            usbVendorId: 0x303a, // espressif\n        },\n    ],\n}\n\nexport default class WebSerialIO implements HF2_IO {\n    private dev: SerialPort\n    private readLoopStarted = false\n    ready = false\n    private writer: WritableStreamDefaultWriter<Uint8Array>\n    private reader: ReadableStreamDefaultReader<Uint8Array>\n\n    constructor() {}\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onData = (v: Uint8Array) => {}\n    onError = (e: Error) => {\n        console.warn(`usb error: ${errorCode(e) || \"\"} ${e ? e.stack : e}`)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    log(msg: string, v?: any) {\n        if (Flags.diagnostics) {\n            if (v != undefined) console.debug(\"usb: \" + msg, v)\n            else console.debug(\"usb: \" + msg)\n        }\n    }\n\n    private mkProto(): Proto {\n        return new HF2Proto(this)\n    }\n\n    private clearDev() {\n        if (this.dev) {\n            this.dev = null\n            this.onData = () => console.warn(\"rogue webserial hf2 onData\")\n        }\n    }\n\n    disconnectAsync(): Promise<void> {\n        this.ready = false\n        if (!this.dev) return Promise.resolve()\n        console.debug(\"close device\")\n        return this.cancelStreams()\n            .catch(e => {\n                // just ignore errors closing, most likely device just disconnected\n                console.debug(e)\n            })\n            .then(() => {\n                this.clearDev()\n                return delay(500)\n            })\n    }\n\n    private devInfo() {\n        if (!this.dev) return \"n/a\"\n        const h = (n: number) => (\"000\" + n.toString(16)).slice(-4)\n        const info = this.dev.getInfo()\n        return h(info.usbVendorId) + \":\" + h(info.usbProductId)\n    }\n\n    error(msg: string, code?: string) {\n        const e = new JDError(`serial device ${this.devInfo()} (${msg})`, code)\n        this.onError(e)\n    }\n\n    private async cancelStreams() {\n        if (this.reader)\n            try {\n                await this.reader.cancel()\n                this.reader.releaseLock()\n                // eslint-disable-next-line no-empty\n            } catch {}\n        try {\n            this.writer.releaseLock()\n            // eslint-disable-next-line no-empty\n        } catch {}\n        await this.dev.close()\n    }\n\n    private async readLoop() {\n        if (this.readLoopStarted) return\n\n        this.readLoopStarted = true\n        console.debug(\"start read loop\")\n\n        const readpkt = async (\n            reader: ReadableStreamDefaultReader<Uint8Array>\n        ) => {\n            let value: Uint8Array = null\n            for (;;) {\n                const tmp = await reader.read()\n                if (tmp.done || !this.dev) return null // reader cancelled\n                if (!value) value = tmp.value\n                else value = bufferConcat(value, tmp.value)\n                // Despite the fact that the device always sends full 64 bytes USB packets\n                // the Windows serial driver will sometimes give only one character, and then the remaining\n                // 63 in the second read - this must be going through some UART abstraction layers I guess... ¯\\_(ツ)_/¯\n                if (value && (value.length & 63) == 0) return value\n            }\n        }\n\n        for (;;) {\n            const reader = this.dev?.readable?.getReader()\n            if (!reader) {\n                await delay(100)\n                continue\n            }\n            this.reader = reader\n            console.debug(\"start new read loop round\")\n            try {\n                // eslint-disable-next-line no-constant-condition\n                for (;;) {\n                    const value = await readpkt(reader)\n                    if (!value) break\n                    // console.log(\"Recv\", toHex(value))\n                    if (value.length > 64)\n                        for (let i = 0; i < value.length; i += 64) {\n                            this.onData(value.slice(i, i + 64))\n                        }\n                    else this.onData(value)\n                }\n            } catch (e) {\n                if (this.dev) this.onError(e)\n                await delay(100)\n            } finally {\n                try {\n                    reader.releaseLock()\n                } catch {}\n                await delay(100)\n            }\n        }\n    }\n\n    sendPacketAsync(pkt: Uint8Array) {\n        if (!this.dev || !this.writer)\n            return Promise.reject(new Error(\"Disconnected\"))\n        assert(pkt.length <= 64)\n        // console.log(\"Send\", toHex(pkt))\n        if (pkt.length < 64) {\n            const p = pkt\n            pkt = new Uint8Array(64)\n            pkt.set(p)\n        }\n        return this.writer.write(pkt)\n    }\n\n    private async tryReconnectAsync() {\n        try {\n            const ports = await navigator.serial.getPorts()\n            this.dev = ports[0]\n        } catch (e) {\n            console.log(e)\n            this.dev = undefined\n        }\n    }\n\n    private async requestDeviceAsync() {\n        try {\n            this.dev = await navigator.serial.requestPort(WEB_SERIAL_FILTERS)\n        } catch (e) {\n            console.log(e)\n            this.dev = undefined\n        }\n    }\n\n    async connectAsync(background: boolean, deviceId?: string) {\n        await this.tryReconnectAsync()\n        if (!this.dev && !background) await this.requestDeviceAsync()\n        // background call and no device, just give up for now\n        if (!this.dev && background) throwError(\"device not paired\", true)\n\n        // let's connect\n        await this.openDeviceAsync()\n\n        const proto = this.mkProto()\n        try {\n            await proto.postConnectAsync()\n        } catch (e) {\n            console.debug(e)\n            await proto.disconnectAsync()\n            throw e\n        }\n        return proto\n    }\n\n    private async openDeviceAsync() {\n        if (!this.dev) throwError(\"device not found\")\n\n        await this.dev.open({\n            baudRate: 115200, // not really\n            bufferSize: 32 * 1024,\n        })\n\n        this.writer = this.dev.writable?.getWriter()\n        if (!this.writer) throwError(\"no writer\")\n        this.ready = true\n        /* no await */ this.readLoop()\n    }\n}\n","import { Observable, Observer } from \"../observable\"\n\n/**\n * @internal\n */\nexport class EventTargetObservable<TEvent> implements Observable<TEvent> {\n    constructor(\n        public readonly element: EventTarget,\n        public readonly eventName: string\n    ) {}\n\n    subscribe(observer: Observer<TEvent>): { unsubscribe: () => void } {\n        const handler: EventListener = (ev: Event) =>\n            !!observer.next && observer.next(<TEvent>(<any>ev))\n        this.element.addEventListener(this.eventName, handler, false)\n        return {\n            unsubscribe: () =>\n                this.element.removeEventListener(this.eventName, handler),\n        }\n    }\n}\nexport default EventTargetObservable\n","import Packet from \"../packet\"\nimport EventTargetObservable from \"./eventtargetobservable\"\nimport Flags from \"../flags\"\nimport { USB_TRANSPORT } from \"../constants\"\nimport Transport from \"./transport\"\nimport JDBus from \"../bus\"\nimport Proto from \"./proto\"\nimport USBIO, { USBOptions } from \"./usbio\"\n\nexport function isWebUSBEnabled(): boolean {\n    return !!Flags.webUSB\n}\n\nexport function isWebUSBSupported(): boolean {\n    try {\n        return (\n            typeof navigator !== \"undefined\" &&\n            !!navigator.usb &&\n            !!navigator.usb.getDevices\n        )\n    } catch (e) {\n        return false\n    }\n}\n\nexport function usbRequestDevice(\n    options?: USBDeviceRequestOptions\n): Promise<USBDevice> {\n    // disabled\n    if (!Flags.webUSB) return Promise.resolve(undefined)\n\n    try {\n        return navigator?.usb?.requestDevice?.(options)\n    } catch (e) {\n        if (Flags.diagnostics) console.warn(e)\n        return undefined\n    }\n}\n\nfunction usbGetDevices(): Promise<USBDevice[]> {\n    // disabled\n    if (!Flags.webUSB) return Promise.resolve([])\n\n    try {\n        return navigator?.usb?.getDevices() || Promise.resolve([])\n    } catch (e) {\n        if (Flags.diagnostics) console.warn(e)\n        return Promise.resolve([])\n    }\n}\n\nclass WebUSBTransport extends Transport {\n    private hf2: Proto\n    constructor(public readonly options: USBOptions) {\n        super(USB_TRANSPORT, { ...options, checkPulse: true })\n    }\n\n    protected async transportConnectAsync(background: boolean) {\n        const transport = new USBIO(this.options)\n        transport.onError = e => this.errorHandler(USB_TRANSPORT, e)\n        this.hf2 = await transport.connectAsync(background)\n        this.hf2.onJDMessage(this.handleFrame.bind(this))\n    }\n\n    protected async transportSendPacketAsync(p: Packet) {\n        if (!this.hf2) throw new Error(\"hf2 transport disconnected\")\n\n        const buf = p.toBuffer()\n        await this.hf2.sendJDMessageAsync(buf)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected async transportDisconnectAsync(background?: boolean) {\n        const h = this.hf2\n        this.hf2 = undefined\n        if (h) await h.disconnectAsync()\n    }\n}\n\nfunction defaultOptions(): USBOptions {\n    return (\n        isWebUSBSupported() && {\n            getDevices: usbGetDevices,\n            requestDevice: usbRequestDevice,\n            connectObservable: new EventTargetObservable(\n                navigator.usb,\n                \"connect\"\n            ),\n            disconnectObservable: new EventTargetObservable(\n                navigator.usb,\n                \"disconnect\"\n            ),\n        }\n    )\n}\n\nexport function createUSBTransport(options?: USBOptions): Transport {\n    if (!options) options = defaultOptions()\n    return options && new WebUSBTransport(options)\n}\n\nexport function createUSBBus(options?: USBOptions) {\n    return new JDBus([createUSBTransport(options)])\n}\n","import { USB_TRANSPORT } from \"../constants\"\nimport EventTargetObservable from \"./eventtargetobservable\"\nimport Flags from \"../flags\"\nimport Packet from \"../packet\"\nimport { Transport, TransportOptions } from \"./transport\"\nimport {\n    TransportConnectMessage,\n    TransportMessage,\n    TransportPacketMessage,\n} from \"./transportmessages\"\nimport { isWebUSBEnabled, usbRequestDevice } from \"./usb\"\nimport { USB_FILTERS } from \"./usbio\"\n\nclass WorkerTransport extends Transport {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private pending: {\n        [id: string]: {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            resolve: (t: any) => void\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            reject: (e: any) => void\n        }\n    } = {}\n\n    constructor(\n        public readonly type: string,\n        public readonly worker: Worker,\n        public readonly options: {\n            requestDevice: () => Promise<string>\n        } & TransportOptions\n    ) {\n        super(type, options)\n        this.worker.addEventListener(\"message\", this.handleMessage.bind(this))\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private postMessageAsync<T>(msg: TransportMessage) {\n        const id = (msg.id = \"\" + Math.random())\n        const p = new Promise<T>((resolve, reject) => {\n            this.worker.postMessage(msg)\n            this.pending[id] = { resolve, reject }\n        })\n        return p\n    }\n\n    private handleMessage(ev: MessageEvent) {\n        const data: TransportMessage = ev.data\n        const { jacdac, type } = data || {}\n        if (!jacdac) return // not our message\n        switch (type) {\n            case \"packet\": {\n                const { payload } = data as TransportPacketMessage\n                //debug(`wt: packet`, payload)\n                this.handlePacket(payload)\n                break\n            }\n            case \"frame\": {\n                const { payload } = data as TransportPacketMessage\n                //debug(`wt: frame`, payload)\n                this.handleFrame(payload)\n                break\n            }\n            case \"connect\":\n            case \"disconnect\": {\n                const { id, error } = data\n                const { resolve, reject } = this.pending[id] || {}\n                if (resolve) {\n                    if (error) reject(error)\n                    else resolve(undefined)\n                }\n                break\n            }\n            case \"error\": {\n                const { error, background, type } = data as TransportMessage\n                if (Flags.diagnostics) console.debug(data)\n                if (!background) this.errorHandler(type, error)\n                break\n            }\n        }\n    }\n\n    protected async transportSendPacketAsync(p: Packet): Promise<void> {\n        // don't wait\n        const buf = p.toBuffer()\n        this.worker.postMessage(<TransportPacketMessage>{\n            jacdac: true,\n            type: \"packet\",\n            payload: buf,\n        })\n    }\n\n    protected async transportConnectAsync(background?: boolean) {\n        let deviceId: string\n        if (!background) {\n            // request permission first\n            deviceId = await this.options.requestDevice()\n        }\n\n        // try connect\n        await this.postMessageAsync<void>(<TransportConnectMessage>{\n            jacdac: true,\n            type: \"connect\",\n            deviceId,\n            background,\n        })\n    }\n\n    protected transportDisconnectAsync(background?: boolean): Promise<void> {\n        return this.postMessageAsync<void>(<TransportMessage>{\n            jacdac: true,\n            type: \"disconnect\",\n            background,\n        })\n    }\n}\n\nexport function createUSBWorkerTransport(worker: Worker) {\n    return (\n        isWebUSBEnabled() &&\n        new WorkerTransport(USB_TRANSPORT, worker, {\n            checkPulse: true,\n            requestDevice: () =>\n                usbRequestDevice(USB_FILTERS).then(dev => dev?.serialNumber),\n            connectObservable: new EventTargetObservable(\n                navigator.usb,\n                \"connect\"\n            ),\n            disconnectObservable: new EventTargetObservable(\n                navigator.usb,\n                \"disconnect\"\n            ),\n        })\n    )\n}\n","import Packet from \"../packet\"\nimport Flags from \"../flags\"\nimport { SERIAL_TRANSPORT, USB_TRANSPORT } from \"../constants\"\nimport Transport from \"./transport\"\nimport JDBus from \"../bus\"\nimport Proto from \"./proto\"\nimport WebSerialIO from \"./webserialio\"\nimport { HF2_IO } from \"./hf2\"\n\nexport function isWebSerialEnabled(): boolean {\n    return !!Flags.webSerial\n}\n\nexport function isWebSerialSupported(): boolean {\n    try {\n        return (\n            typeof navigator !== \"undefined\" &&\n            !!navigator.serial &&\n            !!navigator.serial.getPorts\n        )\n    } catch (e) {\n        return false\n    }\n}\n\nclass WebSerialTransport extends Transport {\n    private hf2: Proto\n    constructor(private mkTransport: () => HF2_IO) {\n        super(SERIAL_TRANSPORT)\n    }\n\n    protected async transportConnectAsync(background: boolean) {\n        const transport = this.mkTransport()\n        transport.onError = e => this.errorHandler(USB_TRANSPORT, e)\n        this.hf2 = await transport.connectAsync(background)\n        this.hf2.onJDMessage(this.handleFrame.bind(this))\n    }\n\n    protected async transportSendPacketAsync(p: Packet) {\n        if (!this.hf2) throw new Error(\"hf2 transport disconnected\")\n\n        const buf = p.toBuffer()\n        await this.hf2.sendJDMessageAsync(buf)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected async transportDisconnectAsync(background?: boolean) {\n        const h = this.hf2\n        this.hf2 = undefined\n        if (h) await h.disconnectAsync()\n    }\n}\n\n/**\n * Creates a transport over a Web Serial connection\n * @category\n */\nexport function createWebSerialTransport(\n    mkTransport: () => HF2_IO = () => new WebSerialIO()\n): Transport {\n    return isWebSerialSupported() && new WebSerialTransport(mkTransport)\n}\n\n/**\n * Creates a bus with a Web Serial connection\n * @category\n */\nexport function createWebSerialBus() {\n    return new JDBus([createWebSerialTransport()])\n}\n","import EventTargetObservable from \"./eventtargetobservable\"\nimport { HF2_DEVICE_MAJOR } from \"./hf2\"\nimport { MICROBIT_V2_PRODUCT_ID, MICROBIT_V2_VENDOR_ID } from \"./microbit\"\nimport { USBOptions } from \"./usbio\"\n\nexport function createNodeUSBOptions(): USBOptions {\n    console.debug(`jacdac: creating usb transport`)\n\n    async function devicesFound(devices: USBDevice[]): Promise<USBDevice> {\n        for (const device of devices) {\n            // microbit v2\n            if (\n                device.vendorId === MICROBIT_V2_VENDOR_ID &&\n                device.productId === MICROBIT_V2_PRODUCT_ID\n            ) {\n                return device\n            }\n            // jacdac device\n            else if (device.deviceVersionMajor == HF2_DEVICE_MAJOR) {\n                for (const iface of device.configuration.interfaces) {\n                    const alt = iface.alternates[0]\n                    if (\n                        alt.interfaceClass == 0xff &&\n                        alt.interfaceSubclass == HF2_DEVICE_MAJOR\n                    ) {\n                        return device\n                    }\n                }\n            }\n        }\n\n        return undefined\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const USB = require(\"webusb\").USB\n    const usb = new USB({\n        devicesFound,\n    })\n\n    async function requestDevice(\n        options: USBDeviceRequestOptions\n    ): Promise<USBDevice> {\n        console.debug(`requesting device...`)\n        try {\n            const device = await usb.requestDevice(options)\n            return device\n        } catch (e) {\n            console.debug(e)\n            return undefined\n        }\n    }\n\n    async function getDevices(\n        options: USBDeviceRequestOptions\n    ): Promise<USBDevice[]> {\n        //const devices = await usb.getDevices()\n        //return devices\n        const dev = await requestDevice(options)\n        return dev ? [dev] : []\n    }\n\n    const connectObservable = new EventTargetObservable(usb, \"connect\")\n    const disconnectObservable = new EventTargetObservable(usb, \"disconnect\")\n\n    return {\n        getDevices,\n        requestDevice,\n        connectObservable,\n        disconnectObservable,\n    }\n}\n","import { HF2Proto, HF2_IO } from \"./hf2\"\nimport Proto from \"./proto\"\nimport { assert, bufferConcat, delay, throwError } from \"../utils\"\nimport Flags from \"../flags\"\nimport JDError, { errorCode } from \"../error\"\nimport { WEB_SERIAL_FILTERS } from \"./webserialio\"\n\ninterface Port {\n    path: string\n    manufacturer: string\n    serialNumber: string\n    pnpId: string\n    locationId: string\n    vendorId: string\n    productId: string\n}\n\nfunction toPromise<T>(f: (cb: (err: Error, res: T) => void) => void) {\n    return new Promise<T>((resolve, reject) =>\n        f((err, result) => {\n            if (err) reject(err)\n            else resolve(result)\n        })\n    )\n}\n\n/**\n * @internal\n */\nexport class NodeWebSerialIO implements HF2_IO {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private dev: any\n    private port: Port\n    ready = false\n\n    /**\n     * \n     * @param SerialPort ``require(\"serialport\")``\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(private SerialPort: any) {}\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onData = (v: Uint8Array) => {}\n    onError = (e: Error) => {\n        console.warn(`usb error: ${errorCode(e) || \"\"} ${e ? e.stack : e}`)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    log(msg: string, v?: any) {\n        if (Flags.diagnostics) {\n            if (v != undefined) console.debug(\"usb: \" + msg, v)\n            else console.debug(\"usb: \" + msg)\n        }\n    }\n\n    private mkProto(): Proto {\n        return new HF2Proto(this)\n    }\n\n    private clearDev() {\n        if (this.dev) {\n            this.dev = null\n            this.onData = () => console.warn(\"rogue webserial hf2 onData\")\n        }\n    }\n\n    disconnectAsync(): Promise<void> {\n        this.ready = false\n        if (!this.dev) return Promise.resolve()\n        console.debug(\"close device\")\n        return this.cancelStreams()\n            .catch(e => {\n                // just ignore errors closing, most likely device just disconnected\n                console.debug(e)\n            })\n            .then(() => {\n                this.clearDev()\n                return delay(500)\n            })\n    }\n\n    private devInfo() {\n        if (!this.port) return \"n/a\"\n        return this.port.vendorId + \":\" + this.port.productId\n    }\n\n    error(msg: string, code?: string) {\n        const e = new JDError(`serial device ${this.devInfo()} (${msg})`, code)\n        this.onError(e)\n    }\n\n    private async cancelStreams() {\n        await toPromise(cb => this.dev.close(cb))\n    }\n\n    sendPacketAsync(pkt: Uint8Array) {\n        if (!this.dev) return Promise.reject(new Error(\"Disconnected\"))\n        assert(pkt.length <= 64)\n        // console.log(\"Send\", toHex(pkt))\n        if (pkt.length < 64) {\n            const p = pkt\n            pkt = new Uint8Array(64)\n            pkt.set(p)\n        }\n        return toPromise<void>(cb => this.dev.write(pkt, undefined, cb))\n    }\n\n    private async tryReconnectAsync() {\n        try {\n            this.dev = undefined\n            this.port = undefined\n\n            const ports: Port[] = await this.SerialPort.list()\n            this.port = ports.filter(\n                p =>\n                    /^PX/.test(p.serialNumber) ||\n                    WEB_SERIAL_FILTERS.filters.some(\n                        f => f.usbVendorId == parseInt(p.vendorId, 16)\n                    )\n            )[0]\n\n            if (this.port) {\n                await toPromise(cb => {\n                    this.dev = new this.SerialPort(\n                        this.port.path,\n                        { baudRate: 115200 },\n                        cb\n                    )\n                })\n                let tmpdata: Uint8Array\n                this.dev.on(\"data\", (buf: Uint8Array) => {\n                    if (tmpdata) buf = bufferConcat(tmpdata, buf)\n                    tmpdata = null\n\n                    // This was only observed with WebSerial, but better safe than sorry\n                    if (buf.length & 63) {\n                        tmpdata = buf\n                        return\n                    }\n\n                    if (buf.length > 64)\n                        for (let i = 0; i < buf.length; i += 64) {\n                            this.onData(buf.slice(i, i + 64))\n                        }\n                    else this.onData(buf)\n                })\n                this.dev.on(\"error\", (err: any) => {\n                    this.error(err.messsage || err + \"\")\n                })\n            }\n        } catch (e) {\n            console.log(e)\n            this.dev = undefined\n            this.port = undefined\n        }\n    }\n\n    async connectAsync(background: boolean, deviceId?: string) {\n        await this.tryReconnectAsync()\n        if (!this.dev && background)\n            throwError(\"can't find suitable device\", true)\n\n        const proto = this.mkProto()\n        try {\n            await proto.postConnectAsync()\n        } catch (e) {\n            console.debug(e)\n            await proto.disconnectAsync()\n            throw e\n        }\n        return proto\n    }\n}\nexport default NodeWebSerialIO","import JDBridge from \"../bridge\"\nimport { inIFrame } from \"../iframeclient\"\n\nclass IFrameBridge extends JDBridge {\n    constructor(readonly targetOrigin: string) {\n        super()\n        this.handleMessage = this.handleMessage.bind(this)\n        window.addEventListener(\"message\", this.handleMessage, false)\n        this.mount(() =>\n            window.removeEventListener(\"message\", this.handleMessage)\n        )\n        console.debug(`jacdac: iframe bridge created`)\n    }\n\n    private handleMessage(msg: MessageEvent) {\n        const { data } = msg\n        if (data.channel === \"jacdac\" && data.type === \"messagepacket\") {\n            const payload: Uint8Array = data.data\n            this.receivePacket(payload)\n        }\n    }\n\n    protected sendPacket(data: Uint8Array): void {\n        const msg = {\n            type: \"messagepacket\",\n            channel: \"jacdac\",\n            data,\n            sender: this.bridgeId,\n            broadcast: true,\n        }\n        window.parent.postMessage(msg, this.targetOrigin)\n    }\n}\n\nexport default function createIFrameBridge(parentOrigin = \"*\"): JDBridge {\n    return inIFrame() && new IFrameBridge(parentOrigin)\n}\n\nexport function startDevTools() {\n    if (\n        typeof window !== \"undefined\" &&\n        !/^https:\\/\\/microsoft.github.io\\/jacdac-docs\\//.test(\n            window.location.href\n        )\n    )\n        window.location.href = `https://microsoft.github.io/jacdac-docs/clients/javascript/devtools.html#${window.location.href}`\n}\n","import JDBus from \"../bus\"\nimport { createUSBTransport, isWebUSBSupported } from \"./usb\"\nimport { createWebSerialTransport, isWebSerialSupported } from \"./webserial\"\nimport { createBluetoothTransport, isWebBluetoothSupported } from \"./bluetooth\"\nimport { USBOptions } from \"./usbio\"\nimport createIFrameBridge from \"../bridges/iframebridge\"\n\n/**\n * Creates a Jacdac bus using WebUSB, WebSerial or WebBluetooth\n * @param options\n * @returns\n * @category Transport\n */\nexport function createWebBus(options?: {\n    usbOptions?: USBOptions\n    iframeTargetOrigin?: string\n}) {\n    const { usbOptions, iframeTargetOrigin } = options || {}\n    const bus = new JDBus([\n        usbOptions !== null && createUSBTransport(usbOptions),\n        createWebSerialTransport(),\n        createBluetoothTransport(),\n    ])\n    const iframeBridge =\n        iframeTargetOrigin !== null && createIFrameBridge(iframeTargetOrigin)\n    if (iframeBridge) iframeBridge.bus = bus\n    return bus\n}\n\n/**\n * Indicates if any of the USB/Serial/Bluetooth transports is supported\n * @returns \n * @category Transport\n */\nexport function isWebTransportSupported() {\n    return (\n        isWebUSBSupported() ||\n        isWebSerialSupported() ||\n        isWebBluetoothSupported()\n    )\n}\n","import {\n    BOUND,\n    CHANGE,\n    DEVICE_ANNOUNCE,\n    DEVICE_DISCONNECT,\n    ROLE_BOUND,\n    ROLE_UNBOUND,\n    UNBOUND,\n} from \"./constants\"\nimport JDBus from \"./bus\"\nimport JDDevice from \"./device\"\nimport JDService from \"./service\"\nimport { serviceSpecificationFromClassIdentifier } from \"./spec\"\nimport { JDClient } from \"./client\"\n\n/**\n * A binding from a name to a service\n * @category Roles\n */\nexport interface RoleBinding {\n    role: string\n    serviceClass: number\n    preferredDeviceId?: string\n    service?: JDService\n}\n\n/**\n * A role manager\n * @category Roles\n */\nexport class RoleManager extends JDClient {\n    private readonly _roles: RoleBinding[] = []\n\n    /**\n     * Gets the bus for this role\n     */\n    public readonly bus: JDBus\n\n    constructor(bus: JDBus) {\n        super()\n        this.bus = bus\n        this.mount(\n            this.bus.subscribe(DEVICE_ANNOUNCE, this.addServices.bind(this))\n        )\n        this.mount(\n            this.bus.subscribe(\n                DEVICE_DISCONNECT,\n                this.removeServices.bind(this)\n            )\n        )\n\n        this.bindServices()\n    }\n\n    /**\n     * Indicates if all roles are bound.\n     */\n    get isBound() {\n        return this._roles.every(({ service }) => !!service)\n    }\n\n    /**\n     * Gets the list of roles tracked by the manager\n     */\n    roles(bound: boolean = undefined) {\n        if (bound !== undefined)\n            return this._roles.filter(({ service }) => !!service === bound)\n        else return this._roles.slice(0)\n    }\n\n    /**\n     * Updates the list of roles\n     * @param newRoles\n     */\n    updateRoles(newRoles: RoleBinding[]) {\n        const oldBound = this.isBound\n        let changed = false\n\n        // remove unknown roles\n        const supportedNewRoles = newRoles.filter(({ serviceClass }) =>\n            serviceSpecificationFromClassIdentifier(serviceClass)\n        )\n\n        // unbind removed roles\n        let i = 0\n        while (i < this._roles.length) {\n            const role = this._roles[i]\n            if (!supportedNewRoles.find(r => r.role === role.role)) {\n                changed = true\n                this._roles.splice(i, 1)\n                this.emit(ROLE_UNBOUND, role.role)\n            } else {\n                i++\n            }\n        }\n\n        // update or add roles\n        for (const newRole of supportedNewRoles) {\n            const existingRole = this._roles.find(r => r.role === newRole.role)\n            if (!existingRole) {\n                // added role\n                changed = true\n                this._roles.push({ ...newRole })\n            } else if (existingRole.serviceClass !== newRole.serviceClass) {\n                // modified type, force rebinding\n                changed = true\n                existingRole.serviceClass = newRole.serviceClass\n                if (existingRole.service) {\n                    existingRole.service = undefined\n                    this.emit(ROLE_UNBOUND, existingRole.role)\n                }\n            } // else unmodifed role\n        }\n        // bound services\n        this.bindServices(changed)\n        this.emitBoundEvents(oldBound)\n    }\n\n    /**\n     * Resolves the service bound to a given role.\n     * @param role\n     * @returns\n     */\n    public service(role: string): JDService {\n        return this._roles.find(r => r.role === role)?.service\n    }\n\n    /**\n     * Updates or creates a new role\n     * @param role name of the role\n     * @param serviceClass desired service class\n     * @param preferredDeviceId optional preferred device id\n     * @returns\n     */\n    public updateRole(\n        role: string,\n        serviceClass: number,\n        preferredDeviceId?: string\n    ) {\n        if (!serviceSpecificationFromClassIdentifier(serviceClass)) return // unknown role type\n\n        let binding = this._roles.find(r => r.role === role)\n\n        // check if we already have this role\n        if (binding && serviceClass === binding.serviceClass) {\n            if (!binding.service && preferredDeviceId) {\n                binding.preferredDeviceId = preferredDeviceId\n            }\n            return\n        }\n        const oldBound = this.isBound\n        // new role\n        binding = { role, serviceClass, preferredDeviceId }\n        this._roles.push(binding)\n        if (!this.bindRole(binding)) {\n            this.emit(ROLE_UNBOUND, role)\n        }\n        this.emit(CHANGE)\n        this.emitBoundEvents(oldBound)\n    }\n\n    private emitBoundEvents(oldBound: boolean) {\n        const bound = this.isBound\n        if (oldBound !== bound) this.emit(bound ? BOUND : UNBOUND)\n    }\n\n    // TODO: need to respect other (unbound) role's preferredDeviceId\n    private bindRole(role: RoleBinding) {\n        const ret = this.bus\n            .services({\n                ignoreInfrastructure: true,\n                serviceClass: role.serviceClass,\n            })\n            .filter(s => !this.roles(true).find(r => r.service === s))\n        if (ret.length) {\n            let theOne = ret[0]\n            if (role.preferredDeviceId) {\n                const newOne = ret.find(\n                    s => s.device.deviceId === role.preferredDeviceId\n                )\n                if (newOne) theOne = newOne\n            }\n            role.service = theOne\n            this.emit(ROLE_BOUND, role.role)\n            return true\n        }\n        return false\n    }\n\n    private bindServices(changed?: boolean) {\n        this.roles(false).forEach(binding => {\n            if (this.bindRole(binding)) changed = true\n        })\n        if (changed) this.emit(CHANGE)\n    }\n\n    private addServices(dev: JDDevice) {\n        if (dev === this.bus.selfDevice) return\n        this.bindServices()\n    }\n\n    private removeServices(dev: JDDevice) {\n        let changed = false\n        this._roles\n            .filter(r => r.service?.device === dev)\n            .forEach(r => {\n                r.service = undefined\n                this.emit(ROLE_UNBOUND, r.role)\n                changed = true\n            })\n        this.bindServices(changed)\n    }\n\n    toString() {\n        return this._roles\n            .map(({ role, service }) => `${role}->${service || \"?\"}`)\n            .join(\",\")\n    }\n}\nexport default RoleManager\n\n/**\n * Tracks a set of roles\n * @param bus bus hosting the devices\n * @param bindings map of role names to device service pairs\n * @param onUpdate callback to run whenver role assignments change\n * @param options Additional options\n * @returns A unsubscribe callback to cleanup handlers\n * @category Roles\n */\nexport function startRoles<\n    TRoles extends Record<\n        string,\n        { serviceClass: number; preferredDeviceId?: string }\n    >\n>(\n    bus: JDBus,\n    bindings: TRoles,\n    onUpdate: (roles: Record<keyof TRoles, JDService>) => void,\n    options?: {\n        /**\n         * Calls update even if not all role around bound\n         */\n        incomplete?: boolean\n    }\n): () => void {\n    const { incomplete } = options || {}\n    const roleManager = new RoleManager(bus)\n    roleManager.updateRoles(\n        Object.keys(bindings).map(role => ({\n            role,\n            serviceClass: bindings[role].serviceClass,\n            preferredDeviceId: bindings[role].preferredDeviceId,\n        }))\n    )\n    const roles = () => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const r: Record<keyof TRoles, JDService> = {} as any\n        for (const key in bindings) {\n            const srv = roleManager.service(key)\n            if (srv) r[key] = srv\n        }\n        return r\n    }\n    const update = () => {\n        if (!incomplete && !roleManager.isBound) return\n        onUpdate(roles())\n    }\n    const unsubscribe = roleManager.subscribe(CHANGE, update)\n    update()\n    return unsubscribe\n}\n\n/*\nfunction test(bus: JDBus) {\n    const bindings = {\n        thermo1: { serviceClass: SRV_BUTTON },\n        thermo2: { serviceClass: SRV_BUTTON },\n    }\n    trackRoles(\n        bus,\n        bindings,\n        ({ thermo1, thermo2 }) => {\n            console.log({ thermo1, thermo2 })\n        },\n        { incomplete: true }\n    )\n}\n*/\n","import JDBus from \"./bus\"\nimport { isSensor, serviceSpecifications } from \"./spec\"\nimport { toMap } from \"./utils\"\n\nlet _sensorSpecs: jdspec.ServiceSpec[]\n\n/**\n * Gets the list of sensor specifications available\n * @returns\n */\nexport function sensorSpecifications() {\n    if (!_sensorSpecs) {\n        _sensorSpecs = serviceSpecifications().filter(\n            srv => !srv.shortName.startsWith(\"_\") && isSensor(srv)\n        )\n    }\n    return _sensorSpecs\n}\n\n/**\n * Collects and flattens all sensor data into a serializable object\n * @param bus\n * @returns\n */\nexport function snapshotSensors(\n    bus: JDBus\n): Record<string, number[] | Record<string, number>[]> {\n    return toMap(\n        sensorSpecifications(),\n        srv => srv.camelName,\n        srv =>\n            bus\n                .services({\n                    serviceClass: srv.classIdentifier,\n                    ignoreInfrastructure: true,\n                    announced: true,\n                })\n                .map(srv => {\n                    const reg = srv.readingRegister\n                    const spec = reg.specification\n                    return spec.fields.length === 1\n                        ? reg.unpackedValue?.[0] || 0\n                        : reg.objectValue || {}\n                })\n    )\n}\n","import { SRV_CONTROL } from \"../jdom/constants\"\nimport {\n    isHighLevelRegister,\n    isInfrastructure,\n    serviceSpecificationFromClassIdentifier,\n    serviceSpecifications,\n} from \"../jdom/spec\"\n\nexport enum ServiceTwinRegisterFlag {\n    Const = 0x0001,\n    Volatile = 0x0002,\n}\n\nexport interface ServiceTwinRegisterSpec {\n    code: number // code <= 255 => ro, otherwise rw\n    name: string\n    flags: ServiceTwinRegisterFlag\n    packf: string\n    fields?: string[]\n}\n\nexport interface ServiceTwinSpec {\n    serviceClass: number\n    name: string\n    registers: ServiceTwinRegisterSpec[]\n}\n\nexport function serviceSpecificationToServiceTwinSpecification(\n    specification: jdspec.ServiceSpec\n): ServiceTwinSpec {\n    if (!specification) return undefined\n\n    const {\n        classIdentifier: serviceClass,\n        camelName: name,\n        packets,\n    } = specification\n\n    const registers = packets\n        .filter(isHighLevelRegister) // TODO formalize\n        .map<ServiceTwinRegisterSpec>(reg => {\n            let flags = 0\n            if (reg.kind == \"const\") flags |= ServiceTwinRegisterFlag.Const\n            if (reg.volatile) flags |= ServiceTwinRegisterFlag.Volatile\n            const r: ServiceTwinRegisterSpec = {\n                code: reg.identifier,\n                name: reg.name,\n                flags,\n                packf: reg.packFormat,\n                fields:\n                    reg.fields.length > 1\n                        ? reg.fields.map(f => f.name)\n                        : undefined,\n            }\n            return r\n        })\n    const dspec: ServiceTwinSpec = {\n        serviceClass,\n        name,\n        registers,\n    }\n    return dspec\n}\n\nexport function serviceSpecificationsWithServiceTwinSpecification() {\n    const specs = [\n        serviceSpecificationFromClassIdentifier(SRV_CONTROL),\n        ...serviceSpecifications().filter(srv => !isInfrastructure(srv)),\n    ]\n    return specs\n}\n","import \"milligram\";\r\nimport {\r\n    createWebBus,\r\n  } from \"jacdac-ts\";\r\n  \r\nconst connectEl = document.getElementById(\"connectbtn\") as HTMLButtonElement;\r\nconst logEl = document.getElementById(\"log\") as HTMLPreElement;\r\nconst log = (msg: any) => {\r\n  console.log(msg);\r\n  logEl.innerText += msg + \"\\n\";\r\n};\r\n// create WebUSB bus\r\nconst bus = createWebBus();\r\n\r\nconnectEl.onclick = async () =>\r\n  bus.connected ? bus.disconnect() : bus.connect();\r\n\r\n// we're ready\r\nlog(\"click connect to start\");\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}